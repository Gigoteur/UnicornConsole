{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","time","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=12392004094bb372","-C","extra-filename=-12392004094bb372","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-sdl\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-sdl\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-sdl\\target\\rls\\debug\\deps\\libtime-12392004094bb372.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[1583973566042707598,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82316,"byte_end":82330,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82358,"byte_end":82373,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82402,"byte_end":82418,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82727,"byte_end":82741,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":314}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10491,"byte_end":10495,"line_start":317,"line_end":317,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10522,"byte_end":10530,"line_start":318,"line_end":318,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10554,"byte_end":10559,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10609,"byte_end":10616,"line_start":321,"line_end":321,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10640,"byte_end":10645,"line_start":322,"line_end":322,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10680,"byte_end":10694,"line_start":323,"line_end":323,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10732,"byte_end":10749,"line_start":324,"line_end":324,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10772,"byte_end":10776,"line_start":325,"line_end":325,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10805,"byte_end":10814,"line_start":326,"line_end":326,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10840,"byte_end":10847,"line_start":327,"line_end":327,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":10985,"line_start":1,"line_end":330,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":127},{"krate":0,"index":314},{"krate":0,"index":403},{"krate":0,"index":469},{"krate":0,"index":558},{"krate":0,"index":589},{"krate":0,"index":744},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":925},{"krate":0,"index":954},{"krate":0,"index":970},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   If you are using this feature, **please leave a comment**","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1510,"byte_end":1573,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/   [on this discussion](https://github.com/time-rs/time/discussions/306) with your use case. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1574,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   there is not sufficient demand for this feature, it will be dropped in a future release.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1673,"byte_end":1767,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1768,"byte_end":1771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1772,"byte_end":1785,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1786,"byte_end":1789,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1790,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1877,"byte_end":1880,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1881,"byte_end":1969,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1970,"byte_end":1973,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":1974,"byte_end":2066,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2067,"byte_end":2161,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2162,"byte_end":2253,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2254,"byte_end":2257,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2258,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2359,"byte_end":2377,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2378,"byte_end":2381,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2382,"byte_end":2472,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2473,"byte_end":2476,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2477,"byte_end":2565,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2566,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2639,"byte_end":2651,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2652,"byte_end":2655,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2656,"byte_end":2721,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2722,"byte_end":2725,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2726,"byte_end":2775,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2776,"byte_end":2779,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2780,"byte_end":2876,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2877,"byte_end":2880,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2881,"byte_end":2979,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":2980,"byte_end":3075,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3076,"byte_end":3173,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3174,"byte_end":3274,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3275,"byte_end":3374,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3375,"byte_end":3472,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3473,"byte_end":3568,"line_start":78,"line_end":78,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3569,"byte_end":3629,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\nillegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\npath_statements, patterns_in_fns_without_body, rust_2018_idioms,\ntrivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":3926,"byte_end":4288,"line_start":88,"line_end":103,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4289,"byte_end":4789,"line_start":104,"line_end":122,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":4790,"byte_end":4828,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12232,"byte_end":12236,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1030}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11863,"byte_end":11908,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11909,"byte_end":11912,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":11913,"byte_end":12012,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12013,"byte_end":12109,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12110,"byte_end":12159,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12961,"byte_end":12964,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12834,"byte_end":12863,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12868,"byte_end":12871,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12876,"byte_end":12946,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13155,"byte_end":13158,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13028,"byte_end":13057,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13062,"byte_end":13065,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13070,"byte_end":13140,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13428,"byte_end":13457,"line_start":69,"line_end":69,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"pub const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13271,"byte_end":13357,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13362,"byte_end":13391,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14059,"byte_end":14077,"line_start":87,"line_end":87,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"pub const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13578,"byte_end":13639,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13644,"byte_end":13647,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13652,"byte_end":13663,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13668,"byte_end":13698,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13703,"byte_end":13774,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13779,"byte_end":13852,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13857,"byte_end":13864,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13869,"byte_end":13872,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13877,"byte_end":13888,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13893,"byte_end":13923,"line_start":84,"line_end":84,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":13928,"byte_end":14029,"line_start":85,"line_end":85,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14034,"byte_end":14041,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15268,"byte_end":15285,"line_start":120,"line_end":120,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"pub const fn from_ordinal_date(i32, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14849,"byte_end":14917,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14922,"byte_end":14925,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14930,"byte_end":14941,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14946,"byte_end":14967,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":14972,"byte_end":15026,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15031,"byte_end":15087,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15092,"byte_end":15099,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15104,"byte_end":15107,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15112,"byte_end":15123,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15128,"byte_end":15149,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15154,"byte_end":15238,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15243,"byte_end":15250,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16115,"byte_end":16133,"line_start":139,"line_end":139,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"pub const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15570,"byte_end":15638,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15643,"byte_end":15646,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15651,"byte_end":15662,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15667,"byte_end":15702,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15707,"byte_end":15770,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15775,"byte_end":15839,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15844,"byte_end":15908,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15913,"byte_end":15920,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15925,"byte_end":15928,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15933,"byte_end":15944,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15949,"byte_end":15984,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":15989,"byte_end":16085,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":16090,"byte_end":16097,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":18008,"byte_end":18023,"line_start":186,"line_end":186,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"pub const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17308,"byte_end":17348,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17353,"byte_end":17356,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17361,"byte_end":17455,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17460,"byte_end":17556,"line_start":176,"line_end":176,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17561,"byte_end":17564,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17569,"byte_end":17580,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17585,"byte_end":17622,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17627,"byte_end":17696,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17701,"byte_end":17777,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17782,"byte_end":17858,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17863,"byte_end":17939,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":17944,"byte_end":17951,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20040,"byte_end":20044,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19755,"byte_end":19784,"line_start":231,"line_end":231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19789,"byte_end":19792,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19797,"byte_end":19808,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19813,"byte_end":19842,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19847,"byte_end":19898,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19903,"byte_end":19954,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":19959,"byte_end":20010,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20015,"byte_end":20022,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20345,"byte_end":20350,"line_start":250,"line_end":250,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20095,"byte_end":20113,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20118,"byte_end":20121,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20126,"byte_end":20137,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20142,"byte_end":20180,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20185,"byte_end":20247,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20252,"byte_end":20315,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20320,"byte_end":20327,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20701,"byte_end":20704,"line_start":263,"line_end":263,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20406,"byte_end":20435,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20440,"byte_end":20443,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20448,"byte_end":20508,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20513,"byte_end":20516,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20521,"byte_end":20532,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20537,"byte_end":20566,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20571,"byte_end":20618,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20623,"byte_end":20671,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":20676,"byte_end":20683,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22949,"byte_end":22956,"line_start":317,"line_end":317,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22616,"byte_end":22644,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22649,"byte_end":22652,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22657,"byte_end":22747,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22752,"byte_end":22755,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22760,"byte_end":22771,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22776,"byte_end":22805,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22810,"byte_end":22861,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22866,"byte_end":22919,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":22924,"byte_end":22931,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23909,"byte_end":23917,"line_start":344,"line_end":344,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23432,"byte_end":23460,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23465,"byte_end":23468,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23473,"byte_end":23533,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23538,"byte_end":23541,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23546,"byte_end":23557,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23562,"byte_end":23591,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23596,"byte_end":23648,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23653,"byte_end":23706,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23711,"byte_end":23763,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23768,"byte_end":23821,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23826,"byte_end":23879,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23884,"byte_end":23891,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24464,"byte_end":24481,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":23974,"byte_end":24038,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24043,"byte_end":24046,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24051,"byte_end":24111,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24116,"byte_end":24119,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24124,"byte_end":24135,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24140,"byte_end":24169,"line_start":353,"line_end":353,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24174,"byte_end":24235,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24240,"byte_end":24301,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24306,"byte_end":24368,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24373,"byte_end":24434,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24439,"byte_end":24446,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25094,"byte_end":25111,"line_start":374,"line_end":374,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24604,"byte_end":24668,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24673,"byte_end":24676,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24681,"byte_end":24741,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24746,"byte_end":24749,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24754,"byte_end":24765,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24770,"byte_end":24799,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24804,"byte_end":24865,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24870,"byte_end":24931,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":24936,"byte_end":24998,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25003,"byte_end":25064,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25069,"byte_end":25076,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25487,"byte_end":25503,"line_start":387,"line_end":387,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25234,"byte_end":25267,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25272,"byte_end":25275,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25280,"byte_end":25291,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25296,"byte_end":25334,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25339,"byte_end":25354,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25359,"byte_end":25408,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25413,"byte_end":25446,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25451,"byte_end":25457,"line_start":385,"line_end":385,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25462,"byte_end":25469,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25822,"byte_end":25837,"line_start":398,"line_end":398,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25622,"byte_end":25662,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25667,"byte_end":25670,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25675,"byte_end":25686,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25691,"byte_end":25720,"line_start":395,"line_end":395,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25725,"byte_end":25792,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25797,"byte_end":25804,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26545,"byte_end":26561,"line_start":418,"line_end":418,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25909,"byte_end":25961,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25966,"byte_end":25969,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25974,"byte_end":25985,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":25990,"byte_end":26033,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26038,"byte_end":26115,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26120,"byte_end":26197,"line_start":407,"line_end":407,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26202,"byte_end":26217,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26222,"byte_end":26271,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26276,"byte_end":26304,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26309,"byte_end":26315,"line_start":411,"line_end":411,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26320,"byte_end":26335,"line_start":412,"line_end":412,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26340,"byte_end":26389,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26394,"byte_end":26422,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26427,"byte_end":26433,"line_start":415,"line_end":415,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26438,"byte_end":26515,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26520,"byte_end":26527,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27833,"byte_end":27840,"line_start":446,"line_end":446,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26970,"byte_end":26990,"line_start":429,"line_end":429,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":26995,"byte_end":26998,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27003,"byte_end":27014,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27019,"byte_end":27062,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27067,"byte_end":27124,"line_start":433,"line_end":433,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27129,"byte_end":27185,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27190,"byte_end":27246,"line_start":435,"line_end":435,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27251,"byte_end":27307,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27312,"byte_end":27371,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27376,"byte_end":27434,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27439,"byte_end":27495,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27500,"byte_end":27558,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27563,"byte_end":27619,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27624,"byte_end":27681,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27686,"byte_end":27742,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27747,"byte_end":27803,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":27808,"byte_end":27815,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28724,"byte_end":28732,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"pub const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28198,"byte_end":28229,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28234,"byte_end":28237,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28242,"byte_end":28253,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28258,"byte_end":28295,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28300,"byte_end":28315,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28320,"byte_end":28361,"line_start":463,"line_end":463,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28366,"byte_end":28401,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28406,"byte_end":28412,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28417,"byte_end":28432,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28437,"byte_end":28478,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28483,"byte_end":28518,"line_start":468,"line_end":468,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28523,"byte_end":28529,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28534,"byte_end":28549,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28554,"byte_end":28595,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28600,"byte_end":28635,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28640,"byte_end":28646,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28651,"byte_end":28694,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":28699,"byte_end":28706,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29692,"byte_end":29704,"line_start":508,"line_end":508,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"pub const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29146,"byte_end":29181,"line_start":490,"line_end":490,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29186,"byte_end":29189,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29194,"byte_end":29205,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29210,"byte_end":29247,"line_start":493,"line_end":493,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29252,"byte_end":29267,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29272,"byte_end":29317,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29322,"byte_end":29357,"line_start":496,"line_end":496,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29362,"byte_end":29368,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29373,"byte_end":29388,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29393,"byte_end":29438,"line_start":499,"line_end":499,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29443,"byte_end":29478,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29483,"byte_end":29489,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29494,"byte_end":29509,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29514,"byte_end":29559,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29564,"byte_end":29599,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29604,"byte_end":29610,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29615,"byte_end":29662,"line_start":506,"line_end":506,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":29667,"byte_end":29674,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30699,"byte_end":30712,"line_start":535,"line_end":535,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30094,"byte_end":30130,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30135,"byte_end":30138,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30143,"byte_end":30237,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30242,"byte_end":30338,"line_start":526,"line_end":526,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30343,"byte_end":30346,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30351,"byte_end":30362,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30367,"byte_end":30396,"line_start":529,"line_end":529,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30401,"byte_end":30459,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30464,"byte_end":30529,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30534,"byte_end":30599,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30604,"byte_end":30669,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":30674,"byte_end":30681,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32055,"byte_end":32066,"line_start":575,"line_end":575,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31015,"byte_end":31088,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31093,"byte_end":31096,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31101,"byte_end":31112,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31117,"byte_end":31178,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31183,"byte_end":31237,"line_start":550,"line_end":550,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31242,"byte_end":31299,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31304,"byte_end":31319,"line_start":552,"line_end":552,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31324,"byte_end":31376,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31381,"byte_end":31416,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31421,"byte_end":31427,"line_start":555,"line_end":555,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31432,"byte_end":31439,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31444,"byte_end":31447,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31452,"byte_end":31462,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31467,"byte_end":31470,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31475,"byte_end":31528,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31533,"byte_end":31536,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31541,"byte_end":31552,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31557,"byte_end":31618,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31623,"byte_end":31690,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31695,"byte_end":31765,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31770,"byte_end":31785,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31790,"byte_end":31844,"line_start":567,"line_end":567,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31849,"byte_end":31884,"line_start":568,"line_end":568,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31889,"byte_end":31895,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31900,"byte_end":31915,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31920,"byte_end":31974,"line_start":571,"line_end":571,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":31979,"byte_end":32014,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32019,"byte_end":32025,"line_start":573,"line_end":573,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32030,"byte_end":32037,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33533,"byte_end":33544,"line_start":618,"line_end":618,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32501,"byte_end":32574,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32579,"byte_end":32582,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32587,"byte_end":32594,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32599,"byte_end":32660,"line_start":592,"line_end":592,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32665,"byte_end":32722,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32727,"byte_end":32781,"line_start":594,"line_end":594,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32786,"byte_end":32801,"line_start":595,"line_end":595,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32806,"byte_end":32858,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32863,"byte_end":32898,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32903,"byte_end":32909,"line_start":598,"line_end":598,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32914,"byte_end":32921,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32926,"byte_end":32929,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32934,"byte_end":32944,"line_start":601,"line_end":601,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32949,"byte_end":32952,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":32957,"byte_end":33010,"line_start":603,"line_end":603,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33015,"byte_end":33018,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33023,"byte_end":33030,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33035,"byte_end":33096,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33101,"byte_end":33171,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33176,"byte_end":33243,"line_start":608,"line_end":608,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33248,"byte_end":33263,"line_start":609,"line_end":609,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33268,"byte_end":33322,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33327,"byte_end":33362,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33367,"byte_end":33373,"line_start":612,"line_end":612,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33378,"byte_end":33393,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33398,"byte_end":33452,"line_start":614,"line_end":614,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33457,"byte_end":33492,"line_start":615,"line_end":615,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33497,"byte_end":33503,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":33508,"byte_end":33515,"line_start":617,"line_end":617,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34935,"byte_end":34949,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34053,"byte_end":34114,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34119,"byte_end":34122,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34127,"byte_end":34138,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34143,"byte_end":34204,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34209,"byte_end":34271,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34276,"byte_end":34341,"line_start":639,"line_end":639,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34346,"byte_end":34361,"line_start":640,"line_end":640,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34366,"byte_end":34421,"line_start":641,"line_end":641,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34426,"byte_end":34455,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34460,"byte_end":34466,"line_start":643,"line_end":643,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34471,"byte_end":34478,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34483,"byte_end":34486,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34491,"byte_end":34501,"line_start":646,"line_end":646,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34506,"byte_end":34509,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34514,"byte_end":34567,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34572,"byte_end":34575,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34580,"byte_end":34591,"line_start":650,"line_end":650,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34596,"byte_end":34651,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34656,"byte_end":34671,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34676,"byte_end":34733,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34738,"byte_end":34767,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34772,"byte_end":34778,"line_start":655,"line_end":655,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34783,"byte_end":34798,"line_start":656,"line_end":656,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34803,"byte_end":34860,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34865,"byte_end":34894,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34899,"byte_end":34905,"line_start":659,"line_end":659,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":34910,"byte_end":34917,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36067,"byte_end":36081,"line_start":698,"line_end":698,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35193,"byte_end":35254,"line_start":671,"line_end":671,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35259,"byte_end":35262,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35267,"byte_end":35274,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35279,"byte_end":35340,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35345,"byte_end":35410,"line_start":675,"line_end":675,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35415,"byte_end":35477,"line_start":676,"line_end":676,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35482,"byte_end":35497,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35502,"byte_end":35557,"line_start":678,"line_end":678,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35562,"byte_end":35591,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35596,"byte_end":35602,"line_start":680,"line_end":680,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35607,"byte_end":35614,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35619,"byte_end":35622,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35627,"byte_end":35637,"line_start":683,"line_end":683,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35642,"byte_end":35645,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35650,"byte_end":35703,"line_start":685,"line_end":685,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35708,"byte_end":35711,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35716,"byte_end":35723,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35728,"byte_end":35783,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35788,"byte_end":35803,"line_start":689,"line_end":689,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35808,"byte_end":35865,"line_start":690,"line_end":690,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35870,"byte_end":35899,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35904,"byte_end":35910,"line_start":692,"line_end":692,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35915,"byte_end":35930,"line_start":693,"line_end":693,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35935,"byte_end":35992,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":35997,"byte_end":36026,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36031,"byte_end":36037,"line_start":696,"line_end":696,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36042,"byte_end":36049,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36955,"byte_end":36967,"line_start":722,"line_end":722,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36389,"byte_end":36447,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36452,"byte_end":36455,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36460,"byte_end":36471,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36476,"byte_end":36505,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36510,"byte_end":36525,"line_start":714,"line_end":714,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36530,"byte_end":36579,"line_start":715,"line_end":715,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36584,"byte_end":36617,"line_start":716,"line_end":716,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36622,"byte_end":36628,"line_start":717,"line_end":717,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36633,"byte_end":36743,"line_start":718,"line_end":718,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36748,"byte_end":36856,"line_start":719,"line_end":719,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36861,"byte_end":36868,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":36873,"byte_end":36937,"line_start":721,"line_end":721,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38836,"byte_end":38849,"line_start":775,"line_end":775,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38312,"byte_end":38346,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38351,"byte_end":38354,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38359,"byte_end":38370,"line_start":761,"line_end":761,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38375,"byte_end":38404,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38409,"byte_end":38431,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38436,"byte_end":38451,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38456,"byte_end":38516,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38521,"byte_end":38554,"line_start":766,"line_end":766,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38559,"byte_end":38565,"line_start":767,"line_end":767,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38570,"byte_end":38582,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38587,"byte_end":38616,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38621,"byte_end":38664,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38669,"byte_end":38690,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38695,"byte_end":38737,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38742,"byte_end":38749,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":38754,"byte_end":38818,"line_start":774,"line_end":774,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39524,"byte_end":39535,"line_start":792,"line_end":792,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39027,"byte_end":39060,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39065,"byte_end":39068,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39073,"byte_end":39084,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39089,"byte_end":39118,"line_start":783,"line_end":783,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39123,"byte_end":39138,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39143,"byte_end":39188,"line_start":785,"line_end":785,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39193,"byte_end":39226,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39231,"byte_end":39237,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39242,"byte_end":39324,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39329,"byte_end":39425,"line_start":789,"line_end":789,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39430,"byte_end":39437,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":39442,"byte_end":39506,"line_start":791,"line_end":791,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40459,"byte_end":40467,"line_start":818,"line_end":818,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"pub const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40166,"byte_end":40260,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40265,"byte_end":40281,"line_start":812,"line_end":812,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40286,"byte_end":40289,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40294,"byte_end":40305,"line_start":814,"line_end":814,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40310,"byte_end":40351,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40356,"byte_end":40429,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40434,"byte_end":40441,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40877,"byte_end":40886,"line_start":831,"line_end":831,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"pub const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40561,"byte_end":40646,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40651,"byte_end":40654,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40659,"byte_end":40670,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40675,"byte_end":40722,"line_start":825,"line_end":825,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40727,"byte_end":40742,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40747,"byte_end":40796,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40801,"byte_end":40836,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40841,"byte_end":40847,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40852,"byte_end":40859,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41296,"byte_end":41304,"line_start":842,"line_end":842,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"pub const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40982,"byte_end":41074,"line_start":835,"line_end":835,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41079,"byte_end":41082,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41087,"byte_end":41098,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41103,"byte_end":41132,"line_start":838,"line_end":838,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41137,"byte_end":41198,"line_start":839,"line_end":839,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41203,"byte_end":41266,"line_start":840,"line_end":840,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41271,"byte_end":41278,"line_start":841,"line_end":841,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41907,"byte_end":41921,"line_start":861,"line_end":861,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"pub const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41575,"byte_end":41667,"line_start":854,"line_end":854,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41672,"byte_end":41675,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41680,"byte_end":41691,"line_start":856,"line_end":856,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41696,"byte_end":41725,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41730,"byte_end":41800,"line_start":858,"line_end":858,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41805,"byte_end":41877,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":41882,"byte_end":41889,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42569,"byte_end":42583,"line_start":881,"line_end":881,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"pub const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42237,"byte_end":42329,"line_start":874,"line_end":874,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42334,"byte_end":42337,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42342,"byte_end":42353,"line_start":876,"line_end":876,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42358,"byte_end":42387,"line_start":877,"line_end":877,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42392,"byte_end":42462,"line_start":878,"line_end":878,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42467,"byte_end":42539,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42544,"byte_end":42551,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43229,"byte_end":43242,"line_start":901,"line_end":901,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"pub const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42899,"byte_end":42991,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":42996,"byte_end":42999,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43004,"byte_end":43015,"line_start":896,"line_end":896,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43020,"byte_end":43049,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43054,"byte_end":43123,"line_start":898,"line_end":898,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43128,"byte_end":43199,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":43204,"byte_end":43211,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48141,"byte_end":48149,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47803,"byte_end":47848,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47849,"byte_end":47852,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47853,"byte_end":47950,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47951,"byte_end":47967,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47968,"byte_end":47971,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47972,"byte_end":48059,"line_start":34,"line_end":34,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48924,"byte_end":48928,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48736,"byte_end":48768,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48773,"byte_end":48776,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48781,"byte_end":48792,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48797,"byte_end":48848,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48853,"byte_end":48897,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48902,"byte_end":48909,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49162,"byte_end":49172,"line_start":70,"line_end":70,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48960,"byte_end":48996,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49001,"byte_end":49004,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49009,"byte_end":49020,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49025,"byte_end":49076,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49081,"byte_end":49135,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49140,"byte_end":49147,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49413,"byte_end":49424,"line_start":78,"line_end":78,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49208,"byte_end":49245,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49250,"byte_end":49253,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49258,"byte_end":49269,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49274,"byte_end":49325,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49330,"byte_end":49386,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49391,"byte_end":49398,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49666,"byte_end":49677,"line_start":86,"line_end":86,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49461,"byte_end":49498,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49503,"byte_end":49506,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49511,"byte_end":49522,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49527,"byte_end":49578,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49583,"byte_end":49639,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49644,"byte_end":49651,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49904,"byte_end":49910,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49714,"byte_end":49746,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49751,"byte_end":49754,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49759,"byte_end":49770,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49775,"byte_end":49826,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49831,"byte_end":49877,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49882,"byte_end":49889,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50132,"byte_end":50138,"line_start":102,"line_end":102,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49942,"byte_end":49974,"line_start":96,"line_end":96,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49979,"byte_end":49982,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":49987,"byte_end":49998,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50003,"byte_end":50054,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50059,"byte_end":50105,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50110,"byte_end":50117,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50354,"byte_end":50358,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50170,"byte_end":50200,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50205,"byte_end":50208,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50213,"byte_end":50224,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50229,"byte_end":50280,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50285,"byte_end":50327,"line_start":108,"line_end":108,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50332,"byte_end":50339,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50569,"byte_end":50572,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50388,"byte_end":50417,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50422,"byte_end":50425,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50430,"byte_end":50441,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50446,"byte_end":50497,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50502,"byte_end":50542,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50547,"byte_end":50554,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50785,"byte_end":50789,"line_start":126,"line_end":126,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50601,"byte_end":50631,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50636,"byte_end":50639,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50644,"byte_end":50655,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50660,"byte_end":50711,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50716,"byte_end":50758,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50763,"byte_end":50770,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50929,"byte_end":50932,"line_start":129,"line_end":129,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50819,"byte_end":50914,"line_start":128,"line_end":128,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51101,"byte_end":51104,"line_start":132,"line_end":132,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":50991,"byte_end":51086,"line_start":131,"line_end":131,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51437,"byte_end":51444,"line_start":143,"line_end":143,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"pub const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51214,"byte_end":51254,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51259,"byte_end":51262,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51267,"byte_end":51278,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51283,"byte_end":51322,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51327,"byte_end":51362,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51367,"byte_end":51407,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51412,"byte_end":51419,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51794,"byte_end":51805,"line_start":155,"line_end":155,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51523,"byte_end":51559,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51564,"byte_end":51567,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51572,"byte_end":51583,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51588,"byte_end":51627,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51632,"byte_end":51674,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51679,"byte_end":51719,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51724,"byte_end":51764,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51769,"byte_end":51776,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52153,"byte_end":52164,"line_start":167,"line_end":167,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51882,"byte_end":51918,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51923,"byte_end":51926,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51931,"byte_end":51942,"line_start":161,"line_end":161,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51947,"byte_end":51986,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":51991,"byte_end":52030,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52035,"byte_end":52075,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52080,"byte_end":52123,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52128,"byte_end":52135,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52676,"byte_end":52679,"line_start":183,"line_end":183,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"pub const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52287,"byte_end":52330,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52335,"byte_end":52338,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52343,"byte_end":52419,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52424,"byte_end":52427,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52432,"byte_end":52443,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52448,"byte_end":52487,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52492,"byte_end":52539,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52544,"byte_end":52591,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52596,"byte_end":52646,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":52651,"byte_end":52658,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53987,"byte_end":53990,"line_start":215,"line_end":215,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"pub const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53537,"byte_end":53628,"line_start":206,"line_end":206,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53633,"byte_end":53699,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53704,"byte_end":53707,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53712,"byte_end":53723,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53728,"byte_end":53779,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53784,"byte_end":53833,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53838,"byte_end":53891,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53896,"byte_end":53957,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":53962,"byte_end":53969,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54726,"byte_end":54731,"line_start":237,"line_end":237,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"pub const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54438,"byte_end":54511,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54516,"byte_end":54557,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54562,"byte_end":54565,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54570,"byte_end":54581,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54586,"byte_end":54637,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54642,"byte_end":54696,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54701,"byte_end":54708,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55087,"byte_end":55091,"line_start":248,"line_end":248,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"pub const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54804,"byte_end":54876,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54881,"byte_end":54920,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54925,"byte_end":54928,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54933,"byte_end":54944,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":54949,"byte_end":55000,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55005,"byte_end":55057,"line_start":246,"line_end":246,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55062,"byte_end":55069,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55445,"byte_end":55450,"line_start":259,"line_end":259,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"pub const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55161,"byte_end":55234,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55239,"byte_end":55278,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55283,"byte_end":55286,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55291,"byte_end":55302,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55307,"byte_end":55358,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55363,"byte_end":55415,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55420,"byte_end":55427,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55805,"byte_end":55812,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"pub const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55521,"byte_end":55596,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55601,"byte_end":55639,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55644,"byte_end":55647,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55652,"byte_end":55663,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55668,"byte_end":55719,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55724,"byte_end":55775,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55780,"byte_end":55787,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56119,"byte_end":56126,"line_start":280,"line_end":280,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"pub const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55884,"byte_end":55945,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55950,"byte_end":55953,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55958,"byte_end":55969,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":55974,"byte_end":56025,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56030,"byte_end":56089,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56094,"byte_end":56101,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56521,"byte_end":56532,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"pub fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56202,"byte_end":56289,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56294,"byte_end":56297,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56302,"byte_end":56313,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56318,"byte_end":56369,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56374,"byte_end":56432,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56437,"byte_end":56497,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56502,"byte_end":56509,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56971,"byte_end":56982,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"pub fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56650,"byte_end":56737,"line_start":295,"line_end":295,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56742,"byte_end":56745,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56750,"byte_end":56761,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56766,"byte_end":56817,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56822,"byte_end":56880,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56885,"byte_end":56947,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":56952,"byte_end":56959,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57418,"byte_end":57430,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"pub const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57100,"byte_end":57166,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57171,"byte_end":57174,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57179,"byte_end":57190,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57195,"byte_end":57246,"line_start":309,"line_end":309,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57251,"byte_end":57315,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57320,"byte_end":57388,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57393,"byte_end":57400,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57915,"byte_end":57927,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57599,"byte_end":57665,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57670,"byte_end":57673,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57678,"byte_end":57689,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57694,"byte_end":57745,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57750,"byte_end":57813,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57818,"byte_end":57885,"line_start":325,"line_end":325,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":57890,"byte_end":57897,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58423,"byte_end":58434,"line_start":341,"line_end":341,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"pub const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58100,"byte_end":58165,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58170,"byte_end":58173,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58178,"byte_end":58189,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58194,"byte_end":58245,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58250,"byte_end":58317,"line_start":338,"line_end":338,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58322,"byte_end":58393,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":58398,"byte_end":58405,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59433,"byte_end":59444,"line_start":370,"line_end":370,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"pub const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59088,"byte_end":59138,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59143,"byte_end":59146,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59151,"byte_end":59162,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59167,"byte_end":59206,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59211,"byte_end":59254,"line_start":365,"line_end":365,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59259,"byte_end":59306,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59311,"byte_end":59353,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59358,"byte_end":59403,"line_start":368,"line_end":368,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59408,"byte_end":59415,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59852,"byte_end":59862,"line_start":383,"line_end":383,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"pub const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59510,"byte_end":59559,"line_start":374,"line_end":374,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59564,"byte_end":59567,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59572,"byte_end":59583,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59588,"byte_end":59627,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59632,"byte_end":59673,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59678,"byte_end":59723,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59728,"byte_end":59771,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59776,"byte_end":59822,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59827,"byte_end":59834,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60280,"byte_end":60291,"line_start":396,"line_end":396,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"pub const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59927,"byte_end":59977,"line_start":387,"line_end":387,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59982,"byte_end":59985,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":59990,"byte_end":60001,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60006,"byte_end":60045,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60050,"byte_end":60093,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60098,"byte_end":60145,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60150,"byte_end":60196,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60201,"byte_end":60250,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60255,"byte_end":60262,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60722,"byte_end":60735,"line_start":409,"line_end":409,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60355,"byte_end":60407,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60412,"byte_end":60415,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60420,"byte_end":60431,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60436,"byte_end":60475,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60480,"byte_end":60527,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60532,"byte_end":60583,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60588,"byte_end":60636,"line_start":406,"line_end":406,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60641,"byte_end":60692,"line_start":407,"line_end":407,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60697,"byte_end":60704,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61164,"byte_end":61177,"line_start":422,"line_end":422,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60796,"byte_end":60848,"line_start":413,"line_end":413,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60853,"byte_end":60856,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60861,"byte_end":60872,"line_start":415,"line_end":415,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60877,"byte_end":60916,"line_start":416,"line_end":416,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60921,"byte_end":60968,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":60973,"byte_end":61024,"line_start":418,"line_end":418,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61029,"byte_end":61077,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61082,"byte_end":61134,"line_start":420,"line_end":420,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61139,"byte_end":61146,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61492,"byte_end":61506,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"pub fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61225,"byte_end":61282,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61287,"byte_end":61290,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61295,"byte_end":61306,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61311,"byte_end":61350,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61355,"byte_end":61407,"line_start":430,"line_end":430,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61412,"byte_end":61468,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61473,"byte_end":61480,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61871,"byte_end":61885,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"pub fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61604,"byte_end":61661,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61666,"byte_end":61669,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61674,"byte_end":61685,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61690,"byte_end":61729,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61734,"byte_end":61786,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61791,"byte_end":61847,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61852,"byte_end":61859,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62392,"byte_end":62410,"line_start":457,"line_end":457,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"pub const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":61983,"byte_end":62040,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62045,"byte_end":62048,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62053,"byte_end":62064,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62069,"byte_end":62108,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62113,"byte_end":62169,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62174,"byte_end":62234,"line_start":453,"line_end":453,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62239,"byte_end":62296,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62301,"byte_end":62362,"line_start":455,"line_end":455,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62367,"byte_end":62374,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62933,"byte_end":62952,"line_start":471,"line_end":471,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"pub const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62514,"byte_end":62582,"line_start":461,"line_end":461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62587,"byte_end":62590,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62595,"byte_end":62635,"line_start":463,"line_end":463,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62640,"byte_end":62643,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62648,"byte_end":62659,"line_start":465,"line_end":465,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62664,"byte_end":62703,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62708,"byte_end":62765,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62770,"byte_end":62831,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":62836,"byte_end":62843,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63442,"byte_end":63460,"line_start":484,"line_end":484,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"pub const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63023,"byte_end":63080,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63085,"byte_end":63088,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63093,"byte_end":63104,"line_start":477,"line_end":477,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63109,"byte_end":63148,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63153,"byte_end":63214,"line_start":479,"line_end":479,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63219,"byte_end":63284,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63289,"byte_end":63346,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63351,"byte_end":63412,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63417,"byte_end":63424,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63925,"byte_end":63944,"line_start":497,"line_end":497,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"pub const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63564,"byte_end":63632,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63637,"byte_end":63640,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63645,"byte_end":63693,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63698,"byte_end":63701,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63706,"byte_end":63717,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63722,"byte_end":63761,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63766,"byte_end":63826,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63831,"byte_end":63895,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":63900,"byte_end":63907,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64410,"byte_end":64427,"line_start":510,"line_end":510,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"pub const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64004,"byte_end":64054,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64059,"byte_end":64062,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64067,"byte_end":64078,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64083,"byte_end":64122,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64127,"byte_end":64187,"line_start":505,"line_end":505,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64192,"byte_end":64256,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64261,"byte_end":64316,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64321,"byte_end":64380,"line_start":508,"line_end":508,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64385,"byte_end":64392,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64934,"byte_end":64952,"line_start":523,"line_end":523,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"pub const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64527,"byte_end":64594,"line_start":514,"line_end":514,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64599,"byte_end":64602,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64607,"byte_end":64690,"line_start":516,"line_end":516,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64695,"byte_end":64698,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64703,"byte_end":64714,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64719,"byte_end":64758,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64763,"byte_end":64829,"line_start":520,"line_end":520,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64834,"byte_end":64904,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":64909,"byte_end":64916,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65469,"byte_end":65480,"line_start":537,"line_end":537,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"pub const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65063,"byte_end":65131,"line_start":529,"line_end":529,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65136,"byte_end":65139,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65144,"byte_end":65155,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65160,"byte_end":65211,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65216,"byte_end":65289,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65294,"byte_end":65359,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65364,"byte_end":65439,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":65444,"byte_end":65451,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66519,"byte_end":66530,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"pub const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66110,"byte_end":66178,"line_start":552,"line_end":552,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66183,"byte_end":66186,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66191,"byte_end":66202,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66207,"byte_end":66258,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66263,"byte_end":66338,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66343,"byte_end":66408,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66413,"byte_end":66489,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":66494,"byte_end":66501,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67657,"byte_end":67668,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"pub const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67160,"byte_end":67228,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67233,"byte_end":67236,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67241,"byte_end":67252,"line_start":577,"line_end":577,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67257,"byte_end":67308,"line_start":578,"line_end":578,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67313,"byte_end":67376,"line_start":579,"line_end":579,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67381,"byte_end":67448,"line_start":580,"line_end":580,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67453,"byte_end":67515,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67520,"byte_end":67571,"line_start":582,"line_end":582,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67576,"byte_end":67627,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":67632,"byte_end":67639,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68546,"byte_end":68557,"line_start":605,"line_end":605,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"pub const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68164,"byte_end":68254,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68259,"byte_end":68262,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68267,"byte_end":68278,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68283,"byte_end":68322,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68327,"byte_end":68390,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68395,"byte_end":68462,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68467,"byte_end":68516,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":68521,"byte_end":68528,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69587,"byte_end":69601,"line_start":628,"line_end":628,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"pub const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69059,"byte_end":69121,"line_start":616,"line_end":616,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69126,"byte_end":69129,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69134,"byte_end":69145,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69150,"byte_end":69201,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69206,"byte_end":69276,"line_start":620,"line_end":620,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69281,"byte_end":69358,"line_start":621,"line_end":621,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69363,"byte_end":69378,"line_start":622,"line_end":622,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69383,"byte_end":69440,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69445,"byte_end":69466,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69471,"byte_end":69477,"line_start":625,"line_end":625,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69482,"byte_end":69557,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":69562,"byte_end":69569,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71069,"byte_end":71083,"line_start":667,"line_end":667,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"pub const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70541,"byte_end":70603,"line_start":655,"line_end":655,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70608,"byte_end":70611,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70616,"byte_end":70627,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70632,"byte_end":70683,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70688,"byte_end":70760,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70765,"byte_end":70842,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70847,"byte_end":70862,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70867,"byte_end":70924,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70929,"byte_end":70950,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70955,"byte_end":70961,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":70966,"byte_end":71039,"line_start":665,"line_end":665,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":71044,"byte_end":71051,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72670,"byte_end":72684,"line_start":706,"line_end":706,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"pub const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72023,"byte_end":72085,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72090,"byte_end":72093,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72098,"byte_end":72109,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72114,"byte_end":72165,"line_start":697,"line_end":697,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72170,"byte_end":72230,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72235,"byte_end":72299,"line_start":699,"line_end":699,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72304,"byte_end":72366,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72371,"byte_end":72434,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72439,"byte_end":72502,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72507,"byte_end":72571,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72576,"byte_end":72640,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":72645,"byte_end":72652,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73750,"byte_end":73757,"line_start":733,"line_end":733,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"pub fn time_fn<T, impl FnOnce() -> T: FnOnce() -> T>(impl FnOnce() -> T)\n-> (Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73559,"byte_end":73649,"line_start":730,"line_end":730,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73654,"byte_end":73710,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":73715,"byte_end":73738,"line_start":732,"line_end":732,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":336},{"krate":0,"index":354},{"krate":0,"index":369},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":1254},{"krate":0,"index":1267},{"krate":0,"index":399},{"krate":0,"index":401}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":81764,"byte_end":81826,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86415,"byte_end":86429,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86146,"byte_end":86240,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86241,"byte_end":86253,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86951,"byte_end":86955,"line_start":28,"line_end":28,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"pub const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86867,"byte_end":86933,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87199,"byte_end":87213,"line_start":34,"line_end":34,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"pub const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87009,"byte_end":87096,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87101,"byte_end":87181,"line_start":33,"line_end":33,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89042,"byte_end":89057,"line_start":11,"line_end":11,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88869,"byte_end":88966,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":88967,"byte_end":88985,"line_start":9,"line_end":9,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90024,"byte_end":90040,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89825,"byte_end":89920,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":89921,"byte_end":89967,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":90954,"byte_end":90968,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":90771,"byte_end":90868,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":90869,"byte_end":90897,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83399,"byte_end":83414,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83437,"byte_end":83451,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83986,"byte_end":84002,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84026,"byte_end":84040,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83387,"byte_end":83392,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1264}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":82944,"byte_end":83021,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83022,"byte_end":83025,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83026,"byte_end":83119,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83120,"byte_end":83212,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83213,"byte_end":83277,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83278,"byte_end":83325,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":83343,"byte_end":83360,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":415},{"krate":0,"index":424},{"krate":0,"index":433},{"krate":0,"index":442},{"krate":0,"index":451},{"krate":0,"index":460}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":91649,"byte_end":91670,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":91883,"byte_end":91889,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":91809,"byte_end":91868,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93688,"byte_end":93705,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92006,"byte_end":92053,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92054,"byte_end":92057,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92058,"byte_end":92072,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92073,"byte_end":92076,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92077,"byte_end":92117,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92118,"byte_end":92121,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92122,"byte_end":92133,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92134,"byte_end":92185,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92186,"byte_end":92244,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92245,"byte_end":92305,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92306,"byte_end":92366,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92367,"byte_end":92417,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92418,"byte_end":92468,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92469,"byte_end":92515,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92516,"byte_end":92560,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92561,"byte_end":92607,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92608,"byte_end":92615,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92616,"byte_end":92619,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92620,"byte_end":92653,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92654,"byte_end":92657,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92658,"byte_end":92669,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92670,"byte_end":92721,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92722,"byte_end":92784,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92785,"byte_end":92849,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92850,"byte_end":92914,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92915,"byte_end":92969,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":92970,"byte_end":93024,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93025,"byte_end":93075,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93076,"byte_end":93124,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93125,"byte_end":93175,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93176,"byte_end":93183,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93184,"byte_end":93187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93188,"byte_end":93261,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93262,"byte_end":93265,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93266,"byte_end":93277,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93278,"byte_end":93317,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93318,"byte_end":93389,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93390,"byte_end":93461,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93462,"byte_end":93469,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93470,"byte_end":93473,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93474,"byte_end":93565,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93566,"byte_end":93663,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93664,"byte_end":93677,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93793,"byte_end":93804,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"pub fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93728,"byte_end":93785,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93894,"byte_end":93906,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"pub fn microseconds(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93828,"byte_end":93886,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93996,"byte_end":94008,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"pub fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93930,"byte_end":93988,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94093,"byte_end":94100,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"pub fn seconds(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94032,"byte_end":94085,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94185,"byte_end":94192,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"pub fn minutes(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94124,"byte_end":94177,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94275,"byte_end":94280,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"pub fn hours(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94216,"byte_end":94267,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94362,"byte_end":94366,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"pub fn days(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94304,"byte_end":94354,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94449,"byte_end":94454,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"pub fn weeks(Self) -> Duration","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":94390,"byte_end":94441,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97343,"byte_end":97363,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96024,"byte_end":96082,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96083,"byte_end":96086,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96087,"byte_end":96101,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96102,"byte_end":96105,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96106,"byte_end":96157,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96158,"byte_end":96161,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96162,"byte_end":96173,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96174,"byte_end":96216,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96217,"byte_end":96248,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96249,"byte_end":96310,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96311,"byte_end":96374,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96375,"byte_end":96438,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96439,"byte_end":96495,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96496,"byte_end":96557,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96558,"byte_end":96620,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96621,"byte_end":96683,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96684,"byte_end":96748,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96749,"byte_end":96756,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96757,"byte_end":96760,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96761,"byte_end":96845,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96846,"byte_end":96849,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96850,"byte_end":96861,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96862,"byte_end":96904,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96905,"byte_end":96920,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96921,"byte_end":96970,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":96971,"byte_end":97003,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97004,"byte_end":97010,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97011,"byte_end":97026,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97027,"byte_end":97076,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97077,"byte_end":97109,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97110,"byte_end":97116,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97117,"byte_end":97124,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97125,"byte_end":97128,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97129,"byte_end":97220,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97221,"byte_end":97318,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97319,"byte_end":97332,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97462,"byte_end":97477,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"pub fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97386,"byte_end":97454,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97581,"byte_end":97597,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"pub fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97504,"byte_end":97573,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97701,"byte_end":97717,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"pub fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97624,"byte_end":97693,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97816,"byte_end":97827,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"pub fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97744,"byte_end":97808,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97926,"byte_end":97937,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"pub fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97854,"byte_end":97918,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":98034,"byte_end":98043,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"pub fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97964,"byte_end":98026,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":98139,"byte_end":98147,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"pub fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":98070,"byte_end":98131,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":98244,"byte_end":98253,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"pub fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":442},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":98174,"byte_end":98236,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101711,"byte_end":101718,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100537,"byte_end":100637,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100638,"byte_end":100641,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100642,"byte_end":100741,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100742,"byte_end":100837,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100838,"byte_end":100848,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100849,"byte_end":100852,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100853,"byte_end":100951,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":100952,"byte_end":101050,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101051,"byte_end":101148,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101149,"byte_end":101172,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101173,"byte_end":101176,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101177,"byte_end":101274,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101275,"byte_end":101374,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101375,"byte_end":101420,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101421,"byte_end":101424,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101425,"byte_end":101524,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101525,"byte_end":101555,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101611,"byte_end":101631,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101719,"byte_end":101733,"line_start":32,"line_end":32,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101949,"byte_end":101952,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101782,"byte_end":101830,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101835,"byte_end":101838,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101843,"byte_end":101854,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101859,"byte_end":101883,"line_start":39,"line_end":39,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101888,"byte_end":101925,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101930,"byte_end":101937,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102464,"byte_end":102471,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102008,"byte_end":102103,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102108,"byte_end":102171,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102176,"byte_end":102179,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102184,"byte_end":102195,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102200,"byte_end":102274,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102279,"byte_end":102301,"line_start":51,"line_end":51,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102306,"byte_end":102339,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102344,"byte_end":102384,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102389,"byte_end":102440,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102445,"byte_end":102452,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103090,"byte_end":103101,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102592,"byte_end":102682,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102687,"byte_end":102778,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102783,"byte_end":102797,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102802,"byte_end":102805,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102810,"byte_end":102821,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102826,"byte_end":102876,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102881,"byte_end":102910,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102915,"byte_end":102985,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":102990,"byte_end":103066,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103071,"byte_end":103078,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103953,"byte_end":103964,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103455,"byte_end":103545,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103550,"byte_end":103641,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103646,"byte_end":103660,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103665,"byte_end":103668,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103673,"byte_end":103684,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103689,"byte_end":103739,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103744,"byte_end":103773,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103778,"byte_end":103848,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103853,"byte_end":103929,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":103934,"byte_end":103941,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104560,"byte_end":104570,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"pub const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104354,"byte_end":104398,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104403,"byte_end":104406,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104411,"byte_end":104422,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104427,"byte_end":104451,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104456,"byte_end":104485,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104490,"byte_end":104530,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104535,"byte_end":104542,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108299,"byte_end":108306,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108316,"byte_end":108324,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108334,"byte_end":108339,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108349,"byte_end":108354,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108364,"byte_end":108367,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108377,"byte_end":108381,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108391,"byte_end":108395,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108405,"byte_end":108411,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108421,"byte_end":108430,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108440,"byte_end":108447,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108458,"byte_end":108466,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108477,"byte_end":108485,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108287,"byte_end":108292,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"pub enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108131,"byte_end":108154,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108155,"byte_end":108202,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108215,"byte_end":108226,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109442,"byte_end":109450,"line_start":62,"line_end":62,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109270,"byte_end":109297,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109302,"byte_end":109305,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109310,"byte_end":109321,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109326,"byte_end":109348,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109353,"byte_end":109412,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109417,"byte_end":109424,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":110037,"byte_end":110041,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109873,"byte_end":109896,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109901,"byte_end":109904,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109909,"byte_end":109920,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109925,"byte_end":109947,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":109952,"byte_end":110007,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":110012,"byte_end":110019,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113308,"byte_end":113322,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":112923,"byte_end":112972,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":112973,"byte_end":112976,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":112977,"byte_end":113030,"line_start":28,"line_end":28,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113808,"byte_end":113818,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113584,"byte_end":113620,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113625,"byte_end":113628,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113633,"byte_end":113644,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113649,"byte_end":113700,"line_start":44,"line_end":44,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113705,"byte_end":113781,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113786,"byte_end":113793,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114329,"byte_end":114336,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"pub fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113939,"byte_end":114011,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114016,"byte_end":114019,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114024,"byte_end":114035,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114040,"byte_end":114089,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114094,"byte_end":114148,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114153,"byte_end":114218,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114223,"byte_end":114230,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":114235,"byte_end":114258,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115817,"byte_end":115826,"line_start":103,"line_end":103,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"pub const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115010,"byte_end":115104,"line_start":82,"line_end":82,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115109,"byte_end":115112,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115117,"byte_end":115128,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115133,"byte_end":115176,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115181,"byte_end":115196,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115201,"byte_end":115239,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115244,"byte_end":115279,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115284,"byte_end":115304,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115309,"byte_end":115322,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115327,"byte_end":115333,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115338,"byte_end":115341,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115346,"byte_end":115439,"line_start":93,"line_end":93,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115444,"byte_end":115447,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115452,"byte_end":115502,"line_start":95,"line_end":95,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115507,"byte_end":115555,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115560,"byte_end":115609,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115614,"byte_end":115666,"line_start":98,"line_end":98,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115671,"byte_end":115704,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115709,"byte_end":115744,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115749,"byte_end":115787,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115792,"byte_end":115799,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":117008,"byte_end":117027,"line_start":138,"line_end":138,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"pub const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":115991,"byte_end":116082,"line_start":111,"line_end":111,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116087,"byte_end":116135,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116140,"byte_end":116143,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116148,"byte_end":116159,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116164,"byte_end":116215,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116220,"byte_end":116235,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116240,"byte_end":116287,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116292,"byte_end":116331,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116336,"byte_end":116342,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116347,"byte_end":116362,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116367,"byte_end":116426,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116431,"byte_end":116474,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116479,"byte_end":116485,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116490,"byte_end":116497,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116502,"byte_end":116505,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116510,"byte_end":116599,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116604,"byte_end":116618,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116623,"byte_end":116626,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116631,"byte_end":116642,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116647,"byte_end":116714,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116719,"byte_end":116765,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116770,"byte_end":116785,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116790,"byte_end":116877,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116882,"byte_end":116932,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116937,"byte_end":116943,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116948,"byte_end":116978,"line_start":136,"line_end":136,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":116983,"byte_end":116990,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118703,"byte_end":118728,"line_start":179,"line_end":179,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"pub const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118135,"byte_end":118227,"line_start":165,"line_end":165,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118232,"byte_end":118299,"line_start":166,"line_end":166,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118304,"byte_end":118307,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118312,"byte_end":118323,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118328,"byte_end":118379,"line_start":169,"line_end":169,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118384,"byte_end":118399,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118404,"byte_end":118457,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118462,"byte_end":118501,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118506,"byte_end":118512,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118517,"byte_end":118532,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118537,"byte_end":118614,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118619,"byte_end":118662,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118667,"byte_end":118673,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":118678,"byte_end":118685,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119607,"byte_end":119613,"line_start":204,"line_end":204,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"pub const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119331,"byte_end":119357,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119362,"byte_end":119365,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119370,"byte_end":119381,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119386,"byte_end":119429,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119434,"byte_end":119504,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119509,"byte_end":119577,"line_start":202,"line_end":202,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119582,"byte_end":119589,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119975,"byte_end":119989,"line_start":215,"line_end":215,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"pub const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119666,"byte_end":119736,"line_start":208,"line_end":208,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119741,"byte_end":119744,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119749,"byte_end":119760,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119765,"byte_end":119798,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119803,"byte_end":119870,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119875,"byte_end":119945,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":119950,"byte_end":119957,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120690,"byte_end":120710,"line_start":234,"line_end":234,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"pub const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120352,"byte_end":120394,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120399,"byte_end":120402,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120407,"byte_end":120418,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120423,"byte_end":120454,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120459,"byte_end":120532,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120537,"byte_end":120552,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120557,"byte_end":120618,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120623,"byte_end":120649,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120654,"byte_end":120660,"line_start":232,"line_end":232,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120665,"byte_end":120672,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121231,"byte_end":121235,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120833,"byte_end":120875,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120880,"byte_end":120883,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120888,"byte_end":120899,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120904,"byte_end":120953,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":120958,"byte_end":121031,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121036,"byte_end":121051,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121056,"byte_end":121094,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121099,"byte_end":121134,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121139,"byte_end":121159,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121164,"byte_end":121190,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121195,"byte_end":121201,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121206,"byte_end":121213,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122228,"byte_end":122232,"line_start":276,"line_end":276,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121842,"byte_end":121884,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121889,"byte_end":121892,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121897,"byte_end":121908,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121913,"byte_end":121962,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":121967,"byte_end":122034,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122039,"byte_end":122054,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122059,"byte_end":122097,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122102,"byte_end":122137,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122142,"byte_end":122162,"line_start":272,"line_end":272,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122167,"byte_end":122187,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122192,"byte_end":122198,"line_start":274,"line_end":274,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122203,"byte_end":122210,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123273,"byte_end":123277,"line_start":306,"line_end":306,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122833,"byte_end":122883,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122888,"byte_end":122891,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122896,"byte_end":122907,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122912,"byte_end":122955,"line_start":296,"line_end":296,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":122960,"byte_end":123020,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123025,"byte_end":123040,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123045,"byte_end":123084,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123089,"byte_end":123124,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123129,"byte_end":123149,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123154,"byte_end":123167,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123172,"byte_end":123178,"line_start":303,"line_end":303,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123183,"byte_end":123243,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123248,"byte_end":123255,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124262,"byte_end":124267,"line_start":333,"line_end":333,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123837,"byte_end":123888,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123893,"byte_end":123896,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123901,"byte_end":123912,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123917,"byte_end":123939,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123944,"byte_end":123987,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":123992,"byte_end":124063,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124068,"byte_end":124083,"line_start":326,"line_end":326,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124088,"byte_end":124127,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124132,"byte_end":124167,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124172,"byte_end":124193,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124198,"byte_end":124221,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124226,"byte_end":124232,"line_start":331,"line_end":331,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124237,"byte_end":124244,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124763,"byte_end":124766,"line_start":351,"line_end":351,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124324,"byte_end":124373,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124378,"byte_end":124381,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124386,"byte_end":124446,"line_start":339,"line_end":339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124451,"byte_end":124454,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124459,"byte_end":124470,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124475,"byte_end":124518,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124523,"byte_end":124579,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124584,"byte_end":124599,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124604,"byte_end":124643,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124648,"byte_end":124683,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124688,"byte_end":124707,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124712,"byte_end":124722,"line_start":348,"line_end":348,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124727,"byte_end":124733,"line_start":349,"line_end":349,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124738,"byte_end":124745,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125278,"byte_end":125285,"line_start":369,"line_end":369,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124818,"byte_end":124879,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124884,"byte_end":124887,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124892,"byte_end":124953,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124958,"byte_end":124961,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124966,"byte_end":124977,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":124982,"byte_end":125025,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125030,"byte_end":125090,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125095,"byte_end":125110,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125115,"byte_end":125154,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125159,"byte_end":125194,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125199,"byte_end":125222,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125227,"byte_end":125237,"line_start":366,"line_end":366,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125242,"byte_end":125248,"line_start":367,"line_end":367,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125253,"byte_end":125260,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126340,"byte_end":126348,"line_start":394,"line_end":394,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125848,"byte_end":125909,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125914,"byte_end":125917,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125922,"byte_end":125982,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125987,"byte_end":125990,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":125995,"byte_end":126006,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126011,"byte_end":126044,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126049,"byte_end":126110,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126115,"byte_end":126176,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126181,"byte_end":126243,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126248,"byte_end":126310,"line_start":392,"line_end":392,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126315,"byte_end":126322,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126935,"byte_end":126952,"line_start":409,"line_end":409,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126405,"byte_end":126469,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126474,"byte_end":126477,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126482,"byte_end":126542,"line_start":400,"line_end":400,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126547,"byte_end":126550,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126555,"byte_end":126566,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126571,"byte_end":126604,"line_start":403,"line_end":403,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126609,"byte_end":126679,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126684,"byte_end":126754,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126759,"byte_end":126830,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126835,"byte_end":126905,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":126910,"byte_end":126917,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127548,"byte_end":127565,"line_start":424,"line_end":424,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127018,"byte_end":127082,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127087,"byte_end":127090,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127095,"byte_end":127155,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127160,"byte_end":127163,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127168,"byte_end":127179,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127184,"byte_end":127217,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127222,"byte_end":127292,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127297,"byte_end":127367,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127372,"byte_end":127443,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127448,"byte_end":127518,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127523,"byte_end":127530,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127897,"byte_end":127913,"line_start":437,"line_end":437,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127631,"byte_end":127664,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127669,"byte_end":127672,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127677,"byte_end":127688,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127693,"byte_end":127735,"line_start":431,"line_end":431,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127740,"byte_end":127755,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127760,"byte_end":127818,"line_start":433,"line_end":433,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127823,"byte_end":127856,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127861,"byte_end":127867,"line_start":435,"line_end":435,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127872,"byte_end":127879,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128239,"byte_end":128254,"line_start":450,"line_end":450,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":127992,"byte_end":128032,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128037,"byte_end":128040,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128045,"byte_end":128056,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128061,"byte_end":128094,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128099,"byte_end":128114,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128119,"byte_end":128176,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128181,"byte_end":128198,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128203,"byte_end":128209,"line_start":448,"line_end":448,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128214,"byte_end":128221,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129113,"byte_end":129129,"line_start":479,"line_end":479,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128326,"byte_end":128378,"line_start":454,"line_end":454,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128383,"byte_end":128386,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128391,"byte_end":128402,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128407,"byte_end":128454,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128459,"byte_end":128474,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128479,"byte_end":128537,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128542,"byte_end":128568,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128573,"byte_end":128579,"line_start":461,"line_end":461,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128584,"byte_end":128599,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128604,"byte_end":128662,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128667,"byte_end":128693,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128698,"byte_end":128704,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128709,"byte_end":128724,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128729,"byte_end":128787,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128792,"byte_end":128820,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128825,"byte_end":128831,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128836,"byte_end":128851,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128856,"byte_end":128914,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128919,"byte_end":128947,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128952,"byte_end":128958,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128963,"byte_end":128978,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":128983,"byte_end":129041,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129046,"byte_end":129072,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129077,"byte_end":129083,"line_start":477,"line_end":477,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129088,"byte_end":129095,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129580,"byte_end":129587,"line_start":491,"line_end":491,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129210,"byte_end":129263,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129268,"byte_end":129271,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129276,"byte_end":129287,"line_start":485,"line_end":485,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129292,"byte_end":129339,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129344,"byte_end":129410,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129415,"byte_end":129480,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129485,"byte_end":129550,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129555,"byte_end":129562,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130350,"byte_end":130363,"line_start":507,"line_end":507,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129648,"byte_end":129741,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129746,"byte_end":129749,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129754,"byte_end":129848,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129853,"byte_end":129949,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129954,"byte_end":129957,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129962,"byte_end":129973,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":129978,"byte_end":130011,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130016,"byte_end":130083,"line_start":502,"line_end":502,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130088,"byte_end":130162,"line_start":503,"line_end":503,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130167,"byte_end":130241,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130246,"byte_end":130320,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130325,"byte_end":130332,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130773,"byte_end":130779,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"pub const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130484,"byte_end":130527,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130532,"byte_end":130535,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130540,"byte_end":130551,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130556,"byte_end":130589,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130594,"byte_end":130664,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130669,"byte_end":130743,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130748,"byte_end":130755,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131238,"byte_end":131250,"line_start":537,"line_end":537,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"pub const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130844,"byte_end":130900,"line_start":524,"line_end":524,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130905,"byte_end":130908,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130913,"byte_end":130924,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130929,"byte_end":130962,"line_start":527,"line_end":527,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130967,"byte_end":130982,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":130987,"byte_end":131044,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131049,"byte_end":131069,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131074,"byte_end":131080,"line_start":531,"line_end":531,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131085,"byte_end":131100,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131105,"byte_end":131167,"line_start":533,"line_end":533,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131172,"byte_end":131197,"line_start":534,"line_end":534,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131202,"byte_end":131208,"line_start":535,"line_end":535,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131213,"byte_end":131220,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131728,"byte_end":131740,"line_start":554,"line_end":554,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"pub const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131326,"byte_end":131382,"line_start":541,"line_end":541,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131387,"byte_end":131390,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131395,"byte_end":131406,"line_start":543,"line_end":543,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131411,"byte_end":131444,"line_start":544,"line_end":544,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131449,"byte_end":131464,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131469,"byte_end":131526,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131531,"byte_end":131551,"line_start":547,"line_end":547,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131556,"byte_end":131562,"line_start":548,"line_end":548,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131567,"byte_end":131582,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131587,"byte_end":131653,"line_start":550,"line_end":550,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131658,"byte_end":131687,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131692,"byte_end":131698,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131703,"byte_end":131710,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132223,"byte_end":132234,"line_start":571,"line_end":571,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"pub const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131816,"byte_end":131871,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131876,"byte_end":131879,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131884,"byte_end":131895,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131900,"byte_end":131933,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131938,"byte_end":131953,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":131958,"byte_end":132014,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132019,"byte_end":132039,"line_start":564,"line_end":564,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132044,"byte_end":132050,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132055,"byte_end":132070,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132075,"byte_end":132144,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132149,"byte_end":132182,"line_start":568,"line_end":568,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132187,"byte_end":132193,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132198,"byte_end":132205,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132748,"byte_end":132752,"line_start":589,"line_end":589,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132309,"byte_end":132353,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132358,"byte_end":132361,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132366,"byte_end":132425,"line_start":577,"line_end":577,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132430,"byte_end":132433,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132438,"byte_end":132449,"line_start":579,"line_end":579,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132454,"byte_end":132497,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132502,"byte_end":132559,"line_start":581,"line_end":581,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132564,"byte_end":132579,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132584,"byte_end":132626,"line_start":583,"line_end":583,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132631,"byte_end":132666,"line_start":584,"line_end":584,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132671,"byte_end":132691,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132696,"byte_end":132707,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132712,"byte_end":132718,"line_start":587,"line_end":587,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":132723,"byte_end":132730,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133629,"byte_end":133635,"line_start":613,"line_end":613,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133171,"byte_end":133227,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133232,"byte_end":133235,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133240,"byte_end":133299,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133304,"byte_end":133307,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133312,"byte_end":133323,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133328,"byte_end":133371,"line_start":604,"line_end":604,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133376,"byte_end":133435,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133440,"byte_end":133455,"line_start":606,"line_end":606,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133460,"byte_end":133502,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133507,"byte_end":133545,"line_start":608,"line_end":608,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133550,"byte_end":133572,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133577,"byte_end":133588,"line_start":610,"line_end":610,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133593,"byte_end":133599,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133604,"byte_end":133611,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134393,"byte_end":134399,"line_start":635,"line_end":635,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133930,"byte_end":133988,"line_start":621,"line_end":621,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":133993,"byte_end":133996,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134001,"byte_end":134060,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134065,"byte_end":134068,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134073,"byte_end":134084,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134089,"byte_end":134132,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134137,"byte_end":134196,"line_start":627,"line_end":627,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134201,"byte_end":134216,"line_start":628,"line_end":628,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134221,"byte_end":134263,"line_start":629,"line_end":629,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134268,"byte_end":134309,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134314,"byte_end":134336,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134341,"byte_end":134352,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134357,"byte_end":134363,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134368,"byte_end":134375,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135074,"byte_end":135085,"line_start":652,"line_end":652,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134695,"byte_end":134759,"line_start":643,"line_end":643,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134764,"byte_end":134767,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134772,"byte_end":134834,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134839,"byte_end":134842,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134847,"byte_end":134858,"line_start":647,"line_end":647,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134863,"byte_end":134896,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134901,"byte_end":134965,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":134970,"byte_end":135044,"line_start":650,"line_end":650,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135049,"byte_end":135056,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135578,"byte_end":135589,"line_start":668,"line_end":668,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135152,"byte_end":135216,"line_start":656,"line_end":656,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135221,"byte_end":135224,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135229,"byte_end":135295,"line_start":658,"line_end":658,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135300,"byte_end":135303,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135308,"byte_end":135319,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135324,"byte_end":135357,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135362,"byte_end":135426,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135431,"byte_end":135446,"line_start":663,"line_end":663,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135451,"byte_end":135516,"line_start":664,"line_end":664,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135521,"byte_end":135537,"line_start":665,"line_end":665,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135542,"byte_end":135548,"line_start":666,"line_end":666,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135553,"byte_end":135560,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136091,"byte_end":136101,"line_start":684,"line_end":684,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135656,"byte_end":135719,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135724,"byte_end":135727,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135732,"byte_end":135802,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135807,"byte_end":135810,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135815,"byte_end":135826,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135831,"byte_end":135864,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135869,"byte_end":135932,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135937,"byte_end":135952,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":135957,"byte_end":136025,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136030,"byte_end":136050,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136055,"byte_end":136061,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136066,"byte_end":136073,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136918,"byte_end":136929,"line_start":707,"line_end":707,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136256,"byte_end":136329,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136334,"byte_end":136337,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136342,"byte_end":136349,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136354,"byte_end":136401,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136406,"byte_end":136449,"line_start":695,"line_end":695,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136454,"byte_end":136522,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136527,"byte_end":136583,"line_start":697,"line_end":697,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136588,"byte_end":136591,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136596,"byte_end":136664,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136669,"byte_end":136722,"line_start":700,"line_end":700,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136727,"byte_end":136730,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136735,"byte_end":136750,"line_start":702,"line_end":702,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136755,"byte_end":136823,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136828,"byte_end":136877,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136882,"byte_end":136888,"line_start":705,"line_end":705,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":136893,"byte_end":136900,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137818,"byte_end":137829,"line_start":728,"line_end":728,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137156,"byte_end":137229,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137234,"byte_end":137237,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137242,"byte_end":137249,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137254,"byte_end":137301,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137306,"byte_end":137349,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137354,"byte_end":137422,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137427,"byte_end":137480,"line_start":718,"line_end":718,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137485,"byte_end":137488,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137493,"byte_end":137561,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137566,"byte_end":137622,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137627,"byte_end":137630,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137635,"byte_end":137650,"line_start":723,"line_end":723,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137655,"byte_end":137723,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137728,"byte_end":137777,"line_start":725,"line_end":725,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137782,"byte_end":137788,"line_start":726,"line_end":726,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":137793,"byte_end":137800,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138843,"byte_end":138857,"line_start":755,"line_end":755,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138130,"byte_end":138191,"line_start":735,"line_end":735,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138196,"byte_end":138199,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138204,"byte_end":138211,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138216,"byte_end":138255,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138260,"byte_end":138293,"line_start":739,"line_end":739,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138298,"byte_end":138313,"line_start":740,"line_end":740,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138318,"byte_end":138392,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138397,"byte_end":138442,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138447,"byte_end":138453,"line_start":743,"line_end":743,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138458,"byte_end":138461,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138466,"byte_end":138481,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138486,"byte_end":138573,"line_start":746,"line_end":746,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138578,"byte_end":138639,"line_start":747,"line_end":747,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138644,"byte_end":138650,"line_start":748,"line_end":748,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138655,"byte_end":138658,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138663,"byte_end":138678,"line_start":750,"line_end":750,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138683,"byte_end":138754,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138759,"byte_end":138802,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138807,"byte_end":138813,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":138818,"byte_end":138825,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139990,"byte_end":140004,"line_start":789,"line_end":789,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139277,"byte_end":139338,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139343,"byte_end":139346,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139351,"byte_end":139358,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139363,"byte_end":139402,"line_start":772,"line_end":772,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139407,"byte_end":139440,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139445,"byte_end":139460,"line_start":774,"line_end":774,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139465,"byte_end":139536,"line_start":775,"line_end":775,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139541,"byte_end":139586,"line_start":776,"line_end":776,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139591,"byte_end":139597,"line_start":777,"line_end":777,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139602,"byte_end":139605,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139610,"byte_end":139625,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139630,"byte_end":139720,"line_start":780,"line_end":780,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139725,"byte_end":139786,"line_start":781,"line_end":781,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139791,"byte_end":139797,"line_start":782,"line_end":782,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139802,"byte_end":139805,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139810,"byte_end":139825,"line_start":784,"line_end":784,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139830,"byte_end":139901,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139906,"byte_end":139949,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139954,"byte_end":139960,"line_start":787,"line_end":787,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":139965,"byte_end":139972,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141298,"byte_end":141310,"line_start":827,"line_end":827,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140566,"byte_end":140652,"line_start":808,"line_end":808,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140657,"byte_end":140686,"line_start":809,"line_end":809,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140691,"byte_end":140694,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140699,"byte_end":140710,"line_start":811,"line_end":811,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140715,"byte_end":140756,"line_start":812,"line_end":812,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140761,"byte_end":140776,"line_start":813,"line_end":813,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140781,"byte_end":140847,"line_start":814,"line_end":814,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140852,"byte_end":140891,"line_start":815,"line_end":815,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140896,"byte_end":140902,"line_start":816,"line_end":816,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140907,"byte_end":140922,"line_start":817,"line_end":817,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140927,"byte_end":140992,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140997,"byte_end":141034,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141039,"byte_end":141045,"line_start":820,"line_end":820,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141050,"byte_end":141065,"line_start":821,"line_end":821,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141070,"byte_end":141135,"line_start":822,"line_end":822,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141140,"byte_end":141178,"line_start":823,"line_end":823,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141183,"byte_end":141189,"line_start":824,"line_end":824,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141194,"byte_end":141201,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141206,"byte_end":141280,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142087,"byte_end":142099,"line_start":849,"line_end":849,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141488,"byte_end":141574,"line_start":834,"line_end":834,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141579,"byte_end":141608,"line_start":835,"line_end":835,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141613,"byte_end":141616,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141621,"byte_end":141632,"line_start":837,"line_end":837,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141637,"byte_end":141678,"line_start":838,"line_end":838,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141683,"byte_end":141698,"line_start":839,"line_end":839,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141703,"byte_end":141775,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141780,"byte_end":141819,"line_start":841,"line_end":841,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141824,"byte_end":141830,"line_start":842,"line_end":842,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141835,"byte_end":141850,"line_start":843,"line_end":843,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141855,"byte_end":141925,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141930,"byte_end":141967,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141972,"byte_end":141978,"line_start":846,"line_end":846,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141983,"byte_end":141990,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":141995,"byte_end":142069,"line_start":848,"line_end":848,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142902,"byte_end":142919,"line_start":871,"line_end":871,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"pub const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142277,"byte_end":142364,"line_start":856,"line_end":856,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142369,"byte_end":142401,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142406,"byte_end":142409,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142414,"byte_end":142425,"line_start":859,"line_end":859,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142430,"byte_end":142463,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142468,"byte_end":142483,"line_start":861,"line_end":861,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142488,"byte_end":142575,"line_start":862,"line_end":862,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142580,"byte_end":142619,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142624,"byte_end":142630,"line_start":864,"line_end":864,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142635,"byte_end":142650,"line_start":865,"line_end":865,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142655,"byte_end":142740,"line_start":866,"line_end":866,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142745,"byte_end":142782,"line_start":867,"line_end":867,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142787,"byte_end":142793,"line_start":868,"line_end":868,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142798,"byte_end":142805,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":142810,"byte_end":142884,"line_start":870,"line_end":870,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143418,"byte_end":143432,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"pub const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143022,"byte_end":143092,"line_start":875,"line_end":875,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143097,"byte_end":143100,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143105,"byte_end":143116,"line_start":877,"line_end":877,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143121,"byte_end":143164,"line_start":878,"line_end":878,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143169,"byte_end":143184,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143189,"byte_end":143256,"line_start":880,"line_end":880,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143261,"byte_end":143298,"line_start":881,"line_end":881,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143303,"byte_end":143309,"line_start":882,"line_end":882,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143314,"byte_end":143321,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143326,"byte_end":143400,"line_start":884,"line_end":884,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144084,"byte_end":144096,"line_start":900,"line_end":900,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143527,"byte_end":143585,"line_start":889,"line_end":889,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143590,"byte_end":143593,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143598,"byte_end":143609,"line_start":891,"line_end":891,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143614,"byte_end":143647,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143652,"byte_end":143667,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143672,"byte_end":143735,"line_start":894,"line_end":894,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143740,"byte_end":143787,"line_start":895,"line_end":895,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143792,"byte_end":143798,"line_start":896,"line_end":896,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143803,"byte_end":143927,"line_start":897,"line_end":897,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":143932,"byte_end":144054,"line_start":898,"line_end":898,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144059,"byte_end":144066,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144791,"byte_end":144804,"line_start":920,"line_end":920,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144346,"byte_end":144380,"line_start":909,"line_end":909,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144385,"byte_end":144388,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144393,"byte_end":144404,"line_start":911,"line_end":911,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144409,"byte_end":144442,"line_start":912,"line_end":912,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144447,"byte_end":144469,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144474,"byte_end":144489,"line_start":914,"line_end":914,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144494,"byte_end":144568,"line_start":915,"line_end":915,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144573,"byte_end":144620,"line_start":916,"line_end":916,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144625,"byte_end":144631,"line_start":917,"line_end":917,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144636,"byte_end":144761,"line_start":918,"line_end":918,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":144766,"byte_end":144773,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145548,"byte_end":145559,"line_start":940,"line_end":940,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145059,"byte_end":145092,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145097,"byte_end":145100,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145105,"byte_end":145116,"line_start":931,"line_end":931,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145121,"byte_end":145154,"line_start":932,"line_end":932,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145159,"byte_end":145174,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145179,"byte_end":145238,"line_start":934,"line_end":934,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145243,"byte_end":145290,"line_start":935,"line_end":935,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145295,"byte_end":145301,"line_start":936,"line_end":936,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145306,"byte_end":145403,"line_start":937,"line_end":937,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145408,"byte_end":145518,"line_start":938,"line_end":938,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145523,"byte_end":145530,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146222,"byte_end":146234,"line_start":959,"line_end":959,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145805,"byte_end":145832,"line_start":949,"line_end":949,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145837,"byte_end":145840,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145845,"byte_end":145856,"line_start":951,"line_end":951,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145861,"byte_end":145894,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145899,"byte_end":145914,"line_start":953,"line_end":953,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145919,"byte_end":145994,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":145999,"byte_end":146061,"line_start":955,"line_end":955,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146066,"byte_end":146072,"line_start":956,"line_end":956,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146077,"byte_end":146192,"line_start":957,"line_end":957,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146197,"byte_end":146204,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146919,"byte_end":146933,"line_start":978,"line_end":978,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146483,"byte_end":146523,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146528,"byte_end":146531,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146536,"byte_end":146547,"line_start":970,"line_end":970,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146552,"byte_end":146585,"line_start":971,"line_end":971,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146590,"byte_end":146605,"line_start":972,"line_end":972,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146610,"byte_end":146687,"line_start":973,"line_end":973,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146692,"byte_end":146754,"line_start":974,"line_end":974,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146759,"byte_end":146765,"line_start":975,"line_end":975,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146770,"byte_end":146889,"line_start":976,"line_end":976,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":146894,"byte_end":146901,"line_start":977,"line_end":977,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147626,"byte_end":147640,"line_start":997,"line_end":997,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147188,"byte_end":147230,"line_start":987,"line_end":987,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147235,"byte_end":147238,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147243,"byte_end":147254,"line_start":989,"line_end":989,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147259,"byte_end":147292,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147297,"byte_end":147312,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147317,"byte_end":147394,"line_start":992,"line_end":992,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147399,"byte_end":147461,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147466,"byte_end":147472,"line_start":994,"line_end":994,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147477,"byte_end":147596,"line_start":995,"line_end":995,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147601,"byte_end":147608,"line_start":996,"line_end":996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148351,"byte_end":148370,"line_start":1016,"line_end":1016,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147895,"byte_end":147942,"line_start":1006,"line_end":1006,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147947,"byte_end":147950,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147955,"byte_end":147966,"line_start":1008,"line_end":1008,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":147971,"byte_end":148004,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148009,"byte_end":148024,"line_start":1010,"line_end":1010,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148029,"byte_end":148111,"line_start":1011,"line_end":1011,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148116,"byte_end":148170,"line_start":1012,"line_end":1012,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148175,"byte_end":148181,"line_start":1013,"line_end":1013,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148186,"byte_end":148321,"line_start":1014,"line_end":1014,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148326,"byte_end":148333,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149136,"byte_end":149155,"line_start":1038,"line_end":1038,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148664,"byte_end":148711,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148716,"byte_end":148719,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148724,"byte_end":148735,"line_start":1030,"line_end":1030,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148740,"byte_end":148773,"line_start":1031,"line_end":1031,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148778,"byte_end":148793,"line_start":1032,"line_end":1032,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148798,"byte_end":148884,"line_start":1033,"line_end":1033,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148889,"byte_end":148947,"line_start":1034,"line_end":1034,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148952,"byte_end":148958,"line_start":1035,"line_end":1035,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":148963,"byte_end":149106,"line_start":1036,"line_end":1036,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149111,"byte_end":149118,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149933,"byte_end":149951,"line_start":1060,"line_end":1060,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149449,"byte_end":149495,"line_start":1050,"line_end":1050,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149500,"byte_end":149503,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149508,"byte_end":149519,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149524,"byte_end":149557,"line_start":1053,"line_end":1053,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149562,"byte_end":149577,"line_start":1054,"line_end":1054,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149582,"byte_end":149671,"line_start":1055,"line_end":1055,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149676,"byte_end":149738,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149743,"byte_end":149749,"line_start":1057,"line_end":1057,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149754,"byte_end":149903,"line_start":1058,"line_end":1058,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":149908,"byte_end":149915,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158110,"byte_end":158127,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158003,"byte_end":158030,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158898,"byte_end":158901,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158320,"byte_end":158390,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158395,"byte_end":158398,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158403,"byte_end":158480,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158485,"byte_end":158488,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158493,"byte_end":158571,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158576,"byte_end":158655,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158660,"byte_end":158663,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158668,"byte_end":158679,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158684,"byte_end":158738,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158743,"byte_end":158792,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158797,"byte_end":158871,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158876,"byte_end":158883,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159559,"byte_end":159562,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158948,"byte_end":159017,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159022,"byte_end":159025,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159030,"byte_end":159107,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159112,"byte_end":159115,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159120,"byte_end":159207,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159212,"byte_end":159300,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159305,"byte_end":159308,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159313,"byte_end":159324,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159329,"byte_end":159383,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159388,"byte_end":159437,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159442,"byte_end":159532,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159537,"byte_end":159544,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159952,"byte_end":159955,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"pub const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159609,"byte_end":159686,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159691,"byte_end":159694,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159699,"byte_end":159710,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159715,"byte_end":159783,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159788,"byte_end":159803,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159808,"byte_end":159871,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159876,"byte_end":159911,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159916,"byte_end":159922,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":159927,"byte_end":159934,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160294,"byte_end":160298,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160062,"byte_end":160120,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160125,"byte_end":160128,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160133,"byte_end":160144,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160149,"byte_end":160190,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160195,"byte_end":160264,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160269,"byte_end":160276,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160558,"byte_end":160562,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160344,"byte_end":160402,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160407,"byte_end":160410,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160415,"byte_end":160426,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160431,"byte_end":160472,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160477,"byte_end":160540,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160975,"byte_end":160979,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160671,"byte_end":160700,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160705,"byte_end":160708,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160713,"byte_end":160724,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160729,"byte_end":160762,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160767,"byte_end":160823,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160828,"byte_end":160884,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160889,"byte_end":160945,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":160950,"byte_end":160957,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161307,"byte_end":161312,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161031,"byte_end":161061,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161066,"byte_end":161069,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161074,"byte_end":161085,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161090,"byte_end":161132,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161137,"byte_end":161204,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161209,"byte_end":161277,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161282,"byte_end":161289,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161675,"byte_end":161678,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161367,"byte_end":161395,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161400,"byte_end":161403,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161408,"byte_end":161468,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161473,"byte_end":161476,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161481,"byte_end":161492,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161497,"byte_end":161530,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161535,"byte_end":161587,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161592,"byte_end":161645,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161650,"byte_end":161657,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162075,"byte_end":162082,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161728,"byte_end":161756,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161761,"byte_end":161764,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161769,"byte_end":161859,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161864,"byte_end":161867,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161872,"byte_end":161883,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161888,"byte_end":161921,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161926,"byte_end":161982,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":161987,"byte_end":162045,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162050,"byte_end":162057,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162643,"byte_end":162651,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162137,"byte_end":162165,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162170,"byte_end":162173,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162178,"byte_end":162238,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162243,"byte_end":162246,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162251,"byte_end":162262,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162267,"byte_end":162300,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162305,"byte_end":162362,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162367,"byte_end":162425,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162430,"byte_end":162487,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162492,"byte_end":162550,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162555,"byte_end":162613,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162618,"byte_end":162625,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163220,"byte_end":163237,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162706,"byte_end":162770,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162775,"byte_end":162778,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162783,"byte_end":162843,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162848,"byte_end":162851,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162856,"byte_end":162867,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162872,"byte_end":162905,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162910,"byte_end":162976,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":162981,"byte_end":163047,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163052,"byte_end":163119,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163124,"byte_end":163190,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163195,"byte_end":163202,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163815,"byte_end":163832,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163301,"byte_end":163365,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163370,"byte_end":163373,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163378,"byte_end":163438,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163443,"byte_end":163446,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163451,"byte_end":163462,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163467,"byte_end":163500,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163505,"byte_end":163571,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163576,"byte_end":163642,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163647,"byte_end":163714,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163719,"byte_end":163785,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163790,"byte_end":163797,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164158,"byte_end":164174,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163896,"byte_end":163929,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163934,"byte_end":163937,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163942,"byte_end":163953,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":163958,"byte_end":164000,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164005,"byte_end":164020,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164025,"byte_end":164079,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164084,"byte_end":164117,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164122,"byte_end":164128,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164133,"byte_end":164140,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164460,"byte_end":164475,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164251,"byte_end":164291,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164296,"byte_end":164299,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164304,"byte_end":164315,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164320,"byte_end":164353,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164358,"byte_end":164430,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164435,"byte_end":164442,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165312,"byte_end":165328,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164545,"byte_end":164597,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164602,"byte_end":164605,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164610,"byte_end":164621,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164626,"byte_end":164673,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164678,"byte_end":164693,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164698,"byte_end":164752,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164757,"byte_end":164783,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164788,"byte_end":164794,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164799,"byte_end":164814,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164819,"byte_end":164873,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164878,"byte_end":164904,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164909,"byte_end":164915,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164920,"byte_end":164935,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164940,"byte_end":164994,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":164999,"byte_end":165027,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165032,"byte_end":165038,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165043,"byte_end":165058,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165063,"byte_end":165117,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165122,"byte_end":165150,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165155,"byte_end":165161,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165166,"byte_end":165181,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165186,"byte_end":165240,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165245,"byte_end":165271,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165276,"byte_end":165282,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165287,"byte_end":165294,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166334,"byte_end":166341,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165407,"byte_end":165427,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165432,"byte_end":165435,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165440,"byte_end":165451,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165456,"byte_end":165503,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165508,"byte_end":165570,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165575,"byte_end":165636,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165641,"byte_end":165702,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165707,"byte_end":165768,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165773,"byte_end":165837,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165842,"byte_end":165905,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165910,"byte_end":165971,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":165976,"byte_end":166039,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166044,"byte_end":166105,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166110,"byte_end":166172,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166177,"byte_end":166238,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166243,"byte_end":166304,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166309,"byte_end":166316,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167086,"byte_end":167099,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166400,"byte_end":166493,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166498,"byte_end":166501,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166506,"byte_end":166600,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166605,"byte_end":166701,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166706,"byte_end":166709,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166714,"byte_end":166725,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166730,"byte_end":166763,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166768,"byte_end":166831,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166836,"byte_end":166906,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166911,"byte_end":166981,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":166986,"byte_end":167056,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167061,"byte_end":167068,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167499,"byte_end":167505,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167218,"byte_end":167261,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167266,"byte_end":167269,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167274,"byte_end":167285,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167290,"byte_end":167323,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167328,"byte_end":167394,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167399,"byte_end":167469,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167474,"byte_end":167481,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167920,"byte_end":167932,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167568,"byte_end":167624,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167629,"byte_end":167632,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167637,"byte_end":167648,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167653,"byte_end":167686,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167691,"byte_end":167766,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167771,"byte_end":167786,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167791,"byte_end":167849,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167854,"byte_end":167879,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167884,"byte_end":167890,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":167895,"byte_end":167902,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168366,"byte_end":168378,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168006,"byte_end":168062,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168067,"byte_end":168070,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168075,"byte_end":168086,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168091,"byte_end":168124,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168129,"byte_end":168204,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168209,"byte_end":168224,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168229,"byte_end":168291,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168296,"byte_end":168325,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168330,"byte_end":168336,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168341,"byte_end":168348,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168817,"byte_end":168828,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168452,"byte_end":168507,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168512,"byte_end":168515,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168520,"byte_end":168531,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168536,"byte_end":168569,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168574,"byte_end":168648,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168653,"byte_end":168668,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168673,"byte_end":168738,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168743,"byte_end":168776,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168781,"byte_end":168787,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168792,"byte_end":168799,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169209,"byte_end":169213,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168901,"byte_end":168924,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168929,"byte_end":168932,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":168937,"byte_end":168996,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169001,"byte_end":169004,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169009,"byte_end":169020,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169025,"byte_end":169058,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169063,"byte_end":169116,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169121,"byte_end":169179,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169184,"byte_end":169191,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169588,"byte_end":169594,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169264,"byte_end":169299,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169304,"byte_end":169307,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169312,"byte_end":169371,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169376,"byte_end":169379,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169384,"byte_end":169395,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169400,"byte_end":169433,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169438,"byte_end":169493,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169498,"byte_end":169558,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169563,"byte_end":169570,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169973,"byte_end":169979,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169647,"byte_end":169684,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169689,"byte_end":169692,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169697,"byte_end":169756,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169761,"byte_end":169764,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169769,"byte_end":169780,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169785,"byte_end":169818,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169823,"byte_end":169878,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169883,"byte_end":169943,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":169948,"byte_end":169955,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170382,"byte_end":170393,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170032,"byte_end":170075,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170080,"byte_end":170083,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170088,"byte_end":170150,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170155,"byte_end":170158,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170163,"byte_end":170174,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170179,"byte_end":170212,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170217,"byte_end":170277,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170282,"byte_end":170352,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170357,"byte_end":170364,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170848,"byte_end":170859,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170452,"byte_end":170495,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170500,"byte_end":170503,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170508,"byte_end":170574,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170579,"byte_end":170582,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170587,"byte_end":170598,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170603,"byte_end":170636,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170641,"byte_end":170701,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170706,"byte_end":170721,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170726,"byte_end":170787,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170792,"byte_end":170807,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170812,"byte_end":170818,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170823,"byte_end":170830,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171324,"byte_end":171334,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170918,"byte_end":170960,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170965,"byte_end":170968,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":170973,"byte_end":171043,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171048,"byte_end":171051,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171056,"byte_end":171067,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171072,"byte_end":171105,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171110,"byte_end":171169,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171174,"byte_end":171189,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171194,"byte_end":171258,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171263,"byte_end":171283,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171288,"byte_end":171294,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171299,"byte_end":171306,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172045,"byte_end":172058,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"pub const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171451,"byte_end":171537,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171542,"byte_end":171590,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171595,"byte_end":171598,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171603,"byte_end":171614,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171619,"byte_end":171662,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171667,"byte_end":171682,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171687,"byte_end":171721,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171726,"byte_end":171766,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171771,"byte_end":171801,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171806,"byte_end":171828,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171833,"byte_end":171839,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171844,"byte_end":171859,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171864,"byte_end":171898,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171903,"byte_end":171942,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171947,"byte_end":171977,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":171982,"byte_end":172004,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172009,"byte_end":172015,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172020,"byte_end":172027,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172560,"byte_end":172570,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"pub const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172224,"byte_end":172312,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172317,"byte_end":172340,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172345,"byte_end":172348,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172353,"byte_end":172364,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172369,"byte_end":172402,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172407,"byte_end":172422,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172427,"byte_end":172492,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172497,"byte_end":172519,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172524,"byte_end":172530,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172535,"byte_end":172542,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173364,"byte_end":173375,"line_start":473,"line_end":473,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"pub const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172776,"byte_end":172849,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172854,"byte_end":172857,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172862,"byte_end":172869,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172874,"byte_end":172921,"line_start":460,"line_end":460,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172926,"byte_end":172959,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":172964,"byte_end":173004,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173009,"byte_end":173065,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173070,"byte_end":173073,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173078,"byte_end":173118,"line_start":465,"line_end":465,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173123,"byte_end":173176,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173181,"byte_end":173184,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173189,"byte_end":173204,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173209,"byte_end":173273,"line_start":469,"line_end":469,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173278,"byte_end":173323,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173328,"byte_end":173334,"line_start":471,"line_end":471,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173339,"byte_end":173346,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174485,"byte_end":174496,"line_start":503,"line_end":503,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"pub const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173897,"byte_end":173970,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173975,"byte_end":173978,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173983,"byte_end":173990,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":173995,"byte_end":174042,"line_start":490,"line_end":490,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174047,"byte_end":174080,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174085,"byte_end":174125,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174130,"byte_end":174183,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174188,"byte_end":174191,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174196,"byte_end":174236,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174241,"byte_end":174297,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174302,"byte_end":174305,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174310,"byte_end":174325,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174330,"byte_end":174394,"line_start":499,"line_end":499,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174399,"byte_end":174444,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174449,"byte_end":174455,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":174460,"byte_end":174467,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175726,"byte_end":175740,"line_start":539,"line_end":539,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"pub const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175092,"byte_end":175153,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175158,"byte_end":175161,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175166,"byte_end":175173,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175178,"byte_end":175238,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175243,"byte_end":175276,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175281,"byte_end":175296,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175301,"byte_end":175360,"line_start":525,"line_end":525,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175365,"byte_end":175395,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175400,"byte_end":175406,"line_start":527,"line_end":527,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175411,"byte_end":175414,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175419,"byte_end":175434,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175439,"byte_end":175495,"line_start":530,"line_end":530,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175500,"byte_end":175530,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175535,"byte_end":175541,"line_start":532,"line_end":532,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175546,"byte_end":175549,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175554,"byte_end":175569,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175574,"byte_end":175641,"line_start":535,"line_end":535,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175646,"byte_end":175685,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175690,"byte_end":175696,"line_start":537,"line_end":537,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175701,"byte_end":175708,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176618,"byte_end":176632,"line_start":569,"line_end":569,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"pub const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":175984,"byte_end":176045,"line_start":549,"line_end":549,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176050,"byte_end":176053,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176058,"byte_end":176065,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176070,"byte_end":176130,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176135,"byte_end":176168,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176173,"byte_end":176188,"line_start":554,"line_end":554,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176193,"byte_end":176249,"line_start":555,"line_end":555,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176254,"byte_end":176284,"line_start":556,"line_end":556,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176289,"byte_end":176295,"line_start":557,"line_end":557,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176300,"byte_end":176303,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176308,"byte_end":176323,"line_start":559,"line_end":559,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176328,"byte_end":176387,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176392,"byte_end":176422,"line_start":561,"line_end":561,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176427,"byte_end":176433,"line_start":562,"line_end":562,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176438,"byte_end":176441,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176446,"byte_end":176461,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176466,"byte_end":176533,"line_start":565,"line_end":565,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176538,"byte_end":176577,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176582,"byte_end":176588,"line_start":567,"line_end":567,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":176593,"byte_end":176600,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177385,"byte_end":177397,"line_start":594,"line_end":594,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177024,"byte_end":177066,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177071,"byte_end":177074,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177079,"byte_end":177090,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177095,"byte_end":177136,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177141,"byte_end":177156,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177161,"byte_end":177223,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177228,"byte_end":177262,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177267,"byte_end":177273,"line_start":591,"line_end":591,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177278,"byte_end":177285,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177290,"byte_end":177367,"line_start":593,"line_end":593,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177839,"byte_end":177851,"line_start":608,"line_end":608,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177471,"byte_end":177513,"line_start":598,"line_end":598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177518,"byte_end":177521,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177526,"byte_end":177537,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177542,"byte_end":177583,"line_start":601,"line_end":601,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177588,"byte_end":177603,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177608,"byte_end":177676,"line_start":603,"line_end":603,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177681,"byte_end":177716,"line_start":604,"line_end":604,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177721,"byte_end":177727,"line_start":605,"line_end":605,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177732,"byte_end":177739,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177744,"byte_end":177821,"line_start":607,"line_end":607,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178548,"byte_end":178560,"line_start":624,"line_end":624,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"pub const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177925,"byte_end":177983,"line_start":612,"line_end":612,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177988,"byte_end":177991,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177996,"byte_end":178007,"line_start":614,"line_end":614,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178012,"byte_end":178045,"line_start":615,"line_end":615,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178050,"byte_end":178065,"line_start":616,"line_end":616,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178070,"byte_end":178129,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178134,"byte_end":178177,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178182,"byte_end":178188,"line_start":619,"line_end":619,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178193,"byte_end":178313,"line_start":620,"line_end":620,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178318,"byte_end":178436,"line_start":621,"line_end":621,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178441,"byte_end":178448,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178453,"byte_end":178530,"line_start":623,"line_end":623,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179219,"byte_end":179232,"line_start":640,"line_end":640,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"pub const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178704,"byte_end":178738,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178743,"byte_end":178746,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178751,"byte_end":178762,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178767,"byte_end":178800,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178805,"byte_end":178827,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178832,"byte_end":178847,"line_start":633,"line_end":633,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178852,"byte_end":178922,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178927,"byte_end":178970,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178975,"byte_end":178981,"line_start":636,"line_end":636,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":178986,"byte_end":179107,"line_start":637,"line_end":637,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179112,"byte_end":179119,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179124,"byte_end":179201,"line_start":639,"line_end":639,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179936,"byte_end":179947,"line_start":656,"line_end":656,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"pub const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179381,"byte_end":179414,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179419,"byte_end":179422,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179427,"byte_end":179438,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179443,"byte_end":179476,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179481,"byte_end":179496,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179501,"byte_end":179556,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179561,"byte_end":179604,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179609,"byte_end":179615,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179620,"byte_end":179713,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179718,"byte_end":179824,"line_start":653,"line_end":653,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179829,"byte_end":179836,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":179841,"byte_end":179918,"line_start":655,"line_end":655,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180574,"byte_end":180586,"line_start":671,"line_end":671,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180087,"byte_end":180114,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180119,"byte_end":180122,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180127,"byte_end":180138,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180143,"byte_end":180176,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180181,"byte_end":180196,"line_start":664,"line_end":664,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180201,"byte_end":180272,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180277,"byte_end":180335,"line_start":666,"line_end":666,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180340,"byte_end":180346,"line_start":667,"line_end":667,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180351,"byte_end":180462,"line_start":668,"line_end":668,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180467,"byte_end":180474,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180479,"byte_end":180556,"line_start":670,"line_end":670,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181263,"byte_end":181277,"line_start":688,"line_end":688,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180757,"byte_end":180797,"line_start":677,"line_end":677,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180802,"byte_end":180805,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180810,"byte_end":180821,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180826,"byte_end":180859,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180864,"byte_end":180879,"line_start":681,"line_end":681,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180884,"byte_end":180957,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":180962,"byte_end":181020,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181025,"byte_end":181031,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181036,"byte_end":181151,"line_start":685,"line_end":685,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181156,"byte_end":181163,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181168,"byte_end":181245,"line_start":687,"line_end":687,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181962,"byte_end":181976,"line_start":705,"line_end":705,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181454,"byte_end":181496,"line_start":694,"line_end":694,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181501,"byte_end":181504,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181509,"byte_end":181520,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181525,"byte_end":181558,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181563,"byte_end":181578,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181583,"byte_end":181656,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181661,"byte_end":181719,"line_start":700,"line_end":700,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181724,"byte_end":181730,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181735,"byte_end":181850,"line_start":702,"line_end":702,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181855,"byte_end":181862,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":181867,"byte_end":181944,"line_start":704,"line_end":704,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182679,"byte_end":182698,"line_start":722,"line_end":722,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182153,"byte_end":182200,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182205,"byte_end":182208,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182213,"byte_end":182224,"line_start":713,"line_end":713,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182229,"byte_end":182262,"line_start":714,"line_end":714,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182267,"byte_end":182282,"line_start":715,"line_end":715,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182287,"byte_end":182365,"line_start":716,"line_end":716,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182370,"byte_end":182420,"line_start":717,"line_end":717,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182425,"byte_end":182431,"line_start":718,"line_end":718,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182436,"byte_end":182567,"line_start":719,"line_end":719,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182572,"byte_end":182579,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182584,"byte_end":182661,"line_start":721,"line_end":721,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183456,"byte_end":183475,"line_start":742,"line_end":742,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182914,"byte_end":182961,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182966,"byte_end":182969,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182974,"byte_end":182985,"line_start":733,"line_end":733,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":182990,"byte_end":183023,"line_start":734,"line_end":734,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183028,"byte_end":183043,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183048,"byte_end":183130,"line_start":736,"line_end":736,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183135,"byte_end":183189,"line_start":737,"line_end":737,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183194,"byte_end":183200,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183205,"byte_end":183344,"line_start":739,"line_end":739,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183349,"byte_end":183356,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183361,"byte_end":183438,"line_start":741,"line_end":741,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":184245,"byte_end":184263,"line_start":762,"line_end":762,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183691,"byte_end":183737,"line_start":751,"line_end":751,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183742,"byte_end":183745,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183750,"byte_end":183761,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183766,"byte_end":183799,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183804,"byte_end":183819,"line_start":755,"line_end":755,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183824,"byte_end":183909,"line_start":756,"line_end":756,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183914,"byte_end":183972,"line_start":757,"line_end":757,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183977,"byte_end":183983,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":183988,"byte_end":184133,"line_start":759,"line_end":759,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":184138,"byte_end":184145,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":184150,"byte_end":184227,"line_start":761,"line_end":761,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191163,"byte_end":191167,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":190806,"byte_end":190867,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":190868,"byte_end":190871,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":190872,"byte_end":190969,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":190970,"byte_end":191004,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191005,"byte_end":191008,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191009,"byte_end":191090,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192053,"byte_end":192061,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191866,"byte_end":191911,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191916,"byte_end":191919,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191924,"byte_end":191935,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191940,"byte_end":191977,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191982,"byte_end":192026,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192031,"byte_end":192038,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192590,"byte_end":192616,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"pub const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192513,"byte_end":192553,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193370,"byte_end":193378,"line_start":106,"line_end":106,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"pub const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192875,"byte_end":192940,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192945,"byte_end":192948,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192953,"byte_end":192964,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192969,"byte_end":192990,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":192995,"byte_end":193040,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193045,"byte_end":193052,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193057,"byte_end":193060,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193065,"byte_end":193076,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193081,"byte_end":193102,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193107,"byte_end":193180,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193185,"byte_end":193260,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193265,"byte_end":193340,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193345,"byte_end":193352,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194330,"byte_end":194344,"line_start":127,"line_end":127,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"pub const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193686,"byte_end":193764,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193769,"byte_end":193772,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193777,"byte_end":193788,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193793,"byte_end":193814,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193819,"byte_end":193873,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193878,"byte_end":193885,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193890,"byte_end":193893,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193898,"byte_end":193909,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193914,"byte_end":193935,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":193940,"byte_end":194022,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194027,"byte_end":194111,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194116,"byte_end":194200,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194205,"byte_end":194300,"line_start":125,"line_end":125,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194305,"byte_end":194312,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195506,"byte_end":195520,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"pub const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194854,"byte_end":194932,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194937,"byte_end":194940,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194945,"byte_end":194956,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194961,"byte_end":194982,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":194987,"byte_end":195041,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195046,"byte_end":195053,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195058,"byte_end":195061,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195066,"byte_end":195077,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195082,"byte_end":195103,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195108,"byte_end":195190,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195195,"byte_end":195279,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195284,"byte_end":195368,"line_start":156,"line_end":156,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195373,"byte_end":195476,"line_start":157,"line_end":157,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":195481,"byte_end":195488,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196676,"byte_end":196689,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"pub const fn from_hms_nano(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196023,"byte_end":196100,"line_start":177,"line_end":177,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196105,"byte_end":196108,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196113,"byte_end":196124,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196129,"byte_end":196150,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196155,"byte_end":196208,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196213,"byte_end":196220,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196225,"byte_end":196228,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196233,"byte_end":196244,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196249,"byte_end":196270,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196275,"byte_end":196356,"line_start":186,"line_end":186,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196361,"byte_end":196444,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196449,"byte_end":196532,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196537,"byte_end":196646,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":196651,"byte_end":196658,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197449,"byte_end":197455,"line_start":215,"line_end":215,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197202,"byte_end":197245,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197250,"byte_end":197253,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197258,"byte_end":197269,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197274,"byte_end":197303,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197308,"byte_end":197359,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197364,"byte_end":197419,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197424,"byte_end":197431,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197821,"byte_end":197833,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197537,"byte_end":197593,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197598,"byte_end":197601,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197606,"byte_end":197617,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197622,"byte_end":197651,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197656,"byte_end":197716,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197721,"byte_end":197791,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":197796,"byte_end":197803,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198343,"byte_end":198355,"line_start":245,"line_end":245,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198017,"byte_end":198073,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198078,"byte_end":198081,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198086,"byte_end":198097,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198102,"byte_end":198131,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198136,"byte_end":198196,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198201,"byte_end":198216,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198221,"byte_end":198268,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198273,"byte_end":198302,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198307,"byte_end":198313,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198318,"byte_end":198325,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198798,"byte_end":198809,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198467,"byte_end":198522,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198527,"byte_end":198530,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198535,"byte_end":198546,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198551,"byte_end":198580,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198585,"byte_end":198644,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198649,"byte_end":198664,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198669,"byte_end":198719,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198724,"byte_end":198757,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198762,"byte_end":198768,"line_start":257,"line_end":257,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198773,"byte_end":198780,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199190,"byte_end":199194,"line_start":272,"line_end":272,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198913,"byte_end":198936,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198941,"byte_end":198944,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":198949,"byte_end":199008,"line_start":265,"line_end":265,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199013,"byte_end":199016,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199021,"byte_end":199032,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199037,"byte_end":199066,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199071,"byte_end":199112,"line_start":269,"line_end":269,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199117,"byte_end":199160,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199165,"byte_end":199172,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199531,"byte_end":199537,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199238,"byte_end":199273,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199278,"byte_end":199281,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199286,"byte_end":199345,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199350,"byte_end":199353,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199358,"byte_end":199369,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199374,"byte_end":199403,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199408,"byte_end":199451,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199456,"byte_end":199501,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199506,"byte_end":199513,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199878,"byte_end":199884,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199583,"byte_end":199620,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199625,"byte_end":199628,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199633,"byte_end":199692,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199697,"byte_end":199700,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199705,"byte_end":199716,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199721,"byte_end":199750,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199755,"byte_end":199798,"line_start":295,"line_end":295,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199803,"byte_end":199848,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199853,"byte_end":199860,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200246,"byte_end":200257,"line_start":311,"line_end":311,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199930,"byte_end":199973,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199978,"byte_end":199981,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":199986,"byte_end":200048,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200053,"byte_end":200056,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200061,"byte_end":200072,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200077,"byte_end":200106,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200111,"byte_end":200156,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200161,"byte_end":200216,"line_start":309,"line_end":309,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200221,"byte_end":200228,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200655,"byte_end":200666,"line_start":324,"line_end":324,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200327,"byte_end":200370,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200375,"byte_end":200378,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200383,"byte_end":200449,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200454,"byte_end":200457,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200462,"byte_end":200473,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200478,"byte_end":200507,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200512,"byte_end":200557,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200562,"byte_end":200625,"line_start":322,"line_end":322,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200630,"byte_end":200637,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":201062,"byte_end":201072,"line_start":337,"line_end":337,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200725,"byte_end":200767,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200772,"byte_end":200775,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200780,"byte_end":200850,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200855,"byte_end":200858,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200863,"byte_end":200874,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200879,"byte_end":200908,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200913,"byte_end":200957,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":200962,"byte_end":201032,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":201037,"byte_end":201044,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206164,"byte_end":206176,"line_start":464,"line_end":464,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"pub const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205751,"byte_end":205778,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205783,"byte_end":205786,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205791,"byte_end":205802,"line_start":455,"line_end":455,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205807,"byte_end":205836,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205841,"byte_end":205856,"line_start":457,"line_end":457,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205861,"byte_end":205913,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205918,"byte_end":205957,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205962,"byte_end":205968,"line_start":460,"line_end":460,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":205973,"byte_end":206065,"line_start":461,"line_end":461,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206070,"byte_end":206077,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206082,"byte_end":206146,"line_start":463,"line_end":463,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206879,"byte_end":206893,"line_start":485,"line_end":485,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"pub const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206447,"byte_end":206487,"line_start":474,"line_end":474,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206492,"byte_end":206495,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206500,"byte_end":206511,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206516,"byte_end":206545,"line_start":477,"line_end":477,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206550,"byte_end":206565,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206570,"byte_end":206624,"line_start":479,"line_end":479,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206629,"byte_end":206668,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206673,"byte_end":206679,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206684,"byte_end":206780,"line_start":482,"line_end":482,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206785,"byte_end":206792,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":206797,"byte_end":206861,"line_start":484,"line_end":484,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207602,"byte_end":207616,"line_start":506,"line_end":506,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"pub const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207168,"byte_end":207210,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207215,"byte_end":207218,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207223,"byte_end":207234,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207239,"byte_end":207268,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207273,"byte_end":207288,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207293,"byte_end":207347,"line_start":500,"line_end":500,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207352,"byte_end":207391,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207396,"byte_end":207402,"line_start":502,"line_end":502,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207407,"byte_end":207503,"line_start":503,"line_end":503,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207508,"byte_end":207515,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207520,"byte_end":207584,"line_start":505,"line_end":505,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208343,"byte_end":208362,"line_start":527,"line_end":527,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"pub const fn replace_millisecond(Self, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207891,"byte_end":207938,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207943,"byte_end":207946,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207951,"byte_end":207962,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":207967,"byte_end":207996,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208001,"byte_end":208016,"line_start":520,"line_end":520,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208021,"byte_end":208080,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208085,"byte_end":208116,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208121,"byte_end":208127,"line_start":523,"line_end":523,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208132,"byte_end":208244,"line_start":524,"line_end":524,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208249,"byte_end":208256,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208261,"byte_end":208325,"line_start":526,"line_end":526,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209160,"byte_end":209179,"line_start":551,"line_end":551,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"pub const fn replace_microsecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208692,"byte_end":208739,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208744,"byte_end":208747,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208752,"byte_end":208763,"line_start":542,"line_end":542,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208768,"byte_end":208797,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208802,"byte_end":208817,"line_start":544,"line_end":544,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208822,"byte_end":208885,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208890,"byte_end":208925,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208930,"byte_end":208936,"line_start":547,"line_end":547,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":208941,"byte_end":209061,"line_start":548,"line_end":548,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209066,"byte_end":209073,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209078,"byte_end":209142,"line_start":550,"line_end":550,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209981,"byte_end":209999,"line_start":575,"line_end":575,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"pub const fn replace_nanosecond(Self, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209501,"byte_end":209547,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209552,"byte_end":209555,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209560,"byte_end":209571,"line_start":566,"line_end":566,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209576,"byte_end":209605,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209610,"byte_end":209625,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209630,"byte_end":209696,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209701,"byte_end":209740,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209745,"byte_end":209751,"line_start":571,"line_end":571,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209756,"byte_end":209882,"line_start":572,"line_end":572,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209887,"byte_end":209894,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":209899,"byte_end":209963,"line_start":574,"line_end":574,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216760,"byte_end":216769,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216466,"byte_end":216489,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216490,"byte_end":216493,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216494,"byte_end":216591,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216592,"byte_end":216629,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217181,"byte_end":217184,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217001,"byte_end":217031,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217036,"byte_end":217039,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217044,"byte_end":217055,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217060,"byte_end":217104,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217109,"byte_end":217154,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217159,"byte_end":217166,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217510,"byte_end":217530,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"pub const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217263,"byte_end":217359,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217364,"byte_end":217459,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217464,"byte_end":217473,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218190,"byte_end":218198,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"pub const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217675,"byte_end":217767,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217772,"byte_end":217785,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217790,"byte_end":217793,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217798,"byte_end":217892,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217897,"byte_end":217926,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217931,"byte_end":217934,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217939,"byte_end":217950,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217955,"byte_end":217981,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":217986,"byte_end":218052,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218057,"byte_end":218125,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218130,"byte_end":218160,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218165,"byte_end":218172,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219156,"byte_end":219174,"line_start":97,"line_end":97,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"pub const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218875,"byte_end":218957,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218962,"byte_end":218965,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218970,"byte_end":218981,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":218986,"byte_end":219012,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219017,"byte_end":219091,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219096,"byte_end":219126,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219131,"byte_end":219138,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219922,"byte_end":219928,"line_start":117,"line_end":117,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"pub const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219516,"byte_end":219610,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219615,"byte_end":219711,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219716,"byte_end":219719,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219724,"byte_end":219735,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219740,"byte_end":219771,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219776,"byte_end":219830,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219835,"byte_end":219892,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":219897,"byte_end":219904,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220358,"byte_end":220369,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"pub const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220013,"byte_end":220103,"line_start":121,"line_end":121,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220108,"byte_end":220155,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220160,"byte_end":220163,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220168,"byte_end":220179,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220184,"byte_end":220215,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220220,"byte_end":220271,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220276,"byte_end":220328,"line_start":127,"line_end":127,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220333,"byte_end":220340,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220767,"byte_end":220780,"line_start":141,"line_end":141,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220414,"byte_end":220506,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220511,"byte_end":220558,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220563,"byte_end":220566,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220571,"byte_end":220582,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220587,"byte_end":220618,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220623,"byte_end":220677,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220682,"byte_end":220737,"line_start":139,"line_end":139,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220742,"byte_end":220749,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221227,"byte_end":221244,"line_start":153,"line_end":153,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"pub const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220860,"byte_end":220947,"line_start":145,"line_end":145,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":220952,"byte_end":221012,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221017,"byte_end":221020,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221025,"byte_end":221036,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221041,"byte_end":221072,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221077,"byte_end":221134,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221139,"byte_end":221197,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221202,"byte_end":221209,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221780,"byte_end":221793,"line_start":167,"line_end":167,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221291,"byte_end":221383,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221388,"byte_end":221435,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221440,"byte_end":221443,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221448,"byte_end":221459,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221464,"byte_end":221495,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221500,"byte_end":221556,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221561,"byte_end":221618,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221623,"byte_end":221630,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222276,"byte_end":222295,"line_start":179,"line_end":179,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"pub const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221903,"byte_end":221992,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":221997,"byte_end":222057,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222062,"byte_end":222065,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222070,"byte_end":222081,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222086,"byte_end":222117,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222122,"byte_end":222181,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222186,"byte_end":222246,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222251,"byte_end":222258,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222661,"byte_end":222667,"line_start":194,"line_end":194,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"pub const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222392,"byte_end":222431,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222436,"byte_end":222439,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222444,"byte_end":222447,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222452,"byte_end":222463,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222468,"byte_end":222499,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222504,"byte_end":222545,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222550,"byte_end":222591,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222596,"byte_end":222631,"line_start":192,"line_end":192,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222636,"byte_end":222643,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223050,"byte_end":223061,"line_start":206,"line_end":206,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222761,"byte_end":222813,"line_start":198,"line_end":198,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222818,"byte_end":222821,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222826,"byte_end":222837,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222842,"byte_end":222873,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222878,"byte_end":222923,"line_start":202,"line_end":202,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222928,"byte_end":222974,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":222979,"byte_end":223020,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223025,"byte_end":223032,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223441,"byte_end":223452,"line_start":218,"line_end":218,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223152,"byte_end":223204,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223209,"byte_end":223212,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223217,"byte_end":223228,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223233,"byte_end":223264,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223269,"byte_end":223315,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223320,"byte_end":223365,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223370,"byte_end":223411,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":223416,"byte_end":223423,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":226904,"byte_end":226926,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227421,"byte_end":227439,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"pub const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227227,"byte_end":227283,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227284,"byte_end":227287,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227288,"byte_end":227299,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227300,"byte_end":227330,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227331,"byte_end":227399,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227400,"byte_end":227407,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228138,"byte_end":228150,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"pub const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227713,"byte_end":227802,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227803,"byte_end":227896,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227897,"byte_end":227900,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227901,"byte_end":227912,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227913,"byte_end":227948,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227949,"byte_end":227982,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":227983,"byte_end":228015,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228016,"byte_end":228048,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228049,"byte_end":228082,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228083,"byte_end":228116,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228117,"byte_end":228124,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228623,"byte_end":228635,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"pub const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228231,"byte_end":228283,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228284,"byte_end":228287,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228288,"byte_end":228344,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228345,"byte_end":228348,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228349,"byte_end":228360,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228361,"byte_end":228396,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228397,"byte_end":228437,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228438,"byte_end":228478,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228479,"byte_end":228519,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228520,"byte_end":228560,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228561,"byte_end":228601,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228602,"byte_end":228609,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228966,"byte_end":228979,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"pub const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228706,"byte_end":228750,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228751,"byte_end":228754,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228755,"byte_end":228809,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228810,"byte_end":228813,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228814,"byte_end":228825,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228826,"byte_end":228862,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228863,"byte_end":228903,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228904,"byte_end":228944,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\util.rs","byte_start":228945,"byte_end":228952,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229938,"byte_end":229944,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229886,"byte_end":229933,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230002,"byte_end":230009,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229950,"byte_end":229997,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230067,"byte_end":230076,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230015,"byte_end":230062,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230134,"byte_end":230142,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230082,"byte_end":230129,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230200,"byte_end":230206,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230148,"byte_end":230195,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230264,"byte_end":230272,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230212,"byte_end":230259,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230330,"byte_end":230336,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230278,"byte_end":230325,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229872,"byte_end":229879,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"pub enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229625,"byte_end":229646,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229647,"byte_end":229650,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229651,"byte_end":229746,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":229747,"byte_end":229811,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230538,"byte_end":230546,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230360,"byte_end":230389,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230394,"byte_end":230397,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230402,"byte_end":230413,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230418,"byte_end":230442,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230447,"byte_end":230508,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230513,"byte_end":230520,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231001,"byte_end":231005,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230831,"byte_end":230856,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230861,"byte_end":230864,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230869,"byte_end":230880,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230885,"byte_end":230909,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230914,"byte_end":230971,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230976,"byte_end":230983,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231526,"byte_end":231544,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231290,"byte_end":231341,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231346,"byte_end":231349,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231354,"byte_end":231365,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231370,"byte_end":231394,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231399,"byte_end":231455,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231460,"byte_end":231467,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231808,"byte_end":231826,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231613,"byte_end":231664,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231669,"byte_end":231672,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231677,"byte_end":231688,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231693,"byte_end":231717,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231722,"byte_end":231778,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231783,"byte_end":231790,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232096,"byte_end":232119,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"pub const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231895,"byte_end":231947,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231952,"byte_end":231955,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231960,"byte_end":231971,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":231976,"byte_end":232000,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232005,"byte_end":232066,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232071,"byte_end":232078,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232364,"byte_end":232387,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"pub const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232163,"byte_end":232215,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232220,"byte_end":232223,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232228,"byte_end":232239,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232244,"byte_end":232268,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232273,"byte_end":232334,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232339,"byte_end":232346,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10942,"byte_end":10948,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10850,"byte_end":10932,"line_start":329,"line_end":329,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":90993,"byte_end":91007,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91184,"byte_end":91198,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91240,"byte_end":91245,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91365,"byte_end":91379,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101742,"byte_end":101749,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104666,"byte_end":104673,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104773,"byte_end":104783,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104866,"byte_end":104873,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105409,"byte_end":105416,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105560,"byte_end":105570,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105715,"byte_end":105722,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106052,"byte_end":106062,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106217,"byte_end":106224,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106465,"byte_end":106472,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106802,"byte_end":106812,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106967,"byte_end":106974,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107223,"byte_end":107230,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107338,"byte_end":107348,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107458,"byte_end":107465,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107604,"byte_end":107614,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107749,"byte_end":107756,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107850,"byte_end":107857,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108500,"byte_end":108505,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":110484,"byte_end":110489,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":111013,"byte_end":111018,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":111743,"byte_end":111748,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113563,"byte_end":113577,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140545,"byte_end":140559,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153156,"byte_end":153170,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153390,"byte_end":153404,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153523,"byte_end":153537,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153650,"byte_end":153664,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153783,"byte_end":153797,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154056,"byte_end":154070,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154388,"byte_end":154402,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154714,"byte_end":154728,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154907,"byte_end":154917,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155367,"byte_end":155377,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155638,"byte_end":155652,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155829,"byte_end":155839,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156032,"byte_end":156046,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156196,"byte_end":156206,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156367,"byte_end":156381,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156567,"byte_end":156577,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156766,"byte_end":156780,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":157152,"byte_end":157162,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158296,"byte_end":158313,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177000,"byte_end":177017,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":184597,"byte_end":184614,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":187898,"byte_end":187915,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188119,"byte_end":188136,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188344,"byte_end":188361,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188899,"byte_end":188916,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":189124,"byte_end":189141,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":189681,"byte_end":189698,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191542,"byte_end":191546,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191855,"byte_end":191859,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":211903,"byte_end":211907,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":212931,"byte_end":212935,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":213401,"byte_end":213405,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":213942,"byte_end":213946,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":214419,"byte_end":214423,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":214957,"byte_end":214961,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216985,"byte_end":216994,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":226389,"byte_end":226398,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":226745,"byte_end":226754,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230346,"byte_end":230353,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232642,"byte_end":232649,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":233025,"byte_end":233032,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9676,"byte_end":9681,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":314}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":9691,"byte_end":9694,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":403}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\lib.rs","byte_start":10450,"byte_end":10454,"line_start":314,"line_end":314,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":954}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12587,"byte_end":12591,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":12823,"byte_end":12827,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":40155,"byte_end":40159,"line_start":810,"line_end":810,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45139,"byte_end":45143,"line_start":960,"line_end":960,"column_start":23,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":45823,"byte_end":45827,"line_start":985,"line_end":985,"column_start":24,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46036,"byte_end":46040,"line_start":994,"line_end":994,"column_start":27,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46353,"byte_end":46357,"line_start":1005,"line_end":1005,"column_start":24,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46573,"byte_end":46577,"line_start":1014,"line_end":1014,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\date.rs","byte_start":46887,"byte_end":46891,"line_start":1025,"line_end":1025,"column_start":14,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1029},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":47734,"byte_end":47741,"line_start":23,"line_end":23,"column_start":18,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48453,"byte_end":48461,"line_start":45,"line_end":45,"column_start":21,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":48696,"byte_end":48704,"line_start":54,"line_end":54,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":74197,"byte_end":74205,"line_start":747,"line_end":747,"column_start":23,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75169,"byte_end":75177,"line_start":781,"line_end":781,"column_start":31,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75545,"byte_end":75556,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":75996,"byte_end":76004,"line_start":812,"line_end":812,"column_start":14,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76197,"byte_end":76205,"line_start":821,"line_end":821,"column_start":27,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76456,"byte_end":76467,"line_start":830,"line_end":830,"column_start":24,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76654,"byte_end":76665,"line_start":840,"line_end":840,"column_start":30,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3156}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":76924,"byte_end":76932,"line_start":849,"line_end":849,"column_start":14,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3152}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77079,"byte_end":77087,"line_start":857,"line_end":857,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77285,"byte_end":77293,"line_start":866,"line_end":866,"column_start":27,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77526,"byte_end":77537,"line_start":875,"line_end":875,"column_start":24,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":77841,"byte_end":77852,"line_start":887,"line_end":887,"column_start":30,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3160}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79108,"byte_end":79116,"line_start":930,"line_end":930,"column_start":19,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79407,"byte_end":79415,"line_start":946,"line_end":946,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79773,"byte_end":79781,"line_start":964,"line_end":964,"column_start":19,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":79936,"byte_end":79944,"line_start":972,"line_end":972,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80161,"byte_end":80169,"line_start":982,"line_end":982,"column_start":14,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80330,"byte_end":80338,"line_start":990,"line_end":990,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80500,"byte_end":80511,"line_start":998,"line_end":998,"column_start":24,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80679,"byte_end":80687,"line_start":1006,"line_end":1006,"column_start":33,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80816,"byte_end":80827,"line_start":1012,"line_end":1012,"column_start":30,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":80935,"byte_end":80943,"line_start":1018,"line_end":1018,"column_start":34,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81321,"byte_end":81332,"line_start":1032,"line_end":1032,"column_start":31,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":48976},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81474,"byte_end":81482,"line_start":1038,"line_end":1038,"column_start":14,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":7749}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\duration.rs","byte_start":81631,"byte_end":81639,"line_start":1044,"line_end":1044,"column_start":28,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":7749}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":86846,"byte_end":86860,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87292,"byte_end":87306,"line_start":39,"line_end":39,"column_start":23,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87685,"byte_end":87690,"line_start":55,"line_end":55,"column_start":38,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":87820,"byte_end":87834,"line_start":61,"line_end":61,"column_start":32,"column_end":46},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\component_range.rs","byte_start":88759,"byte_end":88773,"line_start":93,"line_end":93,"column_start":28,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1194},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89082,"byte_end":89097,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89295,"byte_end":89310,"line_start":20,"line_end":20,"column_start":28,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89353,"byte_end":89358,"line_start":22,"line_end":22,"column_start":39,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\conversion_range.rs","byte_start":89480,"byte_end":89495,"line_start":28,"line_end":28,"column_start":32,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90065,"byte_end":90081,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90275,"byte_end":90291,"line_start":18,"line_end":18,"column_start":28,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1228},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90335,"byte_end":90340,"line_start":20,"line_end":20,"column_start":40,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\different_variant.rs","byte_start":90464,"byte_end":90480,"line_start":26,"line_end":26,"column_start":32,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":90993,"byte_end":91007,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91184,"byte_end":91198,"line_start":18,"line_end":18,"column_start":28,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1241},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91240,"byte_end":91245,"line_start":20,"line_end":20,"column_start":38,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\invalid_variant.rs","byte_start":91365,"byte_end":91379,"line_start":26,"line_end":26,"column_start":32,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":84083,"byte_end":84088,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\error\\mod.rs","byte_start":85099,"byte_end":85104,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":93715,"byte_end":93721,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":411},"to":{"krate":0,"index":415}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\ext.rs","byte_start":97373,"byte_end":97379,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":411},"to":{"krate":0,"index":442}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":101742,"byte_end":101749,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104666,"byte_end":104673,"line_start":118,"line_end":118,"column_start":27,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104773,"byte_end":104783,"line_start":124,"line_end":124,"column_start":24,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":104866,"byte_end":104873,"line_start":130,"line_end":130,"column_start":14,"column_end":21},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105409,"byte_end":105416,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105560,"byte_end":105570,"line_start":153,"line_end":153,"column_start":23,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":105715,"byte_end":105722,"line_start":161,"line_end":161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106052,"byte_end":106062,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106217,"byte_end":106224,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106465,"byte_end":106472,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106802,"byte_end":106812,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":106967,"byte_end":106974,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107223,"byte_end":107230,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107338,"byte_end":107348,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"kind":{"Impl":{"id":114}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107458,"byte_end":107465,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107604,"byte_end":107614,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":1,"index":11425},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107749,"byte_end":107756,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\instant.rs","byte_start":107850,"byte_end":107857,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2654}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":108500,"byte_end":108505,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":110484,"byte_end":110489,"line_start":103,"line_end":103,"column_start":23,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":111013,"byte_end":111018,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\month.rs","byte_start":111743,"byte_end":111748,"line_start":150,"line_end":150,"column_start":22,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1303},"to":{"krate":2,"index":2970}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":113563,"byte_end":113577,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":140545,"byte_end":140559,"line_start":807,"line_end":807,"column_start":6,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153156,"byte_end":153170,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153390,"byte_end":153404,"line_start":1156,"line_end":1156,"column_start":20,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153523,"byte_end":153537,"line_start":1162,"line_end":1162,"column_start":21,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153650,"byte_end":153664,"line_start":1168,"line_end":1168,"column_start":14,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2745}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":153783,"byte_end":153797,"line_start":1174,"line_end":1174,"column_start":15,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":9892}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154056,"byte_end":154070,"line_start":1182,"line_end":1182,"column_start":20,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154388,"byte_end":154402,"line_start":1197,"line_end":1197,"column_start":20,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154714,"byte_end":154728,"line_start":1212,"line_end":1212,"column_start":14,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":154907,"byte_end":154917,"line_start":1221,"line_end":1221,"column_start":24,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155367,"byte_end":155377,"line_start":1239,"line_end":1239,"column_start":24,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155638,"byte_end":155652,"line_start":1250,"line_end":1250,"column_start":26,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":155829,"byte_end":155839,"line_start":1259,"line_end":1259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156032,"byte_end":156046,"line_start":1268,"line_end":1268,"column_start":32,"column_end":46},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156196,"byte_end":156206,"line_start":1275,"line_end":1275,"column_start":36,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156367,"byte_end":156381,"line_start":1282,"line_end":1282,"column_start":33,"column_end":47},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156567,"byte_end":156577,"line_start":1289,"line_end":1289,"column_start":37,"column_end":47},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2755}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":156766,"byte_end":156780,"line_start":1296,"line_end":1296,"column_start":27,"column_end":41},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1354},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\offset_date_time.rs","byte_start":157152,"byte_end":157162,"line_start":1307,"line_end":1307,"column_start":31,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":11445},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":158296,"byte_end":158313,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":177000,"byte_end":177017,"line_start":583,"line_end":583,"column_start":6,"column_end":23},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":184597,"byte_end":184614,"line_start":772,"line_end":772,"column_start":6,"column_end":23},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":187898,"byte_end":187915,"line_start":861,"line_end":861,"column_start":23,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188119,"byte_end":188136,"line_start":869,"line_end":869,"column_start":24,"column_end":41},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188344,"byte_end":188361,"line_start":878,"line_end":878,"column_start":27,"column_end":44},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":188899,"byte_end":188916,"line_start":899,"line_end":899,"column_start":24,"column_end":41},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":189124,"byte_end":189141,"line_start":908,"line_end":908,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\primitive_date_time.rs","byte_start":189681,"byte_end":189698,"line_start":929,"line_end":929,"column_start":14,"column_end":31},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191542,"byte_end":191546,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":191855,"byte_end":191859,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":211903,"byte_end":211907,"line_start":634,"line_end":634,"column_start":23,"column_end":27},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":212931,"byte_end":212935,"line_start":661,"line_end":661,"column_start":24,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":213401,"byte_end":213405,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":213942,"byte_end":213946,"line_start":693,"line_end":693,"column_start":24,"column_end":28},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":214419,"byte_end":214423,"line_start":708,"line_end":708,"column_start":27,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\time.rs","byte_start":214957,"byte_end":214961,"line_start":725,"line_end":725,"column_start":14,"column_end":18},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":216985,"byte_end":216994,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":226389,"byte_end":226398,"line_start":301,"line_end":301,"column_start":23,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\utc_offset.rs","byte_start":226745,"byte_end":226754,"line_start":315,"line_end":315,"column_start":14,"column_end":23},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":3152}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":230346,"byte_end":230353,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":232642,"byte_end":232649,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.9\\src\\weekday.rs","byte_start":233025,"byte_end":233032,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":12324}}]}