{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rusttype","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"has-atomics\"","--cfg","feature=\"std\"","-C","metadata=0536e412183171f8","-C","extra-filename=-0536e412183171f8","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps","--extern","ab_glyph_rasterizer=d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps\\libab_glyph_rasterizer-f4a3dbf13615e983.rmeta","--extern","owned_ttf_parser=d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps\\libowned_ttf_parser-d9ed3edf35415f12.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps\\librusttype-0536e412183171f8.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[10282981235784928582,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","num":16,"id":{"name":"owned_ttf_parser","disambiguator":[1279515786859058831,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","num":17,"id":{"name":"ttf_parser","disambiguator":[1810860758784295364,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","num":18,"id":{"name":"ab_glyph_rasterizer","disambiguator":[12268333037992395164,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":20042,"line_start":1,"line_end":587,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5266,"byte_end":5271,"line_start":110,"line_end":110,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5273,"byte_end":5279,"line_start":110,"line_end":110,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5281,"byte_end":5286,"line_start":110,"line_end":110,"column_start":42,"column_end":47},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5288,"byte_end":5292,"line_start":110,"line_end":110,"column_start":49,"column_end":53},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5294,"byte_end":5300,"line_start":110,"line_end":110,"column_start":55,"column_end":61},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5317,"byte_end":5318,"line_start":111,"line_end":111,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Font","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1713},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5455,"byte_end":5469,"line_start":118,"line_end":118,"column_start":27,"column_end":41},"alias_span":null,"name":"OutlineBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":20042,"line_start":1,"line_end":587,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":63},{"krate":0,"index":123},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":222},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":225},{"krate":0,"index":239},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":241},{"krate":0,"index":255},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":266},{"krate":0,"index":498},{"krate":0,"index":507},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":280}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"/ RustType is a pure Rust alternative to libraries like FreeType.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The current capabilities of RustType:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":72,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":114,"byte_end":117,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * Reading TrueType formatted fonts and font collections. This includes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":118,"byte_end":192,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/   `*.ttf` as well as a subset of `*.otf` font files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":193,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/ * Retrieving glyph shapes and commonly used properties for a font and its","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":250,"byte_end":327,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":328,"byte_end":341,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ * Laying out glyphs horizontally using horizontal and vertical metrics, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":342,"byte_end":421,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/   glyph-pair-specific kerning.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":422,"byte_end":456,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ * Rasterising glyphs with sub-pixel positioning using an accurate analytical","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":457,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/   algorithm (not based on sampling).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":538,"byte_end":578,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/ * Managing a font cache on the GPU with the `gpu_cache` module. This keeps","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":579,"byte_end":657,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/   recently used glyph renderings in a dynamic cache in GPU memory to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":658,"byte_end":730,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   minimise texture uploads per-frame. It also allows you keep the draw call","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":731,"byte_end":810,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   count for text very low, as all glyphs are kept in one GPU texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":811,"byte_end":884,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":885,"byte_end":888,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Notable things that RustType does not support *yet*:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":889,"byte_end":945,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":946,"byte_end":949,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * OpenType formatted fonts that are not just TrueType fonts (OpenType is a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":950,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   superset of TrueType). Notably there is no support yet for cubic Bezier","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1029,"byte_end":1106,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   curves used in glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1107,"byte_end":1135,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ * Font hinting.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1136,"byte_end":1155,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ * Ligatures of any kind.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1156,"byte_end":1184,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ * Some less common TrueType sub-formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1185,"byte_end":1229,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ * Right-to-left and vertical text layout.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1230,"byte_end":1275,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1276,"byte_end":1279,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1280,"byte_end":1301,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1302,"byte_end":1305,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ To hit the ground running with RustType, look at the `ascii.rs` example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1306,"byte_end":1381,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ supplied with the crate. It demonstrates loading a font file, rasterising an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1382,"byte_end":1462,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ arbitrary string, and displaying the result as ASCII art. If you prefer to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1463,"byte_end":1541,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ just look at the documentation, the entry point for loading fonts is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1542,"byte_end":1614,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ `Font`, from which you can access individual fonts, then their","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1615,"byte_end":1681,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1682,"byte_end":1693,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1694,"byte_end":1697,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Glyphs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1698,"byte_end":1710,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1711,"byte_end":1714,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The glyph API uses wrapper structs to augment a glyph with information such","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1715,"byte_end":1794,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ as scaling and positioning, making relevant methods that make use of this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1795,"byte_end":1872,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ information available as appropriate. For example, given a `Glyph` `glyph`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1873,"byte_end":1951,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ obtained directly from a `Font`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1952,"byte_end":1988,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1989,"byte_end":1992,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":1993,"byte_end":2006,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2007,"byte_end":2029,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ # let glyph: Glyph<'static> = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2030,"byte_end":2081,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ // One of the few things you can do with an unsized, positionless glyph is get its id.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2082,"byte_end":2172,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ let id = glyph.id();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2173,"byte_end":2197,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let glyph = glyph.scaled(Scale::uniform(10.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2198,"byte_end":2249,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ // Now glyph is a ScaledGlyph, you can do more with it, as well as what you can do with Glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2250,"byte_end":2348,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ // For example, you can access the correctly scaled horizontal metrics for the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2349,"byte_end":2438,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ let h_metrics = glyph.h_metrics();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2439,"byte_end":2477,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ let glyph = glyph.positioned(point(5.0, 3.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2478,"byte_end":2528,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ // Now glyph is a PositionedGlyph, and you can do even more with it, e.g. drawing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2529,"byte_end":2615,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ glyph.draw(|x, y, v| {}); // In this case the pixel values are not used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2616,"byte_end":2692,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2693,"byte_end":2700,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2701,"byte_end":2704,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Unicode terminology","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2705,"byte_end":2730,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2731,"byte_end":2734,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate uses terminology for computerised typography as specified by the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2735,"byte_end":2814,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ Unicode standard. If you are not sure of the differences between a code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2815,"byte_end":2890,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ point, a character, and a glyph, you may want to check the [official Unicode","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2891,"byte_end":2971,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ glossary](http://unicode.org/glossary/), or alternatively, here's my take on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":2972,"byte_end":3052,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ it from a practical perspective:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3053,"byte_end":3089,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3090,"byte_end":3093,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ * A character is what you would conventionally call a single symbol,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3094,"byte_end":3166,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/   independent of its appearance or representation in a particular font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3167,"byte_end":3242,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/   Examples include `a`, `A`, `ä`, `å`, `1`, `*`, `Ω`, etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3243,"byte_end":3308,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/ * A Unicode code point is the particular number that the Unicode standard","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3309,"byte_end":3386,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/   associates with a particular character. Note however that code points also","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3387,"byte_end":3467,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/   exist for things not conventionally thought of as characters by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3468,"byte_end":3537,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/   themselves, but can be combined to form characters, such as diacritics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3538,"byte_end":3614,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/   like accents. These \"characters\" are known in Unicode as \"combining","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3615,"byte_end":3688,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/   characters\". E.g., a diaeresis (`¨`) has the code point U+0308. If this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3689,"byte_end":3767,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/   code point follows the code point U+0055 (the letter `u`), this sequence","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3768,"byte_end":3846,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/   represents the character `ü`. Note that there is also a single codepoint","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3847,"byte_end":3926,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/   for `ü`, U+00FC. This means that what visually looks like the same string","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":3927,"byte_end":4007,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/   can have multiple different Unicode representations. Some fonts will have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4008,"byte_end":4087,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/   glyphs (see below) for one sequence of codepoints, but not another that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4088,"byte_end":4165,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/   has the same meaning. To deal with this problem it is recommended to use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4166,"byte_end":4244,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   Unicode normalisation, as provided by, for example, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4245,"byte_end":4306,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/   [unicode-normalization](http://crates.io/crates/unicode-normalization)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4307,"byte_end":4383,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/   crate, to convert to code point sequences that work with the font in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4384,"byte_end":4458,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/   question. Typically a font is more likely to support a single code point","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4459,"byte_end":4537,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/   vs. a sequence with the same meaning, so the best normalisation to use is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4538,"byte_end":4617,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/   \"canonical recomposition\", known as NFC in the normalisation crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4618,"byte_end":4691,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ * A glyph is a particular font's shape to draw the character for a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4692,"byte_end":4762,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/   particular Unicode code point. This will have its own identifying number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4763,"byte_end":4841,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/   unique to the font, its ID.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4842,"byte_end":4875,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"allow(clippy :: cognitive_complexity, clippy :: doc_markdown, clippy ::\ncast_lossless, clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":4876,"byte_end":5010,"line_start":90,"line_end":95,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21007,"byte_end":21010,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Ref","qualname":"::font::Font::Ref","value":"Font::Ref(Arc<owned_ttf_parser::Font>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21049,"byte_end":21054,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Owned","qualname":"::font::Font::Owned","value":"Font::Owned(Arc<owned_ttf_parser::OwnedFont>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20992,"byte_end":20996,"line_start":31,"line_end":31,"column_start":10,"column_end":14},"name":"Font","qualname":"::font::Font","value":"pub enum Font<'a> {\n    Ref(Arc<owned_ttf_parser::Font>),\n    Owned(Arc<owned_ttf_parser::OwnedFont>),\n}","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[{"value":"/ A single font. This may or may not own the font data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20307,"byte_end":20364,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20365,"byte_end":20368,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Lifetime","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20369,"byte_end":20383,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ The lifetime reflects the font data lifetime. `Font<'static>` covers most","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20384,"byte_end":20461,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ cases ie both dynamically loaded owned data and for referenced compile time","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20462,"byte_end":20541,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ font data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20542,"byte_end":20556,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20557,"byte_end":20560,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20561,"byte_end":20574,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20575,"byte_end":20578,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20579,"byte_end":20586,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::Font;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20587,"byte_end":20612,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20613,"byte_end":20647,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ let font_data: &[u8] = include_bytes!(\"../dev/fonts/dejavu/DejaVuSansMono.ttf\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20648,"byte_end":20732,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ let font: Font<'static> = Font::try_from_bytes(font_data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20733,"byte_end":20796,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20797,"byte_end":20800,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let owned_font_data: Vec<u8> = font_data.to_vec();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20801,"byte_end":20855,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/ let from_owned_font: Font<'static> = Font::try_from_vec(owned_font_data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20856,"byte_end":20934,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ # Some(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20935,"byte_end":20949,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20950,"byte_end":20957,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":20958,"byte_end":20965,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21343,"byte_end":21357,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<Font>::try_from_bytes","value":"pub fn try_from_bytes(&[u8]) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Font from byte-slice data.","sig":null,"attributes":[{"value":"/ Creates a Font from byte-slice data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21242,"byte_end":21282,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21287,"byte_end":21290,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for invalid data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21295,"byte_end":21331,"line_start":45,"line_end":45,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21583,"byte_end":21607,"line_start":53,"line_end":53,"column_start":12,"column_end":36},"name":"try_from_bytes_and_index","qualname":"<Font>::try_from_bytes_and_index","value":"pub fn try_from_bytes_and_index(&[u8], u32) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Font from byte-slice data & a font collection `index`.","sig":null,"attributes":[{"value":"/ Creates a Font from byte-slice data & a font collection `index`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21454,"byte_end":21522,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21527,"byte_end":21530,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for invalid data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21535,"byte_end":21571,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21879,"byte_end":21891,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"try_from_vec","qualname":"<Font>::try_from_vec","value":"pub fn try_from_vec(Vec<u8>) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Font from owned font data.","sig":null,"attributes":[{"value":"/ Creates a Font from owned font data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21778,"byte_end":21818,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21823,"byte_end":21826,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for invalid data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21831,"byte_end":21867,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22120,"byte_end":22142,"line_start":68,"line_end":68,"column_start":12,"column_end":34},"name":"try_from_vec_and_index","qualname":"<Font>::try_from_vec_and_index","value":"pub fn try_from_vec_and_index(Vec<u8>, u32) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Font from owned font data & a font collection `index`.","sig":null,"attributes":[{"value":"/ Creates a Font from owned font data & a font collection `index`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21991,"byte_end":22059,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22064,"byte_end":22067,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for invalid data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22072,"byte_end":22108,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22752,"byte_end":22761,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"pub fn v_metrics(&Self, Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" for this font at a given scale. These metrics are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22583,"byte_end":22659,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ shared by all of the glyphs in the font. See `VMetrics` for more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22664,"byte_end":22740,"line_start":85,"line_end":85,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22999,"byte_end":23017,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"pub fn v_metrics_unscaled(&Self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ Get the unscaled VMetrics for this font, shared by all glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22881,"byte_end":22947,"line_start":90,"line_end":90,"column_start":5,"column_end":71}},{"value":"/ See `VMetrics` for more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22952,"byte_end":22987,"line_start":91,"line_end":91,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23308,"byte_end":23320,"line_start":102,"line_end":102,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"pub fn units_per_em(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[{"value":"/ Returns the units per EM square of this font","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23248,"byte_end":23296,"line_start":101,"line_end":101,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23596,"byte_end":23607,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"pub fn glyph_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[{"value":"/ The number of glyphs present in this font. Glyph identifiers for this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23446,"byte_end":23519,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ font will always be in the range `0..self.glyph_count()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23524,"byte_end":23584,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24231,"byte_end":24236,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"pub fn glyph<C: IntoGlyphId>(&Self, C) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[{"value":"/ Returns the corresponding glyph for a Unicode code point or a glyph id","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23682,"byte_end":23756,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ for this font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23761,"byte_end":23779,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23784,"byte_end":23787,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If `id` is a `GlyphId`, it must be valid for this font; otherwise, this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23792,"byte_end":23867,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ function panics. `GlyphId`s should always be produced by looking up some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23872,"byte_end":23948,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ other sort of designator (like a Unicode code point) in a font, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":23953,"byte_end":24024,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ should only be used to index the font they were produced for.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24029,"byte_end":24094,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24099,"byte_end":24102,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that code points without corresponding glyphs in this font map to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24107,"byte_end":24181,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ the \".notdef\" glyph, glyph 0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24186,"byte_end":24219,"line_start":123,"line_end":123,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24807,"byte_end":24817,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"pub fn glyphs_for<I: Iterator>(&Self, I) -> GlyphIter<, I> where\nI::Item: IntoGlyphId","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[{"value":"/ A convenience function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24534,"byte_end":24561,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24566,"byte_end":24569,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that produces the glyphs corresponding to the code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24574,"byte_end":24648,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ points or glyph ids produced by the given iterator `itr`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24653,"byte_end":24714,"line_start":137,"line_end":137,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24719,"byte_end":24722,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This is equivalent in behaviour to `itr.map(|c| font.glyph(c))`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24727,"byte_end":24795,"line_start":139,"line_end":139,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27042,"byte_end":27048,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"pub fn layout<'f, 's>(&'f Self, &'s str, Scale, Point<f32>) -> LayoutIter","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[{"value":"/ A convenience function for laying out glyphs for a string horizontally.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":24961,"byte_end":25036,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ It does not take control characters like line breaks into account, as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25041,"byte_end":25114,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ treatment of these is likely to depend on the application.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25119,"byte_end":25181,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25186,"byte_end":25189,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that this function does not perform Unicode normalisation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25194,"byte_end":25261,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/ Composite characters (such as ö constructed from two code points, ¨ and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25266,"byte_end":25343,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ o), will not be normalised to single code points. So if a font does not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25348,"byte_end":25423,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ contain a glyph for each separate code point, but does contain one for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25428,"byte_end":25502,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ the normalised single code point (which is common), the desired glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25507,"byte_end":25580,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ will not be produced, despite being present in the font. Deal with this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25585,"byte_end":25660,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ by performing Unicode normalisation on the input string before passing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25665,"byte_end":25739,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ it to `layout`. The crate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25744,"byte_end":25773,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ [unicode-normalization](http://crates.io/crates/unicode-normalization)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25778,"byte_end":25852,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ is perfect for this purpose.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25857,"byte_end":25889,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25894,"byte_end":25897,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Calling this function is equivalent to a longer sequence of operations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25902,"byte_end":25976,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ involving `glyphs_for`, e.g.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":25981,"byte_end":26013,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26018,"byte_end":26021,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26026,"byte_end":26039,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26044,"byte_end":26066,"line_start":166,"line_end":166,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26071,"byte_end":26137,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26142,"byte_end":26182,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/ font.layout(\"Hello World!\", scale, start)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26187,"byte_end":26232,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26237,"byte_end":26244,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26249,"byte_end":26256,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26261,"byte_end":26264,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ produces an iterator with behaviour equivalent to the following:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26269,"byte_end":26337,"line_start":173,"line_end":173,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26342,"byte_end":26345,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26350,"byte_end":26363,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26368,"byte_end":26390,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26395,"byte_end":26461,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26466,"byte_end":26506,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/ font.glyphs_for(\"Hello World!\".chars())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26511,"byte_end":26554,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/     .scan((None, 0.0), |&mut (mut last, mut x), g| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26559,"byte_end":26615,"line_start":180,"line_end":180,"column_start":5,"column_end":61}},{"value":"/         let g = g.scaled(scale);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26620,"byte_end":26656,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/         if let Some(last) = last {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26661,"byte_end":26699,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/             x += font.pair_kerning(scale, last, g.id());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26704,"byte_end":26764,"line_start":183,"line_end":183,"column_start":5,"column_end":65}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26769,"byte_end":26782,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/         let w = g.h_metrics().advance_width;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26787,"byte_end":26835,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/         let next = g.positioned(start + vector(x, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26840,"byte_end":26900,"line_start":186,"line_end":186,"column_start":5,"column_end":65}},{"value":"/         last = Some(next.id());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26905,"byte_end":26940,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/         x += w;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26945,"byte_end":26964,"line_start":188,"line_end":188,"column_start":5,"column_end":24}},{"value":"/         Some(next)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26969,"byte_end":26991,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/     })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":26996,"byte_end":27006,"line_start":190,"line_end":190,"column_start":5,"column_end":15}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27011,"byte_end":27018,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27023,"byte_end":27030,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27489,"byte_end":27501,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"pub fn pair_kerning<A, B>(&Self, Scale, A, B) -> f32 where A: IntoGlyphId,\nB: IntoGlyphId","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[{"value":"/ Returns additional kerning to apply as well as that given by HMetrics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27363,"byte_end":27436,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ for a particular pair of glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":27441,"byte_end":27477,"line_start":210,"line_end":210,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28603,"byte_end":28625,"line_start":241,"line_end":241,"column_start":12,"column_end":34},"name":"scale_for_pixel_height","qualname":"<Font>::scale_for_pixel_height","value":"pub fn scale_for_pixel_height(&Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Computes a scale factor to produce a font whose \"height\" is 'pixels'\n tall. Height is measured as the distance from the highest ascender\n to the lowest descender; in other words, it's equivalent to calling\n GetFontVMetrics and computing:\n       scale = pixels / (ascent - descent)\n so if you prefer to measure height by the ascent only, use a similar\n calculation.\n","sig":null,"attributes":[{"value":"/ Computes a scale factor to produce a font whose \"height\" is 'pixels'","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28181,"byte_end":28253,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ tall. Height is measured as the distance from the highest ascender","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28258,"byte_end":28328,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ to the lowest descender; in other words, it's equivalent to calling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28333,"byte_end":28404,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ GetFontVMetrics and computing:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28409,"byte_end":28443,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/       scale = pixels / (ascent - descent)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28448,"byte_end":28493,"line_start":238,"line_end":238,"column_start":5,"column_end":50}},{"value":"/ so if you prefer to measure height by the ascent only, use a similar","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28498,"byte_end":28570,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ calculation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":28575,"byte_end":28591,"line_start":240,"line_end":240,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29510,"byte_end":29515,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A point in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":28821,"byte_end":28889,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":28890,"byte_end":28893,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Legal operations on points are addition and subtraction by vectors, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":28894,"byte_end":28969,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ subtraction between points, to give a vector representing the offset between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":28970,"byte_end":29050,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ the two points. Combined with the legal operations on vectors, meaningful","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29051,"byte_end":29128,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ manipulations of vectors and points can be performed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29129,"byte_end":29186,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29187,"byte_end":29190,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For example, to interpolate between two points by a factor `t`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29191,"byte_end":29258,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29259,"byte_end":29262,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29263,"byte_end":29270,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29271,"byte_end":29293,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ # let t = 0.5; let p0 = point(0.0, 0.0); let p1 = point(0.0, 0.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29294,"byte_end":29364,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ let interpolated_point = p0 + (p1 - p0) * t;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29365,"byte_end":29413,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29414,"byte_end":29421,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29529,"byte_end":29530,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29543,"byte_end":29544,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29876,"byte_end":29882,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A vector in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29552,"byte_end":29621,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29622,"byte_end":29625,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Legal operations on vectors are addition and subtraction by vectors,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29626,"byte_end":29698,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ addition by points (to give points), and multiplication and division by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29699,"byte_end":29774,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ scalars.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29775,"byte_end":29787,"line_start":27,"line_end":27,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29896,"byte_end":29897,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29910,"byte_end":29911,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29988,"byte_end":29993,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"pub fn point<N>(N, N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Point`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29919,"byte_end":29970,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":29971,"byte_end":29980,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30114,"byte_end":30120,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"pub fn vector<N>(N, N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Vector`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30044,"byte_end":30096,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30097,"byte_end":30106,"line_start":40,"line_end":40,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32838,"byte_end":32842,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[{"value":"/ A rectangle, with top-left corner at `min`, and bottom-right corner at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32664,"byte_end":32738,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ `max`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32739,"byte_end":32749,"line_start":144,"line_end":144,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32856,"byte_end":32859,"line_start":147,"line_end":147,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32879,"byte_end":32882,"line_start":148,"line_end":148,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32955,"byte_end":32960,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"pub fn width(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":33024,"byte_end":33030,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"pub fn height(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5551,"byte_end":5558,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5559,"byte_end":5566,"line_start":121,"line_end":121,"column_start":20,"column_end":27},"name":"0","qualname":"::GlyphId::0","value":"u16","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6072,"byte_end":6077,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"decl_id":null,"docs":" A single glyph of a font.","sig":null,"attributes":[{"value":"/ A single glyph of a font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5815,"byte_end":5844,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5845,"byte_end":5848,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ A `Glyph` does not have an inherent scale or position associated with it. To","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5849,"byte_end":5929,"line_start":136,"line_end":136,"column_start":1,"column_end":81}},{"value":"/ augment a glyph with a size, give it a scale using `scaled`. You can then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5930,"byte_end":6007,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ position it using `positioned`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6008,"byte_end":6043,"line_start":138,"line_end":138,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6214,"byte_end":6218,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"pub fn font(&Self) -> &Font","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6161,"byte_end":6202,"line_start":146,"line_end":146,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6326,"byte_end":6328,"line_start":152,"line_end":152,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6274,"byte_end":6314,"line_start":151,"line_end":151,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6509,"byte_end":6515,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"pub fn scaled(Self, Scale) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with scaling information, making methods that depend","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6376,"byte_end":6452,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ on the scale of the glyph available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6457,"byte_end":6497,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7234,"byte_end":7242,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[{"value":"/ The \"horizontal metrics\" of a glyph. This is useful for calculating the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6984,"byte_end":7059,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ horizontal offset of a glyph from the previous one in a string when laying a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7060,"byte_end":7140,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ string out horizontally.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7141,"byte_end":7169,"line_start":177,"line_end":177,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7366,"byte_end":7379,"line_start":182,"line_end":182,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset that the origin of the next glyph should be from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7249,"byte_end":7323,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ the origin of this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7328,"byte_end":7357,"line_start":181,"line_end":181,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7507,"byte_end":7524,"line_start":185,"line_end":185,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":430},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset between the origin of this glyph and the leftmost","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7390,"byte_end":7465,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ edge/point of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7470,"byte_end":7498,"line_start":184,"line_end":184,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7814,"byte_end":7822,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" of a font at a particular scale. This is useful for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7534,"byte_end":7612,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ calculating the amount of vertical space to give a line of text, and for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7613,"byte_end":7689,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ computing the vertical offset between successive lines.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7690,"byte_end":7749,"line_start":190,"line_end":190,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7945,"byte_end":7951,"line_start":195,"line_end":195,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[{"value":"/ The highest point that any glyph in the font extends to above the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7829,"byte_end":7898,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ baseline. Typically positive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7903,"byte_end":7936,"line_start":194,"line_end":194,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8077,"byte_end":8084,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[{"value":"/ The lowest point that any glyph in the font extends to below the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":7962,"byte_end":8030,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ baseline. Typically negative.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8035,"byte_end":8068,"line_start":197,"line_end":197,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8258,"byte_end":8266,"line_start":201,"line_end":201,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[{"value":"/ The gap to leave between the descent of one line and the ascent of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8095,"byte_end":8169,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ next. This is of course only a guideline given by the font's designers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8174,"byte_end":8249,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8702,"byte_end":8713,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with scaling information. You can query such a glyph for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8539,"byte_end":8617,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ information that depends on the scale of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8618,"byte_end":8673,"line_start":217,"line_end":217,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8882,"byte_end":8884,"line_start":227,"line_end":227,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8830,"byte_end":8870,"line_start":226,"line_end":226,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9003,"byte_end":9007,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"pub fn font(&Self) -> &Font","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8936,"byte_end":8977,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8982,"byte_end":8991,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9127,"byte_end":9140,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"pub fn into_unscaled(Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without the scaling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9066,"byte_end":9115,"line_start":237,"line_end":237,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9242,"byte_end":9250,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"pub fn unscaled(&Self) -> &Glyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the scaling from this glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9191,"byte_end":9230,"line_start":242,"line_end":242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9450,"byte_end":9463,"line_start":249,"line_end":249,"column_start":12,"column_end":25},"name":"build_outline","qualname":"<ScaledGlyph>::build_outline","value":"pub fn build_outline<impl OutlineBuilder: OutlineBuilder>(&Self,\n&mut impl OutlineBuilder) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Builds the outline of the glyph with the builder specified. Returns\n `false` when the outline is either malformed or empty.\n","sig":null,"attributes":[{"value":"/ Builds the outline of the glyph with the builder specified. Returns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9304,"byte_end":9375,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ `false` when the outline is either malformed or empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9380,"byte_end":9438,"line_start":248,"line_end":248,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9914,"byte_end":9924,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"pub fn positioned(Self, Point<f32>) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with positioning information, making methods that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9774,"byte_end":9847,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ depend on the position of the glyph available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":9852,"byte_end":9902,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10133,"byte_end":10138,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10296,"byte_end":10305,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"pub fn h_metrics(&Self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[{"value":"/ Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10191,"byte_end":10263,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10268,"byte_end":10284,"line_start":275,"line_end":275,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10930,"byte_end":10948,"line_start":292,"line_end":292,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"pub fn exact_bounding_box(&Self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[{"value":"/ The bounding box of the shape of this glyph, not to be confused with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10710,"byte_end":10782,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ `pixel_bounding_box`, the conservative pixel-boundary bounding box. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10787,"byte_end":10862,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ coordinates are relative to the glyph's origin.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":10867,"byte_end":10918,"line_start":291,"line_end":291,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13150,"byte_end":13165,"line_start":359,"line_end":359,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with positioning and scaling information. You can query","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":12954,"byte_end":13031,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ such a glyph for information that depends on the scale and position of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13032,"byte_end":13110,"line_start":356,"line_end":356,"column_start":1,"column_end":79}},{"value":"/ glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13111,"byte_end":13121,"line_start":357,"line_end":357,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13352,"byte_end":13354,"line_start":367,"line_end":367,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13300,"byte_end":13340,"line_start":366,"line_end":366,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13474,"byte_end":13478,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"pub fn font(&Self) -> &Font","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13407,"byte_end":13448,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13453,"byte_end":13462,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13599,"byte_end":13611,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"pub fn unpositioned(&Self) -> &ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without positioning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13538,"byte_end":13587,"line_start":377,"line_end":377,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13727,"byte_end":13744,"line_start":383,"line_end":383,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"pub fn into_unpositioned(Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the positioning from this glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13672,"byte_end":13715,"line_start":382,"line_end":382,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14127,"byte_end":14145,"line_start":391,"line_end":391,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"pub fn pixel_bounding_box(&Self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[{"value":"/ The conservative pixel-boundary bounding box for this glyph. This is the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13802,"byte_end":13878,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ smallest rectangle aligned to pixel boundaries that encloses the shape","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13883,"byte_end":13957,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ of this glyph at this position. Note that the origin of the glyph, at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13962,"byte_end":14035,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ pixel-space coordinates (0, 0), is at the top left of the bounding box.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14040,"byte_end":14115,"line_start":390,"line_end":390,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14210,"byte_end":14215,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14278,"byte_end":14286,"line_start":399,"line_end":399,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"pub fn position(&Self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14489,"byte_end":14502,"line_start":405,"line_end":405,"column_start":12,"column_end":25},"name":"build_outline","qualname":"<PositionedGlyph>::build_outline","value":"pub fn build_outline<impl OutlineBuilder: OutlineBuilder>(&Self,\n&mut impl OutlineBuilder) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Builds the outline of the glyph with the builder specified. Returns\n `false` when the outline is either malformed or empty.\n","sig":null,"attributes":[{"value":"/ Builds the outline of the glyph with the builder specified. Returns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14343,"byte_end":14414,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/ `false` when the outline is either malformed or empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14419,"byte_end":14477,"line_start":404,"line_end":404,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15625,"byte_end":15629,"line_start":439,"line_end":439,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"pub fn draw<O: FnMut(u32, u32, f32) -> ()>(&Self, O)","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[{"value":"/ Rasterises this glyph. For each pixel in the rect given by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14901,"byte_end":14963,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/ `pixel_bounding_box()`, `o` is called:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":14968,"byte_end":15010,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15015,"byte_end":15018,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15023,"byte_end":15036,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/ o(x, y, v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15041,"byte_end":15055,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15060,"byte_end":15067,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15072,"byte_end":15075,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ where `x` and `y` are the coordinates of the pixel relative to the `min`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15080,"byte_end":15156,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ coordinates of the bounding box, and `v` is the analytically calculated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15161,"byte_end":15236,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ coverage of the pixel by the shape of the glyph. Calls to `o` proceed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15241,"byte_end":15317,"line_start":428,"line_end":428,"column_start":5,"column_end":81}},{"value":"/ horizontal scanline order, similar to this pseudo-code:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15322,"byte_end":15381,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15386,"byte_end":15389,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15394,"byte_end":15407,"line_start":431,"line_end":431,"column_start":5,"column_end":18}},{"value":"/ let bb = glyph.pixel_bounding_box();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15412,"byte_end":15452,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/ for y in 0..bb.height() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15457,"byte_end":15486,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/     for x in 0..bb.width() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15491,"byte_end":15523,"line_start":434,"line_end":434,"column_start":5,"column_end":37}},{"value":"/         o(x, y, calc_coverage(&glyph, x, y));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15528,"byte_end":15577,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15582,"byte_end":15591,"line_start":436,"line_end":436,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15596,"byte_end":15601,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":15606,"byte_end":15613,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":16175,"byte_end":16187,"line_start":457,"line_end":457,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"pub fn set_position(&mut Self, Point<f32>)","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[{"value":"/ Resets positioning information and recalculates the pixel bounding box","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":16089,"byte_end":16163,"line_start":456,"line_end":456,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17488,"byte_end":17493,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance between\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[{"value":"/ Defines the size of a rendered face of a font, in pixels, horizontally and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17008,"byte_end":17086,"line_start":482,"line_end":482,"column_start":1,"column_end":79}},{"value":"/ vertically. A vertical scale of `y` pixels means that the distance between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17087,"byte_end":17165,"line_start":483,"line_end":483,"column_start":1,"column_end":79}},{"value":"/ the ascent and descent lines (see `VMetrics`) of the face will be `y`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17166,"byte_end":17239,"line_start":484,"line_end":484,"column_start":1,"column_end":74}},{"value":"/ pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17240,"byte_end":17320,"line_start":485,"line_end":485,"column_start":1,"column_end":81}},{"value":"/ by a factor *f* in the horizontal direction is achieved by setting `x` equal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17321,"byte_end":17401,"line_start":486,"line_end":486,"column_start":1,"column_end":81}},{"value":"/ to *f* times `y`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17402,"byte_end":17423,"line_start":487,"line_end":487,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17541,"byte_end":17542,"line_start":491,"line_end":491,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Horizontal scale, in pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17500,"byte_end":17532,"line_start":490,"line_end":490,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17592,"byte_end":17593,"line_start":493,"line_end":493,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Vertical scale, in pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17553,"byte_end":17583,"line_start":492,"line_end":492,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17704,"byte_end":17711,"line_start":499,"line_end":499,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"pub fn uniform(f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"/ Uniform scaling, equivalent to `Scale { x: s, y: s }`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17620,"byte_end":17678,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17683,"byte_end":17692,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18077,"byte_end":18088,"line_start":509,"line_end":509,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into a `GlyphId`, in the context of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17768,"byte_end":17847,"line_start":503,"line_end":503,"column_start":1,"column_end":80}},{"value":"/ a specific font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17848,"byte_end":17868,"line_start":504,"line_end":504,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17869,"byte_end":17872,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Many `rusttype` functions that operate on characters accept values of any","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17873,"byte_end":17950,"line_start":506,"line_end":506,"column_start":1,"column_end":78}},{"value":"/ type that implements `IntoGlyphId`. Such types include `char`, `Codepoint`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17951,"byte_end":18030,"line_start":507,"line_end":507,"column_start":1,"column_end":80}},{"value":"/ and obviously `GlyphId` itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18031,"byte_end":18066,"line_start":508,"line_end":508,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18196,"byte_end":18209,"line_start":512,"line_end":512,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"pub fn into_glyph_id(Self, &Font) -> GlyphId","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[{"value":"/ Convert `self` into a `GlyphId`, consulting the index map of `font` if","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18095,"byte_end":18169,"line_start":510,"line_end":510,"column_start":5,"column_end":79}},{"value":"/ necessary.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18174,"byte_end":18188,"line_start":511,"line_end":511,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18651,"byte_end":18660,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":19007,"byte_end":19017,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21113,"byte_end":21117,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21227,"byte_end":21231,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22334,"byte_end":22338,"line_start":74,"line_end":74,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30217,"byte_end":30222,"line_start":45,"line_end":45,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30403,"byte_end":30409,"line_start":52,"line_end":52,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30591,"byte_end":30597,"line_start":59,"line_end":59,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30759,"byte_end":30765,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31095,"byte_end":31101,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31431,"byte_end":31437,"line_start":94,"line_end":94,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31767,"byte_end":31773,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32134,"byte_end":32139,"line_start":122,"line_end":122,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32329,"byte_end":32334,"line_start":129,"line_end":129,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32523,"byte_end":32529,"line_start":136,"line_end":136,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32934,"byte_end":32938,"line_start":151,"line_end":151,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":33347,"byte_end":33360,"line_start":10,"line_end":10,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":33531,"byte_end":33544,"line_start":16,"line_end":16,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":34523,"byte_end":34540,"line_start":55,"line_end":55,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":34722,"byte_end":34739,"line_start":61,"line_end":61,"column_start":53,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":35837,"byte_end":35854,"line_start":103,"line_end":103,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":36099,"byte_end":36116,"line_start":113,"line_end":113,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5611,"byte_end":5618,"line_start":123,"line_end":123,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5742,"byte_end":5749,"line_start":128,"line_end":128,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6142,"byte_end":6147,"line_start":145,"line_end":145,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6833,"byte_end":6838,"line_start":169,"line_end":169,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8305,"byte_end":8313,"line_start":204,"line_end":204,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8805,"byte_end":8816,"line_start":225,"line_end":225,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":12720,"byte_end":12731,"line_start":346,"line_end":346,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13271,"byte_end":13286,"line_start":365,"line_end":365,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":16721,"byte_end":16736,"line_start":472,"line_end":472,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17608,"byte_end":17613,"line_start":496,"line_end":496,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18518,"byte_end":18519,"line_start":523,"line_end":523,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18776,"byte_end":18785,"line_start":539,"line_end":539,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":19216,"byte_end":19226,"line_start":561,"line_end":561,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21113,"byte_end":21117,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":21227,"byte_end":21231,"line_start":42,"line_end":42,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\font.rs","byte_start":22334,"byte_end":22338,"line_start":74,"line_end":74,"column_start":13,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30217,"byte_end":30222,"line_start":45,"line_end":45,"column_start":44,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30403,"byte_end":30409,"line_start":52,"line_end":52,"column_start":44,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30591,"byte_end":30597,"line_start":59,"line_end":59,"column_start":44,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":30759,"byte_end":30765,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31095,"byte_end":31101,"line_start":80,"line_end":80,"column_start":24,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31431,"byte_end":31437,"line_start":94,"line_end":94,"column_start":24,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":31767,"byte_end":31773,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32134,"byte_end":32139,"line_start":122,"line_end":122,"column_start":55,"column_end":60},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32329,"byte_end":32334,"line_start":129,"line_end":129,"column_start":55,"column_end":60},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":293},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32523,"byte_end":32529,"line_start":136,"line_end":136,"column_start":54,"column_end":60},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\geometry.rs","byte_start":32934,"byte_end":32938,"line_start":151,"line_end":151,"column_start":38,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":33347,"byte_end":33360,"line_start":10,"line_end":10,"column_start":21,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":33531,"byte_end":33544,"line_start":16,"line_end":16,"column_start":53,"column_end":66},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":144},"to":{"krate":17,"index":1713}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":34523,"byte_end":34540,"line_start":55,"line_end":55,"column_start":21,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":34722,"byte_end":34739,"line_start":61,"line_end":61,"column_start":53,"column_end":70},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":160},"to":{"krate":17,"index":1713}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":35837,"byte_end":35854,"line_start":103,"line_end":103,"column_start":6,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\outliner.rs","byte_start":36099,"byte_end":36116,"line_start":113,"line_end":113,"column_start":25,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":176},"to":{"krate":17,"index":1713}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5611,"byte_end":5618,"line_start":123,"line_end":123,"column_start":42,"column_end":49},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":5742,"byte_end":5749,"line_start":128,"line_end":128,"column_start":42,"column_end":49},"kind":{"Impl":{"id":25}},"from":{"krate":17,"index":2960},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6142,"byte_end":6147,"line_start":145,"line_end":145,"column_start":13,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":6833,"byte_end":6838,"line_start":169,"line_end":169,"column_start":21,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8305,"byte_end":8313,"line_start":204,"line_end":204,"column_start":30,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":8805,"byte_end":8816,"line_start":225,"line_end":225,"column_start":13,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":12720,"byte_end":12731,"line_start":346,"line_end":346,"column_start":21,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":459},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":13271,"byte_end":13286,"line_start":365,"line_end":365,"column_start":13,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":16721,"byte_end":16736,"line_start":472,"line_end":472,"column_start":21,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":17608,"byte_end":17613,"line_start":496,"line_end":496,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18518,"byte_end":18519,"line_start":523,"line_end":523,"column_start":40,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":264},"to":{"krate":0,"index":259}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":18776,"byte_end":18785,"line_start":539,"line_end":539,"column_start":26,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.9.2\\src\\lib.rs","byte_start":19216,"byte_end":19226,"line_start":561,"line_end":561,"column_start":30,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":7985}}]}