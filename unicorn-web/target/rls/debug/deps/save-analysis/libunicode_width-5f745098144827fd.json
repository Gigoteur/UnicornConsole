{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","unicode_width","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","-C","metadata=5f745098144827fd","-C","extra-filename=-5f745098144827fd","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-web\\target\\rls\\debug\\deps\\libunicode_width-5f745098144827fd.rmeta"},"prelude":{"crate_id":{"name":"unicode_width","disambiguator":[8553208718297915487,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":472,"byte_end":4398,"line_start":11,"line_end":131,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1802,"byte_end":1817,"line_start":60,"line_end":60,"column_start":17,"column_end":32},"alias_span":null,"name":"UNICODE_VERSION","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":472,"byte_end":4398,"line_start":11,"line_end":131,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":58}],"decl_id":null,"docs":" Determine displayed width of `char` and `str` types according to\n [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)\n rules.","sig":null,"attributes":[{"value":"/ Determine displayed width of `char` and `str` types according to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":472,"byte_end":540,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":541,"byte_end":611,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ rules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":612,"byte_end":622,"line_start":13,"line_end":13,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":623,"byte_end":626,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":627,"byte_end":638,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ extern crate unicode_width;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":639,"byte_end":670,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":671,"byte_end":674,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ use unicode_width::UnicodeWidthStr;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":675,"byte_end":714,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":715,"byte_end":718,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":719,"byte_end":734,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     let teststr = \"Ｈｅｌｌｏ, ｗｏｒｌｄ!\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":735,"byte_end":793,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/     let width = UnicodeWidthStr::width(teststr);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":794,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/     println!(\"{}\", teststr);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":847,"byte_end":879,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/     println!(\"The above string is {} columns wide.\", width);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":880,"byte_end":944,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/     let width = teststr.width_cjk();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":945,"byte_end":985,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/     println!(\"The above string is {} columns wide (CJK).\", width);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":986,"byte_end":1056,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1057,"byte_end":1062,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1063,"byte_end":1070,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1071,"byte_end":1074,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # features","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1075,"byte_end":1089,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1090,"byte_end":1093,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ unicode-width supports a `no_std` feature. This eliminates dependence","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1094,"byte_end":1167,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ on std, and instead uses equivalent functions from core.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1168,"byte_end":1228,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1229,"byte_end":1232,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # crates.io","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1233,"byte_end":1248,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1249,"byte_end":1252,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can use this package in your project by adding the following","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1253,"byte_end":1321,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/ to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1322,"byte_end":1347,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1348,"byte_end":1351,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1352,"byte_end":1363,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1364,"byte_end":1382,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ unicode-width = \"0.1.5\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1383,"byte_end":1410,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1411,"byte_end":1418,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"deny(missing_docs, unsafe_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1420,"byte_end":1455,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"no_std","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1654,"byte_end":1664,"line_start":50,"line_end":50,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\tables.rs","byte_start":5142,"byte_end":5157,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"UNICODE_VERSION","qualname":"::tables::UNICODE_VERSION","value":"(u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" The version of [Unicode](http://www.unicode.org/)\n that this version of unicode-width is based on.\n","sig":null,"attributes":[{"value":"/ The version of [Unicode](http://www.unicode.org/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\tables.rs","byte_start":5026,"byte_end":5079,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/ that this version of unicode-width is based on.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\tables.rs","byte_start":5080,"byte_end":5131,"line_start":16,"line_end":16,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1956,"byte_end":1972,"line_start":70,"line_end":70,"column_start":11,"column_end":27},"name":"UnicodeWidthChar","qualname":"::UnicodeWidthChar","value":"UnicodeWidthChar","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Methods for determining displayed width of Unicode characters.\n","sig":null,"attributes":[{"value":"/ Methods for determining displayed width of Unicode characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1879,"byte_end":1945,"line_start":69,"line_end":69,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2434,"byte_end":2439,"line_start":78,"line_end":78,"column_start":8,"column_end":13},"name":"width","qualname":"::UnicodeWidthChar::width","value":"pub fn width(Self) -> Option<usize>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns the character's displayed width in columns, or `None` if the\n character is a control character other than `'\\x00'`.","sig":null,"attributes":[{"value":"/ Returns the character's displayed width in columns, or `None` if the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":1979,"byte_end":2051,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ character is a control character other than `'\\x00'`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2056,"byte_end":2113,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2118,"byte_end":2121,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function treats characters in the Ambiguous category according","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2126,"byte_end":2197,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ to [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2202,"byte_end":2275,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ as 1 column wide. This is consistent with the recommendations for non-CJK","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2280,"byte_end":2357,"line_start":76,"line_end":76,"column_start":5,"column_end":82}},{"value":"/ contexts, or when the context cannot be reliably determined.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2362,"byte_end":2426,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2870,"byte_end":2879,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"width_cjk","qualname":"::UnicodeWidthChar::width_cjk","value":"pub fn width_cjk(Self) -> Option<usize>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns the character's displayed width in columns, or `None` if the\n character is a control character other than `'\\x00'`.","sig":null,"attributes":[{"value":"/ Returns the character's displayed width in columns, or `None` if the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2469,"byte_end":2541,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ character is a control character other than `'\\x00'`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2546,"byte_end":2603,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2608,"byte_end":2611,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function treats characters in the Ambiguous category according","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2616,"byte_end":2687,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ to [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2692,"byte_end":2765,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ as 2 columns wide. This is consistent with the recommendations for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2770,"byte_end":2840,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ CJK contexts.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":2845,"byte_end":2862,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3175,"byte_end":3190,"line_start":99,"line_end":99,"column_start":11,"column_end":26},"name":"UnicodeWidthStr","qualname":"::UnicodeWidthStr","value":"UnicodeWidthStr","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56}],"decl_id":null,"docs":" Methods for determining displayed width of Unicode strings.\n","sig":null,"attributes":[{"value":"/ Methods for determining displayed width of Unicode strings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3101,"byte_end":3164,"line_start":98,"line_end":98,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3639,"byte_end":3644,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"width","qualname":"::UnicodeWidthStr::width","value":"pub fn width<'a>(&'a Self) -> usize","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Returns the string's displayed width in columns.","sig":null,"attributes":[{"value":"/ Returns the string's displayed width in columns.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3197,"byte_end":3249,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3254,"byte_end":3257,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Control characters are treated as having zero width.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3262,"byte_end":3318,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3323,"byte_end":3326,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This function treats characters in the Ambiguous category according","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3331,"byte_end":3402,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ to [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3407,"byte_end":3480,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ as 1 column wide. This is consistent with the recommendations for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3485,"byte_end":3554,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ non-CJK contexts, or when the context cannot be reliably determined.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3559,"byte_end":3631,"line_start":107,"line_end":107,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":4061,"byte_end":4070,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"width_cjk","qualname":"::UnicodeWidthStr::width_cjk","value":"pub fn width_cjk<'a>(&'a Self) -> usize","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Returns the string's displayed width in columns.","sig":null,"attributes":[{"value":"/ Returns the string's displayed width in columns.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3674,"byte_end":3726,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3731,"byte_end":3734,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Control characters are treated as having zero width.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3739,"byte_end":3795,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3800,"byte_end":3803,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This function treats characters in the Ambiguous category according","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3808,"byte_end":3879,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ to [Unicode Standard Annex #11](http://www.unicode.org/reports/tr11/)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3884,"byte_end":3957,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ as 2 column wide. This is consistent with the recommendations for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":3962,"byte_end":4031,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ CJK contexts.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode-width-0.1.9\\src\\lib.rs","byte_start":4036,"byte_end":4053,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}