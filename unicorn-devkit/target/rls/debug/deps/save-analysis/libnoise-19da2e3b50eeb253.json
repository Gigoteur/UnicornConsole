{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","noise","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=19da2e3b50eeb253","-C","extra-filename=-19da2e3b50eeb253","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--extern","num_traits=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libnum_traits-20dbda400ee62781.rmeta","--extern","rand=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\librand-4ec7f1266e0b502c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libnoise-19da2e3b50eeb253.rmeta"},"prelude":{"crate_id":{"name":"noise","disambiguator":[13232231520415547792,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[11364536818608682572,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":17,"id":{"name":"num_traits","disambiguator":[114989641231652250,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":18,"id":{"name":"rand","disambiguator":[16505958107017556485,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":19,"id":{"name":"rand","disambiguator":[6458330937389031091,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","num":20,"id":{"name":"winapi","disambiguator":[15949846003312357418,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":387,"byte_end":3111,"line_start":9,"line_end":95,"column_start":1,"column_end":79}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":705,"byte_end":714,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"Brownian2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":716,"byte_end":725,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"alias_span":null,"name":"Brownian3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":727,"byte_end":736,"line_start":25,"line_end":25,"column_start":42,"column_end":51},"alias_span":null,"name":"Brownian4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":754,"byte_end":769,"line_start":26,"line_end":26,"column_start":16,"column_end":31},"alias_span":null,"name":"cell2_manhattan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":771,"byte_end":786,"line_start":26,"line_end":26,"column_start":33,"column_end":48},"alias_span":null,"name":"cell3_manhattan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":788,"byte_end":803,"line_start":26,"line_end":26,"column_start":50,"column_end":65},"alias_span":null,"name":"cell4_manhattan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":821,"byte_end":840,"line_start":27,"line_end":27,"column_start":16,"column_end":35},"alias_span":null,"name":"cell2_manhattan_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":842,"byte_end":861,"line_start":27,"line_end":27,"column_start":37,"column_end":56},"alias_span":null,"name":"cell3_manhattan_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":863,"byte_end":882,"line_start":27,"line_end":27,"column_start":58,"column_end":77},"alias_span":null,"name":"cell4_manhattan_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":900,"byte_end":921,"line_start":28,"line_end":28,"column_start":16,"column_end":37},"alias_span":null,"name":"cell2_manhattan_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":923,"byte_end":944,"line_start":28,"line_end":28,"column_start":39,"column_end":60},"alias_span":null,"name":"cell3_manhattan_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":946,"byte_end":967,"line_start":28,"line_end":28,"column_start":62,"column_end":83},"alias_span":null,"name":"cell4_manhattan_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":985,"byte_end":996,"line_start":29,"line_end":29,"column_start":16,"column_end":27},"alias_span":null,"name":"cell2_range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":998,"byte_end":1009,"line_start":29,"line_end":29,"column_start":29,"column_end":40},"alias_span":null,"name":"cell3_range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1011,"byte_end":1022,"line_start":29,"line_end":29,"column_start":42,"column_end":53},"alias_span":null,"name":"cell4_range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1040,"byte_end":1055,"line_start":30,"line_end":30,"column_start":16,"column_end":31},"alias_span":null,"name":"cell2_range_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1057,"byte_end":1072,"line_start":30,"line_end":30,"column_start":33,"column_end":48},"alias_span":null,"name":"cell3_range_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1074,"byte_end":1089,"line_start":30,"line_end":30,"column_start":50,"column_end":65},"alias_span":null,"name":"cell4_range_inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1107,"byte_end":1123,"line_start":31,"line_end":31,"column_start":16,"column_end":32},"alias_span":null,"name":"cell2_seed_point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1125,"byte_end":1141,"line_start":31,"line_end":31,"column_start":34,"column_end":50},"alias_span":null,"name":"cell3_seed_point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1143,"byte_end":1159,"line_start":31,"line_end":31,"column_start":52,"column_end":68},"alias_span":null,"name":"cell4_seed_point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1177,"byte_end":1188,"line_start":32,"line_end":32,"column_start":16,"column_end":27},"alias_span":null,"name":"cell2_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1190,"byte_end":1201,"line_start":32,"line_end":32,"column_start":29,"column_end":40},"alias_span":null,"name":"cell3_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1203,"byte_end":1214,"line_start":32,"line_end":32,"column_start":42,"column_end":53},"alias_span":null,"name":"cell4_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1233,"byte_end":1253,"line_start":34,"line_end":34,"column_start":16,"column_end":36},"alias_span":null,"name":"range_sqr_euclidian2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1255,"byte_end":1275,"line_start":34,"line_end":34,"column_start":38,"column_end":58},"alias_span":null,"name":"range_sqr_euclidian3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1277,"byte_end":1297,"line_start":34,"line_end":34,"column_start":60,"column_end":80},"alias_span":null,"name":"range_sqr_euclidian4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1315,"byte_end":1321,"line_start":35,"line_end":35,"column_start":16,"column_end":22},"alias_span":null,"name":"Point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1323,"byte_end":1329,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"alias_span":null,"name":"Point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1331,"byte_end":1337,"line_start":35,"line_end":35,"column_start":32,"column_end":38},"alias_span":null,"name":"Point4","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1358,"byte_end":1359,"line_start":37,"line_end":37,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1384,"byte_end":1397,"line_start":38,"line_end":38,"column_start":24,"column_end":37},"alias_span":null,"name":"open_simplex2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1399,"byte_end":1412,"line_start":38,"line_end":38,"column_start":39,"column_end":52},"alias_span":null,"name":"open_simplex3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1414,"byte_end":1427,"line_start":38,"line_end":38,"column_start":54,"column_end":67},"alias_span":null,"name":"open_simplex4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1447,"byte_end":1454,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"alias_span":null,"name":"perlin2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1456,"byte_end":1463,"line_start":39,"line_end":39,"column_start":27,"column_end":34},"alias_span":null,"name":"perlin3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1465,"byte_end":1472,"line_start":39,"line_end":39,"column_start":36,"column_end":43},"alias_span":null,"name":"perlin4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1501,"byte_end":1517,"line_start":40,"line_end":40,"column_start":27,"column_end":43},"alias_span":null,"name":"PermutationTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1535,"byte_end":1541,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"value2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1543,"byte_end":1549,"line_start":41,"line_end":41,"column_start":25,"column_end":31},"alias_span":null,"name":"value3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1551,"byte_end":1557,"line_start":41,"line_end":41,"column_start":33,"column_end":39},"alias_span":null,"name":"value4","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103698,"byte_end":103699,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103726,"byte_end":103727,"line_start":10,"line_end":10,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103755,"byte_end":103756,"line_start":11,"line_end":11,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Perlin, MultiFractal, Fbm","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103783,"byte_end":103784,"line_start":12,"line_end":12,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103811,"byte_end":103812,"line_start":13,"line_end":13,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103842,"byte_end":103843,"line_start":14,"line_end":14,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":587}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\mod.rs","byte_start":105325,"byte_end":105326,"line_start":9,"line_end":9,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":594}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\mod.rs","byte_start":105347,"byte_end":105348,"line_start":10,"line_end":10,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":594}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\mod.rs","byte_start":105369,"byte_end":105370,"line_start":11,"line_end":11,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":594}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\mod.rs","byte_start":105396,"byte_end":105397,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":594}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\mod.rs","byte_start":105420,"byte_end":105421,"line_start":13,"line_end":13,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":594}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112143,"byte_end":112144,"line_start":9,"line_end":9,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112170,"byte_end":112171,"line_start":10,"line_end":10,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112198,"byte_end":112199,"line_start":11,"line_end":11,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112225,"byte_end":112226,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"MultiFractal, Fbm","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112250,"byte_end":112251,"line_start":13,"line_end":13,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Perlin","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\mod.rs","byte_start":112275,"byte_end":112276,"line_start":14,"line_end":14,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":715}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":118859,"byte_end":118860,"line_start":9,"line_end":9,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":818}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":118884,"byte_end":118885,"line_start":10,"line_end":10,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":818}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":118906,"byte_end":118907,"line_start":11,"line_end":11,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Fbm","parent":{"krate":0,"index":818}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":118936,"byte_end":118937,"line_start":12,"line_end":12,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":818}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":118966,"byte_end":118967,"line_start":13,"line_end":13,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":818}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191198,"byte_end":191199,"line_start":9,"line_end":9,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191222,"byte_end":191223,"line_start":10,"line_end":10,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191246,"byte_end":191247,"line_start":11,"line_end":11,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191273,"byte_end":191274,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191298,"byte_end":191299,"line_start":13,"line_end":13,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191327,"byte_end":191328,"line_start":14,"line_end":14,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\mod.rs","byte_start":191353,"byte_end":191354,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1288}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\mod.rs","byte_start":210125,"byte_end":210126,"line_start":9,"line_end":9,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1477}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\mod.rs","byte_start":210150,"byte_end":210151,"line_start":10,"line_end":10,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1477}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\mod.rs","byte_start":220484,"byte_end":220485,"line_start":9,"line_end":9,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1572}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\mod.rs","byte_start":220515,"byte_end":220516,"line_start":10,"line_end":10,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1572}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\mod.rs","byte_start":220545,"byte_end":220546,"line_start":11,"line_end":11,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1572}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\mod.rs","byte_start":220579,"byte_end":220580,"line_start":12,"line_end":12,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1572}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\mod.rs","byte_start":220608,"byte_end":220609,"line_start":13,"line_end":13,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1572}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":387,"byte_end":3111,"line_start":9,"line_end":95,"column_start":1,"column_end":79},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":152},{"krate":0,"index":292},{"krate":0,"index":342},{"krate":0,"index":374},{"krate":0,"index":400},{"krate":0,"index":426},{"krate":0,"index":466},{"krate":0,"index":587},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1893}],"decl_id":null,"docs":" A procedural noise generation library for Rust.","sig":null,"attributes":[{"value":"/ A procedural noise generation library for Rust.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":387,"byte_end":438,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":439,"byte_end":442,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":443,"byte_end":456,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":457,"byte_end":460,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":461,"byte_end":472,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use noise::{NoiseModule, Perlin};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":473,"byte_end":510,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let perlin = Perlin::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":515,"byte_end":546,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ let val = perlin.get([42.4, 37.7, 2.8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":547,"byte_end":591,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":592,"byte_end":599,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":601,"byte_end":639,"line_start":20,"line_end":20,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10221,"byte_end":10227,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Point2","qualname":"::math::Point2","value":"[T; ]","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10092,"byte_end":10171,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10172,"byte_end":10211,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10371,"byte_end":10377,"line_start":32,"line_end":32,"column_start":10,"column_end":16},"name":"Point3","qualname":"::math::Point3","value":"[T; ]","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10242,"byte_end":10321,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10322,"byte_end":10361,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10521,"byte_end":10527,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"name":"Point4","qualname":"::math::Point4","value":"[T; ]","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional point. This is a fixed sized array, so should be compatible\n with most linear algebra libraries.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional point. This is a fixed sized array, so should be compatible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10392,"byte_end":10471,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ with most linear algebra libraries.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\math.rs","byte_start":10472,"byte_end":10511,"line_start":35,"line_end":35,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":17241,"byte_end":17257,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"PermutationTable","qualname":"::permutationtable::PermutationTable","value":"PermutationTable {  }","parent":null,"children":[{"krate":0,"index":1897}],"decl_id":null,"docs":" A seed table, required by all noise functions.","sig":null,"attributes":[{"value":"/ A seed table, required by all noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":16792,"byte_end":16842,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":16843,"byte_end":16846,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Table creation is expensive, so in most circumstances you'll only want to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":16847,"byte_end":16924,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ create one of these per generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":16925,"byte_end":16963,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"deprecated(since = \"0.3.0\", note =\n\"will be made private by 1.0; noise generator structs (e.g. Perlin) now store permutation table internally, so if you were storing PermutationTable for performance reasons, store the noise generator object instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":16980,"byte_end":17229,"line_start":24,"line_end":24,"column_start":1,"column_end":250}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19085,"byte_end":19088,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<PermutationTable>::new","value":"pub fn new(u32) -> PermutationTable","parent":null,"children":[],"decl_id":null,"docs":" Deterministically generates a new permutation table based on a `u32` seed value.","sig":null,"attributes":[{"value":"/ Deterministically generates a new permutation table based on a `u32` seed value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18669,"byte_end":18753,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18758,"byte_end":18761,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Internally this uses a `XorShiftRng`, but we don't really need to worry","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18766,"byte_end":18841,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ about cryptographic security when working with procedural noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18846,"byte_end":18914,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18919,"byte_end":18922,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18927,"byte_end":18940,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18945,"byte_end":18948,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18953,"byte_end":18964,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ use noise::PermutationTable;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18969,"byte_end":19001,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19006,"byte_end":19009,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let perm_table = PermutationTable::new(12);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19014,"byte_end":19061,"line_start":84,"line_end":84,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19066,"byte_end":19073,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19262,"byte_end":19266,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"get1","qualname":"<PermutationTable>::get1","value":"pub fn get1<T: Signed + PrimInt + NumCast>(&Self, T) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19233,"byte_end":19250,"line_start":91,"line_end":91,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19451,"byte_end":19455,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"get2","qualname":"<PermutationTable>::get2","value":"pub fn get2<T: Signed + PrimInt + NumCast>(&Self, math::Point2<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19422,"byte_end":19439,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19681,"byte_end":19685,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"get3","qualname":"<PermutationTable>::get3","value":"pub fn get3<T: Signed + PrimInt + NumCast>(&Self, math::Point3<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19652,"byte_end":19669,"line_start":103,"line_end":103,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19921,"byte_end":19925,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"get4","qualname":"<PermutationTable>::get4","value":"pub fn get4<T: Signed + PrimInt + NumCast>(&Self, math::Point4<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":19892,"byte_end":19909,"line_start":109,"line_end":109,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22241,"byte_end":22250,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"Brownian2","qualname":"::brownian::Brownian2","value":"Brownian2 { function, octaves, frequency, persistence, lacunarity }","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907}],"decl_id":null,"docs":" A callable struct for applying 2-dimensional [fractional Brownian motion]\n (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","sig":null,"attributes":[{"value":"/ A callable struct for applying 2-dimensional [fractional Brownian motion]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21273,"byte_end":21350,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21351,"byte_end":21413,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21414,"byte_end":21417,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Fractional Brownian motion is a way of combining multiple octaves of a noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21418,"byte_end":21498,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ function to create a richer and more varied output. It can theoretically be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21499,"byte_end":21578,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ used with any noise function, but it tends to only produce good results with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21579,"byte_end":21659,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ gradient noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21660,"byte_end":21689,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21690,"byte_end":21693,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The struct contains many parameters, which can either be set using the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21694,"byte_end":21768,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ builder methods provided, or by constructing the type manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21769,"byte_end":21836,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21837,"byte_end":21840,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21841,"byte_end":21854,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21855,"byte_end":21858,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21859,"byte_end":21870,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ extern crate noise;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21871,"byte_end":21894,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21895,"byte_end":21917,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21918,"byte_end":21921,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use noise::{Brownian2, perlin2};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21922,"byte_end":21958,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21959,"byte_end":21962,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21963,"byte_end":21980,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ let seed = rand::random();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":21981,"byte_end":22011,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ let noise = Brownian2::new(perlin2, 4).wavelength(32.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22012,"byte_end":22072,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/ let val = noise.apply(&seed, &[42.0, 37.0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22073,"byte_end":22121,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22122,"byte_end":22129,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22130,"byte_end":22137,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"deprecated(since = \"0.3.0\", note = \"please use `Fbm::new()` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22161,"byte_end":22229,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22325,"byte_end":22333,"line_start":44,"line_end":44,"column_start":9,"column_end":17},"name":"function","qualname":"::brownian::Brownian2::function","value":"F","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The underlying noise function to call.\n","sig":null,"attributes":[{"value":"/ The underlying noise function to call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22274,"byte_end":22316,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22402,"byte_end":22409,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"octaves","qualname":"::brownian::Brownian2::octaves","value":"usize","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The number of times to call the noise function.\n","sig":null,"attributes":[{"value":"/ The number of times to call the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22342,"byte_end":22393,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22466,"byte_end":22475,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"frequency","qualname":"::brownian::Brownian2::frequency","value":"T","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The base frequency of the noise\n","sig":null,"attributes":[{"value":"/ The base frequency of the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22422,"byte_end":22457,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22569,"byte_end":22580,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"name":"persistence","qualname":"::brownian::Brownian2::persistence","value":"T","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The rate at which the amplitude of the noise is reduced for each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the amplitude of the noise is reduced for each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22484,"byte_end":22560,"line_start":49,"line_end":49,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22673,"byte_end":22683,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::brownian::Brownian2::lacunarity","value":"T","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The rate at which the frequency of the noise increases for each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the frequency of the noise increases for each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22589,"byte_end":22664,"line_start":51,"line_end":51,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23664,"byte_end":23673,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"Brownian3","qualname":"::brownian::Brownian3","value":"Brownian3 { function, octaves, frequency, persistence, lacunarity }","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" A callable struct for applying 3-dimensional [fractional Brownian motion]\n (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","sig":null,"attributes":[{"value":"/ A callable struct for applying 3-dimensional [fractional Brownian motion]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22691,"byte_end":22768,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22769,"byte_end":22831,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22832,"byte_end":22835,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Fractional Brownian motion is a way of combining multiple octaves of a noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22836,"byte_end":22916,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/ function to create a richer and more varied output. It can theoretically be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22917,"byte_end":22996,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ used with any noise function, but it tends to only produce good results with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":22997,"byte_end":23077,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ gradient noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23078,"byte_end":23107,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23108,"byte_end":23111,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The struct contains many parameters, which can either be set using the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23112,"byte_end":23186,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ builder methods provided, or by constructing the type manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23187,"byte_end":23254,"line_start":64,"line_end":64,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23255,"byte_end":23258,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23259,"byte_end":23272,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23273,"byte_end":23276,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23277,"byte_end":23288,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ extern crate noise;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23289,"byte_end":23312,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23313,"byte_end":23335,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23336,"byte_end":23339,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ use noise::{Brownian3, perlin3};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23340,"byte_end":23376,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23377,"byte_end":23380,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23381,"byte_end":23398,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/ let seed = rand::random();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23399,"byte_end":23429,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/ let noise = Brownian3::new(perlin3, 4).wavelength(32.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23430,"byte_end":23490,"line_start":76,"line_end":76,"column_start":1,"column_end":61}},{"value":"/ let val = noise.apply(&seed, &[42.0, 37.0, 2.0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23491,"byte_end":23544,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23545,"byte_end":23552,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23553,"byte_end":23560,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"deprecated(since = \"0.3.0\", note = \"please use `Fbm::new()` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23584,"byte_end":23652,"line_start":81,"line_end":81,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23748,"byte_end":23756,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"name":"function","qualname":"::brownian::Brownian3::function","value":"F","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" The underlying noise function to call.\n","sig":null,"attributes":[{"value":"/ The underlying noise function to call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23697,"byte_end":23739,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23825,"byte_end":23832,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"octaves","qualname":"::brownian::Brownian3::octaves","value":"usize","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" The number of times to call the noise function.\n","sig":null,"attributes":[{"value":"/ The number of times to call the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23765,"byte_end":23816,"line_start":85,"line_end":85,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23889,"byte_end":23898,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"frequency","qualname":"::brownian::Brownian3::frequency","value":"T","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" The base frequency of the noise\n","sig":null,"attributes":[{"value":"/ The base frequency of the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23845,"byte_end":23880,"line_start":87,"line_end":87,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23992,"byte_end":24003,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"name":"persistence","qualname":"::brownian::Brownian3::persistence","value":"T","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" The rate at which the amplitude of the noise is reduced for each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the amplitude of the noise is reduced for each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":23907,"byte_end":23983,"line_start":89,"line_end":89,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24096,"byte_end":24106,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::brownian::Brownian3::lacunarity","value":"T","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" The rate at which the frequency of the noise increases for each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the frequency of the noise increases for each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24012,"byte_end":24087,"line_start":91,"line_end":91,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25092,"byte_end":25101,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"Brownian4","qualname":"::brownian::Brownian4","value":"Brownian4 { function, octaves, frequency, persistence, lacunarity }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937}],"decl_id":null,"docs":" A callable struct for applying 4-dimensional [fractional Brownian motion]\n (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","sig":null,"attributes":[{"value":"/ A callable struct for applying 4-dimensional [fractional Brownian motion]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24114,"byte_end":24191,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ (http://en.wikipedia.org/wiki/Fractional_Brownian_motion).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24192,"byte_end":24254,"line_start":96,"line_end":96,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24255,"byte_end":24258,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Fractional Brownian motion is a way of combining multiple octaves of a noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24259,"byte_end":24339,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/ function to create a richer and more varied output. It can theoretically be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24340,"byte_end":24419,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ used with any noise function, but it tends to only produce good results with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24420,"byte_end":24500,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/ gradient noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24501,"byte_end":24530,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24531,"byte_end":24534,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The struct contains many parameters, which can either be set using the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24535,"byte_end":24609,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ builder methods provided, or by constructing the type manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24610,"byte_end":24677,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24678,"byte_end":24681,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24682,"byte_end":24695,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24696,"byte_end":24699,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24700,"byte_end":24711,"line_start":108,"line_end":108,"column_start":1,"column_end":12}},{"value":"/ extern crate noise;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24712,"byte_end":24735,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24736,"byte_end":24758,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24759,"byte_end":24762,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ use noise::{Brownian4, perlin4};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24763,"byte_end":24799,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24800,"byte_end":24803,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24804,"byte_end":24821,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/ let seed = rand::random();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24822,"byte_end":24852,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ let noise = Brownian4::new(perlin4, 4).wavelength(32.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24853,"byte_end":24913,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"/ let val = noise.apply(&seed, &[42.0, 37.0, 2.0, 3.0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24914,"byte_end":24972,"line_start":117,"line_end":117,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24973,"byte_end":24980,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":24981,"byte_end":24988,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"deprecated(since = \"0.3.0\", note = \"please use `Fbm::new()` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25012,"byte_end":25080,"line_start":121,"line_end":121,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25191,"byte_end":25199,"line_start":124,"line_end":124,"column_start":9,"column_end":17},"name":"function","qualname":"::brownian::Brownian4::function","value":"F","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The underlying noise function to call on each octave.\n","sig":null,"attributes":[{"value":"/ The underlying noise function to call on each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25125,"byte_end":25182,"line_start":123,"line_end":123,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25268,"byte_end":25275,"line_start":126,"line_end":126,"column_start":9,"column_end":16},"name":"octaves","qualname":"::brownian::Brownian4::octaves","value":"usize","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The number of times to call the noise function.\n","sig":null,"attributes":[{"value":"/ The number of times to call the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25208,"byte_end":25259,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25332,"byte_end":25341,"line_start":128,"line_end":128,"column_start":9,"column_end":18},"name":"frequency","qualname":"::brownian::Brownian4::frequency","value":"T","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The base frequency of the noise\n","sig":null,"attributes":[{"value":"/ The base frequency of the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25288,"byte_end":25323,"line_start":127,"line_end":127,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25434,"byte_end":25445,"line_start":130,"line_end":130,"column_start":9,"column_end":20},"name":"persistence","qualname":"::brownian::Brownian4::persistence","value":"T","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The rate at which the amplitude of the noise is reduced on each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the amplitude of the noise is reduced on each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25350,"byte_end":25425,"line_start":129,"line_end":129,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25537,"byte_end":25547,"line_start":132,"line_end":132,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::brownian::Brownian4::lacunarity","value":"T","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The rate at which the frequency of the noise increases on each octave.\n","sig":null,"attributes":[{"value":"/ The rate at which the frequency of the noise increases on each octave.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\brownian.rs","byte_start":25454,"byte_end":25528,"line_start":131,"line_end":131,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":33376,"byte_end":33383,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"perlin2","qualname":"::perlin::perlin2","value":"pub fn perlin2<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 2-dimensional perlin noise\n","sig":null,"attributes":[{"value":"/ 2-dimensional perlin noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":33260,"byte_end":33290,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.4.0\", note =\n\"please use `noise::modules::Fbm` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":33291,"byte_end":33368,"line_start":13,"line_end":13,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":35026,"byte_end":35033,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"perlin3","qualname":"::perlin::perlin3","value":"pub fn perlin3<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 3-dimensional perlin noise\n","sig":null,"attributes":[{"value":"/ 3-dimensional perlin noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":34910,"byte_end":34940,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.4.0\", note =\n\"please use `noise::modules::Fbm` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":34941,"byte_end":35018,"line_start":52,"line_end":52,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":37592,"byte_end":37599,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"perlin4","qualname":"::perlin::perlin4","value":"pub fn perlin4<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 4-dimensional perlin noise\n","sig":null,"attributes":[{"value":"/ 4-dimensional perlin noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":37476,"byte_end":37506,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.4.0\", note =\n\"please use `noise::modules::Fbm` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\perlin.rs","byte_start":37507,"byte_end":37584,"line_start":103,"line_end":103,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":42705,"byte_end":42711,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"value2","qualname":"::value::value2","value":"pub fn value2<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 2-dimensional value noise\n","sig":null,"attributes":[{"value":"/ 2-dimensional value noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":42633,"byte_end":42662,"line_start":13,"line_end":13,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":43738,"byte_end":43744,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"value3","qualname":"::value::value3","value":"pub fn value3<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 3-dimensional value noise\n","sig":null,"attributes":[{"value":"/ 3-dimensional value noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":43666,"byte_end":43695,"line_start":38,"line_end":38,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":45395,"byte_end":45401,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"value4","qualname":"::value::value4","value":"pub fn value4<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 4-dimensional value noise\n","sig":null,"attributes":[{"value":"/ 4-dimensional value noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\value.rs","byte_start":45323,"byte_end":45352,"line_start":71,"line_end":71,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":49809,"byte_end":49822,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"open_simplex2","qualname":"::open_simplex::open_simplex2","value":"pub fn open_simplex2<T: Float>(&PermutationTable, &::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 2-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","sig":null,"attributes":[{"value":"/ 2-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":49623,"byte_end":49711,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":49712,"byte_end":49715,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This is a slower but higher quality form of gradient noise than `noise::perlin2`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":49716,"byte_end":49801,"line_start":30,"line_end":30,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":52863,"byte_end":52876,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"open_simplex3","qualname":"::open_simplex::open_simplex3","value":"pub fn open_simplex3<T: Float>(&PermutationTable, &::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 3-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","sig":null,"attributes":[{"value":"/ 3-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":52677,"byte_end":52765,"line_start":115,"line_end":115,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":52766,"byte_end":52769,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ This is a slower but higher quality form of gradient noise than `noise::perlin3`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":52770,"byte_end":52855,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":58623,"byte_end":58636,"line_start":278,"line_end":278,"column_start":8,"column_end":21},"name":"open_simplex4","qualname":"::open_simplex::open_simplex4","value":"pub fn open_simplex4<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" 4-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","sig":null,"attributes":[{"value":"/ 4-dimensional [OpenSimplex Noise](http://uniblock.tumblr.com/post/97868843242/noise)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":58433,"byte_end":58521,"line_start":274,"line_end":274,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":58522,"byte_end":58525,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ This is a slower but higher quality form of gradient noise than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":58526,"byte_end":58593,"line_start":276,"line_end":276,"column_start":1,"column_end":68}},{"value":"/ `noise::perlin4`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\open_simplex.rs","byte_start":58594,"byte_end":58615,"line_start":277,"line_end":277,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":72843,"byte_end":72863,"line_start":51,"line_end":51,"column_start":8,"column_end":28},"name":"range_sqr_euclidian2","qualname":"::cell::range_sqr_euclidian2","value":"pub fn range_sqr_euclidian2<T: Float>(math::Point2<T>, math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":72667,"byte_end":72684,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Euclidean RangeFunction and `enable_range` set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":72685,"byte_end":72835,"line_start":50,"line_end":50,"column_start":1,"column_end":151}}]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":73170,"byte_end":73190,"line_start":58,"line_end":58,"column_start":8,"column_end":28},"name":"range_sqr_euclidian3","qualname":"::cell::range_sqr_euclidian3","value":"pub fn range_sqr_euclidian3<T: Float>(math::Point3<T>, math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":72994,"byte_end":73011,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Euclidean RangeFunction and `enable_range` set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":73012,"byte_end":73162,"line_start":57,"line_end":57,"column_start":1,"column_end":151}}]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":73497,"byte_end":73517,"line_start":65,"line_end":65,"column_start":8,"column_end":28},"name":"range_sqr_euclidian4","qualname":"::cell::range_sqr_euclidian4","value":"pub fn range_sqr_euclidian4<T: Float>(math::Point4<T>, math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":73321,"byte_end":73338,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Euclidean RangeFunction and `enable_range` set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":73339,"byte_end":73489,"line_start":64,"line_end":64,"column_start":1,"column_end":151}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86135,"byte_end":86151,"line_start":433,"line_end":433,"column_start":8,"column_end":24},"name":"cell2_seed_point","qualname":"::cell::cell2_seed_point","value":"pub fn cell2_seed_point<T, F>(&PermutationTable, &math::Point2<T>, F)\n-> (math::Point2<T>, T) where T: Float,\nF: Fn(math::Point2<T>, math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86081,"byte_end":86098,"line_start":431,"line_end":431,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86099,"byte_end":86127,"line_start":432,"line_end":432,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86960,"byte_end":86976,"line_start":458,"line_end":458,"column_start":8,"column_end":24},"name":"cell3_seed_point","qualname":"::cell::cell3_seed_point","value":"pub fn cell3_seed_point<T, F>(&PermutationTable, &math::Point3<T>, F)\n-> (math::Point3<T>, T) where T: Float,\nF: Fn(math::Point3<T>, math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86906,"byte_end":86923,"line_start":456,"line_end":456,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":86924,"byte_end":86952,"line_start":457,"line_end":457,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":87785,"byte_end":87801,"line_start":483,"line_end":483,"column_start":8,"column_end":24},"name":"cell4_seed_point","qualname":"::cell::cell4_seed_point","value":"pub fn cell4_seed_point<T, F>(&PermutationTable, &math::Point4<T>, F)\n-> (math::Point4<T>, T) where T: Float,\nF: Fn(math::Point4<T>, math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":87731,"byte_end":87748,"line_start":481,"line_end":481,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.3.0\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":87749,"byte_end":87777,"line_start":482,"line_end":482,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":96798,"byte_end":96809,"line_start":702,"line_end":702,"column_start":8,"column_end":19},"name":"cell2_range","qualname":"::cell::cell2_range","value":"pub fn cell2_range<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":96674,"byte_end":96790,"line_start":701,"line_end":701,"column_start":1,"column_end":117}}]},{"kind":"Function","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97100,"byte_end":97111,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"cell3_range","qualname":"::cell::cell3_range","value":"pub fn cell3_range<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":96976,"byte_end":97092,"line_start":707,"line_end":707,"column_start":1,"column_end":117}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97402,"byte_end":97413,"line_start":714,"line_end":714,"column_start":8,"column_end":19},"name":"cell4_range","qualname":"::cell::cell4_range","value":"pub fn cell4_range<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97278,"byte_end":97394,"line_start":713,"line_end":713,"column_start":1,"column_end":117}}]},{"kind":"Function","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97759,"byte_end":97774,"line_start":720,"line_end":720,"column_start":8,"column_end":23},"name":"cell2_range_inv","qualname":"::cell::cell2_range_inv","value":"pub fn cell2_range_inv<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true` and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97580,"byte_end":97751,"line_start":719,"line_end":719,"column_start":1,"column_end":172}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":98145,"byte_end":98160,"line_start":726,"line_end":726,"column_start":8,"column_end":23},"name":"cell3_range_inv","qualname":"::cell::cell3_range_inv","value":"pub fn cell3_range_inv<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true` and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":97966,"byte_end":98137,"line_start":725,"line_end":725,"column_start":1,"column_end":172}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":98531,"byte_end":98546,"line_start":732,"line_end":732,"column_start":8,"column_end":23},"name":"cell4_range_inv","qualname":"::cell::cell4_range_inv","value":"pub fn cell4_range_inv<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with enable_range set to `true` and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":98352,"byte_end":98523,"line_start":731,"line_end":731,"column_start":1,"column_end":172}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":98831,"byte_end":98842,"line_start":738,"line_end":738,"column_start":8,"column_end":19},"name":"cell2_value","qualname":"::cell::cell2_value","value":"pub fn cell2_value<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modulese::Worley` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":98738,"byte_end":98823,"line_start":737,"line_end":737,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99156,"byte_end":99167,"line_start":744,"line_end":744,"column_start":8,"column_end":19},"name":"cell3_value","qualname":"::cell::cell3_value","value":"pub fn cell3_value<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99064,"byte_end":99148,"line_start":743,"line_end":743,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99481,"byte_end":99492,"line_start":750,"line_end":750,"column_start":8,"column_end":19},"name":"cell4_value","qualname":"::cell::cell4_value","value":"pub fn cell4_value<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99389,"byte_end":99473,"line_start":749,"line_end":749,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99839,"byte_end":99854,"line_start":756,"line_end":756,"column_start":8,"column_end":23},"name":"cell2_manhattan","qualname":"::cell::cell2_manhattan","value":"pub fn cell2_manhattan<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":99714,"byte_end":99831,"line_start":755,"line_end":755,"column_start":1,"column_end":118}}]},{"kind":"Function","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100142,"byte_end":100157,"line_start":762,"line_end":762,"column_start":8,"column_end":23},"name":"cell3_manhattan","qualname":"::cell::cell3_manhattan","value":"pub fn cell3_manhattan<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100017,"byte_end":100134,"line_start":761,"line_end":761,"column_start":1,"column_end":118}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100445,"byte_end":100460,"line_start":768,"line_end":768,"column_start":8,"column_end":23},"name":"cell4_manhattan","qualname":"::cell::cell4_manhattan","value":"pub fn cell4_manhattan<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100320,"byte_end":100437,"line_start":767,"line_end":767,"column_start":1,"column_end":118}}]},{"kind":"Function","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100832,"byte_end":100851,"line_start":774,"line_end":774,"column_start":8,"column_end":27},"name":"cell2_manhattan_inv","qualname":"::cell::cell2_manhattan_inv","value":"pub fn cell2_manhattan_inv<T: Float>(&PermutationTable, &math::Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction, enable_range set to `true`, and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":100623,"byte_end":100824,"line_start":773,"line_end":773,"column_start":1,"column_end":202}}]},{"kind":"Function","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":101248,"byte_end":101267,"line_start":780,"line_end":780,"column_start":8,"column_end":27},"name":"cell3_manhattan_inv","qualname":"::cell::cell3_manhattan_inv","value":"pub fn cell3_manhattan_inv<T: Float>(&PermutationTable, &math::Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction, enable_range set to `true`, and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":101039,"byte_end":101240,"line_start":779,"line_end":779,"column_start":1,"column_end":202}}]},{"kind":"Function","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":101664,"byte_end":101683,"line_start":786,"line_end":786,"column_start":8,"column_end":27},"name":"cell4_manhattan_inv","qualname":"::cell::cell4_manhattan_inv","value":"pub fn cell4_manhattan_inv<T: Float>(&PermutationTable, &math::Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction, enable_range set to `true`, and a `noise::modules::ScaleBias` with scale set to -1\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":101455,"byte_end":101656,"line_start":785,"line_end":785,"column_start":1,"column_end":202}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":102027,"byte_end":102048,"line_start":792,"line_end":792,"column_start":8,"column_end":29},"name":"cell2_manhattan_value","qualname":"::cell::cell2_manhattan_value","value":"pub fn cell2_manhattan_value<T: Float>(&PermutationTable, &math::Point2<T>)\n-> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction and enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":101871,"byte_end":102019,"line_start":791,"line_end":791,"column_start":1,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":102500,"byte_end":102521,"line_start":800,"line_end":800,"column_start":8,"column_end":29},"name":"cell3_manhattan_value","qualname":"::cell::cell3_manhattan_value","value":"pub fn cell3_manhattan_value<T: Float>(&PermutationTable, &math::Point3<T>)\n-> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction and enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":102344,"byte_end":102492,"line_start":799,"line_end":799,"column_start":1,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":102973,"byte_end":102994,"line_start":808,"line_end":808,"column_start":8,"column_end":29},"name":"cell4_manhattan_value","qualname":"::cell::cell4_manhattan_value","value":"pub fn cell4_manhattan_value<T: Float>(&PermutationTable, &math::Point4<T>)\n-> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.0\", note =\n\"please use `noise::modules::Worley` instead with the Manhattan RangeFunction and enable_range set to `true`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\cell.rs","byte_start":102817,"byte_end":102965,"line_start":807,"line_end":807,"column_start":1,"column_end":149}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106017,"byte_end":106020,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Add","qualname":"::modules::combiners::add::Add","value":"Add { source1, source2 }","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Noise module that outputs the sum of the two output values from two source\n modules.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the sum of the two output values from two source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":105914,"byte_end":105992,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":105993,"byte_end":106005,"line_start":13,"line_end":13,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106074,"byte_end":106081,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::combiners::add::Add::source1","value":"Source1","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106045,"byte_end":106065,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106126,"byte_end":106133,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::combiners::add::Add::source2","value":"Source2","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106097,"byte_end":106117,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106205,"byte_end":106208,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Add<Source1, Source2>>::new","value":"pub fn new(Source1, Source2) -> Add<Source1, Source2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107248,"byte_end":107251,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Max","qualname":"::modules::combiners::max::Max","value":"Max { source1, source2 }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" Noise module that outputs the larger of the two output values from two source\n modules.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the larger of the two output values from two source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107142,"byte_end":107223,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107224,"byte_end":107236,"line_start":13,"line_end":13,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107305,"byte_end":107312,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::combiners::max::Max::source1","value":"Source1","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107276,"byte_end":107296,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107357,"byte_end":107364,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::combiners::max::Max::source2","value":"Source2","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107328,"byte_end":107348,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107436,"byte_end":107439,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Max<Source1, Source2>>::new","value":"pub fn new(Source1, Source2) -> Max<Source1, Source2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108485,"byte_end":108488,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Min","qualname":"::modules::combiners::min::Min","value":"Min { source1, source2 }","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" Noise module that outputs the smaller of the two output values from two source\n modules.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the smaller of the two output values from two source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108378,"byte_end":108460,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108461,"byte_end":108473,"line_start":13,"line_end":13,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108542,"byte_end":108549,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::combiners::min::Min::source1","value":"Source1","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108513,"byte_end":108533,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108594,"byte_end":108601,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::combiners::min::Min::source2","value":"Source2","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108565,"byte_end":108585,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108673,"byte_end":108676,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Min<Source1, Source2>>::new","value":"pub fn new(Source1, Source2) -> Min<Source1, Source2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109722,"byte_end":109730,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Multiply","qualname":"::modules::combiners::multiply::Multiply","value":"Multiply { source1, source2 }","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"decl_id":null,"docs":" Noise module that outputs the product of the two output values from two source\n modules.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the product of the two output values from two source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109615,"byte_end":109697,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109698,"byte_end":109710,"line_start":13,"line_end":13,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109784,"byte_end":109791,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::combiners::multiply::Multiply::source1","value":"Source1","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109755,"byte_end":109775,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109836,"byte_end":109843,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::combiners::multiply::Multiply::source2","value":"Source2","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109807,"byte_end":109827,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109920,"byte_end":109923,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Multiply<Source1, Source2>>::new","value":"pub fn new(Source1, Source2) -> Multiply<Source1, Source2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111024,"byte_end":111029,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Power","qualname":"::modules::combiners::power::Power","value":"Power { source1, source2 }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" Noise module that raises the output value from the first source module\n to the power of the output value of the second source module.\n","sig":null,"attributes":[{"value":"/ Noise module that raises the output value from the first source module","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":110872,"byte_end":110946,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ to the power of the output value of the second source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":110947,"byte_end":111012,"line_start":13,"line_end":13,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111083,"byte_end":111090,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::combiners::power::Power::source1","value":"Source1","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111054,"byte_end":111074,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111135,"byte_end":111142,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::combiners::power::Power::source2","value":"Source2","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111106,"byte_end":111126,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111216,"byte_end":111219,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Power<Source1, Source2>>::new","value":"pub fn new(Source1, Source2) -> Power<Source1, Source2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113125,"byte_end":113133,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Constant","qualname":"::modules::generators::constant::Constant","value":"Constant { value }","parent":null,"children":[{"krate":0,"index":1989}],"decl_id":null,"docs":" Noise module that outputs a constant value.","sig":null,"attributes":[{"value":"/ Noise module that outputs a constant value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112802,"byte_end":112849,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112850,"byte_end":112853,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module takes a input, value, and returns that input for all points,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112854,"byte_end":112930,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ producing a constant-valued field.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112931,"byte_end":112969,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112970,"byte_end":112973,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This module is not very useful by itself, but can be used as a source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":112974,"byte_end":113047,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ module for other noise modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113048,"byte_end":113083,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113178,"byte_end":113183,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"value","qualname":"::modules::generators::constant::Constant::value","value":"T","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113150,"byte_end":113169,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113231,"byte_end":113234,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Constant<T>>::new","value":"pub fn new(T) -> Constant<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114008,"byte_end":114033,"line_start":15,"line_end":15,"column_start":11,"column_end":36},"name":"DEFAULT_CHECKERBOARD_SIZE","qualname":"::modules::generators::checkerboard::DEFAULT_CHECKERBOARD_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default Checkerboard size\n","sig":null,"attributes":[{"value":"/ Default Checkerboard size","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":113968,"byte_end":113997,"line_start":14,"line_end":14,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114429,"byte_end":114441,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"Checkerboard","qualname":"::modules::generators::checkerboard::Checkerboard","value":"Checkerboard { size }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000}],"decl_id":null,"docs":" Noise module that outputs a checkerboard pattern.","sig":null,"attributes":[{"value":"/ Noise module that outputs a checkerboard pattern.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114047,"byte_end":114100,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114101,"byte_end":114104,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This noise module can take one input, size, and outputs 2<sup>size</sup>-sized","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114105,"byte_end":114187,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/ blocks of alternating values. The values of these blocks alternate between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114188,"byte_end":114266,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ -1.0 and 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114267,"byte_end":114284,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114285,"byte_end":114288,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This noise module is not very useful by itself, but it can be used for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114289,"byte_end":114363,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ debugging purposes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114364,"byte_end":114387,"line_start":24,"line_end":24,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114504,"byte_end":114508,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"size","qualname":"::modules::generators::checkerboard::Checkerboard::size","value":"usize","parent":{"krate":0,"index":1998},"children":[],"decl_id":null,"docs":" Controls the size of the block in 2^(size).\n","sig":null,"attributes":[{"value":"/ Controls the size of the block in 2^(size).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114448,"byte_end":114495,"line_start":27,"line_end":27,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114665,"byte_end":114668,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkerboard>::new","value":"pub fn new() -> Checkerboard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114814,"byte_end":114822,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"set_size","qualname":"<Checkerboard>::set_size","value":"pub fn set_size(Self, usize) -> Checkerboard","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116516,"byte_end":116543,"line_start":15,"line_end":15,"column_start":11,"column_end":38},"name":"DEFAULT_CYLINDERS_FREQUENCY","qualname":"::modules::generators::cylinders::DEFAULT_CYLINDERS_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default cylinders frequency\n","sig":null,"attributes":[{"value":"/ Default cylinders frequency","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116474,"byte_end":116505,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116875,"byte_end":116884,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"Cylinders","qualname":"::modules::generators::cylinders::Cylinders","value":"Cylinders { frequency }","parent":null,"children":[{"krate":0,"index":2008}],"decl_id":null,"docs":" Noise module that outputs concentric cylinders.","sig":null,"attributes":[{"value":"/ Noise module that outputs concentric cylinders.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116557,"byte_end":116608,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116609,"byte_end":116612,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This noise module outputs concentric cylinders centered on the origin. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116613,"byte_end":116691,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ cylinders are oriented along the z axis similar to the concentric rings of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116692,"byte_end":116770,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ a tree. Each cylinder extends infinitely along the z axis.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116771,"byte_end":116833,"line_start":21,"line_end":21,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116950,"byte_end":116959,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::cylinders::Cylinders::frequency","value":"T","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":" Frequency of the concentric objects.\n","sig":null,"attributes":[{"value":"/ Frequency of the concentric objects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116901,"byte_end":116941,"line_start":24,"line_end":24,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117008,"byte_end":117011,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Cylinders<T>>::new","value":"pub fn new() -> Cylinders<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117123,"byte_end":117136,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Cylinders<T>>::set_frequency","value":"pub fn set_frequency(Self, T) -> Cylinders<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120151,"byte_end":120174,"line_start":15,"line_end":15,"column_start":11,"column_end":34},"name":"DEFAULT_BASICMULTI_SEED","qualname":"::modules::generators::fractals::basicmulti::DEFAULT_BASICMULTI_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120085,"byte_end":120140,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120260,"byte_end":120286,"line_start":17,"line_end":17,"column_start":11,"column_end":37},"name":"DEFAULT_BASICMULTI_OCTAVES","qualname":"::modules::generators::fractals::basicmulti::DEFAULT_BASICMULTI_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default number of octaves for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default number of octaves for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120187,"byte_end":120249,"line_start":16,"line_end":16,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120364,"byte_end":120392,"line_start":19,"line_end":19,"column_start":11,"column_end":39},"name":"DEFAULT_BASICMULTI_FREQUENCY","qualname":"::modules::generators::fractals::basicmulti::DEFAULT_BASICMULTI_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120299,"byte_end":120353,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120471,"byte_end":120500,"line_start":21,"line_end":21,"column_start":11,"column_end":40},"name":"DEFAULT_BASICMULTI_LACUNARITY","qualname":"::modules::generators::fractals::basicmulti::DEFAULT_BASICMULTI_LACUNARITY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default lacunarity for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default lacunarity for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120405,"byte_end":120460,"line_start":20,"line_end":20,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120580,"byte_end":120610,"line_start":23,"line_end":23,"column_start":11,"column_end":41},"name":"DEFAULT_BASICMULTI_PERSISTENCE","qualname":"::modules::generators::fractals::basicmulti::DEFAULT_BASICMULTI_PERSISTENCE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default persistence for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default persistence for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120513,"byte_end":120569,"line_start":22,"line_end":22,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120696,"byte_end":120718,"line_start":25,"line_end":25,"column_start":11,"column_end":33},"name":"BASICMULTI_MAX_OCTAVES","qualname":"::modules::generators::fractals::basicmulti::BASICMULTI_MAX_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of octaves for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Maximum number of octaves for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120623,"byte_end":120685,"line_start":24,"line_end":24,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2017},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121258,"byte_end":121268,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"BasicMulti","qualname":"::modules::generators::fractals::basicmulti::BasicMulti","value":"BasicMulti { seed, octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024}],"decl_id":null,"docs":" Noise module that outputs heterogenous Multifractal noise.","sig":null,"attributes":[{"value":"/ Noise module that outputs heterogenous Multifractal noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120733,"byte_end":120795,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120796,"byte_end":120799,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This is a multifractal method, meaning that it has a fractal dimension","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120800,"byte_end":120874,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ that varies with location.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120875,"byte_end":120905,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120906,"byte_end":120909,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The result of this multifractal method is that in areas near zero, higher","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120910,"byte_end":120987,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ frequencies will be heavily damped, resulting in the terrain remaining","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":120988,"byte_end":121062,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ smooth. As the value moves further away from zero, higher frequencies will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121063,"byte_end":121141,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ not be as damped and thus will grow more jagged as iteration progresses.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121142,"byte_end":121218,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121219,"byte_end":121222,"line_start":36,"line_end":36,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121296,"byte_end":121300,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::fractals::basicmulti::BasicMulti::seed","value":"usize","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121278,"byte_end":121287,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2020},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121592,"byte_end":121599,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"octaves","qualname":"::modules::generators::fractals::basicmulti::BasicMulti::octaves","value":"usize","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121314,"byte_end":121379,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121384,"byte_end":121387,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121392,"byte_end":121461,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121466,"byte_end":121539,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121544,"byte_end":121583,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121695,"byte_end":121704,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::fractals::basicmulti::BasicMulti::frequency","value":"T","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121613,"byte_end":121686,"line_start":49,"line_end":49,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122140,"byte_end":122150,"line_start":60,"line_end":60,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::modules::generators::fractals::basicmulti::BasicMulti::lacunarity","value":"T","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121714,"byte_end":121786,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121791,"byte_end":121840,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121845,"byte_end":121848,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121853,"byte_end":121927,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121932,"byte_end":121989,"line_start":56,"line_end":56,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":121994,"byte_end":121997,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122002,"byte_end":122077,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122082,"byte_end":122131,"line_start":59,"line_end":59,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122506,"byte_end":122517,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"name":"persistence","qualname":"::modules::generators::fractals::basicmulti::BasicMulti::persistence","value":"T","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122160,"byte_end":122232,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122237,"byte_end":122286,"line_start":63,"line_end":63,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122291,"byte_end":122294,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122299,"byte_end":122373,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122378,"byte_end":122451,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122456,"byte_end":122497,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122594,"byte_end":122597,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicMulti<T>>::new","value":"pub fn new() -> BasicMulti<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":127988,"byte_end":128007,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"DEFAULT_BILLOW_SEED","qualname":"::modules::generators::fractals::billow::DEFAULT_BILLOW_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":127926,"byte_end":127977,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128089,"byte_end":128116,"line_start":17,"line_end":17,"column_start":11,"column_end":38},"name":"DEFAULT_BILLOW_OCTAVE_COUNT","qualname":"::modules::generators::fractals::billow::DEFAULT_BILLOW_OCTAVE_COUNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default number of octaves for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Default number of octaves for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128020,"byte_end":128078,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128190,"byte_end":128214,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"DEFAULT_BILLOW_FREQUENCY","qualname":"::modules::generators::fractals::billow::DEFAULT_BILLOW_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128129,"byte_end":128179,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128289,"byte_end":128314,"line_start":21,"line_end":21,"column_start":11,"column_end":36},"name":"DEFAULT_BILLOW_LACUNARITY","qualname":"::modules::generators::fractals::billow::DEFAULT_BILLOW_LACUNARITY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default lacunarity for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Default lacunarity for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128227,"byte_end":128278,"line_start":20,"line_end":20,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128390,"byte_end":128416,"line_start":23,"line_end":23,"column_start":11,"column_end":37},"name":"DEFAULT_BILLOW_PERSISTENCE","qualname":"::modules::generators::fractals::billow::DEFAULT_BILLOW_PERSISTENCE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default persistence for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Default persistence for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128327,"byte_end":128379,"line_start":22,"line_end":22,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128498,"byte_end":128516,"line_start":25,"line_end":25,"column_start":11,"column_end":29},"name":"BILLOW_MAX_OCTAVES","qualname":"::modules::generators::fractals::billow::BILLOW_MAX_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of octaves for the Billow noise module.\n","sig":null,"attributes":[{"value":"/ Maximum number of octaves for the Billow noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128429,"byte_end":128487,"line_start":24,"line_end":24,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128893,"byte_end":128899,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"Billow","qualname":"::modules::generators::fractals::billow::Billow","value":"Billow { seed, octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"decl_id":null,"docs":" Noise module that outputs \"billowy\" noise.","sig":null,"attributes":[{"value":"/ Noise module that outputs \"billowy\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128531,"byte_end":128577,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128578,"byte_end":128581,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This noise module produces \"billowy\" noise suitable for clouds and rocks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128582,"byte_end":128659,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128660,"byte_end":128663,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This noise module is nearly identical to fBm noise, except this noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128664,"byte_end":128737,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ module modifes each octave with an absolute-value function. See the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128738,"byte_end":128809,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ documentation for fBm for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128810,"byte_end":128857,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128927,"byte_end":128931,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::fractals::billow::Billow::seed","value":"usize","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128909,"byte_end":128918,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129223,"byte_end":129230,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"octaves","qualname":"::modules::generators::fractals::billow::Billow::octaves","value":"usize","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":128945,"byte_end":129010,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129015,"byte_end":129018,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129023,"byte_end":129092,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129097,"byte_end":129170,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129175,"byte_end":129214,"line_start":43,"line_end":43,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129326,"byte_end":129335,"line_start":47,"line_end":47,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::fractals::billow::Billow::frequency","value":"T","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129244,"byte_end":129317,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129771,"byte_end":129781,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::modules::generators::fractals::billow::Billow::lacunarity","value":"T","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129345,"byte_end":129417,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129422,"byte_end":129471,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129476,"byte_end":129479,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129484,"byte_end":129558,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129563,"byte_end":129620,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129625,"byte_end":129628,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129633,"byte_end":129708,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129713,"byte_end":129762,"line_start":56,"line_end":56,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130137,"byte_end":130148,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"persistence","qualname":"::modules::generators::fractals::billow::Billow::persistence","value":"T","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129791,"byte_end":129863,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129868,"byte_end":129917,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129922,"byte_end":129925,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":129930,"byte_end":130004,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130009,"byte_end":130082,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130087,"byte_end":130128,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130221,"byte_end":130224,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Billow<T>>::new","value":"pub fn new() -> Billow<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135227,"byte_end":135243,"line_start":15,"line_end":15,"column_start":11,"column_end":27},"name":"DEFAULT_FBM_SEED","qualname":"::modules::generators::fractals::fbm::DEFAULT_FBM_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the fBm noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the fBm noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135168,"byte_end":135216,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135322,"byte_end":135346,"line_start":17,"line_end":17,"column_start":11,"column_end":35},"name":"DEFAULT_FBM_OCTAVE_COUNT","qualname":"::modules::generators::fractals::fbm::DEFAULT_FBM_OCTAVE_COUNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default number of octaves for the fBm noise module.\n","sig":null,"attributes":[{"value":"/ Default number of octaves for the fBm noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135256,"byte_end":135311,"line_start":16,"line_end":16,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135417,"byte_end":135438,"line_start":19,"line_end":19,"column_start":11,"column_end":32},"name":"DEFAULT_FBM_FREQUENCY","qualname":"::modules::generators::fractals::fbm::DEFAULT_FBM_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the fBm noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the fBm noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135359,"byte_end":135406,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135510,"byte_end":135532,"line_start":21,"line_end":21,"column_start":11,"column_end":33},"name":"DEFAULT_FBM_LACUNARITY","qualname":"::modules::generators::fractals::fbm::DEFAULT_FBM_LACUNARITY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default lacunarity for the fBm noise module.\n","sig":null,"attributes":[{"value":"/ Default lacunarity for the fBm noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135451,"byte_end":135499,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135607,"byte_end":135630,"line_start":23,"line_end":23,"column_start":11,"column_end":34},"name":"DEFAULT_FBM_PERSISTENCE","qualname":"::modules::generators::fractals::fbm::DEFAULT_FBM_PERSISTENCE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default Hurst exponent for the fBm noise module\n","sig":null,"attributes":[{"value":"/ Default Hurst exponent for the fBm noise module","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135545,"byte_end":135596,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135709,"byte_end":135724,"line_start":25,"line_end":25,"column_start":11,"column_end":26},"name":"FBM_MAX_OCTAVES","qualname":"::modules::generators::fractals::fbm::FBM_MAX_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of octaves for the fBm noise module.\n","sig":null,"attributes":[{"value":"/ Maximum number of octaves for the fBm noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135643,"byte_end":135698,"line_start":24,"line_end":24,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136567,"byte_end":136570,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"Fbm","qualname":"::modules::generators::fractals::fbm::Fbm","value":"Fbm { seed, octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052}],"decl_id":null,"docs":" Noise module that outputs fBm (fractal Brownian motion) noise.","sig":null,"attributes":[{"value":"/ Noise module that outputs fBm (fractal Brownian motion) noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135739,"byte_end":135805,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135806,"byte_end":135809,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fBm is a _monofractal_ method. In essence, fBm has a _constant_ fractal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135810,"byte_end":135885,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ dimension. It is as close to statistically _homogeneous_ and _isotropic_","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135886,"byte_end":135962,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ as possible. Homogeneous means \"the same everywhere\" and isotropic means","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":135963,"byte_end":136039,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ \"the same in all directions\" (note that the two do not mean the same","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136040,"byte_end":136112,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ thing).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136113,"byte_end":136124,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136125,"byte_end":136128,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The main difference between fractal Brownian motion and regular Brownian","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136129,"byte_end":136205,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ motion is that while the increments in Brownian motion are independent,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136206,"byte_end":136281,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ the increments in fractal Brownian motion depend on the previous increment.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136282,"byte_end":136361,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136362,"byte_end":136365,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fBm is the result of several noise functions of ever-increasing frequency","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136366,"byte_end":136443,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ and ever-decreasing amplitude.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136444,"byte_end":136478,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136479,"byte_end":136482,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ fBm is commonly referred to as Perlin noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136483,"byte_end":136531,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136598,"byte_end":136602,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::fractals::fbm::Fbm::seed","value":"usize","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136580,"byte_end":136589,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136894,"byte_end":136901,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"name":"octaves","qualname":"::modules::generators::fractals::fbm::Fbm::octaves","value":"usize","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136616,"byte_end":136681,"line_start":48,"line_end":48,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136686,"byte_end":136689,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136694,"byte_end":136763,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136768,"byte_end":136841,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136846,"byte_end":136885,"line_start":52,"line_end":52,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136997,"byte_end":137006,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::fractals::fbm::Fbm::frequency","value":"T","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":136915,"byte_end":136988,"line_start":55,"line_end":55,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137442,"byte_end":137452,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::modules::generators::fractals::fbm::Fbm::lacunarity","value":"T","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137016,"byte_end":137088,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137093,"byte_end":137142,"line_start":59,"line_end":59,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137147,"byte_end":137150,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137155,"byte_end":137229,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137234,"byte_end":137291,"line_start":62,"line_end":62,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137296,"byte_end":137299,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137304,"byte_end":137379,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137384,"byte_end":137433,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137808,"byte_end":137819,"line_start":74,"line_end":74,"column_start":9,"column_end":20},"name":"persistence","qualname":"::modules::generators::fractals::fbm::Fbm::persistence","value":"T","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137462,"byte_end":137534,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137539,"byte_end":137588,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137593,"byte_end":137596,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137601,"byte_end":137675,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137680,"byte_end":137753,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137758,"byte_end":137799,"line_start":73,"line_end":73,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137889,"byte_end":137892,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Fbm<T>>::new","value":"pub fn new() -> Fbm<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142649,"byte_end":142673,"line_start":14,"line_end":14,"column_start":11,"column_end":35},"name":"DEFAULT_HYBRIDMULTI_SEED","qualname":"::modules::generators::fractals::hybridmulti::DEFAULT_HYBRIDMULTI_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142583,"byte_end":142638,"line_start":13,"line_end":13,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142759,"byte_end":142786,"line_start":16,"line_end":16,"column_start":11,"column_end":38},"name":"DEFAULT_HYBRIDMULTI_OCTAVES","qualname":"::modules::generators::fractals::hybridmulti::DEFAULT_HYBRIDMULTI_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default number of octaves for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default number of octaves for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142686,"byte_end":142748,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142864,"byte_end":142893,"line_start":18,"line_end":18,"column_start":11,"column_end":40},"name":"DEFAULT_HYBRIDMULTI_FREQUENCY","qualname":"::modules::generators::fractals::hybridmulti::DEFAULT_HYBRIDMULTI_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142799,"byte_end":142853,"line_start":17,"line_end":17,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142972,"byte_end":143002,"line_start":20,"line_end":20,"column_start":11,"column_end":41},"name":"DEFAULT_HYBRIDMULTI_LACUNARITY","qualname":"::modules::generators::fractals::hybridmulti::DEFAULT_HYBRIDMULTI_LACUNARITY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default lacunarity for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default lacunarity for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":142906,"byte_end":142961,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143082,"byte_end":143113,"line_start":22,"line_end":22,"column_start":11,"column_end":42},"name":"DEFAULT_HYBRIDMULTI_PERSISTENCE","qualname":"::modules::generators::fractals::hybridmulti::DEFAULT_HYBRIDMULTI_PERSISTENCE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default persistence for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default persistence for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143015,"byte_end":143071,"line_start":21,"line_end":21,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143200,"byte_end":143223,"line_start":24,"line_end":24,"column_start":11,"column_end":34},"name":"HYBRIDMULTI_MAX_OCTAVES","qualname":"::modules::generators::fractals::hybridmulti::HYBRIDMULTI_MAX_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of octaves for the BasicMulti noise module.\n","sig":null,"attributes":[{"value":"/ Maximum number of octaves for the BasicMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143127,"byte_end":143189,"line_start":23,"line_end":23,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143454,"byte_end":143465,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"HybridMulti","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti","value":"HybridMulti { seed, octaves, frequency, lacunarity, persistence }","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":" Noise module that outputs hybrid Multifractal noise.","sig":null,"attributes":[{"value":"/ Noise module that outputs hybrid Multifractal noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143238,"byte_end":143294,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143295,"byte_end":143298,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The result of this multifractal noise is that valleys in the noise should","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143299,"byte_end":143376,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ have smooth bottoms at all altitudes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143377,"byte_end":143418,"line_start":29,"line_end":29,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143493,"byte_end":143497,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti::seed","value":"usize","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143475,"byte_end":143484,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143789,"byte_end":143796,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"octaves","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti::octaves","value":"usize","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143511,"byte_end":143576,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143581,"byte_end":143584,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143589,"byte_end":143658,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143663,"byte_end":143736,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143741,"byte_end":143780,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143892,"byte_end":143901,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti::frequency","value":"T","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143810,"byte_end":143883,"line_start":42,"line_end":42,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144337,"byte_end":144347,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti::lacunarity","value":"T","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143911,"byte_end":143983,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":143988,"byte_end":144037,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144042,"byte_end":144045,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144050,"byte_end":144124,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144129,"byte_end":144186,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144191,"byte_end":144194,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144199,"byte_end":144274,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144279,"byte_end":144328,"line_start":52,"line_end":52,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144703,"byte_end":144714,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"name":"persistence","qualname":"::modules::generators::fractals::hybridmulti::HybridMulti::persistence","value":"T","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144357,"byte_end":144429,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144434,"byte_end":144483,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144488,"byte_end":144491,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144496,"byte_end":144570,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144575,"byte_end":144648,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144653,"byte_end":144694,"line_start":60,"line_end":60,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144792,"byte_end":144795,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<HybridMulti<T>>::new","value":"pub fn new() -> HybridMulti<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150766,"byte_end":150785,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"DEFAULT_RIDGED_SEED","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150699,"byte_end":150755,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150872,"byte_end":150899,"line_start":17,"line_end":17,"column_start":11,"column_end":38},"name":"DEFAULT_RIDGED_OCTAVE_COUNT","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_OCTAVE_COUNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default number of octaves for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default number of octaves for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150798,"byte_end":150861,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150978,"byte_end":151002,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"DEFAULT_RIDGED_FREQUENCY","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":150912,"byte_end":150967,"line_start":18,"line_end":18,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151082,"byte_end":151107,"line_start":21,"line_end":21,"column_start":11,"column_end":36},"name":"DEFAULT_RIDGED_LACUNARITY","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_LACUNARITY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default lacunarity for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default lacunarity for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151015,"byte_end":151071,"line_start":20,"line_end":20,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151188,"byte_end":151214,"line_start":23,"line_end":23,"column_start":11,"column_end":37},"name":"DEFAULT_RIDGED_PERSISTENCE","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_PERSISTENCE","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default persistence for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default persistence for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151120,"byte_end":151177,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151295,"byte_end":151321,"line_start":25,"line_end":25,"column_start":11,"column_end":37},"name":"DEFAULT_RIDGED_ATTENUATION","qualname":"::modules::generators::fractals::ridgedmulti::DEFAULT_RIDGED_ATTENUATION","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default attenuation for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Default attenuation for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151227,"byte_end":151284,"line_start":24,"line_end":24,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151408,"byte_end":151426,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"RIDGED_MAX_OCTAVES","qualname":"::modules::generators::fractals::ridgedmulti::RIDGED_MAX_OCTAVES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of octaves for the RidgedMulti noise module.\n","sig":null,"attributes":[{"value":"/ Maximum number of octaves for the RidgedMulti noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151334,"byte_end":151397,"line_start":26,"line_end":26,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152328,"byte_end":152339,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"RidgedMulti","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti","value":"RidgedMulti { seed, octaves, frequency, lacunarity, persistence, attenuation }","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081}],"decl_id":null,"docs":" Noise module that outputs ridged-multifractal noise.","sig":null,"attributes":[{"value":"/ Noise module that outputs ridged-multifractal noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151441,"byte_end":151497,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151498,"byte_end":151501,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This noise module, heavily based on the fBm-noise module, generates","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151502,"byte_end":151573,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ ridged-multifractal noise. Ridged-multifractal noise is generated in much","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151574,"byte_end":151651,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ the same way as fBm noise, except the output of each octave is modified by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151652,"byte_end":151730,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ an absolute-value function. Modifying the octave values in this way","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151731,"byte_end":151802,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ produces ridge-like formations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151803,"byte_end":151838,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151839,"byte_end":151842,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The values output from this module will usually range from -1.0 to 1.0 with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151843,"byte_end":151922,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ default values for the parameters, but there are no guarantees that all","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151923,"byte_end":151998,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ output values will exist within this range. If the parameters are modified","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":151999,"byte_end":152077,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ from their defaults, then the output will need to be scaled to remain in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152078,"byte_end":152154,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ the [-1,1] range.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152155,"byte_end":152176,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152177,"byte_end":152180,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Ridged-multifractal noise is often used to generate craggy mountainous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152181,"byte_end":152255,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ terrain or marble-like textures.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152256,"byte_end":152292,"line_start":44,"line_end":44,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152367,"byte_end":152371,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::seed","value":"usize","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152349,"byte_end":152358,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152663,"byte_end":152670,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"octaves","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::octaves","value":"usize","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" Total number of frequency octaves to generate the noise with.","sig":null,"attributes":[{"value":"/ Total number of frequency octaves to generate the noise with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152385,"byte_end":152450,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152455,"byte_end":152458,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The number of octaves control the _amount of detail_ in the noise","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152463,"byte_end":152532,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ function. Adding more octaves increases the detail, with the drawback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152537,"byte_end":152610,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ of increasing the calculation time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152615,"byte_end":152654,"line_start":54,"line_end":54,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152766,"byte_end":152775,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::frequency","value":"T","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" The number of cycles per unit length that the noise function outputs.\n","sig":null,"attributes":[{"value":"/ The number of cycles per unit length that the noise function outputs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152684,"byte_end":152757,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153211,"byte_end":153221,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"lacunarity","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::lacunarity","value":"T","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the frequency increases for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the frequency increases for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152785,"byte_end":152857,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152862,"byte_end":152911,"line_start":61,"line_end":61,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152916,"byte_end":152919,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The frequency of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":152924,"byte_end":152998,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ previous octave's frequency and the lacunarity value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153003,"byte_end":153060,"line_start":64,"line_end":64,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153065,"byte_end":153068,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ A lacunarity of 2.0 results in the frequency doubling every octave. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153073,"byte_end":153148,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ almost all cases, 2.0 is a good value to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153153,"byte_end":153202,"line_start":67,"line_end":67,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153577,"byte_end":153588,"line_start":76,"line_end":76,"column_start":9,"column_end":20},"name":"persistence","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::persistence","value":"T","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" A multiplier that determines how quickly the amplitudes diminish for\n each successive octave in the noise function.","sig":null,"attributes":[{"value":"/ A multiplier that determines how quickly the amplitudes diminish for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153231,"byte_end":153303,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ each successive octave in the noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153308,"byte_end":153357,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153362,"byte_end":153365,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The amplitude of each successive octave is equal to the product of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153370,"byte_end":153444,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ previous octave's amplitude and the persistence value. Increasing the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153449,"byte_end":153522,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ persistence produces \"rougher\" noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153527,"byte_end":153568,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153866,"byte_end":153877,"line_start":82,"line_end":82,"column_start":9,"column_end":20},"name":"attenuation","qualname":"::modules::generators::fractals::ridgedmulti::RidgedMulti::attenuation","value":"T","parent":{"krate":0,"index":2073},"children":[],"decl_id":null,"docs":" The attenuation to apply to the weight on each octave. This reduces\n the strength of each successive octave, making their respective\n ridges smaller. The default attenuation is 2.0, making each octave\n half the height of the previous.\n","sig":null,"attributes":[{"value":"/ The attenuation to apply to the weight on each octave. This reduces","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153598,"byte_end":153669,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ the strength of each successive octave, making their respective","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153674,"byte_end":153741,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"/ ridges smaller. The default attenuation is 2.0, making each octave","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153746,"byte_end":153816,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ half the height of the previous.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153821,"byte_end":153857,"line_start":81,"line_end":81,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153955,"byte_end":153958,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<RidgedMulti<T>>::new","value":"pub fn new() -> RidgedMulti<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":154467,"byte_end":154482,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"set_attenuation","qualname":"<RidgedMulti<T>>::set_attenuation","value":"pub fn set_attenuation(Self, T) -> RidgedMulti<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119121,"byte_end":119133,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"MultiFractal","qualname":"::modules::generators::fractals::MultiFractal","value":"MultiFractal<T>","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" Trait for MultiFractal modules\n","sig":null,"attributes":[{"value":"/ Trait for MultiFractal modules","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119076,"byte_end":119110,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119146,"byte_end":119157,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"set_octaves","qualname":"::modules::generators::fractals::MultiFractal::set_octaves","value":"pub fn set_octaves(Self, usize) -> Self","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119197,"byte_end":119210,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"set_frequency","qualname":"::modules::generators::fractals::MultiFractal::set_frequency","value":"pub fn set_frequency(Self, T) -> Self","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119248,"byte_end":119262,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"set_lacunarity","qualname":"::modules::generators::fractals::MultiFractal::set_lacunarity","value":"pub fn set_lacunarity(Self, T) -> Self","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\mod.rs","byte_start":119301,"byte_end":119316,"line_start":31,"line_end":31,"column_start":8,"column_end":23},"name":"set_persistence","qualname":"::modules::generators::fractals::MultiFractal::set_persistence","value":"pub fn set_persistence(Self, T) -> Self","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161631,"byte_end":161650,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"DEFAULT_PERLIN_SEED","qualname":"::modules::generators::perlin::DEFAULT_PERLIN_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default Seed for the Perlin noise module.\n","sig":null,"attributes":[{"value":"/ Default Seed for the Perlin noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161575,"byte_end":161620,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161767,"byte_end":161773,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Perlin","qualname":"::modules::generators::perlin::Perlin","value":"Perlin { seed }","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" Noise module that outputs 2/3/4-dimensional Perlin noise.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs 2/3/4-dimensional Perlin noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161664,"byte_end":161725,"line_start":17,"line_end":17,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161814,"byte_end":161818,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::perlin::Perlin::seed","value":"usize","parent":{"krate":0,"index":2088},"children":[],"decl_id":null,"docs":" Seed value for Perlin\n","sig":null,"attributes":[{"value":"/ Seed value for Perlin","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161780,"byte_end":161805,"line_start":20,"line_end":20,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161890,"byte_end":161893,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Perlin>::new","value":"pub fn new() -> Perlin","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172596,"byte_end":172615,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"DEFAULT_WORLEY_SEED","qualname":"::modules::generators::worley::DEFAULT_WORLEY_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default noise seed for the Worley noise module.\n","sig":null,"attributes":[{"value":"/ Default noise seed for the Worley noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172534,"byte_end":172585,"line_start":14,"line_end":14,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172693,"byte_end":172721,"line_start":17,"line_end":17,"column_start":11,"column_end":39},"name":"DEFAULT_WORLEY_RANGEFUNCTION","qualname":"::modules::generators::worley::DEFAULT_WORLEY_RANGEFUNCTION","value":"RangeFunction","parent":null,"children":[],"decl_id":null,"docs":" Default RangeFunction for the Worley noise module.\n","sig":null,"attributes":[{"value":"/ Default RangeFunction for the Worley noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172628,"byte_end":172682,"line_start":16,"line_end":16,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172826,"byte_end":172850,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"DEFAULT_WORLEY_FREQUENCY","qualname":"::modules::generators::worley::DEFAULT_WORLEY_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the Worley noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the Worley noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172765,"byte_end":172815,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172927,"byte_end":172954,"line_start":21,"line_end":21,"column_start":11,"column_end":38},"name":"DEFAULT_WORLEY_DISPLACEMENT","qualname":"::modules::generators::worley::DEFAULT_WORLEY_DISPLACEMENT","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default displacement for the Worley noise module.\n","sig":null,"attributes":[{"value":"/ Default displacement for the Worley noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172863,"byte_end":172916,"line_start":20,"line_end":20,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173053,"byte_end":173059,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Worley","qualname":"::modules::generators::worley::Worley","value":"Worley { seed, range_function, enable_range, frequency, displacement }","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103}],"decl_id":null,"docs":" Noise module that outputs Worley noise.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs Worley noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":172968,"byte_end":173011,"line_start":23,"line_end":23,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173122,"byte_end":173126,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::generators::worley::Worley::seed","value":"usize","parent":{"krate":0,"index":2096},"children":[],"decl_id":null,"docs":" Seed.\n","sig":null,"attributes":[{"value":"/ Seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173104,"byte_end":173113,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173241,"byte_end":173255,"line_start":33,"line_end":33,"column_start":9,"column_end":23},"name":"range_function","qualname":"::modules::generators::worley::Worley::range_function","value":"modules::generators::worley::RangeFunction","parent":{"krate":0,"index":2096},"children":[],"decl_id":null,"docs":" Specifies the range function to use when calculating the boundaries of\n the cell.\n","sig":null,"attributes":[{"value":"/ Specifies the range function to use when calculating the boundaries of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173140,"byte_end":173214,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ the cell.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173219,"byte_end":173232,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173384,"byte_end":173396,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"enable_range","qualname":"::modules::generators::worley::Worley::enable_range","value":"bool","parent":{"krate":0,"index":2096},"children":[],"decl_id":null,"docs":" Determines if the distance from the nearest seed point is applied to\n the output value.\n","sig":null,"attributes":[{"value":"/ Determines if the distance from the nearest seed point is applied to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173277,"byte_end":173349,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the output value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173354,"byte_end":173375,"line_start":36,"line_end":36,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173451,"byte_end":173460,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::generators::worley::Worley::frequency","value":"T","parent":{"krate":0,"index":2096},"children":[],"decl_id":null,"docs":" Frequency of the seed points.\n","sig":null,"attributes":[{"value":"/ Frequency of the seed points.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173409,"byte_end":173442,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173815,"byte_end":173827,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"displacement","qualname":"::modules::generators::worley::Worley::displacement","value":"T","parent":{"krate":0,"index":2096},"children":[],"decl_id":null,"docs":" Scale of the random displacement to apply to each cell.","sig":null,"attributes":[{"value":"/ Scale of the random displacement to apply to each cell.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173470,"byte_end":173529,"line_start":42,"line_end":42,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173534,"byte_end":173537,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The noise module assigns each Worley cell a random constant value from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173542,"byte_end":173616,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ a value noise function. The `displacement` _value_ controls the range","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173621,"byte_end":173694,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ random values to assign to each cell. The range of random values is +/-","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173699,"byte_end":173774,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ the displacement value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173779,"byte_end":173806,"line_start":47,"line_end":47,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173886,"byte_end":173889,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Worley<T>>::new","value":"pub fn new() -> Worley<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174343,"byte_end":174361,"line_start":66,"line_end":66,"column_start":12,"column_end":30},"name":"set_range_function","qualname":"<Worley<T>>::set_range_function","value":"pub fn set_range_function(Self, RangeFunction) -> Worley<T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the range function used by the Worley cells.\n","sig":null,"attributes":[{"value":"/ Sets the range function used by the Worley cells.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174278,"byte_end":174331,"line_start":65,"line_end":65,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174597,"byte_end":174609,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"enable_range","qualname":"<Worley<T>>::enable_range","value":"pub fn enable_range(Self, bool) -> Worley<T>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables applying the distance from the nearest seed point\n to the output value.\n","sig":null,"attributes":[{"value":"/ Enables or disables applying the distance from the nearest seed point","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174483,"byte_end":174556,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ to the output value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174561,"byte_end":174585,"line_start":71,"line_end":71,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174770,"byte_end":174783,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Worley<T>>::set_frequency","value":"pub fn set_frequency(Self, T) -> Worley<T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the frequency of the seed points.\n","sig":null,"attributes":[{"value":"/ Sets the frequency of the seed points.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174716,"byte_end":174758,"line_start":76,"line_end":76,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":174885,"byte_end":174901,"line_start":81,"line_end":81,"column_start":12,"column_end":28},"name":"set_displacement","qualname":"<Worley<T>>::set_displacement","value":"pub fn set_displacement(Self, T) -> Worley<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175526,"byte_end":175535,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Euclidean","qualname":"::modules::generators::worley::RangeFunction::Euclidean","value":"RangeFunction::Euclidean","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" The standard linear distance. Expensive to compute because it requires\n square root calculations.\n","sig":null,"attributes":[{"value":"/ The standard linear distance. Expensive to compute because it requires","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175413,"byte_end":175487,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ square root calculations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175492,"byte_end":175521,"line_start":101,"line_end":101,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175698,"byte_end":175714,"line_start":106,"line_end":106,"column_start":5,"column_end":21},"name":"EuclideanSquared","qualname":"::modules::generators::worley::RangeFunction::EuclideanSquared","value":"RangeFunction::EuclideanSquared","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Same as Euclidean, but without the square root calculations. Distance\n results will be smaller, however, but hash patterns will be the same.\n","sig":null,"attributes":[{"value":"/ Same as Euclidean, but without the square root calculations. Distance","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175542,"byte_end":175615,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ results will be smaller, however, but hash patterns will be the same.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175620,"byte_end":175693,"line_start":105,"line_end":105,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175865,"byte_end":175874,"line_start":110,"line_end":110,"column_start":5,"column_end":14},"name":"Manhattan","qualname":"::modules::generators::worley::RangeFunction::Manhattan","value":"RangeFunction::Manhattan","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Measured by only moving in straight lines along the axes. Diagonal\n movement is not allowed, which leads to increased distances.\n","sig":null,"attributes":[{"value":"/ Measured by only moving in straight lines along the axes. Diagonal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175721,"byte_end":175791,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ movement is not allowed, which leads to increased distances.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175796,"byte_end":175860,"line_start":109,"line_end":109,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176136,"byte_end":176145,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"Chebyshev","qualname":"::modules::generators::worley::RangeFunction::Chebyshev","value":"RangeFunction::Chebyshev","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Measured by taking the largest distance along any axis as the total\n distance. Since this eliminates all but one dimension, it results in\n significantly shorter distances and produces regions where the\n distances are uniform.\n","sig":null,"attributes":[{"value":"/ Measured by taking the largest distance along any axis as the total","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175881,"byte_end":175952,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ distance. Since this eliminates all but one dimension, it results in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175957,"byte_end":176029,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ significantly shorter distances and produces regions where the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176034,"byte_end":176100,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ distances are uniform.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176105,"byte_end":176131,"line_start":115,"line_end":115,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176276,"byte_end":176285,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"Quadratic","qualname":"::modules::generators::worley::RangeFunction::Quadratic","value":"RangeFunction::Quadratic","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" Experimental function where all values are multiplied together and then\n added up like a quadratic equation.\n","sig":null,"attributes":[{"value":"/ Experimental function where all values are multiplied together and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176152,"byte_end":176227,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/ added up like a quadratic equation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":176232,"byte_end":176271,"line_start":119,"line_end":119,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175393,"byte_end":175406,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"RangeFunction","qualname":"::modules::generators::worley::RangeFunction","value":"pub enum RangeFunction {\n    Euclidean,\n    EuclideanSquared,\n    Manhattan,\n    Chebyshev,\n    Quadratic,\n}","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121}],"decl_id":null,"docs":" Set of distance functions that can be used in the Worley noise module.\n","sig":null,"attributes":[{"value":"/ Set of distance functions that can be used in the Worley noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175279,"byte_end":175353,"line_start":97,"line_end":97,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":191989,"byte_end":191992,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Abs","qualname":"::modules::modifiers::abs::Abs","value":"Abs { source }","parent":null,"children":[{"krate":0,"index":1305}],"decl_id":null,"docs":" Noise module that outputs the absolute value of the output value from the\n source module.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the absolute value of the output value from the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":191881,"byte_end":191958,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":191959,"byte_end":191977,"line_start":13,"line_end":13,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192036,"byte_end":192042,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::abs::Abs::source","value":"Source","parent":{"krate":0,"index":1303},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192007,"byte_end":192027,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192093,"byte_end":192096,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Abs<Source>>::new","value":"pub fn new(Source) -> Abs<Source>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":192966,"byte_end":192971,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Clamp","qualname":"::modules::modifiers::clamp::Clamp","value":"Clamp { source, lower_bound, upper_bound }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"decl_id":null,"docs":" Noise module that clamps the output value from the source module to a\n range of values.\n","sig":null,"attributes":[{"value":"/ Noise module that clamps the output value from the source module to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":192860,"byte_end":192933,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ range of values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":192934,"byte_end":192954,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193018,"byte_end":193024,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::clamp::Clamp::source","value":"Source","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":192989,"byte_end":193009,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193103,"byte_end":193114,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"lower_bound","qualname":"::modules::modifiers::clamp::Clamp::lower_bound","value":"T","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Lower bound of the clamping range. Default is -1.0.\n","sig":null,"attributes":[{"value":"/ Lower bound of the clamping range. Default is -1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193039,"byte_end":193094,"line_start":18,"line_end":18,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193187,"byte_end":193198,"line_start":22,"line_end":22,"column_start":9,"column_end":20},"name":"upper_bound","qualname":"::modules::modifiers::clamp::Clamp::upper_bound","value":"T","parent":{"krate":0,"index":1322},"children":[],"decl_id":null,"docs":" Upper bound of the clamping range. Default is 1.0.\n","sig":null,"attributes":[{"value":"/ Upper bound of the clamping range. Default is 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193124,"byte_end":193178,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193272,"byte_end":193275,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Clamp<Source, T>>::new","value":"pub fn new(Source) -> Clamp<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193457,"byte_end":193472,"line_start":36,"line_end":36,"column_start":12,"column_end":27},"name":"set_lower_bound","qualname":"<Clamp<Source, T>>::set_lower_bound","value":"pub fn set_lower_bound(Self, T) -> Clamp<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193586,"byte_end":193601,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"set_upper_bound","qualname":"<Clamp<Source, T>>::set_upper_bound","value":"pub fn set_upper_bound(Self, T) -> Clamp<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193715,"byte_end":193725,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<Clamp<Source, T>>::set_bounds","value":"pub fn set_bounds(Self, T, T) -> Clamp<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195559,"byte_end":195564,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Curve","qualname":"::modules::modifiers::curve::Curve","value":"Curve { source }","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"decl_id":null,"docs":" Noise module that maps the output value from the source module onto an\n arbitrary function curve.","sig":null,"attributes":[{"value":"/ Noise module that maps the output value from the source module onto an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":194814,"byte_end":194888,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ arbitrary function curve.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":194889,"byte_end":194918,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":194919,"byte_end":194922,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This noise module maps the output value from the source module onto an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":194923,"byte_end":194997,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ application-defined curve. The curve is defined by a number of _control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":194998,"byte_end":195073,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ points_; each control point has an _input value_ that maps to an _output","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195074,"byte_end":195150,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ value_.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195151,"byte_end":195162,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195163,"byte_end":195166,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ To add control points to the curve, use the add_control_point method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195167,"byte_end":195240,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195241,"byte_end":195244,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Since the curve is a cubic spline, an application must have a minimum of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195245,"byte_end":195321,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ four control points to the curve. If there is less than four control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195322,"byte_end":195394,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ points, the get() method panics. Each control point can have any input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195395,"byte_end":195469,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ and output value, although no two control points can have the same input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195470,"byte_end":195547,"line_start":26,"line_end":26,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195611,"byte_end":195617,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::curve::Curve::source","value":"Source","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195582,"byte_end":195602,"line_start":28,"line_end":28,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195840,"byte_end":195843,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Curve<Source, T>>::new","value":"pub fn new(Source) -> Curve<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":196005,"byte_end":196022,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"add_control_point","qualname":"<Curve<Source, T>>::add_control_point","value":"pub fn add_control_point(Self, T, T) -> Curve<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200209,"byte_end":200217,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Exponent","qualname":"::modules::modifiers::exponent::Exponent","value":"Exponent { source, exponent }","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389}],"decl_id":null,"docs":" Noise module that maps the output value from the source module onto an\n exponential curve.","sig":null,"attributes":[{"value":"/ Noise module that maps the output value from the source module onto an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":199825,"byte_end":199899,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ exponential curve.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":199900,"byte_end":199922,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":199923,"byte_end":199926,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Because most noise modules will output values that range from -1.0 to 1.0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":199927,"byte_end":200005,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ this noise module first normalizes the output value (the range becomes 0.0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200006,"byte_end":200084,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ to 1.0), maps that value onto an exponential curve, then rescales that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200085,"byte_end":200159,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ value back to the original range.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200160,"byte_end":200197,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200264,"byte_end":200270,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::exponent::Exponent::source","value":"Source","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200235,"byte_end":200255,"line_start":21,"line_end":21,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200383,"byte_end":200391,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"exponent","qualname":"::modules::modifiers::exponent::Exponent::exponent","value":"T","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Exponent to apply to the output value from the source module. Default\n is 1.0.\n","sig":null,"attributes":[{"value":"/ Exponent to apply to the output value from the source module. Default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200285,"byte_end":200358,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ is 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200363,"byte_end":200374,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200468,"byte_end":200471,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Exponent<Source, T>>::new","value":"pub fn new(Source) -> Exponent<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200620,"byte_end":200632,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"set_exponent","qualname":"<Exponent<Source, T>>::set_exponent","value":"pub fn set_exponent(Self, T) -> Exponent<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201699,"byte_end":201705,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Invert","qualname":"::modules::modifiers::invert::Invert","value":"Invert { source }","parent":null,"children":[{"krate":0,"index":1410}],"decl_id":null,"docs":" Noise module that inverts the output value from the source module.\n","sig":null,"attributes":[{"value":"/ Noise module that inverts the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201617,"byte_end":201687,"line_start":12,"line_end":12,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201749,"byte_end":201755,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::invert::Invert::source","value":"Source","parent":{"krate":0,"index":1408},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201720,"byte_end":201740,"line_start":14,"line_end":14,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201809,"byte_end":201812,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Invert<Source>>::new","value":"pub fn new(Source) -> Invert<Source>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202853,"byte_end":202862,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"ScaleBias","qualname":"::modules::modifiers::scale_bias::ScaleBias","value":"ScaleBias { source, scale, bias }","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"decl_id":null,"docs":" Noise module that applies a scaling factor and a bias to the output value\n from the source module.","sig":null,"attributes":[{"value":"/ Noise module that applies a scaling factor and a bias to the output value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202578,"byte_end":202655,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202656,"byte_end":202683,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202684,"byte_end":202687,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The module retrieves the output value from the source module, multiplies","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202688,"byte_end":202764,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ it with the scaling factor, adds the bias to it, then outputs the value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202765,"byte_end":202841,"line_start":16,"line_end":16,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202909,"byte_end":202915,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::scale_bias::ScaleBias::source","value":"Source","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202880,"byte_end":202900,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203044,"byte_end":203049,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"scale","qualname":"::modules::modifiers::scale_bias::ScaleBias::scale","value":"T","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":" Scaling factor to apply to the output value from the source module.\n The default value is 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor to apply to the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":202930,"byte_end":203001,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ The default value is 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203006,"byte_end":203035,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203170,"byte_end":203174,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"bias","qualname":"::modules::modifiers::scale_bias::ScaleBias::bias","value":"T","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":" Bias to apply to the scaled output value from the source module.\n The default value is 0.0.\n","sig":null,"attributes":[{"value":"/ Bias to apply to the scaled output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203059,"byte_end":203127,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ The default value is 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203132,"byte_end":203161,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203252,"byte_end":203255,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<ScaleBias<Source, T>>::new","value":"pub fn new(Source) -> ScaleBias<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203432,"byte_end":203441,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<ScaleBias<Source, T>>::set_scale","value":"pub fn set_scale(Self, T) -> ScaleBias<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203545,"byte_end":203553,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"set_bias","qualname":"<ScaleBias<Source, T>>::set_bias","value":"pub fn set_bias(Self, T) -> ScaleBias<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205548,"byte_end":205555,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Terrace","qualname":"::modules::modifiers::terrace::Terrace","value":"Terrace { source, invert_terraces }","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"decl_id":null,"docs":" Noise module that maps the output value from the source module onto a\n terrace-forming curve.","sig":null,"attributes":[{"value":"/ Noise module that maps the output value from the source module onto a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204387,"byte_end":204460,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ terrace-forming curve.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204461,"byte_end":204487,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204488,"byte_end":204491,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This noise module maps the output value from the source module onto a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204492,"byte_end":204565,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ terrace-forming curve. The start of the curve has a slode of zero; it's","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204566,"byte_end":204641,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ slope then smoothly increases. This curve also contains _control points_","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204642,"byte_end":204718,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ which resets the slope to zero at that point, producing a \"terracing\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204719,"byte_end":204792,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ effect.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204793,"byte_end":204804,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204805,"byte_end":204808,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To add control points to the curve, use the add_control_point method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204809,"byte_end":204882,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204883,"byte_end":204886,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An application must add a minimum of two control points to the curve. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204887,"byte_end":204963,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ there are less than two control points, the get() method panics. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":204964,"byte_end":205036,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ control points can have any value, although no two control points can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205037,"byte_end":205110,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ have the same value. There is no limit to the number of control points","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205111,"byte_end":205185,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ that can be added to the curve.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205186,"byte_end":205221,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205222,"byte_end":205225,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The noise module clamps the output value from the source module if that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205226,"byte_end":205301,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ value is less than the value of the lowest control point or greater than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205302,"byte_end":205378,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ the value of the highest control point.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205379,"byte_end":205422,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205423,"byte_end":205426,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This noise module is often used to generate terrain features such as the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205427,"byte_end":205503,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ stereotypical desert canyon.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205504,"byte_end":205536,"line_start":35,"line_end":35,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205602,"byte_end":205608,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::modifiers::terrace::Terrace::source","value":"Source","parent":{"krate":0,"index":1455},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205573,"byte_end":205593,"line_start":37,"line_end":37,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205723,"byte_end":205738,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"invert_terraces","qualname":"::modules::modifiers::terrace::Terrace::invert_terraces","value":"bool","parent":{"krate":0,"index":1455},"children":[],"decl_id":null,"docs":" Determines if the terrace-forming curve between all control points is\n inverted.\n","sig":null,"attributes":[{"value":"/ Determines if the terrace-forming curve between all control points is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205623,"byte_end":205696,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ inverted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205701,"byte_end":205714,"line_start":41,"line_end":41,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205890,"byte_end":205893,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Terrace<Source, T>>::new","value":"pub fn new(Source) -> Terrace<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206450,"byte_end":206467,"line_start":66,"line_end":66,"column_start":12,"column_end":29},"name":"add_control_point","qualname":"<Terrace<Source, T>>::add_control_point","value":"pub fn add_control_point(Self, T) -> Terrace<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a control point to the terrace-forming curve.","sig":null,"attributes":[{"value":"/ Adds a control point to the terrace-forming curve.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206088,"byte_end":206142,"line_start":59,"line_end":59,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206147,"byte_end":206150,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Two or more control points define the terrace-forming curve. The start","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206155,"byte_end":206229,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ of this curve has a slope of zero; its slope then smoothly increases.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206234,"byte_end":206307,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ At the control points, its slope resets to zero.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206312,"byte_end":206364,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206369,"byte_end":206372,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It does not matter which order these points are added in.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":206377,"byte_end":206438,"line_start":65,"line_end":65,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":207317,"byte_end":207332,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"invert_terraces","qualname":"<Terrace<Source, T>>::invert_terraces","value":"pub fn invert_terraces(Self, bool) -> Terrace<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables the inversion of the terrain-forming curve between\n the control points.\n","sig":null,"attributes":[{"value":"/ Enables or disables the inversion of the terrain-forming curve between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":207203,"byte_end":207277,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ the control points.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":207282,"byte_end":207305,"line_start":85,"line_end":85,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210908,"byte_end":210913,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Blend","qualname":"::modules::selectors::blend::Blend","value":"Blend { source1, source2, control }","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134}],"decl_id":null,"docs":" Noise module that outputs a weighted blend of the output values from two\n source modules given the output value supplied by a control module.","sig":null,"attributes":[{"value":"/ Noise module that outputs a weighted blend of the output values from two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210633,"byte_end":210709,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ source modules given the output value supplied by a control module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210710,"byte_end":210781,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210782,"byte_end":210785,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This noise module uses linear interpolation to perform the blending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210786,"byte_end":210857,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210858,"byte_end":210872,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210995,"byte_end":211002,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::selectors::blend::Blend::source1","value":"Source1","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Outputs one of the values to blend.\n","sig":null,"attributes":[{"value":"/ Outputs one of the values to blend.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":210947,"byte_end":210986,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211066,"byte_end":211073,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::selectors::blend::Blend::source2","value":"Source2","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Outputs one of the values to blend.\n","sig":null,"attributes":[{"value":"/ Outputs one of the values to blend.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211018,"byte_end":211057,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211344,"byte_end":211351,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"control","qualname":"::modules::selectors::blend::Blend::control","value":"Control","parent":{"krate":0,"index":2128},"children":[],"decl_id":null,"docs":" Determines the weight of the blending operation. Negative values weight\n the blend towards the output value from the `source1` module. Positive\n values weight the blend towards the output value from the `source2`\n module.\n","sig":null,"attributes":[{"value":"/ Determines the weight of the blending operation. Negative values weight","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211089,"byte_end":211164,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ the blend towards the output value from the `source1` module. Positive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211169,"byte_end":211243,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ values weight the blend towards the output value from the `source2`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211248,"byte_end":211319,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/ module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211324,"byte_end":211335,"line_start":29,"line_end":29,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211443,"byte_end":211446,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Blend<Source1, Source2, Control>>::new","value":"pub fn new(Source1, Source2, Control) -> Blend<Source1, Source2, Control>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212872,"byte_end":212878,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Select","qualname":"::modules::selectors::select::Select","value":"Select { source1, source2, control, lower_bound, upper_bound, edge_falloff }","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155}],"decl_id":null,"docs":" Noise module that outputs the value selected from one of two source\n modules chosen by the output value from a control module.\n","sig":null,"attributes":[{"value":"/ Noise module that outputs the value selected from one of two source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212697,"byte_end":212768,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ modules chosen by the output value from a control module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212769,"byte_end":212830,"line_start":14,"line_end":14,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212944,"byte_end":212951,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"source1","qualname":"::modules::selectors::select::Select::source1","value":"Source1","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212915,"byte_end":212935,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212996,"byte_end":213003,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"source2","qualname":"::modules::selectors::select::Select::source2","value":"Source2","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Outputs a value.\n","sig":null,"attributes":[{"value":"/ Outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":212967,"byte_end":212987,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213305,"byte_end":213312,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"control","qualname":"::modules::selectors::select::Select::control","value":"Control","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Determines the value to select. If the output value from\n the control module is within a range of values know as the _selection\n range_, this noise module outputs the value from `source2`.\n Otherwise, this noise module outputs the value from `source1`.\n","sig":null,"attributes":[{"value":"/ Determines the value to select. If the output value from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213019,"byte_end":213079,"line_start":23,"line_end":23,"column_start":5,"column_end":65}},{"value":"/ the control module is within a range of values know as the _selection","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213084,"byte_end":213157,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ range_, this noise module outputs the value from `source2`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213162,"byte_end":213225,"line_start":25,"line_end":25,"column_start":5,"column_end":68}},{"value":"/ Otherwise, this noise module outputs the value from `source1`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213230,"byte_end":213296,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213392,"byte_end":213403,"line_start":30,"line_end":30,"column_start":9,"column_end":20},"name":"lower_bound","qualname":"::modules::selectors::select::Select::lower_bound","value":"T","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Lower bound of the selection range. Default is 0.0.\n","sig":null,"attributes":[{"value":"/ Lower bound of the selection range. Default is 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213328,"byte_end":213383,"line_start":29,"line_end":29,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213477,"byte_end":213488,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"name":"upper_bound","qualname":"::modules::selectors::select::Select::upper_bound","value":"T","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Upper bound of the selection range. Default is 1.0.\n","sig":null,"attributes":[{"value":"/ Upper bound of the selection range. Default is 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213413,"byte_end":213468,"line_start":32,"line_end":32,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213546,"byte_end":213558,"line_start":36,"line_end":36,"column_start":9,"column_end":21},"name":"edge_falloff","qualname":"::modules::selectors::select::Select::edge_falloff","value":"T","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Edge-falloff value. Default is 0.0.\n","sig":null,"attributes":[{"value":"/ Edge-falloff value. Default is 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213498,"byte_end":213537,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213671,"byte_end":213674,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Select<Source1, Source2, Control, T>>::new","value":"pub fn new(Source1, Source2, Control) -> Select<Source1, Source2, Control, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":214059,"byte_end":214069,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"set_bounds","qualname":"<Select<Source1, Source2, Control, T>>::set_bounds","value":"pub fn set_bounds(Self, T, T) -> Select<Source1, Source2, Control, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":214266,"byte_end":214282,"line_start":64,"line_end":64,"column_start":12,"column_end":28},"name":"set_edge_falloff","qualname":"<Select<Source1, Source2, Control, T>>::set_edge_falloff","value":"pub fn set_edge_falloff(Self, T) -> Select<Source1, Source2, Control, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217686,"byte_end":217691,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Cache","qualname":"::modules::cache::Cache","value":"Cache { source }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178}],"decl_id":null,"docs":" Noise module that caches the last output value generated by the source\n module.","sig":null,"attributes":[{"value":"/ Noise module that caches the last output value generated by the source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":216977,"byte_end":217051,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217052,"byte_end":217063,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217064,"byte_end":217067,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the input coordinates passed to `Cache::get` are equal to the previous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217068,"byte_end":217145,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ call, the module returns the cached result of the previous call to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217146,"byte_end":217216,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ `Source::get`. Otherwise, `Source::get` is called with the new coordinates,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217217,"byte_end":217296,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ overwriting the cache with the result, and returning the result to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217297,"byte_end":217371,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ caller.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217372,"byte_end":217383,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217384,"byte_end":217387,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Caching a noise module is useful if it is used as a source module for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217388,"byte_end":217461,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ multiple noise modules. If a source module is not cached, the source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217462,"byte_end":217534,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ module will redundantly calculate the same output value once for each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217535,"byte_end":217608,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ noise module in which it is included.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217609,"byte_end":217650,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217773,"byte_end":217779,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::cache::Cache::source","value":"Source","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Outputs the value to be cached.\n","sig":null,"attributes":[{"value":"/ Outputs the value to be cached.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217729,"byte_end":217764,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217916,"byte_end":217919,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache<Source, T>>::new","value":"pub fn new(Source) -> Cache<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221345,"byte_end":221353,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"Displace","qualname":"::modules::transformers::displace::Displace","value":"Displace { source, x_displace, y_displace, z_displace, u_displace }","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" Noise Module that uses multiple source modules to displace each coordinate\n of the input value before returning the output value from the `source` module.\n","sig":null,"attributes":[{"value":"/ Noise Module that uses multiple source modules to displace each coordinate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221172,"byte_end":221250,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ of the input value before returning the output value from the `source` module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221251,"byte_end":221333,"line_start":14,"line_end":14,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221459,"byte_end":221465,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::transformers::displace::Displace::source","value":"Source","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Source Module that outputs a value\n","sig":null,"attributes":[{"value":"/ Source Module that outputs a value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221412,"byte_end":221450,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221574,"byte_end":221584,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"x_displace","qualname":"::modules::transformers::displace::Displace::x_displace","value":"XDisplace","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Displacement module that displaces the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Displacement module that displaces the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221480,"byte_end":221550,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221555,"byte_end":221565,"line_start":20,"line_end":20,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1603},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221696,"byte_end":221706,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"y_displace","qualname":"::modules::transformers::displace::Displace::y_displace","value":"YDisplace","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Displacement module that displaces the _y_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Displacement module that displaces the _y_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221602,"byte_end":221672,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221677,"byte_end":221687,"line_start":24,"line_end":24,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1604},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221854,"byte_end":221864,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"z_displace","qualname":"::modules::transformers::displace::Displace::z_displace","value":"ZDisplace","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Displacement module that displaces the _z_ coordinate of the input\n value. Only needed for 3d or higher noise.\n","sig":null,"attributes":[{"value":"/ Displacement module that displaces the _z_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221724,"byte_end":221794,"line_start":27,"line_end":27,"column_start":5,"column_end":75}},{"value":"/ value. Only needed for 3d or higher noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221799,"byte_end":221845,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":222012,"byte_end":222022,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"u_displace","qualname":"::modules::transformers::displace::Displace::u_displace","value":"UDisplace","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Displacement module that displaces the _u_ coordinate of the input\n value. Only needed for 4d or higher noise.\n","sig":null,"attributes":[{"value":"/ Displacement module that displaces the _u_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221882,"byte_end":221952,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ value. Only needed for 4d or higher noise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":221957,"byte_end":222003,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":222433,"byte_end":222436,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Displace<Source, XDisplace, YDisplace, ZDisplace, UDisplace>>::new","value":"pub fn new(Source, XDisplace, YDisplace, ZDisplace, UDisplace)\n-> Displace<Source, XDisplace, YDisplace, ZDisplace, UDisplace>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227155,"byte_end":227166,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"RotatePoint","qualname":"::modules::transformers::rotate_point::RotatePoint","value":"RotatePoint { source, x_angle, y_angle, z_angle, u_angle }","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"decl_id":null,"docs":" Noise Module that rotates the input value around the origin before\n returning the output value from the source module.","sig":null,"attributes":[{"value":"/ Noise Module that rotates the input value around the origin before","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226707,"byte_end":226777,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226778,"byte_end":226832,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226833,"byte_end":226836,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The get() method rotates the coordinates of the input value around the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226837,"byte_end":226911,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ origin before returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226912,"byte_end":226980,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226981,"byte_end":226984,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The coordinate system of the input value is assumed to be \"right-handed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":226985,"byte_end":227061,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ (_x_ increases to the right, _y_ increases upward, and _z_ increases inward).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227062,"byte_end":227143,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227231,"byte_end":227237,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::transformers::rotate_point::RotatePoint::source","value":"Source","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Source Module that outputs a value\n","sig":null,"attributes":[{"value":"/ Source Module that outputs a value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227184,"byte_end":227222,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227372,"byte_end":227379,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"x_angle","qualname":"::modules::transformers::rotate_point::RotatePoint::x_angle","value":"T","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" _x_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _x_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227252,"byte_end":227318,"line_start":27,"line_end":27,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227323,"byte_end":227363,"line_start":28,"line_end":28,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227509,"byte_end":227516,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"y_angle","qualname":"::modules::transformers::rotate_point::RotatePoint::y_angle","value":"T","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" _y_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _y_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227389,"byte_end":227455,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227460,"byte_end":227500,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227646,"byte_end":227653,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"z_angle","qualname":"::modules::transformers::rotate_point::RotatePoint::z_angle","value":"T","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" _z_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _z_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227526,"byte_end":227592,"line_start":35,"line_end":35,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227597,"byte_end":227637,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227783,"byte_end":227790,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"u_angle","qualname":"::modules::transformers::rotate_point::RotatePoint::u_angle","value":"T","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" _u_ rotation angle applied to the input value, in degrees. The\n default angle is set to 0.0 degrees.\n","sig":null,"attributes":[{"value":"/ _u_ rotation angle applied to the input value, in degrees. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227663,"byte_end":227729,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ default angle is set to 0.0 degrees.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227734,"byte_end":227774,"line_start":40,"line_end":40,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227870,"byte_end":227873,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<RotatePoint<Source, T>>::new","value":"pub fn new(Source) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228213,"byte_end":228224,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"set_x_angle","qualname":"<RotatePoint<Source, T>>::set_x_angle","value":"pub fn set_x_angle(Self, T) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _x_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _x_ axis to apply to the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228117,"byte_end":228186,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228191,"byte_end":228201,"line_start":58,"line_end":58,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228427,"byte_end":228438,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"set_y_angle","qualname":"<RotatePoint<Source, T>>::set_y_angle","value":"pub fn set_y_angle(Self, T) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _y_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _y_ axis to apply to the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228331,"byte_end":228400,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228405,"byte_end":228415,"line_start":64,"line_end":64,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228641,"byte_end":228652,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"set_z_angle","qualname":"<RotatePoint<Source, T>>::set_z_angle","value":"pub fn set_z_angle(Self, T) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _z_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _z_ axis to apply to the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228545,"byte_end":228614,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228619,"byte_end":228629,"line_start":70,"line_end":70,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228855,"byte_end":228866,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"set_u_angle","qualname":"<RotatePoint<Source, T>>::set_u_angle","value":"pub fn set_u_angle(Self, T) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angle around the _u_ axis to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angle around the _u_ axis to apply to the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228759,"byte_end":228828,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228833,"byte_end":228843,"line_start":76,"line_end":76,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":229073,"byte_end":229083,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"set_angles","qualname":"<RotatePoint<Source, T>>::set_angles","value":"pub fn set_angles(Self, T, T, T, T) -> RotatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the rotation angles around all of the axes to apply to the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the rotation angles around all of the axes to apply to the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":228973,"byte_end":229046,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":229051,"byte_end":229061,"line_start":82,"line_end":82,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232680,"byte_end":232690,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ScalePoint","qualname":"::modules::transformers::scale_point::ScalePoint","value":"ScalePoint { source, x_scale, y_scale, z_scale, u_scale }","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"decl_id":null,"docs":" Noise Module that scales the coordinates of the input value before\n returning the output value from the source module.","sig":null,"attributes":[{"value":"/ Noise Module that scales the coordinates of the input value before","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232388,"byte_end":232458,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232459,"byte_end":232513,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232514,"byte_end":232517,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The get() method multiplies the coordinates of the input value with a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232518,"byte_end":232591,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ scaling factor before returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232592,"byte_end":232668,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232755,"byte_end":232761,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::transformers::scale_point::ScalePoint::source","value":"Source","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Source Module that outputs a value\n","sig":null,"attributes":[{"value":"/ Source Module that outputs a value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232708,"byte_end":232746,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232903,"byte_end":232910,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"x_scale","qualname":"::modules::transformers::scale_point::ScalePoint::x_scale","value":"T","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _x_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _x_ coordinate of the input value. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232776,"byte_end":232848,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232853,"byte_end":232894,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233047,"byte_end":233054,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"y_scale","qualname":"::modules::transformers::scale_point::ScalePoint::y_scale","value":"T","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _y_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _y_ coordinate of the input value. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232920,"byte_end":232992,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":232997,"byte_end":233038,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233191,"byte_end":233198,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"z_scale","qualname":"::modules::transformers::scale_point::ScalePoint::z_scale","value":"T","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _z_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _z_ coordinate of the input value. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233064,"byte_end":233136,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233141,"byte_end":233182,"line_start":31,"line_end":31,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233335,"byte_end":233342,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"u_scale","qualname":"::modules::transformers::scale_point::ScalePoint::u_scale","value":"T","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Scaling factor applied to the _u_ coordinate of the input value. The\n default scaling factor is set to 1.0.\n","sig":null,"attributes":[{"value":"/ Scaling factor applied to the _u_ coordinate of the input value. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233208,"byte_end":233280,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ default scaling factor is set to 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233285,"byte_end":233326,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233421,"byte_end":233424,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalePoint<Source, T>>::new","value":"pub fn new(Source) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233760,"byte_end":233771,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"set_x_scale","qualname":"<ScalePoint<Source, T>>::set_x_scale","value":"pub fn set_x_scale(Self, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233662,"byte_end":233733,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233738,"byte_end":233748,"line_start":53,"line_end":53,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233974,"byte_end":233985,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"set_y_scale","qualname":"<ScalePoint<Source, T>>::set_y_scale","value":"pub fn set_y_scale(Self, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233876,"byte_end":233947,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233952,"byte_end":233962,"line_start":59,"line_end":59,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234188,"byte_end":234199,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"set_z_scale","qualname":"<ScalePoint<Source, T>>::set_z_scale","value":"pub fn set_z_scale(Self, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234090,"byte_end":234161,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234166,"byte_end":234176,"line_start":65,"line_end":65,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234402,"byte_end":234413,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"set_u_scale","qualname":"<ScalePoint<Source, T>>::set_u_scale","value":"pub fn set_u_scale(Self, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234304,"byte_end":234375,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234380,"byte_end":234390,"line_start":71,"line_end":71,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234605,"byte_end":234614,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<ScalePoint<Source, T>>::set_scale","value":"pub fn set_scale(Self, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to all coordinates of the input value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to all coordinates of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234518,"byte_end":234593,"line_start":76,"line_end":76,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234938,"byte_end":234952,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"set_all_scales","qualname":"<ScalePoint<Source, T>>::set_all_scales","value":"pub fn set_all_scales(Self, T, T, T, T) -> ScalePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the individual scaling factors to apply to each coordinate of the\n input value.\n","sig":null,"attributes":[{"value":"/ Sets the individual scaling factors to apply to each coordinate of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234831,"byte_end":234905,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":234910,"byte_end":234926,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237161,"byte_end":237175,"line_start":18,"line_end":18,"column_start":12,"column_end":26},"name":"TranslatePoint","qualname":"::modules::transformers::translate_point::TranslatePoint","value":"TranslatePoint { source, x_translation, y_translation, z_translation, u_translation }","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" Noise Module that moves the coordinates of the input value before\n returning the output value from the source module.","sig":null,"attributes":[{"value":"/ Noise Module that moves the coordinates of the input value before","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":236873,"byte_end":236942,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":236943,"byte_end":236997,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":236998,"byte_end":237001,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The get() method moves the coordinates of the input value by a translation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237002,"byte_end":237080,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ amount before returning the output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237081,"byte_end":237149,"line_start":17,"line_end":17,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237240,"byte_end":237246,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::transformers::translate_point::TranslatePoint::source","value":"Source","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Source Module that outputs a value\n","sig":null,"attributes":[{"value":"/ Source Module that outputs a value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237193,"byte_end":237231,"line_start":19,"line_end":19,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237396,"byte_end":237409,"line_start":24,"line_end":24,"column_start":9,"column_end":22},"name":"x_translation","qualname":"::modules::transformers::translate_point::TranslatePoint::x_translation","value":"T","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Translation amount applied to the _x_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _x_ coordinate of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237261,"byte_end":237333,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237338,"byte_end":237387,"line_start":23,"line_end":23,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237554,"byte_end":237567,"line_start":28,"line_end":28,"column_start":9,"column_end":22},"name":"y_translation","qualname":"::modules::transformers::translate_point::TranslatePoint::y_translation","value":"T","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Translation amount applied to the _y_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _y_ coordinate of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237419,"byte_end":237491,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237496,"byte_end":237545,"line_start":27,"line_end":27,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237712,"byte_end":237725,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"name":"z_translation","qualname":"::modules::transformers::translate_point::TranslatePoint::z_translation","value":"T","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Translation amount applied to the _z_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _z_ coordinate of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237577,"byte_end":237649,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237654,"byte_end":237703,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237870,"byte_end":237883,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"u_translation","qualname":"::modules::transformers::translate_point::TranslatePoint::u_translation","value":"T","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":" Translation amount applied to the _u_ coordinate of the input value.\n The default translation amount is set to 0.0.\n","sig":null,"attributes":[{"value":"/ Translation amount applied to the _u_ coordinate of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237735,"byte_end":237807,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ The default translation amount is set to 0.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237812,"byte_end":237861,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237966,"byte_end":237969,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<TranslatePoint<Source, T>>::new","value":"pub fn new(Source) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238341,"byte_end":238358,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"set_x_translation","qualname":"<TranslatePoint<Source, T>>::set_x_translation","value":"pub fn set_x_translation(Self, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238243,"byte_end":238314,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238319,"byte_end":238329,"line_start":53,"line_end":53,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238587,"byte_end":238604,"line_start":60,"line_end":60,"column_start":12,"column_end":29},"name":"set_y_translation","qualname":"<TranslatePoint<Source, T>>::set_y_translation","value":"pub fn set_y_translation(Self, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238489,"byte_end":238560,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238565,"byte_end":238575,"line_start":59,"line_end":59,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238833,"byte_end":238850,"line_start":66,"line_end":66,"column_start":12,"column_end":29},"name":"set_z_translation","qualname":"<TranslatePoint<Source, T>>::set_z_translation","value":"pub fn set_z_translation(Self, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238735,"byte_end":238806,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238811,"byte_end":238821,"line_start":65,"line_end":65,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239079,"byte_end":239096,"line_start":72,"line_end":72,"column_start":12,"column_end":29},"name":"set_u_translation","qualname":"<TranslatePoint<Source, T>>::set_u_translation","value":"pub fn set_u_translation(Self, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the scaling factor to apply to the _x_ coordinate of the input\n value.\n","sig":null,"attributes":[{"value":"/ Sets the scaling factor to apply to the _x_ coordinate of the input","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":238981,"byte_end":239052,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239057,"byte_end":239067,"line_start":71,"line_end":71,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239318,"byte_end":239333,"line_start":77,"line_end":77,"column_start":12,"column_end":27},"name":"set_translation","qualname":"<TranslatePoint<Source, T>>::set_translation","value":"pub fn set_translation(Self, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the translation amount to apply to all coordinates of the input value.\n","sig":null,"attributes":[{"value":"/ Sets the translation amount to apply to all coordinates of the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239227,"byte_end":239306,"line_start":76,"line_end":76,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239693,"byte_end":239713,"line_start":89,"line_end":89,"column_start":12,"column_end":32},"name":"set_all_translations","qualname":"<TranslatePoint<Source, T>>::set_all_translations","value":"pub fn set_all_translations(Self, T, T, T, T) -> TranslatePoint<Source, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the individual translation amounts to apply to each coordinate of\n the input value.\n","sig":null,"attributes":[{"value":"/ Sets the individual translation amounts to apply to each coordinate of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239582,"byte_end":239656,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the input value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":239661,"byte_end":239681,"line_start":88,"line_end":88,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":241961,"byte_end":241984,"line_start":15,"line_end":15,"column_start":11,"column_end":34},"name":"DEFAULT_TURBULENCE_SEED","qualname":"::modules::transformers::turbulence::DEFAULT_TURBULENCE_SEED","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default seed for the Turbulence noise module.\n","sig":null,"attributes":[{"value":"/ Default seed for the Turbulence noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":241901,"byte_end":241950,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242062,"byte_end":242090,"line_start":17,"line_end":17,"column_start":11,"column_end":39},"name":"DEFAULT_TURBULENCE_FREQUENCY","qualname":"::modules::transformers::turbulence::DEFAULT_TURBULENCE_FREQUENCY","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default frequency for the Turbulence noise module.\n","sig":null,"attributes":[{"value":"/ Default frequency for the Turbulence noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":241997,"byte_end":242051,"line_start":16,"line_end":16,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242164,"byte_end":242188,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"DEFAULT_TURBULENCE_POWER","qualname":"::modules::transformers::turbulence::DEFAULT_TURBULENCE_POWER","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Default power for the turbulence noise module.\n","sig":null,"attributes":[{"value":"/ Default power for the turbulence noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242103,"byte_end":242153,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242266,"byte_end":242294,"line_start":21,"line_end":21,"column_start":11,"column_end":39},"name":"DEFAULT_TURBULENCE_ROUGHNESS","qualname":"::modules::transformers::turbulence::DEFAULT_TURBULENCE_ROUGHNESS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default roughness for the Turbulence noise module.\n","sig":null,"attributes":[{"value":"/ Default roughness for the Turbulence noise module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242201,"byte_end":242255,"line_start":20,"line_end":20,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242757,"byte_end":242767,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"Turbulence","qualname":"::modules::transformers::turbulence::Turbulence","value":"Turbulence { source, seed, frequency, power, roughness }","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842}],"decl_id":null,"docs":" Noise Module that randomly displaces the input value before returning the\n output value from the source module.","sig":null,"attributes":[{"value":"/ Noise Module that randomly displaces the input value before returning the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242308,"byte_end":242385,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ output value from the source module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242386,"byte_end":242426,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242427,"byte_end":242430,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ _Turbulence_ is the pseudo-random displacement of the input value. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242431,"byte_end":242505,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ get() method randomly displaces the coordinates of the input value before","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242506,"byte_end":242583,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ retrieving the output value from the source module. To control the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242584,"byte_end":242654,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ turbulence, an application can modify its frequency, its power, and its","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242655,"byte_end":242730,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ roughness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242731,"byte_end":242745,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242833,"byte_end":242839,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"source","qualname":"::modules::transformers::turbulence::Turbulence::source","value":"Source","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":" Source Module that outputs a value.\n","sig":null,"attributes":[{"value":"/ Source Module that outputs a value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242785,"byte_end":242824,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242904,"byte_end":242908,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"seed","qualname":"::modules::transformers::turbulence::Turbulence::seed","value":"usize","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":" Seed value for the Turbulence module.\n","sig":null,"attributes":[{"value":"/ Seed value for the Turbulence module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242854,"byte_end":242895,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242977,"byte_end":242986,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"frequency","qualname":"::modules::transformers::turbulence::Turbulence::frequency","value":"T","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":" Frequency value for the Turbulence module.\n","sig":null,"attributes":[{"value":"/ Frequency value for the Turbulence module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242922,"byte_end":242968,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243099,"byte_end":243104,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"power","qualname":"::modules::transformers::turbulence::Turbulence::power","value":"T","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":" Controls the strength of the turbulence by affecting how much each\n point is moved.\n","sig":null,"attributes":[{"value":"/ Controls the strength of the turbulence by affecting how much each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":242996,"byte_end":243066,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ point is moved.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243071,"byte_end":243090,"line_start":42,"line_end":42,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243194,"byte_end":243203,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"roughness","qualname":"::modules::transformers::turbulence::Turbulence::roughness","value":"usize","parent":{"krate":0,"index":1831},"children":[],"decl_id":null,"docs":" Affects the roughness of the turbulence. Higher values are rougher.\n","sig":null,"attributes":[{"value":"/ Affects the roughness of the turbulence. Higher values are rougher.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243114,"byte_end":243185,"line_start":45,"line_end":45,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243407,"byte_end":243410,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Turbulence<Source, T>>::new","value":"pub fn new(Source) -> Turbulence<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":244661,"byte_end":244674,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"set_frequency","qualname":"<Turbulence<Source, T>>::set_frequency","value":"pub fn set_frequency(Self, T) -> Turbulence<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":245136,"byte_end":245145,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"set_power","qualname":"<Turbulence<Source, T>>::set_power","value":"pub fn set_power(Self, T) -> Turbulence<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":245251,"byte_end":245264,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"set_roughness","qualname":"<Turbulence<Source, T>>::set_roughness","value":"pub fn set_roughness(Self, usize) -> Turbulence<Source, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104512,"byte_end":104523,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"NoiseModule","qualname":"::modules::NoiseModule","value":"NoiseModule<T>","parent":null,"children":[{"krate":0,"index":1871},{"krate":0,"index":1872}],"decl_id":null,"docs":" Base trait for noise modules.","sig":null,"attributes":[{"value":"/ Base trait for noise modules.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103937,"byte_end":103970,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103971,"byte_end":103974,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A noise module is a object that calculates and outputs a value given a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":103975,"byte_end":104049,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ n-Dimensional input value, where n is (2,3,4).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104050,"byte_end":104100,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104101,"byte_end":104104,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Each type of noise module uses a specific method to calculate an output","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104105,"byte_end":104180,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ value. Some of these methods include:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104181,"byte_end":104222,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104223,"byte_end":104226,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ * Calculating a value using a coherent-noise function or some other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104227,"byte_end":104298,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/     mathematical function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104299,"byte_end":104329,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/ * Mathematically changing the output value from another noise module","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104330,"byte_end":104402,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/     in various ways.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104403,"byte_end":104427,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ * Combining the output values from two noise modules in various ways.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104428,"byte_end":104501,"line_start":35,"line_end":35,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104538,"byte_end":104544,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::modules::NoiseModule::Output","value":"type Output;","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104554,"byte_end":104557,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"get","qualname":"::modules::NoiseModule::get","value":"pub fn get(&Self, T) -> Self::Output","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104861,"byte_end":104869,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"Seedable","qualname":"::modules::Seedable","value":"Seedable","parent":null,"children":[{"krate":0,"index":1880}],"decl_id":null,"docs":" Trait for modules that require a seed before generating their values\n","sig":null,"attributes":[{"value":"/ Trait for modules that require a seed before generating their values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104778,"byte_end":104850,"line_start":51,"line_end":51,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\mod.rs","byte_start":104879,"byte_end":104887,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"set_seed","qualname":"::modules::Seedable::set_seed","value":"pub fn set_seed(Self, usize) -> Self","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2029,"byte_end":2035,"line_start":65,"line_end":65,"column_start":11,"column_end":17},"name":"GenFn2","qualname":"::GenFn2","value":"GenFn2<T>: Fn(&PermutationTable, &Point2<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" A trait alias for a 2-dimensional noise function.","sig":null,"attributes":[{"value":"/ A trait alias for a 2-dimensional noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1687,"byte_end":1740,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1741,"byte_end":1744,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is useful for succinctly parameterising over valid noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1745,"byte_end":1821,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1822,"byte_end":1825,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1826,"byte_end":1839,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1840,"byte_end":1843,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1844,"byte_end":1855,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use noise::{GenFn2, PermutationTable, Point2};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1856,"byte_end":1906,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1907,"byte_end":1910,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn apply_noise2<F: GenFn2<f32>>(t: &PermutationTable, p: &Point2<f32>, f: F) -> f32 { f(t, p) }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":1911,"byte_end":2010,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2011,"byte_end":2018,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2425,"byte_end":2431,"line_start":78,"line_end":78,"column_start":11,"column_end":17},"name":"GenFn3","qualname":"::GenFn3","value":"GenFn3<T>: Fn(&PermutationTable, &Point3<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" A trait alias for a 3-dimensional noise function.","sig":null,"attributes":[{"value":"/ A trait alias for a 3-dimensional noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2083,"byte_end":2136,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2137,"byte_end":2140,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is useful for succinctly parameterising over valid noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2141,"byte_end":2217,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2218,"byte_end":2221,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2222,"byte_end":2235,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2236,"byte_end":2239,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2240,"byte_end":2251,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use noise::{GenFn3, PermutationTable, Point3};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2252,"byte_end":2302,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2303,"byte_end":2306,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ fn apply_noise3<F: GenFn3<f32>>(t: &PermutationTable, p: &Point3<f32>, f: F) -> f32 { f(t, p) }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2307,"byte_end":2406,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2407,"byte_end":2414,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2821,"byte_end":2827,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"name":"GenFn4","qualname":"::GenFn4","value":"GenFn4<T>: Fn(&PermutationTable, &Point4<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" A trait alias for a 4-dimensional noise function.","sig":null,"attributes":[{"value":"/ A trait alias for a 4-dimensional noise function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2479,"byte_end":2532,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2533,"byte_end":2536,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This is useful for succinctly parameterising over valid noise functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2537,"byte_end":2613,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2614,"byte_end":2617,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2618,"byte_end":2631,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2632,"byte_end":2635,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2636,"byte_end":2647,"line_start":86,"line_end":86,"column_start":1,"column_end":12}},{"value":"/ use noise::{GenFn4, PermutationTable, Point4};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2648,"byte_end":2698,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2699,"byte_end":2702,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ fn apply_noise4<F: GenFn4<f32>>(t: &PermutationTable, p: &Point4<f32>, f: F) -> f32 { f(t, p) }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2703,"byte_end":2802,"line_start":89,"line_end":89,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2803,"byte_end":2810,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":17307,"byte_end":17323,"line_start":29,"line_end":29,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18646,"byte_end":18662,"line_start":73,"line_end":73,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":20153,"byte_end":20169,"line_start":116,"line_end":116,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":20292,"byte_end":20308,"line_start":122,"line_end":122,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106170,"byte_end":106173,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106413,"byte_end":106416,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107401,"byte_end":107404,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107644,"byte_end":107647,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108638,"byte_end":108641,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108881,"byte_end":108884,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109880,"byte_end":109888,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":110138,"byte_end":110146,"line_start":31,"line_end":31,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111179,"byte_end":111184,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111428,"byte_end":111433,"line_start":31,"line_end":31,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113206,"byte_end":113214,"line_start":25,"line_end":25,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113335,"byte_end":113343,"line_start":31,"line_end":31,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114639,"byte_end":114651,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115221,"byte_end":115233,"line_start":58,"line_end":58,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115413,"byte_end":115425,"line_start":66,"line_end":66,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115605,"byte_end":115617,"line_start":74,"line_end":74,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116982,"byte_end":116991,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117269,"byte_end":117278,"line_start":38,"line_end":38,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117463,"byte_end":117472,"line_start":46,"line_end":46,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117657,"byte_end":117666,"line_start":54,"line_end":54,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122567,"byte_end":122577,"line_start":73,"line_end":73,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":123076,"byte_end":123086,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":123926,"byte_end":123936,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":124285,"byte_end":124295,"line_start":129,"line_end":129,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":125352,"byte_end":125362,"line_start":161,"line_end":161,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":126419,"byte_end":126429,"line_start":193,"line_end":193,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130198,"byte_end":130204,"line_start":70,"line_end":70,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130677,"byte_end":130683,"line_start":83,"line_end":83,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":131426,"byte_end":131432,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":131769,"byte_end":131775,"line_start":124,"line_end":124,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":132752,"byte_end":132758,"line_start":156,"line_end":156,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":133735,"byte_end":133741,"line_start":188,"line_end":188,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137869,"byte_end":137872,"line_start":79,"line_end":79,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":138318,"byte_end":138321,"line_start":92,"line_end":92,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":139091,"byte_end":139094,"line_start":121,"line_end":121,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":139422,"byte_end":139425,"line_start":135,"line_end":135,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":140327,"byte_end":140330,"line_start":164,"line_end":164,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":141232,"byte_end":141235,"line_start":193,"line_end":193,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144764,"byte_end":144775,"line_start":66,"line_end":66,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":145283,"byte_end":145294,"line_start":79,"line_end":79,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":146144,"byte_end":146155,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":146507,"byte_end":146518,"line_start":122,"line_end":122,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":147758,"byte_end":147769,"line_start":160,"line_end":160,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":149009,"byte_end":149020,"line_start":198,"line_end":198,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153927,"byte_end":153938,"line_start":87,"line_end":87,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":154619,"byte_end":154630,"line_start":105,"line_end":105,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":155470,"byte_end":155481,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":155833,"byte_end":155844,"line_start":148,"line_end":148,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":157598,"byte_end":157609,"line_start":200,"line_end":200,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":159363,"byte_end":159374,"line_start":252,"line_end":252,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161870,"byte_end":161876,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":162076,"byte_end":162082,"line_start":35,"line_end":35,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":162592,"byte_end":162598,"line_start":51,"line_end":51,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":164344,"byte_end":164350,"line_start":93,"line_end":93,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":167084,"byte_end":167090,"line_start":147,"line_end":147,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173843,"byte_end":173849,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175024,"byte_end":175030,"line_start":86,"line_end":86,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":177950,"byte_end":177956,"line_start":184,"line_end":184,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":180754,"byte_end":180760,"line_start":272,"line_end":272,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":184793,"byte_end":184799,"line_start":388,"line_end":388,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192068,"byte_end":192071,"line_start":19,"line_end":19,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192208,"byte_end":192211,"line_start":25,"line_end":25,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193222,"byte_end":193227,"line_start":25,"line_end":25,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193954,"byte_end":193959,"line_start":53,"line_end":53,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195790,"byte_end":195795,"line_start":40,"line_end":40,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":197018,"byte_end":197023,"line_start":73,"line_end":73,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200415,"byte_end":200423,"line_start":29,"line_end":29,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200772,"byte_end":200780,"line_start":44,"line_end":44,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201781,"byte_end":201787,"line_start":18,"line_end":18,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201930,"byte_end":201936,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203198,"byte_end":203207,"line_start":30,"line_end":30,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203683,"byte_end":203692,"line_start":50,"line_end":50,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205838,"byte_end":205845,"line_start":48,"line_end":48,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":207494,"byte_end":207501,"line_start":91,"line_end":91,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211397,"byte_end":211402,"line_start":33,"line_end":33,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211766,"byte_end":211771,"line_start":46,"line_end":46,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213601,"byte_end":213607,"line_start":39,"line_end":39,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":214458,"byte_end":214464,"line_start":69,"line_end":69,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217866,"byte_end":217871,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":218145,"byte_end":218150,"line_start":51,"line_end":51,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":218802,"byte_end":218807,"line_start":74,"line_end":74,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":219459,"byte_end":219464,"line_start":97,"line_end":97,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":222095,"byte_end":222103,"line_start":36,"line_end":36,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":223022,"byte_end":223030,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":223965,"byte_end":223973,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":225101,"byte_end":225109,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227814,"byte_end":227825,"line_start":44,"line_end":44,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":229499,"byte_end":229510,"line_start":99,"line_end":99,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":230166,"byte_end":230177,"line_start":121,"line_end":121,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":231585,"byte_end":231596,"line_start":157,"line_end":157,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233366,"byte_end":233376,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":235386,"byte_end":235396,"line_start":105,"line_end":105,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":235688,"byte_end":235698,"line_start":116,"line_end":116,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":236016,"byte_end":236026,"line_start":128,"line_end":128,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237907,"byte_end":237921,"line_start":39,"line_end":39,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240257,"byte_end":240271,"line_start":105,"line_end":105,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240575,"byte_end":240589,"line_start":116,"line_end":116,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240975,"byte_end":240989,"line_start":130,"line_end":130,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243352,"byte_end":243362,"line_start":54,"line_end":54,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":245742,"byte_end":245752,"line_start":110,"line_end":110,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":246238,"byte_end":246248,"line_start":123,"line_end":123,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":247151,"byte_end":247161,"line_start":146,"line_end":146,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":248470,"byte_end":248480,"line_start":176,"line_end":176,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2900,"byte_end":2901,"line_start":93,"line_end":93,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2979,"byte_end":2980,"line_start":94,"line_end":94,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":3058,"byte_end":3059,"line_start":95,"line_end":95,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":17307,"byte_end":17323,"line_start":29,"line_end":29,"column_start":15,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1896},"to":{"krate":19,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":18646,"byte_end":18662,"line_start":73,"line_end":73,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":20153,"byte_end":20169,"line_start":116,"line_end":116,"column_start":16,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1896},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\permutationtable.rs","byte_start":20292,"byte_end":20308,"line_start":122,"line_end":122,"column_start":21,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1896},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106170,"byte_end":106173,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\add.rs","byte_start":106413,"byte_end":106416,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":607},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107401,"byte_end":107404,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\max.rs","byte_start":107644,"byte_end":107647,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":630},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108638,"byte_end":108641,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\min.rs","byte_start":108881,"byte_end":108884,"line_start":31,"line_end":31,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":653},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":109880,"byte_end":109888,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\multiply.rs","byte_start":110138,"byte_end":110146,"line_start":31,"line_end":31,"column_start":49,"column_end":57},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111179,"byte_end":111184,"line_start":22,"line_end":22,"column_start":24,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\combiners\\power.rs","byte_start":111428,"byte_end":111433,"line_start":31,"line_end":31,"column_start":49,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":699},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113206,"byte_end":113214,"line_start":25,"line_end":25,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\constant.rs","byte_start":113335,"byte_end":113343,"line_start":31,"line_end":31,"column_start":31,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1987},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":114639,"byte_end":114651,"line_start":35,"line_end":35,"column_start":6,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115221,"byte_end":115233,"line_start":58,"line_end":58,"column_start":43,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115413,"byte_end":115425,"line_start":66,"line_end":66,"column_start":43,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\checkerboard.rs","byte_start":115605,"byte_end":115617,"line_start":74,"line_end":74,"column_start":43,"column_end":55},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":116982,"byte_end":116991,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117269,"byte_end":117278,"line_start":38,"line_end":38,"column_start":43,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117463,"byte_end":117472,"line_start":46,"line_end":46,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\cylinders.rs","byte_start":117657,"byte_end":117666,"line_start":54,"line_end":54,"column_start":43,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":122567,"byte_end":122577,"line_start":73,"line_end":73,"column_start":16,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":123076,"byte_end":123086,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":1133}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":123926,"byte_end":123936,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":124285,"byte_end":124295,"line_start":129,"line_end":129,"column_start":43,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":125352,"byte_end":125362,"line_start":161,"line_end":161,"column_start":43,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\basicmulti.rs","byte_start":126419,"byte_end":126429,"line_start":193,"line_end":193,"column_start":43,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130198,"byte_end":130204,"line_start":70,"line_end":70,"column_start":16,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":130677,"byte_end":130683,"line_start":83,"line_end":83,"column_start":29,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2031},"to":{"krate":0,"index":1133}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":131426,"byte_end":131432,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2031},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":131769,"byte_end":131775,"line_start":124,"line_end":124,"column_start":43,"column_end":49},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2031},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":132752,"byte_end":132758,"line_start":156,"line_end":156,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2031},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\billow.rs","byte_start":133735,"byte_end":133741,"line_start":188,"line_end":188,"column_start":43,"column_end":49},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2031},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":137869,"byte_end":137872,"line_start":79,"line_end":79,"column_start":16,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":138318,"byte_end":138321,"line_start":92,"line_end":92,"column_start":29,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2045},"to":{"krate":0,"index":1133}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":139091,"byte_end":139094,"line_start":121,"line_end":121,"column_start":22,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2045},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":139422,"byte_end":139425,"line_start":135,"line_end":135,"column_start":43,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2045},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":140327,"byte_end":140330,"line_start":164,"line_end":164,"column_start":43,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2045},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\fbm.rs","byte_start":141232,"byte_end":141235,"line_start":193,"line_end":193,"column_start":43,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2045},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":144764,"byte_end":144775,"line_start":66,"line_end":66,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":145283,"byte_end":145294,"line_start":79,"line_end":79,"column_start":29,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":1133}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":146144,"byte_end":146155,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":146507,"byte_end":146518,"line_start":122,"line_end":122,"column_start":43,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":147758,"byte_end":147769,"line_start":160,"line_end":160,"column_start":43,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\hybridmulti.rs","byte_start":149009,"byte_end":149020,"line_start":198,"line_end":198,"column_start":43,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2059},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":153927,"byte_end":153938,"line_start":87,"line_end":87,"column_start":16,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":154619,"byte_end":154630,"line_start":105,"line_end":105,"column_start":29,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":1133}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":155470,"byte_end":155481,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":155833,"byte_end":155844,"line_start":148,"line_end":148,"column_start":43,"column_end":54},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":157598,"byte_end":157609,"line_start":200,"line_end":200,"column_start":43,"column_end":54},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\fractals\\ridgedmulti.rs","byte_start":159363,"byte_end":159374,"line_start":252,"line_end":252,"column_start":43,"column_end":54},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":161870,"byte_end":161876,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":162076,"byte_end":162082,"line_start":35,"line_end":35,"column_start":19,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":162592,"byte_end":162598,"line_start":51,"line_end":51,"column_start":43,"column_end":49},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":164344,"byte_end":164350,"line_start":93,"line_end":93,"column_start":43,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\perlin.rs","byte_start":167084,"byte_end":167090,"line_start":147,"line_end":147,"column_start":43,"column_end":49},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":173843,"byte_end":173849,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":175024,"byte_end":175030,"line_start":86,"line_end":86,"column_start":22,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2096},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":177950,"byte_end":177956,"line_start":184,"line_end":184,"column_start":43,"column_end":49},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2096},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":180754,"byte_end":180760,"line_start":272,"line_end":272,"column_start":43,"column_end":49},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2096},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\generators\\worley.rs","byte_start":184793,"byte_end":184799,"line_start":388,"line_end":388,"column_start":43,"column_end":49},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2096},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192068,"byte_end":192071,"line_start":19,"line_end":19,"column_start":14,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\abs.rs","byte_start":192208,"byte_end":192211,"line_start":25,"line_end":25,"column_start":39,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1303},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193222,"byte_end":193227,"line_start":25,"line_end":25,"column_start":17,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\clamp.rs","byte_start":193954,"byte_end":193959,"line_start":53,"line_end":53,"column_start":39,"column_end":44},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":195790,"byte_end":195795,"line_start":40,"line_end":40,"column_start":17,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\curve.rs","byte_start":197018,"byte_end":197023,"line_start":73,"line_end":73,"column_start":39,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1351},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200415,"byte_end":200423,"line_start":29,"line_end":29,"column_start":17,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\exponent.rs","byte_start":200772,"byte_end":200780,"line_start":44,"line_end":44,"column_start":39,"column_end":47},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1385},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201781,"byte_end":201787,"line_start":18,"line_end":18,"column_start":14,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\invert.rs","byte_start":201930,"byte_end":201936,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1408},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203198,"byte_end":203207,"line_start":30,"line_end":30,"column_start":17,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\scale_bias.rs","byte_start":203683,"byte_end":203692,"line_start":50,"line_end":50,"column_start":39,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1427},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":205838,"byte_end":205845,"line_start":48,"line_end":48,"column_start":17,"column_end":24},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\modifiers\\terrace.rs","byte_start":207494,"byte_end":207501,"line_start":91,"line_end":91,"column_start":39,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1455},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211397,"byte_end":211402,"line_start":33,"line_end":33,"column_start":33,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\blend.rs","byte_start":211766,"byte_end":211771,"line_start":46,"line_end":46,"column_start":58,"column_end":63},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2128},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":213601,"byte_end":213607,"line_start":39,"line_end":39,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\selectors\\select.rs","byte_start":214458,"byte_end":214464,"line_start":69,"line_end":69,"column_start":58,"column_end":64},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2145},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":217866,"byte_end":217871,"line_start":39,"line_end":39,"column_start":17,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":218145,"byte_end":218150,"line_start":51,"line_end":51,"column_start":44,"column_end":49},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2173},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":218802,"byte_end":218807,"line_start":74,"line_end":74,"column_start":44,"column_end":49},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2173},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\cache.rs","byte_start":219459,"byte_end":219464,"line_start":97,"line_end":97,"column_start":44,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2173},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":222095,"byte_end":222103,"line_start":36,"line_end":36,"column_start":58,"column_end":66},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":223022,"byte_end":223030,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1595},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":223965,"byte_end":223973,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1595},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\displace.rs","byte_start":225101,"byte_end":225109,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1595},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":227814,"byte_end":227825,"line_start":44,"line_end":44,"column_start":17,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":229499,"byte_end":229510,"line_start":99,"line_end":99,"column_start":44,"column_end":55},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1663},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":230166,"byte_end":230177,"line_start":121,"line_end":121,"column_start":44,"column_end":55},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1663},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\rotate_point.rs","byte_start":231585,"byte_end":231596,"line_start":157,"line_end":157,"column_start":44,"column_end":55},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1663},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":233366,"byte_end":233376,"line_start":39,"line_end":39,"column_start":17,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":235386,"byte_end":235396,"line_start":105,"line_end":105,"column_start":44,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1714},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":235688,"byte_end":235698,"line_start":116,"line_end":116,"column_start":44,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1714},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\scale_point.rs","byte_start":236016,"byte_end":236026,"line_start":128,"line_end":128,"column_start":44,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1714},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":237907,"byte_end":237921,"line_start":39,"line_end":39,"column_start":17,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240257,"byte_end":240271,"line_start":105,"line_end":105,"column_start":44,"column_end":58},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1764},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240575,"byte_end":240589,"line_start":116,"line_end":116,"column_start":44,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1764},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\translate_point.rs","byte_start":240975,"byte_end":240989,"line_start":130,"line_end":130,"column_start":44,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1764},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":243352,"byte_end":243362,"line_start":54,"line_end":54,"column_start":17,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":245742,"byte_end":245752,"line_start":110,"line_end":110,"column_start":30,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":1879}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":246238,"byte_end":246248,"line_start":123,"line_end":123,"column_start":44,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":247151,"byte_end":247161,"line_start":146,"line_end":146,"column_start":44,"column_end":54},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\modules\\transformers\\turbulence.rs","byte_start":248470,"byte_end":248480,"line_start":176,"line_end":176,"column_start":44,"column_end":54},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":1869}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2040,"byte_end":2042,"line_start":65,"line_end":65,"column_start":22,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3303},"to":{"krate":0,"index":1881}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2436,"byte_end":2438,"line_start":78,"line_end":78,"column_start":22,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3303},"to":{"krate":0,"index":1883}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2832,"byte_end":2834,"line_start":91,"line_end":91,"column_start":22,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3303},"to":{"krate":0,"index":1885}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2900,"byte_end":2901,"line_start":93,"line_end":93,"column_start":26,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1889},"to":{"krate":0,"index":1881}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":2979,"byte_end":2980,"line_start":94,"line_end":94,"column_start":26,"column_end":27},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":1883}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\noise-0.4.1\\src\\lib.rs","byte_start":3058,"byte_end":3059,"line_start":95,"line_end":95,"column_start":26,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1895},"to":{"krate":0,"index":1885}}]}