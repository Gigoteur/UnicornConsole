{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","deflate","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=a61a0bf846bc8aca","-C","extra-filename=-a61a0bf846bc8aca","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--extern","adler32=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libadler32-99c2ecb5b34135f9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libdeflate-a61a0bf846bc8aca.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[17097841196527613731,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","num":16,"id":{"name":"adler32","disambiguator":[9489779933095753068,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":0,"byte_end":14790,"line_start":1,"line_end":486,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2927,"byte_end":2938,"line_start":98,"line_end":98,"column_start":31,"column_end":42},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2940,"byte_end":2958,"line_start":98,"line_end":98,"column_start":44,"column_end":62},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2960,"byte_end":2974,"line_start":98,"line_end":98,"column_start":64,"column_end":78},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2991,"byte_end":3003,"line_start":99,"line_end":99,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3211,"byte_end":3225,"line_start":107,"line_end":107,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":882}},{"kind":"Use","ref_id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3227,"byte_end":3238,"line_start":107,"line_end":107,"column_start":45,"column_end":56},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":882}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":0,"byte_end":14790,"line_start":1,"line_end":486,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":32},{"krate":0,"index":69},{"krate":0,"index":102},{"krate":0,"index":153},{"krate":0,"index":179},{"krate":0,"index":257},{"krate":0,"index":293},{"krate":0,"index":397},{"krate":0,"index":473},{"krate":0,"index":492},{"krate":0,"index":527},{"krate":0,"index":619},{"krate":0,"index":634},{"krate":0,"index":649},{"krate":0,"index":696},{"krate":0,"index":722},{"krate":0,"index":741},{"krate":0,"index":820},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorithm in pure Rust.","sig":null,"attributes":[{"value":"/ An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":0,"byte_end":91,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"/ compression algorithm in pure Rust.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":92,"byte_end":131,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":132,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This library provides functions to compress data using the DEFLATE algorithm,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":136,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ optionally wrapped using the [zlib](https://tools.ietf.org/html/rfc1950) or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":218,"byte_end":297,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ [gzip](http://www.gzip.org/zlib/rfc-gzip.html) formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":298,"byte_end":357,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ The current implementation is still a bit lacking speed-wise compared to C-libraries","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":358,"byte_end":446,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/ like zlib and miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":447,"byte_end":471,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":472,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm is an older compression algorithm that is still widely used today,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":476,"byte_end":568,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ by e.g html headers, the `.png` image format, the Unix `gzip` program and commonly in `.zip`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":569,"byte_end":665,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ files. The `zlib` and `gzip` formats are wrappers around DEFLATE-compressed data, containing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":666,"byte_end":762,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ some extra metadata and a checksum to validate the integrity of the raw data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":763,"byte_end":844,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":845,"byte_end":848,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm does not perform as well as newer algorithms used in file formats such as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":849,"byte_end":948,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ `.7z`, `.rar`, `.xz` and `.bz2`, and is thus not the ideal choice for applications where","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":949,"byte_end":1041,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ the `DEFLATE` format (with or without wrappers) is not required.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1042,"byte_end":1110,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1111,"byte_end":1114,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Support for the gzip wrapper (the wrapper that is used in `.gz` files) is disabled by default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1115,"byte_end":1212,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ but can be enabled with the `gzip` feature.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1213,"byte_end":1260,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1261,"byte_end":1264,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As this library is still in development, the compression output may change slightly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1265,"byte_end":1352,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ between versions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1353,"byte_end":1374,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1375,"byte_end":1378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1379,"byte_end":1382,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1383,"byte_end":1398,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ ## Simple compression function:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1399,"byte_end":1434,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ ``` rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1435,"byte_end":1447,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1448,"byte_end":1479,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1480,"byte_end":1483,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let data = b\"Some data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1484,"byte_end":1512,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ let compressed = deflate_bytes(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1513,"byte_end":1554,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ # let _ = compressed;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1555,"byte_end":1580,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1581,"byte_end":1588,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1589,"byte_end":1592,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Using a writer:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1593,"byte_end":1615,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ ``` rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1616,"byte_end":1628,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1629,"byte_end":1652,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1653,"byte_end":1656,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1657,"byte_end":1686,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1687,"byte_end":1723,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1724,"byte_end":1727,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1728,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1770,"byte_end":1843,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data).expect(\"Write error!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1844,"byte_end":1895,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ let compressed_data = encoder.finish().expect(\"Failed to finish compression!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1896,"byte_end":1979,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":1980,"byte_end":2010,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2011,"byte_end":2018,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":2020,"byte_end":2043,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49585,"byte_end":49589,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[{"value":"/ Fast minimal compression (`CompressionOptions::fast()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49520,"byte_end":49580,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49652,"byte_end":49659,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[{"value":"/ Default level (`CompressionOptions::default()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49595,"byte_end":49647,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49913,"byte_end":49917,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[{"value":"/ Higher compression level (`CompressionOptions::high()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49665,"byte_end":49725,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49730,"byte_end":49733,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49738,"byte_end":49804,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49809,"byte_end":49891,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49896,"byte_end":49908,"line_start":40,"line_end":40,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49502,"byte_end":49513,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"pub enum Compression { Fast, Default, Best, }","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[{"value":"/ An enum describing the level of compression to be used by the encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49086,"byte_end":49159,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49160,"byte_end":49163,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Higher compression ratios will take longer to encode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49164,"byte_end":49221,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49222,"byte_end":49225,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a simplified interface to specify a compression level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49226,"byte_end":49292,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49293,"byte_end":49296,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [See also `CompressionOptions`](./struct.CompressionOptions.html) which provides for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49297,"byte_end":49385,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ tweaking the settings more finely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49386,"byte_end":49424,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50195,"byte_end":50201,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[{"value":"/ Compress normally.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50168,"byte_end":50190,"line_start":53,"line_end":53,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50261,"byte_end":50272,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Force fixed Huffman tables. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force fixed Huffman tables. (Unimplemented!).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50207,"byte_end":50256,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50345,"byte_end":50357,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force stored (uncompressed) blocks only. (Unimplemented!).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50278,"byte_end":50340,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50147,"byte_end":50161,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"pub enum SpecialOptions { Normal, _ForceFixed, _ForceStored, }","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[{"value":"/ Enum allowing some special options (not implemented yet)!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50025,"byte_end":50086,"line_start":50,"line_end":50,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50923,"byte_end":50941,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[{"value":"/ A struct describing the options for a compressor or compression function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50718,"byte_end":50795,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50796,"byte_end":50799,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ These values are not stable and still subject to change!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50800,"byte_end":50860,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51379,"byte_end":51394,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[{"value":"/ The maximum number of checks to make in the hash table for matches.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50948,"byte_end":51019,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51024,"byte_end":51027,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Higher numbers mean slower, but better compression. Very high (say `>1024`) values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51032,"byte_end":51118,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ will impact compression speed a lot. The maximum match length is 2^15, so values higher than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51123,"byte_end":51219,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ this won't make any difference, and will be truncated to 2^15 by the compression","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51224,"byte_end":51308,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ function/writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51313,"byte_end":51333,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51338,"byte_end":51341,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Default value: `128`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51346,"byte_end":51370,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52000,"byte_end":52017,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[{"value":"/ Only lazy match if we have a length less than this value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51435,"byte_end":51496,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51501,"byte_end":51504,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Higher values degrade compression slightly, but improve compression speed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51509,"byte_end":51587,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51592,"byte_end":51595,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `0`: Never lazy match. (Same effect as setting `MatchingType` to greedy, but may be slower).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51600,"byte_end":51698,"line_start":93,"line_end":93,"column_start":5,"column_end":103}},{"value":"/ * `1...257`: Only check for a better match if the first match was shorter than this value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51703,"byte_end":51797,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ * `258`: Always lazy match.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51802,"byte_end":51833,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51838,"byte_end":51841,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ As the maximum length of a match is `258`, values higher than this will have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51846,"byte_end":51926,"line_start":97,"line_end":97,"column_start":5,"column_end":85}},{"value":"/ no further effect.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51931,"byte_end":51953,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51958,"byte_end":51961,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Default value: `32`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":51966,"byte_end":51991,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52642,"byte_end":52655,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[{"value":"/ Whether to use lazy or greedy matching.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52060,"byte_end":52103,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52108,"byte_end":52111,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Lazy matching will provide better compression, at the expense of compression speed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52116,"byte_end":52203,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52208,"byte_end":52211,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, and matching_type is set to lazy,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52216,"byte_end":52304,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ compression using only run-length encoding (i.e maximum match distance of 1) is performed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52309,"byte_end":52403,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ (This may be changed in the future but is defined like this at the moment to avoid API","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52408,"byte_end":52498,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"/ breakage.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52503,"byte_end":52516,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52521,"byte_end":52524,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [See `MatchingType`](./enum.MatchingType.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52529,"byte_end":52579,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52584,"byte_end":52587,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * Default value: `MatchingType::Lazy`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52592,"byte_end":52633,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52786,"byte_end":52793,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[{"value":"/ Force fixed/stored blocks (Not implemented yet).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52675,"byte_end":52727,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ * Default value: `SpecialOptions::Normal`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52732,"byte_end":52777,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53096,"byte_end":53100,"line_start":126,"line_end":126,"column_start":18,"column_end":22},"name":"high","qualname":"<CompressionOptions>::high","value":"pub const fn high() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[{"value":"/ Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52989,"byte_end":53078,"line_start":125,"line_end":125,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53740,"byte_end":53744,"line_start":141,"line_end":141,"column_start":18,"column_end":22},"name":"fast","qualname":"<CompressionOptions>::fast","value":"pub const fn fast() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[{"value":"/ Returns  a fast set of compression settings","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53375,"byte_end":53422,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53427,"byte_end":53430,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Ideally this should roughly correspond to the `FAST(1)` setting in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53435,"byte_end":53512,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/ However, that setting makes miniz use a somewhat different algorithm,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53517,"byte_end":53590,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ so currently hte fast level in this library is slower and better compressing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53595,"byte_end":53675,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/ than the corresponding level in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53680,"byte_end":53722,"line_start":140,"line_end":140,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54311,"byte_end":54323,"line_start":155,"line_end":155,"column_start":18,"column_end":30},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"pub const fn huffman_only() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n Huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor only compress using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":53981,"byte_end":54068,"line_start":150,"line_end":150,"column_start":5,"column_end":92}},{"value":"/ Huffman coding. (Ignoring any length/distance matching)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54073,"byte_end":54132,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54137,"byte_end":54140,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This will normally have the worst compression ratio (besides only using uncompressed data),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54145,"byte_end":54240,"line_start":153,"line_end":153,"column_start":5,"column_end":100}},{"value":"/ but may be the fastest method in some cases.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54245,"byte_end":54293,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":55007,"byte_end":55010,"line_start":171,"line_end":171,"column_start":18,"column_end":21},"name":"rle","qualname":"<CompressionOptions>::rle","value":"pub const fn rle() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor compress only using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54560,"byte_end":54647,"line_start":164,"line_end":164,"column_start":5,"column_end":92}},{"value":"/ run-length encoding (i.e only looking for matches one byte back).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54652,"byte_end":54721,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54726,"byte_end":54729,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This is very fast, but tends to compress worse than looking for more matches using hash","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54734,"byte_end":54825,"line_start":167,"line_end":167,"column_start":5,"column_end":96}},{"value":"/ chains that the slower settings do.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54830,"byte_end":54869,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ Works best on data that has runs of equivalent bytes, like binary or simple images,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54874,"byte_end":54961,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/ less good for text.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":54966,"byte_end":54989,"line_start":170,"line_end":170,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132072,"byte_end":132078,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[{"value":"/ Use greedy matching: the matching algorithm simply uses a match right away","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":131971,"byte_end":132049,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/ if found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132054,"byte_end":132067,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132396,"byte_end":132400,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[{"value":"/ Use lazy matching: after finding a match, the next input byte is checked, to see","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132084,"byte_end":132168,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ if there is a better match starting at that byte.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132173,"byte_end":132226,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132231,"byte_end":132234,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, compression using only run-length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132239,"byte_end":132327,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ (i.e maximum match distance of 1) is performed instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132332,"byte_end":132391,"line_start":35,"line_end":35,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":131952,"byte_end":131964,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"pub enum MatchingType { Greedy, Lazy, }","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1045}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[{"value":"/ An enum describing whether we use lazy or greedy matching.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":131812,"byte_end":131874,"line_start":25,"line_end":25,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208307,"byte_end":208321,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":783}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder/compressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207535,"byte_end":207568,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207569,"byte_end":207572,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207573,"byte_end":207667,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207668,"byte_end":207718,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207719,"byte_end":207722,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207723,"byte_end":207737,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207738,"byte_end":207741,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207742,"byte_end":207753,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207754,"byte_end":207772,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207773,"byte_end":207778,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207779,"byte_end":207823,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207824,"byte_end":207829,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207830,"byte_end":207853,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207854,"byte_end":207857,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207858,"byte_end":207887,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207888,"byte_end":207927,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207928,"byte_end":207931,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207932,"byte_end":207973,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":207974,"byte_end":208050,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208051,"byte_end":208080,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208081,"byte_end":208125,"line_start":80,"line_end":80,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208126,"byte_end":208151,"line_start":81,"line_end":81,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208152,"byte_end":208157,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208158,"byte_end":208165,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208166,"byte_end":208183,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208184,"byte_end":208214,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208215,"byte_end":208222,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208223,"byte_end":208230,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208231,"byte_end":208295,"line_start":88,"line_end":88,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208489,"byte_end":208492,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder using the provided compression options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208412,"byte_end":208477,"line_start":94,"line_end":94,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208840,"byte_end":208846,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `DeflateEncoder`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208684,"byte_end":208767,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208772,"byte_end":208828,"line_start":102,"line_end":102,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":209262,"byte_end":209267,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":209118,"byte_end":209203,"line_start":110,"line_end":110,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":209208,"byte_end":209250,"line_start":111,"line_end":111,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211650,"byte_end":211661,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[{"value":"/ A Zlib encoder/compressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210856,"byte_end":210886,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210887,"byte_end":210890,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210891,"byte_end":210985,"line_start":156,"line_end":156,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression with Zlib headers and trailers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210986,"byte_end":211067,"line_start":157,"line_end":157,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211068,"byte_end":211071,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211072,"byte_end":211086,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211087,"byte_end":211090,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211091,"byte_end":211102,"line_start":161,"line_end":161,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211103,"byte_end":211121,"line_start":162,"line_end":162,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211122,"byte_end":211127,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211128,"byte_end":211172,"line_start":164,"line_end":164,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211173,"byte_end":211178,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211179,"byte_end":211202,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211203,"byte_end":211206,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211207,"byte_end":211236,"line_start":168,"line_end":168,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211237,"byte_end":211273,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211274,"byte_end":211277,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211278,"byte_end":211319,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211320,"byte_end":211393,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211394,"byte_end":211423,"line_start":173,"line_end":173,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211424,"byte_end":211468,"line_start":174,"line_end":174,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211469,"byte_end":211494,"line_start":175,"line_end":175,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211495,"byte_end":211500,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211501,"byte_end":211508,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211509,"byte_end":211526,"line_start":178,"line_end":178,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211527,"byte_end":211557,"line_start":179,"line_end":179,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211558,"byte_end":211565,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211566,"byte_end":211573,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211574,"byte_end":211638,"line_start":182,"line_end":182,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211888,"byte_end":211891,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Create a new `ZlibEncoder` using the provided compression options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211806,"byte_end":211876,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":212636,"byte_end":212642,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `ZlibEncoder`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":212483,"byte_end":212563,"line_start":207,"line_end":207,"column_start":5,"column_end":85}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":212568,"byte_end":212624,"line_start":208,"line_end":208,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":213058,"byte_end":213063,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":212914,"byte_end":212999,"line_start":216,"line_end":216,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":213004,"byte_end":213046,"line_start":217,"line_end":217,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":213985,"byte_end":213993,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[{"value":"/ Return the adler32 checksum of the currently consumed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":213910,"byte_end":213973,"line_start":247,"line_end":247,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3102,"byte_end":3107,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":887}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[{"value":"/ Encoders implementing a `Write` interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3047,"byte_end":3093,"line_start":103,"line_end":103,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4160,"byte_end":4178,"line_start":137,"line_end":137,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"pub fn deflate_bytes_conf<O: Into<CompressionOptions>>(&[u8], O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3798,"byte_end":3861,"line_start":124,"line_end":124,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3862,"byte_end":3865,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3866,"byte_end":3913,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3914,"byte_end":3917,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3918,"byte_end":3932,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3933,"byte_end":3936,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3937,"byte_end":3944,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_conf, Compression};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3945,"byte_end":3996,"line_start":131,"line_end":131,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":3997,"byte_end":4000,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4001,"byte_end":4042,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4043,"byte_end":4113,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4114,"byte_end":4144,"line_start":135,"line_end":135,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4145,"byte_end":4152,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4836,"byte_end":4849,"line_start":163,"line_end":163,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"pub fn deflate_bytes(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression using the default compression","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4478,"byte_end":4570,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4571,"byte_end":4581,"line_start":150,"line_end":150,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4582,"byte_end":4585,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4586,"byte_end":4633,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4634,"byte_end":4637,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4638,"byte_end":4652,"line_start":154,"line_end":154,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4653,"byte_end":4656,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4657,"byte_end":4664,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4665,"byte_end":4696,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4697,"byte_end":4700,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4701,"byte_end":4742,"line_start":159,"line_end":159,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4743,"byte_end":4789,"line_start":160,"line_end":160,"column_start":1,"column_end":47}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4790,"byte_end":4820,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4821,"byte_end":4828,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5389,"byte_end":5412,"line_start":182,"line_end":182,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"pub fn deflate_bytes_zlib_conf<O: Into<CompressionOptions>>(&[u8], O)\n-> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":4932,"byte_end":5032,"line_start":167,"line_end":167,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5033,"byte_end":5036,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5037,"byte_end":5084,"line_start":169,"line_end":169,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5085,"byte_end":5088,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5089,"byte_end":5132,"line_start":171,"line_end":171,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5133,"byte_end":5136,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5137,"byte_end":5151,"line_start":173,"line_end":173,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5152,"byte_end":5155,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5156,"byte_end":5163,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_zlib_conf, Compression};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5164,"byte_end":5220,"line_start":176,"line_end":176,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5221,"byte_end":5224,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5225,"byte_end":5266,"line_start":178,"line_end":178,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5267,"byte_end":5342,"line_start":179,"line_end":179,"column_start":1,"column_end":76}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5343,"byte_end":5373,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":5374,"byte_end":5381,"line_start":181,"line_end":181,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6502,"byte_end":6520,"line_start":216,"line_end":216,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"pub fn deflate_bytes_zlib(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6050,"byte_end":6150,"line_start":200,"line_end":200,"column_start":1,"column_end":101}},{"value":"/ using the default compression level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6151,"byte_end":6191,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6192,"byte_end":6195,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Returns a Vec<u8> of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6196,"byte_end":6241,"line_start":203,"line_end":203,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6242,"byte_end":6245,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6246,"byte_end":6289,"line_start":205,"line_end":205,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6290,"byte_end":6293,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6294,"byte_end":6308,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6309,"byte_end":6312,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6313,"byte_end":6320,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes_zlib;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6321,"byte_end":6357,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6358,"byte_end":6361,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6362,"byte_end":6403,"line_start":212,"line_end":212,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6404,"byte_end":6455,"line_start":213,"line_end":213,"column_start":1,"column_end":52}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6456,"byte_end":6486,"line_start":214,"line_end":214,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lib.rs","byte_start":6487,"byte_end":6494,"line_start":215,"line_end":215,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\bitstream.rs","byte_start":17443,"byte_end":17452,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\bitstream.rs","byte_start":18926,"byte_end":18935,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":22113,"byte_end":22119,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":22278,"byte_end":22284,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":23804,"byte_end":23820,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33257,"byte_end":33267,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33365,"byte_end":33375,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33772,"byte_end":33787,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33942,"byte_end":33957,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49939,"byte_end":49950,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50379,"byte_end":50393,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52964,"byte_end":52982,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":55260,"byte_end":55278,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":55452,"byte_end":55470,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":56414,"byte_end":56426,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":57034,"byte_end":57047,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":58878,"byte_end":58890,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\encoder_state.rs","byte_start":61790,"byte_end":61802,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":89931,"byte_end":89942,"line_start":202,"line_end":202,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":90149,"byte_end":90160,"line_start":212,"line_end":212,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":92918,"byte_end":92930,"line_start":290,"line_end":290,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\input_buffer.rs","byte_start":101520,"byte_end":101531,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\length_encode.rs","byte_start":106686,"byte_end":106699,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132427,"byte_end":132439,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":133963,"byte_end":133972,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":136915,"byte_end":136925,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lzvalue.rs","byte_start":176730,"byte_end":176742,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lzvalue.rs","byte_start":177525,"byte_end":177532,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\output_writer.rs","byte_start":196030,"byte_end":196043,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208388,"byte_end":208402,"line_start":93,"line_end":93,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":209622,"byte_end":209636,"line_start":123,"line_end":123,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210220,"byte_end":210234,"line_start":139,"line_end":139,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211785,"byte_end":211796,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":214085,"byte_end":214096,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":215094,"byte_end":215105,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\bitstream.rs","byte_start":17443,"byte_end":17452,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\bitstream.rs","byte_start":18926,"byte_end":18935,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":22113,"byte_end":22119,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":22278,"byte_end":22284,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\chained_hash_table.rs","byte_start":23804,"byte_end":23820,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33257,"byte_end":33267,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33365,"byte_end":33375,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33772,"byte_end":33787,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\checksum.rs","byte_start":33942,"byte_end":33957,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":49939,"byte_end":49950,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":50379,"byte_end":50393,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":52964,"byte_end":52982,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":55260,"byte_end":55278,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\compression_options.rs","byte_start":55452,"byte_end":55470,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":56414,"byte_end":56426,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":57034,"byte_end":57047,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\deflate_state.rs","byte_start":58878,"byte_end":58890,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\encoder_state.rs","byte_start":61790,"byte_end":61802,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":89931,"byte_end":89942,"line_start":202,"line_end":202,"column_start":21,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":90149,"byte_end":90160,"line_start":212,"line_end":212,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\huffman_table.rs","byte_start":92918,"byte_end":92930,"line_start":290,"line_end":290,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\input_buffer.rs","byte_start":101520,"byte_end":101531,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\length_encode.rs","byte_start":106686,"byte_end":106699,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":132427,"byte_end":132439,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":133963,"byte_end":133972,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lz77.rs","byte_start":136915,"byte_end":136925,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lzvalue.rs","byte_start":176730,"byte_end":176742,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\lzvalue.rs","byte_start":177525,"byte_end":177532,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\output_writer.rs","byte_start":196030,"byte_end":196043,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":208388,"byte_end":208402,"line_start":93,"line_end":93,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":209622,"byte_end":209636,"line_start":123,"line_end":123,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":781},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":210220,"byte_end":210234,"line_start":139,"line_end":139,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":211785,"byte_end":211796,"line_start":189,"line_end":189,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":214085,"byte_end":214096,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":798},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-1.0.0\\src\\writer.rs","byte_start":215094,"byte_end":215105,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":3300}}]}