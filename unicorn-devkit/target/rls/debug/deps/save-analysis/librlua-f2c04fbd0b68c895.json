{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rlua","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"builtin-lua54\"","--cfg","feature=\"default\"","--cfg","feature=\"rlua-lua54-sys\"","-C","metadata=f2c04fbd0b68c895","-C","extra-filename=-f2c04fbd0b68c895","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--extern","bitflags=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libbitflags-185035745ee30f8b.rmeta","--extern","bstr=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libbstr-f0929ac27b7b3aa5.rmeta","--extern","libc=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\liblibc-8f2b63fd302db70a.rmeta","--extern","num_traits=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libnum_traits-3e40bcd7ad4f9f28.rmeta","--extern","rlua_lua54_sys=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\librlua_lua54_sys-b93327778b55b8a3.rmeta","--cap-lints","allow","--cfg","rlua_lua54","-L","native=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\build\\rlua-lua54-sys-de7950719cc308fc\\out\\lib","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\librlua-f2c04fbd0b68c895.rmeta"},"prelude":{"crate_id":{"name":"rlua","disambiguator":[17915685734058389698,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","num":16,"id":{"name":"rlua_lua54_sys","disambiguator":[9869238756606959599,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","num":17,"id":{"name":"bstr","disambiguator":[10048635190364895086,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","num":18,"id":{"name":"memchr","disambiguator":[1389655081229493267,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","num":19,"id":{"name":"num_traits","disambiguator":[114989641231652250,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","num":20,"id":{"name":"libc","disambiguator":[8607694418238748217,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","num":21,"id":{"name":"bitflags","disambiguator":[12784266730172947800,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":0,"byte_end":2921,"line_start":1,"line_end":83,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233894,"byte_end":233897,"line_start":51,"line_end":51,"column_start":22,"column_end":25},"alias_span":null,"name":"Nil","value":"","parent":{"krate":0,"index":1847}},{"kind":"Use","ref_id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233894,"byte_end":233897,"line_start":51,"line_end":51,"column_start":22,"column_end":25},"alias_span":null,"name":"Nil","value":"","parent":{"krate":0,"index":1847}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2220,"byte_end":2225,"line_start":69,"line_end":69,"column_start":26,"column_end":31},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2227,"byte_end":2234,"line_start":69,"line_end":69,"column_start":33,"column_end":40},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2260,"byte_end":2265,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2267,"byte_end":2280,"line_start":70,"line_end":70,"column_start":31,"column_end":44},"alias_span":null,"name":"ExternalError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2282,"byte_end":2296,"line_start":70,"line_end":70,"column_start":46,"column_end":60},"alias_span":null,"name":"ExternalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2298,"byte_end":2304,"line_start":70,"line_end":70,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2332,"byte_end":2340,"line_start":71,"line_end":71,"column_start":26,"column_end":34},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2332,"byte_end":2340,"line_start":71,"line_end":71,"column_start":26,"column_end":34},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2364,"byte_end":2369,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2371,"byte_end":2381,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"alias_span":null,"name":"DebugNames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2383,"byte_end":2394,"line_start":72,"line_end":72,"column_start":42,"column_end":53},"alias_span":null,"name":"DebugSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2396,"byte_end":2406,"line_start":72,"line_end":72,"column_start":55,"column_end":65},"alias_span":null,"name":"DebugStack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2408,"byte_end":2420,"line_start":72,"line_end":72,"column_start":67,"column_end":79},"alias_span":null,"name":"HookTriggers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2444,"byte_end":2453,"line_start":73,"line_end":73,"column_start":22,"column_end":31},"alias_span":null,"name":"InitFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2455,"byte_end":2458,"line_start":73,"line_end":73,"column_start":33,"column_end":36},"alias_span":null,"name":"Lua","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2460,"byte_end":2466,"line_start":73,"line_end":73,"column_start":38,"column_end":44},"alias_span":null,"name":"StdLib","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2491,"byte_end":2499,"line_start":74,"line_end":74,"column_start":23,"column_end":31},"alias_span":null,"name":"Variadic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2523,"byte_end":2528,"line_start":75,"line_end":75,"column_start":23,"column_end":28},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2553,"byte_end":2559,"line_start":76,"line_end":76,"column_start":24,"column_end":30},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2553,"byte_end":2559,"line_start":76,"line_end":76,"column_start":24,"column_end":30},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2584,"byte_end":2589,"line_start":77,"line_end":77,"column_start":24,"column_end":29},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2584,"byte_end":2589,"line_start":77,"line_end":77,"column_start":24,"column_end":29},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2591,"byte_end":2601,"line_start":77,"line_end":77,"column_start":31,"column_end":41},"alias_span":null,"name":"TablePairs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2603,"byte_end":2616,"line_start":77,"line_end":77,"column_start":43,"column_end":56},"alias_span":null,"name":"TableSequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2643,"byte_end":2649,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"alias_span":null,"name":"Thread","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2643,"byte_end":2649,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"alias_span":null,"name":"Thread","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2651,"byte_end":2663,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"alias_span":null,"name":"ThreadStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2689,"byte_end":2696,"line_start":79,"line_end":79,"column_start":24,"column_end":31},"alias_span":null,"name":"Integer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2698,"byte_end":2711,"line_start":79,"line_end":79,"column_start":33,"column_end":46},"alias_span":null,"name":"LightUserData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2698,"byte_end":2711,"line_start":79,"line_end":79,"column_start":33,"column_end":46},"alias_span":null,"name":"LightUserData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2713,"byte_end":2719,"line_start":79,"line_end":79,"column_start":48,"column_end":54},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2721,"byte_end":2732,"line_start":79,"line_end":79,"column_start":56,"column_end":67},"alias_span":null,"name":"RegistryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2761,"byte_end":2772,"line_start":80,"line_end":80,"column_start":27,"column_end":38},"alias_span":null,"name":"AnyUserData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2761,"byte_end":2772,"line_start":80,"line_end":80,"column_start":27,"column_end":38},"alias_span":null,"name":"AnyUserData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2774,"byte_end":2784,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"alias_span":null,"name":"MetaMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2786,"byte_end":2794,"line_start":80,"line_end":80,"column_start":52,"column_end":60},"alias_span":null,"name":"UserData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2796,"byte_end":2811,"line_start":80,"line_end":80,"column_start":62,"column_end":77},"alias_span":null,"name":"UserDataMethods","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2837,"byte_end":2844,"line_start":81,"line_end":81,"column_start":24,"column_end":31},"alias_span":null,"name":"FromLua","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2846,"byte_end":2858,"line_start":81,"line_end":81,"column_start":33,"column_end":45},"alias_span":null,"name":"FromLuaMulti","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2860,"byte_end":2870,"line_start":81,"line_end":81,"column_start":47,"column_end":57},"alias_span":null,"name":"MultiValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2872,"byte_end":2875,"line_start":81,"line_end":81,"column_start":59,"column_end":62},"alias_span":null,"name":"Nil","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2872,"byte_end":2875,"line_start":81,"line_end":81,"column_start":59,"column_end":62},"alias_span":null,"name":"Nil","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2877,"byte_end":2882,"line_start":81,"line_end":81,"column_start":64,"column_end":69},"alias_span":null,"name":"ToLua","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2884,"byte_end":2894,"line_start":81,"line_end":81,"column_start":71,"column_end":81},"alias_span":null,"name":"ToLuaMulti","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2896,"byte_end":2901,"line_start":81,"line_end":81,"column_start":83,"column_end":88},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238036,"byte_end":238047,"line_start":4,"line_end":4,"column_start":5,"column_end":16},"alias_span":null,"name":"LuaAnyUserData","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238036,"byte_end":238047,"line_start":4,"line_end":4,"column_start":5,"column_end":16},"alias_span":null,"name":"LuaAnyUserData","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238067,"byte_end":238072,"line_start":4,"line_end":4,"column_start":36,"column_end":41},"alias_span":null,"name":"LuaChunk","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238086,"byte_end":238093,"line_start":4,"line_end":4,"column_start":55,"column_end":62},"alias_span":null,"name":"LuaContext","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238109,"byte_end":238114,"line_start":4,"line_end":4,"column_start":78,"column_end":83},"alias_span":null,"name":"LuaDebug","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238132,"byte_end":238142,"line_start":5,"line_end":5,"column_start":5,"column_end":15},"alias_span":null,"name":"LuaDebugNames","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238161,"byte_end":238172,"line_start":5,"line_end":5,"column_start":34,"column_end":45},"alias_span":null,"name":"LuaDebugSource","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238192,"byte_end":238202,"line_start":5,"line_end":5,"column_start":65,"column_end":75},"alias_span":null,"name":"LuaDebugStack","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238225,"byte_end":238230,"line_start":6,"line_end":6,"column_start":5,"column_end":10},"alias_span":null,"name":"LuaError","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238244,"byte_end":238257,"line_start":6,"line_end":6,"column_start":24,"column_end":37},"alias_span":null,"name":"LuaExternalError","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238279,"byte_end":238293,"line_start":6,"line_end":6,"column_start":59,"column_end":73},"alias_span":null,"name":"LuaExternalResult","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238320,"byte_end":238327,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"alias_span":null,"name":"FromLua","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238329,"byte_end":238341,"line_start":7,"line_end":7,"column_start":14,"column_end":26},"alias_span":null,"name":"FromLuaMulti","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238343,"byte_end":238351,"line_start":7,"line_end":7,"column_start":28,"column_end":36},"alias_span":null,"name":"LuaFunction","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238343,"byte_end":238351,"line_start":7,"line_end":7,"column_start":28,"column_end":36},"alias_span":null,"name":"LuaFunction","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238368,"byte_end":238380,"line_start":7,"line_end":7,"column_start":53,"column_end":65},"alias_span":null,"name":"LuaHookTriggers","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238405,"byte_end":238412,"line_start":8,"line_end":8,"column_start":5,"column_end":12},"alias_span":null,"name":"LuaInteger","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238428,"byte_end":238441,"line_start":8,"line_end":8,"column_start":28,"column_end":41},"alias_span":null,"name":"LuaLightUserData","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238428,"byte_end":238441,"line_start":8,"line_end":8,"column_start":28,"column_end":41},"alias_span":null,"name":"LuaLightUserData","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238463,"byte_end":238466,"line_start":8,"line_end":8,"column_start":63,"column_end":66},"alias_span":null,"name":"Lua","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238468,"byte_end":238478,"line_start":8,"line_end":8,"column_start":68,"column_end":78},"alias_span":null,"name":"LuaMetaMethod","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238501,"byte_end":238511,"line_start":9,"line_end":9,"column_start":5,"column_end":15},"alias_span":null,"name":"LuaMultiValue","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238530,"byte_end":238533,"line_start":9,"line_end":9,"column_start":34,"column_end":37},"alias_span":null,"name":"LuaNil","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238530,"byte_end":238533,"line_start":9,"line_end":9,"column_start":34,"column_end":37},"alias_span":null,"name":"LuaNil","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238545,"byte_end":238551,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"alias_span":null,"name":"LuaNumber","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238566,"byte_end":238577,"line_start":9,"line_end":9,"column_start":70,"column_end":81},"alias_span":null,"name":"LuaRegistryKey","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238601,"byte_end":238607,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"alias_span":null,"name":"LuaResult","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238622,"byte_end":238627,"line_start":10,"line_end":10,"column_start":26,"column_end":31},"alias_span":null,"name":"LuaScope","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238641,"byte_end":238647,"line_start":10,"line_end":10,"column_start":45,"column_end":51},"alias_span":null,"name":"LuaString","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238641,"byte_end":238647,"line_start":10,"line_end":10,"column_start":45,"column_end":51},"alias_span":null,"name":"LuaString","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238662,"byte_end":238667,"line_start":10,"line_end":10,"column_start":66,"column_end":71},"alias_span":null,"name":"LuaTable","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238662,"byte_end":238667,"line_start":10,"line_end":10,"column_start":66,"column_end":71},"alias_span":null,"name":"LuaTable","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238685,"byte_end":238695,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"alias_span":null,"name":"LuaTablePairs","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238714,"byte_end":238727,"line_start":11,"line_end":11,"column_start":34,"column_end":47},"alias_span":null,"name":"LuaTableSequence","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238749,"byte_end":238755,"line_start":11,"line_end":11,"column_start":69,"column_end":75},"alias_span":null,"name":"LuaThread","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238749,"byte_end":238755,"line_start":11,"line_end":11,"column_start":69,"column_end":75},"alias_span":null,"name":"LuaThread","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238774,"byte_end":238786,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"alias_span":null,"name":"LuaThreadStatus","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238807,"byte_end":238812,"line_start":12,"line_end":12,"column_start":38,"column_end":43},"alias_span":null,"name":"ToLua","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238814,"byte_end":238824,"line_start":12,"line_end":12,"column_start":45,"column_end":55},"alias_span":null,"name":"ToLuaMulti","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238826,"byte_end":238834,"line_start":12,"line_end":12,"column_start":57,"column_end":65},"alias_span":null,"name":"LuaUserData","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238855,"byte_end":238870,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"LuaUserDataMethods","value":"","parent":{"krate":0,"index":2072}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":238894,"byte_end":238899,"line_start":13,"line_end":13,"column_start":44,"column_end":49},"alias_span":null,"name":"LuaValue","value":"","parent":{"krate":0,"index":2072}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":0,"byte_end":2921,"line_start":1,"line_end":83,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":384},{"krate":0,"index":622},{"krate":0,"index":660},{"krate":0,"index":730},{"krate":0,"index":777},{"krate":0,"index":926},{"krate":0,"index":941},{"krate":0,"index":1033},{"krate":0,"index":1250},{"krate":0,"index":1300},{"krate":0,"index":1412},{"krate":0,"index":1468},{"krate":0,"index":1532},{"krate":0,"index":1663},{"krate":0,"index":1847},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2072}],"decl_id":null,"docs":" # High-level bindings to Lua","sig":null,"attributes":[{"value":"/ # High-level bindings to Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `rlua` crate provides safe high-level bindings to the [Lua programming language].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":37,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":127,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # The `Lua` object","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":131,"byte_end":153,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":154,"byte_end":157,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The main type exported by this library is the [`Lua`] struct. In addition to methods for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":158,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":93}},{"value":"/ [executing] Lua chunks or [evaluating] Lua expressions, it provides methods for creating Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":251,"byte_end":347,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ values and accessing the table of [globals].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":348,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":397,"byte_end":400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Converting data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":401,"byte_end":422,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":423,"byte_end":426,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`ToLua`] and [`FromLua`] traits allow conversion from Rust types to Lua values and vice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":427,"byte_end":523,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ versa. They are implemented for many data structures found in Rust's standard library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":524,"byte_end":614,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":615,"byte_end":618,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ For more general conversions, the [`ToLuaMulti`] and [`FromLuaMulti`] traits allow converting","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":619,"byte_end":716,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ between Rust types and *any number* of Lua values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":717,"byte_end":771,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":772,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Most code in `rlua` is generic over implementors of those traits, so in most places the normal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":776,"byte_end":874,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ Rust data structures are accepted without having to write any boilerplate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":875,"byte_end":953,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":954,"byte_end":957,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Custom Userdata","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":958,"byte_end":979,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":980,"byte_end":983,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The [`UserData`] trait can be implemented by user-defined types to make them available to Lua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":984,"byte_end":1082,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ Methods and operators to be used from Lua can be added using the [`UserDataMethods`] API.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1083,"byte_end":1176,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1177,"byte_end":1180,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [Lua programming language]: https://www.lua.org/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1181,"byte_end":1233,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ [`Lua`]: struct.Lua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1234,"byte_end":1262,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ [executing]: struct.Context.html#method.exec","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1263,"byte_end":1311,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ [evaluating]: struct.Context.html#method.eval","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1312,"byte_end":1361,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ [globals]: struct.Context.html#method.globals","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1362,"byte_end":1411,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ [`ToLua`]: trait.ToLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1412,"byte_end":1443,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ [`FromLua`]: trait.FromLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1444,"byte_end":1479,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ [`ToLuaMulti`]: trait.ToLuaMulti.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1480,"byte_end":1521,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ [`FromLuaMulti`]: trait.FromLuaMulti.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1522,"byte_end":1567,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1568,"byte_end":1605,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ [`UserDataMethods`]: trait.UserDataMethods.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":1606,"byte_end":1657,"line_start":37,"line_end":37,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5751,"byte_end":5758,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6262,"byte_end":6266,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"load","qualname":"<Context>::load","value":"pub fn load<'a, S>(Self, &'a S) -> Chunk where S: ?Sized + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns Lua source code as a `Chunk` builder type.","sig":null,"attributes":[{"value":"/ Returns Lua source code as a `Chunk` builder type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5916,"byte_end":5970,"line_start":39,"line_end":39,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5975,"byte_end":5978,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ In order to actually compile or run the resulting code, you must call [`Chunk::exec`] or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5983,"byte_end":6075,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ similar on the returned builder.  Code is not even parsed until one of these methods is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6080,"byte_end":6171,"line_start":42,"line_end":42,"column_start":5,"column_end":96}},{"value":"/ called.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6176,"byte_end":6187,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6192,"byte_end":6195,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Chunk::exec`]: struct.Chunk.html#method.exec","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6200,"byte_end":6250,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6728,"byte_end":6741,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"create_string","qualname":"<Context>::create_string","value":"pub fn create_string<S>(Self, &S) -> Result<String> where S: ?Sized +\nAsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Create and return an interned Lua string.  Lua strings can be arbitrary [u8] data including\n embedded nulls, so in addition to `&str` and `&String`, you can also pass plain `&[u8]`\n here.\n","sig":null,"attributes":[{"value":"/ Create and return an interned Lua string.  Lua strings can be arbitrary [u8] data including","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6511,"byte_end":6606,"line_start":58,"line_end":58,"column_start":5,"column_end":100}},{"value":"/ embedded nulls, so in addition to `&str` and `&String`, you can also pass plain `&[u8]`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6611,"byte_end":6702,"line_start":59,"line_end":59,"column_start":5,"column_end":96}},{"value":"/ here.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":6707,"byte_end":6716,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":7089,"byte_end":7101,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"create_table","qualname":"<Context>::create_table","value":"pub fn create_table(Self) -> Result<Table>","parent":null,"children":[],"decl_id":null,"docs":" Creates and returns a new table.\n","sig":null,"attributes":[{"value":"/ Creates and returns a new table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":7041,"byte_end":7077,"line_start":73,"line_end":73,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":7583,"byte_end":7600,"line_start":88,"line_end":88,"column_start":12,"column_end":29},"name":"create_table_from","qualname":"<Context>::create_table_from","value":"pub fn create_table_from<K, V, I>(Self, I) -> Result<Table> where K: ToLua,\nV: ToLua, I: IntoIterator<Item = (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a table and fills it with values from an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a table and fills it with values from an iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":7509,"byte_end":7571,"line_start":87,"line_end":87,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":8757,"byte_end":8777,"line_start":120,"line_end":120,"column_start":12,"column_end":32},"name":"create_sequence_from","qualname":"<Context>::create_sequence_from","value":"pub fn create_sequence_from<T, I>(Self, I) -> Result<Table> where T: ToLua,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a table from an iterator of values, using `1..` as the keys.\n","sig":null,"attributes":[{"value":"/ Creates a table from an iterator of values, using `1..` as the keys.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":8673,"byte_end":8745,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10654,"byte_end":10669,"line_start":175,"line_end":175,"column_start":12,"column_end":27},"name":"create_function","qualname":"<Context>::create_function","value":"pub fn create_function<A, R, F>(Self, F) -> Result<Function> where\nA: FromLuaMulti, R: ToLuaMulti, F: 'static + Send + Fn(Context, A) ->\nResult<R>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a Rust function or closure, creating a callable Lua function handle to it.","sig":null,"attributes":[{"value":"/ Wraps a Rust function or closure, creating a callable Lua function handle to it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":8994,"byte_end":9078,"line_start":128,"line_end":128,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9083,"byte_end":9086,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The function's return value is always a `Result`: If the function returns `Err`, the error","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9091,"byte_end":9185,"line_start":130,"line_end":130,"column_start":5,"column_end":99}},{"value":"/ is raised as a Lua error, which can be caught using `(x)pcall` or bubble up to the Rust code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9190,"byte_end":9286,"line_start":131,"line_end":131,"column_start":5,"column_end":101}},{"value":"/ that invoked the Lua code. This allows using the `?` operator to propagate errors through","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9291,"byte_end":9384,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ intermediate Lua code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9389,"byte_end":9415,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9420,"byte_end":9423,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the function returns `Ok`, the contained value will be converted to one or more Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9428,"byte_end":9518,"line_start":135,"line_end":135,"column_start":5,"column_end":95}},{"value":"/ values. For details on Rust-to-Lua conversions, refer to the [`ToLua`] and [`ToLuaMulti`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9523,"byte_end":9616,"line_start":136,"line_end":136,"column_start":5,"column_end":98}},{"value":"/ traits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9621,"byte_end":9632,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9637,"byte_end":9640,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9645,"byte_end":9659,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9664,"byte_end":9667,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Create a function which prints its argument:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9672,"byte_end":9720,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9725,"byte_end":9728,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9733,"byte_end":9740,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9745,"byte_end":9775,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9780,"byte_end":9811,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9816,"byte_end":9856,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ let greet = lua_context.create_function(|_, name: String| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9861,"byte_end":9924,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/     println!(\"Hello, {}!\", name);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9929,"byte_end":9966,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9971,"byte_end":9985,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":9990,"byte_end":9997,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # let _ = greet;    // used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10002,"byte_end":10033,"line_start":151,"line_end":151,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10038,"byte_end":10050,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10055,"byte_end":10063,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10068,"byte_end":10075,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10080,"byte_end":10087,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10092,"byte_end":10095,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Use tuples to accept multiple arguments:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10100,"byte_end":10144,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10149,"byte_end":10152,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10157,"byte_end":10164,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10169,"byte_end":10199,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10204,"byte_end":10235,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10240,"byte_end":10280,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/ let print_person = lua_context.create_function(|_, (name, age): (String, u8)| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10285,"byte_end":10368,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/     println!(\"{} is {} years old!\", name, age);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10373,"byte_end":10424,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10429,"byte_end":10443,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10448,"byte_end":10455,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ # let _ = print_person;    // used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10460,"byte_end":10498,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10503,"byte_end":10515,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10520,"byte_end":10528,"line_start":169,"line_end":169,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10533,"byte_end":10540,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10545,"byte_end":10552,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10557,"byte_end":10560,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`ToLua`]: trait.ToLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10565,"byte_end":10596,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/ [`ToLuaMulti`]: trait.ToLuaMulti.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":10601,"byte_end":10642,"line_start":174,"line_end":174,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11337,"byte_end":11356,"line_start":192,"line_end":192,"column_start":12,"column_end":31},"name":"create_function_mut","qualname":"<Context>::create_function_mut","value":"pub fn create_function_mut<A, R, F>(Self, F) -> Result<Function> where\nA: FromLuaMulti, R: ToLuaMulti, F: 'static + Send + FnMut(Context, A) ->\nResult<R>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a Rust mutable closure, creating a callable Lua function handle to it.","sig":null,"attributes":[{"value":"/ Wraps a Rust mutable closure, creating a callable Lua function handle to it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11011,"byte_end":11091,"line_start":186,"line_end":186,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11096,"byte_end":11099,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`create_function`] that accepts a FnMut argument.  Refer to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11104,"byte_end":11189,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/ [`create_function`] for more information about the implementation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11194,"byte_end":11264,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11269,"byte_end":11272,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`create_function`]: #method.create_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11277,"byte_end":11325,"line_start":191,"line_end":191,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11907,"byte_end":11920,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"create_thread","qualname":"<Context>::create_thread","value":"pub fn create_thread(Self, Function) -> Result<Thread>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a Lua function into a new thread (or coroutine).","sig":null,"attributes":[{"value":"/ Wraps a Lua function into a new thread (or coroutine).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11787,"byte_end":11845,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11850,"byte_end":11853,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `coroutine.create`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":11858,"byte_end":11895,"line_start":208,"line_end":208,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12434,"byte_end":12449,"line_start":224,"line_end":224,"column_start":12,"column_end":27},"name":"create_userdata","qualname":"<Context>::create_userdata","value":"pub fn create_userdata<T>(Self, T) -> Result<AnyUserData> where T: 'static +\nSend + UserData","parent":null,"children":[],"decl_id":null,"docs":" Create a Lua userdata object from a custom userdata type.\n","sig":null,"attributes":[{"value":"/ Create a Lua userdata object from a custom userdata type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12361,"byte_end":12422,"line_start":223,"line_end":223,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12665,"byte_end":12672,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"globals","qualname":"<Context>::globals","value":"pub fn globals(Self) -> Table","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global environment.\n","sig":null,"attributes":[{"value":"/ Returns a handle to the global environment.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12606,"byte_end":12653,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13156,"byte_end":13170,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"name":"current_thread","qualname":"<Context>::current_thread","value":"pub fn current_thread(Self) -> Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the active `Thread` for this `Context`.  For calls to `Lua::context`\n this will be the main Lua thread, for `Context` parameters given to a callback, this will be\n whatever Lua thread called the callback.\n","sig":null,"attributes":[{"value":"/ Returns a handle to the active `Thread` for this `Context`.  For calls to `Lua::context`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12902,"byte_end":12994,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ this will be the main Lua thread, for `Context` parameters given to a callback, this will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":12999,"byte_end":13095,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ whatever Lua thread called the callback.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13100,"byte_end":13144,"line_start":243,"line_end":243,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14993,"byte_end":14998,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"scope","qualname":"<Context>::scope","value":"pub fn scope<'scope, F, R>(Self, F) -> R where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Calls the given function with a `Scope` parameter, giving the function the ability to create\n userdata and callbacks from rust types that are !Send or non-'static.","sig":null,"attributes":[{"value":"/ Calls the given function with a `Scope` parameter, giving the function the ability to create","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13313,"byte_end":13409,"line_start":251,"line_end":251,"column_start":5,"column_end":101}},{"value":"/ userdata and callbacks from rust types that are !Send or non-'static.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13414,"byte_end":13487,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13492,"byte_end":13495,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The lifetime of any function or userdata created through `Scope` lasts only until the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13500,"byte_end":13589,"line_start":254,"line_end":254,"column_start":5,"column_end":94}},{"value":"/ completion of this method call, on completion all such created values are automatically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13594,"byte_end":13685,"line_start":255,"line_end":255,"column_start":5,"column_end":96}},{"value":"/ dropped and Lua references to them are invalidated.  If a script accesses a value created","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13690,"byte_end":13783,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ through `Scope` outside of this method, a Lua error will result.  Since we can ensure the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13788,"byte_end":13881,"line_start":257,"line_end":257,"column_start":5,"column_end":98}},{"value":"/ lifetime of values created through `Scope`, and we know that `Lua` cannot be sent to another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13886,"byte_end":13982,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/ thread while `Scope` is live, it is safe to allow !Send datatypes and whose lifetimes only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":13987,"byte_end":14081,"line_start":259,"line_end":259,"column_start":5,"column_end":99}},{"value":"/ outlive the scope lifetime.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14086,"byte_end":14117,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14122,"byte_end":14125,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Inside the scope callback, all handles created through Scope will share the same unique 'lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14130,"byte_end":14226,"line_start":262,"line_end":262,"column_start":5,"column_end":101}},{"value":"/ lifetime of the parent `Context`.  This allows scoped and non-scoped values to be mixed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14231,"byte_end":14325,"line_start":263,"line_end":263,"column_start":5,"column_end":99}},{"value":"/ API calls, which is very useful (e.g. passing a scoped userdata to a non-scoped function).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14330,"byte_end":14424,"line_start":264,"line_end":264,"column_start":5,"column_end":99}},{"value":"/ However, this also enables handles to scoped values to be trivially leaked from the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14429,"byte_end":14522,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ callback. This is not dangerous, though!  After the callback returns, all scoped values are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14527,"byte_end":14622,"line_start":266,"line_end":266,"column_start":5,"column_end":100}},{"value":"/ invalidated, which means that though references may exist, the Rust types backing them have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14627,"byte_end":14722,"line_start":267,"line_end":267,"column_start":5,"column_end":100}},{"value":"/ dropped.  `Function` types will error when called, and `AnyUserData` will be typeless.  It","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14727,"byte_end":14821,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ would be impossible to prevent handles to scoped values from escaping anyway, since you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14826,"byte_end":14917,"line_start":269,"line_end":269,"column_start":5,"column_end":96}},{"value":"/ would always be able to smuggle them through Lua state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":14922,"byte_end":14981,"line_start":270,"line_end":270,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15405,"byte_end":15418,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"coerce_string","qualname":"<Context>::coerce_string","value":"pub fn coerce_string(Self, Value) -> Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to coerce a Lua value into a String in a manner consistent with Lua's internal\n behavior.","sig":null,"attributes":[{"value":"/ Attempts to coerce a Lua value into a String in a manner consistent with Lua's internal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15163,"byte_end":15254,"line_start":278,"line_end":278,"column_start":5,"column_end":96}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15259,"byte_end":15272,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15277,"byte_end":15280,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ To succeed, the value must be a string (in which case this is a no-op), an integer, or a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15285,"byte_end":15377,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/ number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":15382,"byte_end":15393,"line_start":282,"line_end":282,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16359,"byte_end":16373,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"coerce_integer","qualname":"<Context>::coerce_integer","value":"pub fn coerce_integer(Self, Value) -> Result<Option<Integer>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to coerce a Lua value into an integer in a manner consistent with Lua's internal\n behavior.","sig":null,"attributes":[{"value":"/ Attempts to coerce a Lua value into an integer in a manner consistent with Lua's internal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16004,"byte_end":16097,"line_start":302,"line_end":302,"column_start":5,"column_end":98}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16102,"byte_end":16115,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16120,"byte_end":16123,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ To succeed, the value must be an integer, a floating point number that has an exact","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16128,"byte_end":16215,"line_start":305,"line_end":305,"column_start":5,"column_end":92}},{"value":"/ representation as an integer, or a string that can be converted to an integer. Refer to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16220,"byte_end":16315,"line_start":306,"line_end":306,"column_start":5,"column_end":100}},{"value":"/ Lua manual for details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16320,"byte_end":16347,"line_start":307,"line_end":307,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17232,"byte_end":17245,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"coerce_number","qualname":"<Context>::coerce_number","value":"pub fn coerce_number(Self, Value) -> Result<Option<Number>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to coerce a Lua value into a Number in a manner consistent with Lua's internal\n behavior.","sig":null,"attributes":[{"value":"/ Attempts to coerce a Lua value into a Number in a manner consistent with Lua's internal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":16964,"byte_end":17055,"line_start":328,"line_end":328,"column_start":5,"column_end":96}},{"value":"/ behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17060,"byte_end":17073,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17078,"byte_end":17081,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ To succeed, the value must be a number or a string that can be converted to a number. Refer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17086,"byte_end":17181,"line_start":331,"line_end":331,"column_start":5,"column_end":100}},{"value":"/ to the Lua manual for details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17186,"byte_end":17220,"line_start":332,"line_end":332,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17866,"byte_end":17870,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"pack","qualname":"<Context>::pack","value":"pub fn pack<T: ToLua>(Self, T) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Converts a value that implements `ToLua` into a `Value` instance.\n","sig":null,"attributes":[{"value":"/ Converts a value that implements `ToLua` into a `Value` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17785,"byte_end":17854,"line_start":352,"line_end":352,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18041,"byte_end":18047,"line_start":358,"line_end":358,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Context>::unpack","value":"pub fn unpack<T: FromLua>(Self, Value) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Value` instance into a value that implements `FromLua`.\n","sig":null,"attributes":[{"value":"/ Converts a `Value` instance into a value that implements `FromLua`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":17958,"byte_end":18029,"line_start":357,"line_end":357,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18242,"byte_end":18252,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"pack_multi","qualname":"<Context>::pack_multi","value":"pub fn pack_multi<T: ToLuaMulti>(Self, T) -> Result<MultiValue>","parent":null,"children":[],"decl_id":null,"docs":" Converts a value that implements `ToLuaMulti` into a `MultiValue` instance.\n","sig":null,"attributes":[{"value":"/ Converts a value that implements `ToLuaMulti` into a `MultiValue` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18151,"byte_end":18230,"line_start":362,"line_end":362,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18449,"byte_end":18461,"line_start":368,"line_end":368,"column_start":12,"column_end":24},"name":"unpack_multi","qualname":"<Context>::unpack_multi","value":"pub fn unpack_multi<T: FromLuaMulti>(Self, MultiValue) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MultiValue` instance into a value that implements `FromLuaMulti`.\n","sig":null,"attributes":[{"value":"/ Converts a `MultiValue` instance into a value that implements `FromLuaMulti`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18356,"byte_end":18437,"line_start":367,"line_end":367,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18771,"byte_end":18795,"line_start":376,"line_end":376,"column_start":12,"column_end":36},"name":"set_named_registry_value","qualname":"<Context>::set_named_registry_value","value":"pub fn set_named_registry_value<S, T>(Self, &S, T) -> Result<()> where\nS: ?Sized + AsRef<[u8]>, T: ToLua","parent":null,"children":[],"decl_id":null,"docs":" Set a value in the Lua registry based on a string name.","sig":null,"attributes":[{"value":"/ Set a value in the Lua registry based on a string name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18581,"byte_end":18640,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18645,"byte_end":18648,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This value will be available to rust from all `Lua` instances which share the same main","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18653,"byte_end":18744,"line_start":374,"line_end":374,"column_start":5,"column_end":96}},{"value":"/ state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":18749,"byte_end":18759,"line_start":375,"line_end":375,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19703,"byte_end":19723,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"named_registry_value","qualname":"<Context>::named_registry_value","value":"pub fn named_registry_value<S, T>(Self, &S) -> Result<T> where S: ?Sized +\nAsRef<[u8]>, T: FromLua","parent":null,"children":[],"decl_id":null,"docs":" Get a value from the Lua registry based on a string name.","sig":null,"attributes":[{"value":"/ Get a value from the Lua registry based on a string name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19387,"byte_end":19448,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19453,"byte_end":19456,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Any Lua instance which shares the underlying main state may call this method to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19461,"byte_end":19544,"line_start":399,"line_end":399,"column_start":5,"column_end":88}},{"value":"/ get a value previously set by [`set_named_registry_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19549,"byte_end":19612,"line_start":400,"line_end":400,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19617,"byte_end":19620,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ [`set_named_registry_value`]: #method.set_named_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":19625,"byte_end":19691,"line_start":402,"line_end":402,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20546,"byte_end":20572,"line_start":429,"line_end":429,"column_start":12,"column_end":38},"name":"unset_named_registry_value","qualname":"<Context>::unset_named_registry_value","value":"pub fn unset_named_registry_value<S: ?Sized + AsRef<[u8]>>(Self, &S)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a named value in the Lua registry.","sig":null,"attributes":[{"value":"/ Removes a named value in the Lua registry.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20321,"byte_end":20367,"line_start":424,"line_end":424,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20372,"byte_end":20375,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_named_registry_value`] with a value of Nil.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20380,"byte_end":20455,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20460,"byte_end":20463,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`set_named_registry_value`]: #method.set_named_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20468,"byte_end":20534,"line_start":428,"line_end":428,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21331,"byte_end":21352,"line_start":446,"line_end":446,"column_start":12,"column_end":33},"name":"create_registry_value","qualname":"<Context>::create_registry_value","value":"pub fn create_registry_value<T: ToLua>(Self, T) -> Result<RegistryKey>","parent":null,"children":[],"decl_id":null,"docs":" Place a value in the Lua registry with an auto-generated key.","sig":null,"attributes":[{"value":"/ Place a value in the Lua registry with an auto-generated key.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20690,"byte_end":20755,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20760,"byte_end":20763,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This value will be available to rust from all `Lua` instances which share the same main","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20768,"byte_end":20859,"line_start":435,"line_end":435,"column_start":5,"column_end":96}},{"value":"/ state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20864,"byte_end":20874,"line_start":436,"line_end":436,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20879,"byte_end":20882,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The returned [`RegistryKey`] is of `'static` lifetime and is *the* main way in `rlua` of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20887,"byte_end":20979,"line_start":438,"line_end":438,"column_start":5,"column_end":97}},{"value":"/ maintaining ownership of a Lua value outside of a [`Lua::context`] call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":20984,"byte_end":21060,"line_start":439,"line_end":439,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21065,"byte_end":21068,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Be warned, garbage collection of values held inside the registry is not automatic, see","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21073,"byte_end":21163,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/ [`RegistryKey`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21168,"byte_end":21205,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21210,"byte_end":21213,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`RegistryKey`]: struct.RegistryKey.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21218,"byte_end":21262,"line_start":444,"line_end":444,"column_start":5,"column_end":49}},{"value":"/ [`Lua::context`]: struct.Lua.html#method.context","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21267,"byte_end":21319,"line_start":445,"line_end":445,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":22223,"byte_end":22237,"line_start":470,"line_end":470,"column_start":12,"column_end":26},"name":"registry_value","qualname":"<Context>::registry_value","value":"pub fn registry_value<T: FromLua>(Self, &RegistryKey) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value from the Lua registry by its `RegistryKey`","sig":null,"attributes":[{"value":"/ Get a value from the Lua registry by its `RegistryKey`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21916,"byte_end":21974,"line_start":464,"line_end":464,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21979,"byte_end":21982,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Any Lua instance which shares the underlying main state may call this method to get a value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":21987,"byte_end":22082,"line_start":466,"line_end":466,"column_start":5,"column_end":100}},{"value":"/ previously placed by [`create_registry_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":22087,"byte_end":22138,"line_start":467,"line_end":467,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":22143,"byte_end":22146,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ [`create_registry_value`]: #method.create_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":22151,"byte_end":22211,"line_start":469,"line_end":469,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23487,"byte_end":23508,"line_start":501,"line_end":501,"column_start":12,"column_end":33},"name":"remove_registry_value","qualname":"<Context>::remove_registry_value","value":"pub fn remove_registry_value(Self, RegistryKey) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the Lua registry.","sig":null,"attributes":[{"value":"/ Removes a value from the Lua registry.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":22965,"byte_end":23007,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23012,"byte_end":23015,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ You may call this function to manually remove a value placed in the registry with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23020,"byte_end":23105,"line_start":494,"line_end":494,"column_start":5,"column_end":90}},{"value":"/ [`create_registry_value`]. In addition to manual `RegistryKey` removal, you can also call","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23110,"byte_end":23203,"line_start":495,"line_end":495,"column_start":5,"column_end":98}},{"value":"/ [`expire_registry_values`] to automatically remove values from the registry whose","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23208,"byte_end":23293,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ `RegistryKey`s have been dropped.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23298,"byte_end":23335,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23340,"byte_end":23343,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [`create_registry_value`]: #method.create_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23348,"byte_end":23408,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/ [`expire_registry_values`]: #method.expire_registry_values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23413,"byte_end":23475,"line_start":500,"line_end":500,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24160,"byte_end":24179,"line_start":518,"line_end":518,"column_start":12,"column_end":31},"name":"owns_registry_value","qualname":"<Context>::owns_registry_value","value":"pub fn owns_registry_value(Self, &RegistryKey) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the given `RegistryKey` was created by a `Lua` which shares the underlying\n main state with this `Lua` instance.","sig":null,"attributes":[{"value":"/ Returns true if the given `RegistryKey` was created by a `Lua` which shares the underlying","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23805,"byte_end":23899,"line_start":512,"line_end":512,"column_start":5,"column_end":99}},{"value":"/ main state with this `Lua` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23904,"byte_end":23944,"line_start":513,"line_end":513,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23949,"byte_end":23952,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Other than this, methods that accept a `RegistryKey` will return","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":23957,"byte_end":24025,"line_start":515,"line_end":515,"column_start":5,"column_end":73}},{"value":"/ `Error::MismatchedRegistryKey` if passed a `RegistryKey` that was not created with a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24030,"byte_end":24118,"line_start":516,"line_end":516,"column_start":5,"column_end":93}},{"value":"/ matching `Lua` state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24123,"byte_end":24148,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24724,"byte_end":24746,"line_start":532,"line_end":532,"column_start":12,"column_end":34},"name":"expire_registry_values","qualname":"<Context>::expire_registry_values","value":"pub fn expire_registry_values(Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove any registry values whose `RegistryKey`s have all been dropped.","sig":null,"attributes":[{"value":"/ Remove any registry values whose `RegistryKey`s have all been dropped.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24389,"byte_end":24463,"line_start":527,"line_end":527,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24468,"byte_end":24471,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Unlike normal handle values, `RegistryKey`s do not automatically remove themselves on Drop,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24476,"byte_end":24571,"line_start":529,"line_end":529,"column_start":5,"column_end":100}},{"value":"/ but you can call this method to remove any unreachable registry values not manually removed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24576,"byte_end":24671,"line_start":530,"line_end":530,"column_start":5,"column_end":100}},{"value":"/ by `Lua::remove_registry_value`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":24676,"byte_end":24712,"line_start":531,"line_end":531,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38242,"byte_end":38247,"line_start":910,"line_end":910,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::context::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Returned from [`Context::load`] and is used to finalize loading and executing Lua main chunks.","sig":null,"attributes":[{"value":"/ Returned from [`Context::load`] and is used to finalize loading and executing Lua main chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":37961,"byte_end":38059,"line_start":906,"line_end":906,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38060,"byte_end":38063,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ [`Context::load`]: struct.Context.html#method.load","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38064,"byte_end":38118,"line_start":908,"line_end":908,"column_start":1,"column_end":55}},{"value":"must_use =\n\"`Chunk`s do nothing unless one of `exec`, `eval`, `call`, or `into_function` are called on them\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38119,"byte_end":38230,"line_start":909,"line_end":909,"column_start":1,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38499,"byte_end":38507,"line_start":919,"line_end":919,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Chunk>::set_name","value":"pub fn set_name<S: ?Sized + AsRef<[u8]>>(Self, &S) -> Result<Chunk>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this chunk, which results in more informative error traces.\n","sig":null,"attributes":[{"value":"/ Sets the name of this chunk, which results in more informative error traces.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38407,"byte_end":38487,"line_start":918,"line_end":918,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39571,"byte_end":39586,"line_start":941,"line_end":941,"column_start":12,"column_end":27},"name":"set_environment","qualname":"<Chunk>::set_environment","value":"pub fn set_environment<V: ToLua>(Self, V) -> Result<Chunk>","parent":null,"children":[],"decl_id":null,"docs":" Sets the first upvalue (`_ENV`) of the loaded chunk to the given value.","sig":null,"attributes":[{"value":"/ Sets the first upvalue (`_ENV`) of the loaded chunk to the given value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38875,"byte_end":38950,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38955,"byte_end":38958,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ Lua main chunks always have exactly one upvalue, and this upvalue is used as the `_ENV`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38963,"byte_end":39054,"line_start":932,"line_end":932,"column_start":5,"column_end":96}},{"value":"/ variable inside the chunk.  By default this value is set to the global environment.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39059,"byte_end":39146,"line_start":933,"line_end":933,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39151,"byte_end":39154,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ Calling this method changes the `_ENV` upvalue to the value provided, and variables inside","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39159,"byte_end":39253,"line_start":935,"line_end":935,"column_start":5,"column_end":99}},{"value":"/ the chunk will refer to the given environment rather than the global one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39258,"byte_end":39335,"line_start":936,"line_end":936,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39340,"byte_end":39343,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ All global variables (including the standard library!) are looked up in `_ENV`, so it may be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39348,"byte_end":39444,"line_start":938,"line_end":938,"column_start":5,"column_end":101}},{"value":"/ necessary to populate the environment in order for scripts using custom environments to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39449,"byte_end":39543,"line_start":939,"line_end":939,"column_start":5,"column_end":99}},{"value":"/ useful.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39548,"byte_end":39559,"line_start":940,"line_end":940,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39878,"byte_end":39882,"line_start":949,"line_end":949,"column_start":12,"column_end":16},"name":"exec","qualname":"<Chunk>::exec","value":"pub fn exec(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Execute this chunk of code.","sig":null,"attributes":[{"value":"/ Execute this chunk of code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39730,"byte_end":39761,"line_start":946,"line_end":946,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39766,"byte_end":39769,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the chunk function with no arguments and no return values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39774,"byte_end":39866,"line_start":948,"line_end":948,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40279,"byte_end":40283,"line_start":959,"line_end":959,"column_start":12,"column_end":16},"name":"eval","qualname":"<Chunk>::eval","value":"pub fn eval<R: FromLuaMulti>(Self) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate the chunk as either an expression or block.","sig":null,"attributes":[{"value":"/ Evaluate the chunk as either an expression or block.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":39955,"byte_end":40011,"line_start":954,"line_end":954,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40016,"byte_end":40019,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ If the chunk can be parsed as an expression, this loads and executes the chunk and returns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40024,"byte_end":40118,"line_start":956,"line_end":956,"column_start":5,"column_end":99}},{"value":"/ the value that it evaluates to.  Otherwise, the chunk is interpreted as a block as normal,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40123,"byte_end":40217,"line_start":957,"line_end":957,"column_start":5,"column_end":99}},{"value":"/ and this is equivalent to calling `exec`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40222,"byte_end":40267,"line_start":958,"line_end":958,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41046,"byte_end":41050,"line_start":980,"line_end":980,"column_start":12,"column_end":16},"name":"call","qualname":"<Chunk>::call","value":"pub fn call<A: ToLuaMulti, R: FromLuaMulti>(Self, A) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Load the chunk function and call it with the given arguemnts.","sig":null,"attributes":[{"value":"/ Load the chunk function and call it with the given arguemnts.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40879,"byte_end":40944,"line_start":977,"line_end":977,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40949,"byte_end":40952,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `into_function` and calling the resulting function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":40957,"byte_end":41034,"line_start":979,"line_end":979,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41315,"byte_end":41328,"line_start":987,"line_end":987,"column_start":12,"column_end":25},"name":"into_function","qualname":"<Chunk>::into_function","value":"pub fn into_function(Self) -> Result<Function>","parent":null,"children":[],"decl_id":null,"docs":" Load this chunk into a regular `Function`.","sig":null,"attributes":[{"value":"/ Load this chunk into a regular `Function`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41177,"byte_end":41223,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41228,"byte_end":41231,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This simply compiles the chunk without actually executing it.  ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41236,"byte_end":41303,"line_start":986,"line_end":986,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41934,"byte_end":41960,"line_start":1000,"line_end":1000,"column_start":19,"column_end":45},"name":"into_function_allow_binary","qualname":"<Chunk>::into_function_allow_binary","value":"pub unsafe fn into_function_allow_binary(Self) -> Result<Function>","parent":null,"children":[],"decl_id":null,"docs":" Load this chunk into a regular `Function`.","sig":null,"attributes":[{"value":"/ Load this chunk into a regular `Function`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41469,"byte_end":41515,"line_start":992,"line_end":992,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41520,"byte_end":41523,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ This simply compiles the chunk without actually executing it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41528,"byte_end":41593,"line_start":994,"line_end":994,"column_start":5,"column_end":70}},{"value":"/ Unlike `into_function`, this method allows loading code previously","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41598,"byte_end":41668,"line_start":995,"line_end":995,"column_start":5,"column_end":75}},{"value":"/ compiled and saved with `Function::dump` or `string.dump()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41673,"byte_end":41737,"line_start":996,"line_end":996,"column_start":5,"column_end":69}},{"value":"/ This method is unsafe because there is no check that the precompiled","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41742,"byte_end":41814,"line_start":997,"line_end":997,"column_start":5,"column_end":77}},{"value":"/ Lua code is valid; if it is not this may cause a crash or other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41819,"byte_end":41886,"line_start":998,"line_end":998,"column_start":5,"column_end":72}},{"value":"/ undefined behaviour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":41891,"byte_end":41915,"line_start":999,"line_end":999,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65366,"byte_end":65377,"line_start":11,"line_end":11,"column_start":5,"column_end":16},"name":"SyntaxError","qualname":"::error::Error::SyntaxError","value":"Error::SyntaxError { message, incomplete_input }","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Syntax error while parsing Lua source code.\n","sig":null,"attributes":[{"value":"/ Syntax error while parsing Lua source code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65314,"byte_end":65361,"line_start":10,"line_end":10,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66010,"byte_end":66022,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"RuntimeError","qualname":"::error::Error::RuntimeError","value":"Error::RuntimeError(StdString)","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Lua runtime error, aka `LUA_ERRRUN`.","sig":null,"attributes":[{"value":"/ Lua runtime error, aka `LUA_ERRRUN`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65729,"byte_end":65769,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65774,"byte_end":65777,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The Lua VM returns this error when a builtin operation is performed on incompatible types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65782,"byte_end":65876,"line_start":22,"line_end":22,"column_start":5,"column_end":99}},{"value":"/ Among other things, this includes invoking operators on wrong types (such as calling or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65881,"byte_end":65972,"line_start":23,"line_end":23,"column_start":5,"column_end":96}},{"value":"/ indexing a `nil` value).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65977,"byte_end":66005,"line_start":24,"line_end":24,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66227,"byte_end":66238,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"name":"MemoryError","qualname":"::error::Error::MemoryError","value":"Error::MemoryError(StdString)","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Lua memory error, aka `LUA_ERRMEM`","sig":null,"attributes":[{"value":"/ Lua memory error, aka `LUA_ERRMEM`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66039,"byte_end":66077,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66082,"byte_end":66085,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The Lua VM returns this error when the allocator does not return the requested memory, aka","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66090,"byte_end":66184,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ it is an out-of-memory error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66189,"byte_end":66222,"line_start":29,"line_end":29,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66664,"byte_end":66684,"line_start":39,"line_end":39,"column_start":5,"column_end":25},"name":"RecursiveMutCallback","qualname":"::error::Error::RecursiveMutCallback","value":"Error::RecursiveMutCallback","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A mutable callback has triggered Lua code that has called the same mutable callback again.","sig":null,"attributes":[{"value":"/ A mutable callback has triggered Lua code that has called the same mutable callback again.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66470,"byte_end":66564,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66569,"byte_end":66572,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This is an error because a mutable callback can only be borrowed mutably once.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66577,"byte_end":66659,"line_start":38,"line_end":38,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66967,"byte_end":66985,"line_start":45,"line_end":45,"column_start":5,"column_end":23},"name":"CallbackDestructed","qualname":"::error::Error::CallbackDestructed","value":"Error::CallbackDestructed","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Either a callback or a userdata method has been called, but the callback or userdata has\n been destructed.","sig":null,"attributes":[{"value":"/ Either a callback or a userdata method has been called, but the callback or userdata has","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66690,"byte_end":66782,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ been destructed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66787,"byte_end":66807,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66812,"byte_end":66815,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This can happen either due to to being destructed in a previous __gc, or due to being","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66820,"byte_end":66909,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/ destructed from exiting a `Lua::scope` call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66914,"byte_end":66962,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67407,"byte_end":67417,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"name":"StackError","qualname":"::error::Error::StackError","value":"Error::StackError","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Not enough stack space to place arguments to Lua functions or return values from callbacks.","sig":null,"attributes":[{"value":"/ Not enough stack space to place arguments to Lua functions or return values from callbacks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":66991,"byte_end":67086,"line_start":46,"line_end":46,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67091,"byte_end":67094,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Due to the way `rlua` works, it should not be directly possible to run out of stack space","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67099,"byte_end":67192,"line_start":48,"line_end":48,"column_start":5,"column_end":98}},{"value":"/ during normal use. The only way that this error can be triggered is if a `Function` is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67197,"byte_end":67287,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ called with a huge number of arguments, or a rust callback returns a huge number of return","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67292,"byte_end":67386,"line_start":50,"line_end":50,"column_start":5,"column_end":99}},{"value":"/ values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67391,"byte_end":67402,"line_start":51,"line_end":51,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67470,"byte_end":67479,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"BindError","qualname":"::error::Error::BindError","value":"Error::BindError","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" Too many arguments to `Function::bind`\n","sig":null,"attributes":[{"value":"/ Too many arguments to `Function::bind`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67423,"byte_end":67465,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67545,"byte_end":67565,"line_start":56,"line_end":56,"column_start":5,"column_end":25},"name":"ToLuaConversionError","qualname":"::error::Error::ToLuaConversionError","value":"Error::ToLuaConversionError { from, to, message }","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A Rust value could not be converted to a Lua value.\n","sig":null,"attributes":[{"value":"/ A Rust value could not be converted to a Lua value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67485,"byte_end":67540,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67937,"byte_end":67959,"line_start":65,"line_end":65,"column_start":5,"column_end":27},"name":"FromLuaConversionError","qualname":"::error::Error::FromLuaConversionError","value":"Error::FromLuaConversionError { from, to, message }","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A Lua value could not be converted to the expected Rust type.\n","sig":null,"attributes":[{"value":"/ A Lua value could not be converted to the expected Rust type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":67867,"byte_end":67932,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68700,"byte_end":68717,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"CoroutineInactive","qualname":"::error::Error::CoroutineInactive","value":"Error::CoroutineInactive","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" [`Thread::resume`] was called on an inactive coroutine.","sig":null,"attributes":[{"value":"/ [`Thread::resume`] was called on an inactive coroutine.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68251,"byte_end":68310,"line_start":73,"line_end":73,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68315,"byte_end":68318,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ A coroutine is inactive if its main function has returned or if an error has occured inside","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68323,"byte_end":68418,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ the coroutine.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68423,"byte_end":68441,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68446,"byte_end":68449,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`Thread::status`] can be used to check if the coroutine can be resumed without causing this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68454,"byte_end":68550,"line_start":78,"line_end":78,"column_start":5,"column_end":101}},{"value":"/ error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68555,"byte_end":68565,"line_start":79,"line_end":79,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68570,"byte_end":68573,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [`Thread::resume`]: struct.Thread.html#method.resume","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68578,"byte_end":68634,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ [`Thread::status`]: struct.Thread.html#method.status","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68639,"byte_end":68695,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69115,"byte_end":69135,"line_start":92,"line_end":92,"column_start":5,"column_end":25},"name":"UserDataTypeMismatch","qualname":"::error::Error::UserDataTypeMismatch","value":"Error::UserDataTypeMismatch","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" An [`AnyUserData`] is not the expected type in a borrow.","sig":null,"attributes":[{"value":"/ An [`AnyUserData`] is not the expected type in a borrow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68723,"byte_end":68783,"line_start":84,"line_end":84,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68788,"byte_end":68791,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This error can only happen when manually using [`AnyUserData`], or when implementing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68796,"byte_end":68884,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ metamethods for binary operators. Refer to the documentation of [`UserDataMethods`] for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68889,"byte_end":68980,"line_start":87,"line_end":87,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":68985,"byte_end":68997,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69002,"byte_end":69005,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`AnyUserData`]: struct.AnyUserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69010,"byte_end":69054,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/ [`UserDataMethods`]: trait.UserDataMethods.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69059,"byte_end":69110,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69564,"byte_end":69583,"line_start":101,"line_end":101,"column_start":5,"column_end":24},"name":"UserDataBorrowError","qualname":"::error::Error::UserDataBorrowError","value":"Error::UserDataBorrowError","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" An [`AnyUserData`] immutable borrow failed because it is already borrowed mutably.","sig":null,"attributes":[{"value":"/ An [`AnyUserData`] immutable borrow failed because it is already borrowed mutably.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69141,"byte_end":69227,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69232,"byte_end":69235,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This error can occur when a method on a [`UserData`] type calls back into Lua, which then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69240,"byte_end":69333,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/ tries to call a method on the same [`UserData`] type. Consider restructuring your API to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69338,"byte_end":69430,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ prevent these errors.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69435,"byte_end":69460,"line_start":97,"line_end":97,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69465,"byte_end":69468,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`AnyUserData`]: struct.AnyUserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69473,"byte_end":69517,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69522,"byte_end":69559,"line_start":100,"line_end":100,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70002,"byte_end":70024,"line_start":110,"line_end":110,"column_start":5,"column_end":27},"name":"UserDataBorrowMutError","qualname":"::error::Error::UserDataBorrowMutError","value":"Error::UserDataBorrowMutError","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" An [`AnyUserData`] mutable borrow failed because it is already borrowed.","sig":null,"attributes":[{"value":"/ An [`AnyUserData`] mutable borrow failed because it is already borrowed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69589,"byte_end":69665,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69670,"byte_end":69673,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This error can occur when a method on a [`UserData`] type calls back into Lua, which then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69678,"byte_end":69771,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ tries to call a method on the same [`UserData`] type. Consider restructuring your API to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69776,"byte_end":69868,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ prevent these errors.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69873,"byte_end":69898,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69903,"byte_end":69906,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`AnyUserData`]: struct.AnyUserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69911,"byte_end":69955,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":69960,"byte_end":69997,"line_start":109,"line_end":109,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2352},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70100,"byte_end":70121,"line_start":112,"line_end":112,"column_start":5,"column_end":26},"name":"MismatchedRegistryKey","qualname":"::error::Error::MismatchedRegistryKey","value":"Error::MismatchedRegistryKey","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A `RegistryKey` produced from a different Lua state was used.\n","sig":null,"attributes":[{"value":"/ A `RegistryKey` produced from a different Lua state was used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70030,"byte_end":70095,"line_start":111,"line_end":111,"column_start":5,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70213,"byte_end":70226,"line_start":114,"line_end":114,"column_start":5,"column_end":18},"name":"CallbackError","qualname":"::error::Error::CallbackError","value":"Error::CallbackError { traceback, cause }","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A Rust callback returned `Err`, raising the contained `Error` as a Lua error.\n","sig":null,"attributes":[{"value":"/ A Rust callback returned `Err`, raising the contained `Error` as a Lua error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70127,"byte_end":70208,"line_start":113,"line_end":113,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70778,"byte_end":70791,"line_start":127,"line_end":127,"column_start":5,"column_end":18},"name":"ExternalError","qualname":"::error::Error::ExternalError","value":"Error::ExternalError(Arc<dyn StdError + Send + Sync>)","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":" A custom error.","sig":null,"attributes":[{"value":"/ A custom error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70389,"byte_end":70408,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70413,"byte_end":70416,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This can be used for returning user-defined errors from callbacks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70421,"byte_end":70491,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70496,"byte_end":70499,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returning `Err(ExternalError(...))` from a Rust callback will raise the error as a Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70504,"byte_end":70594,"line_start":124,"line_end":124,"column_start":5,"column_end":95}},{"value":"/ error. The Rust code that originally invoked the Lua code then receives a `CallbackError`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70599,"byte_end":70693,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ from which the original error (and a stack traceback) can be recovered.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70698,"byte_end":70773,"line_start":126,"line_end":126,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65302,"byte_end":65307,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    SyntaxError {\n            message: StdString,\n            incomplete_input: bool,\n        },\n    RuntimeError(StdString),\n    MemoryError(StdString),\n    RecursiveMutCallback,\n    CallbackDestructed,\n    StackError,\n    BindError,\n    ToLuaConversionError {\n            from: &'static str,\n            to: &'static str,\n            message: Option<StdString>,\n        },\n    FromLuaConversionError {\n            from: &'static str,\n            to: &'static str,\n            message: Option<StdString>,\n        },\n    CoroutineInactive,\n    UserDataTypeMismatch,\n    UserDataBorrowError,\n    UserDataBorrowMutError,\n    MismatchedRegistryKey,\n    CallbackError {\n            traceback: StdString,\n            cause: Arc<Error>,\n        },\n    ExternalError(Arc<dyn StdError + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2340},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2357}],"decl_id":null,"docs":" Error type returned by `rlua` methods.\n","sig":null,"attributes":[{"value":"/ Error type returned by `rlua` methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":65226,"byte_end":65268,"line_start":7,"line_end":7,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70892,"byte_end":70898,"line_start":131,"line_end":131,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type used by `rlua`'s API.\n","sig":null,"attributes":[{"value":"/ A specialized `Result` type used by `rlua`'s API.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70829,"byte_end":70882,"line_start":130,"line_end":130,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73858,"byte_end":73866,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"external","qualname":"<Error>::external","value":"pub fn external<T: Into<Box<dyn StdError + Send + Sync>>>(T) -> Error","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73995,"byte_end":74008,"line_start":211,"line_end":211,"column_start":11,"column_end":24},"name":"ExternalError","qualname":"::error::ExternalError","value":"ExternalError","parent":null,"children":[{"krate":0,"index":648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74018,"byte_end":74028,"line_start":212,"line_end":212,"column_start":8,"column_end":18},"name":"to_lua_err","qualname":"::error::ExternalError::to_lua_err","value":"pub fn to_lua_err(Self) -> Error","parent":{"krate":0,"index":647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74214,"byte_end":74228,"line_start":224,"line_end":224,"column_start":11,"column_end":25},"name":"ExternalResult","qualname":"::error::ExternalResult","value":"ExternalResult<T>","parent":null,"children":[{"krate":0,"index":654}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74241,"byte_end":74251,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_lua_err","qualname":"::error::ExternalResult::to_lua_err","value":"pub fn to_lua_err(Self) -> Result<T>","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74845,"byte_end":74853,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Function","qualname":"::function::Function","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to an internal Lua function.\n","sig":null,"attributes":[{"value":"/ Handle to an internal Lua function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74770,"byte_end":74809,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":76049,"byte_end":76053,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"call","qualname":"<Function>::call","value":"pub fn call<A: ToLuaMulti, R: FromLuaMulti>(&Self, A) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Calls the function, passing `args` as function arguments.","sig":null,"attributes":[{"value":"/ Calls the function, passing `args` as function arguments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74919,"byte_end":74980,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74985,"byte_end":74988,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The function's return values are converted to the generic type `R`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74993,"byte_end":75064,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75069,"byte_end":75072,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75077,"byte_end":75091,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75096,"byte_end":75099,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Call Lua's built-in `tostring` function:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75104,"byte_end":75148,"line_start":26,"line_end":26,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75153,"byte_end":75156,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75161,"byte_end":75168,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Function, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75173,"byte_end":75213,"line_start":29,"line_end":29,"column_start":5,"column_end":45}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75218,"byte_end":75249,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75254,"byte_end":75294,"line_start":31,"line_end":31,"column_start":5,"column_end":45}},{"value":"/ let globals = lua_context.globals();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75299,"byte_end":75339,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75344,"byte_end":75347,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let tostring: Function = globals.get(\"tostring\")?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75352,"byte_end":75406,"line_start":34,"line_end":34,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75411,"byte_end":75414,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tostring.call::<_, String>(123)?, \"123\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75419,"byte_end":75475,"line_start":36,"line_end":36,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75480,"byte_end":75483,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75488,"byte_end":75500,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75505,"byte_end":75513,"line_start":39,"line_end":39,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75518,"byte_end":75525,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75530,"byte_end":75537,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75542,"byte_end":75545,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Call a function with multiple arguments:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75550,"byte_end":75594,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75599,"byte_end":75602,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75607,"byte_end":75614,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Function, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75619,"byte_end":75659,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75664,"byte_end":75695,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75700,"byte_end":75740,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/ let sum: Function = lua_context.load(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75745,"byte_end":75786,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/     r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75791,"byte_end":75802,"line_start":50,"line_end":50,"column_start":5,"column_end":16}},{"value":"/         function(a, b)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75807,"byte_end":75833,"line_start":51,"line_end":51,"column_start":5,"column_end":31}},{"value":"/             return a + b","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75838,"byte_end":75866,"line_start":52,"line_end":52,"column_start":5,"column_end":33}},{"value":"/         end","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75871,"byte_end":75886,"line_start":53,"line_end":53,"column_start":5,"column_end":20}},{"value":"/     \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75891,"byte_end":75911,"line_start":54,"line_end":54,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75916,"byte_end":75919,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum.call::<_, u32>((3, 4))?, 3 + 4);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75924,"byte_end":75975,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75980,"byte_end":75983,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":75988,"byte_end":76000,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":76005,"byte_end":76013,"line_start":59,"line_end":59,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":76018,"byte_end":76025,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":76030,"byte_end":76037,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":78028,"byte_end":78032,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"pub fn bind<A: ToLuaMulti>(&Self, A) -> Result<Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns a function that, when called, calls `self`, passing `args` as the first set of\n arguments.","sig":null,"attributes":[{"value":"/ Returns a function that, when called, calls `self`, passing `args` as the first set of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77202,"byte_end":77292,"line_start":94,"line_end":94,"column_start":5,"column_end":95}},{"value":"/ arguments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77297,"byte_end":77311,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77316,"byte_end":77319,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If any arguments are passed to the returned function, they will be passed after `args`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77324,"byte_end":77415,"line_start":97,"line_end":97,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77420,"byte_end":77423,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77428,"byte_end":77442,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77447,"byte_end":77450,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77455,"byte_end":77462,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Function, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77467,"byte_end":77507,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77512,"byte_end":77543,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77548,"byte_end":77588,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ let sum: Function = lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77593,"byte_end":77637,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/     function(a, b)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77642,"byte_end":77664,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/         return a + b","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77669,"byte_end":77693,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     end","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77698,"byte_end":77709,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77714,"byte_end":77730,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77735,"byte_end":77738,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let bound_a = sum.bind(1)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77743,"byte_end":77774,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(bound_a.call::<_, u32>(2)?, 1 + 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77779,"byte_end":77829,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77834,"byte_end":77837,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let bound_a_and_b = sum.bind(13)?.bind(57)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77842,"byte_end":77890,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(bound_a_and_b.call::<_, u32>(())?, 13 + 57);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77895,"byte_end":77954,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77959,"byte_end":77962,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77967,"byte_end":77979,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77984,"byte_end":77992,"line_start":118,"line_end":118,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":77997,"byte_end":78004,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":78009,"byte_end":78016,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80426,"byte_end":80430,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"dump","qualname":"<Function>::dump","value":"pub fn dump(&Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Dumps the compiled representation of the function into a binary blob,\n which can later be loaded using the unsafe Chunk::into_function_allow_binary().","sig":null,"attributes":[{"value":"/ Dumps the compiled representation of the function into a binary blob,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79638,"byte_end":79711,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ which can later be loaded using the unsafe Chunk::into_function_allow_binary().","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79716,"byte_end":79799,"line_start":169,"line_end":169,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79804,"byte_end":79807,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79812,"byte_end":79826,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79831,"byte_end":79834,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79839,"byte_end":79846,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Function, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79851,"byte_end":79891,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79896,"byte_end":79927,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79932,"byte_end":79972,"line_start":176,"line_end":176,"column_start":5,"column_end":45}},{"value":"/ let add2: Function = lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":79977,"byte_end":80022,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/     function(a)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80027,"byte_end":80046,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/         return a + 2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80051,"byte_end":80075,"line_start":179,"line_end":179,"column_start":5,"column_end":29}},{"value":"/     end","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80080,"byte_end":80091,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80096,"byte_end":80112,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80117,"byte_end":80120,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let dumped = add2.dump()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80125,"byte_end":80155,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80160,"byte_end":80163,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let reloaded = unsafe {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80168,"byte_end":80195,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/     lua_context.load(&dumped)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80200,"byte_end":80233,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"/                .into_function_allow_binary()?","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80238,"byte_end":80287,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/ };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80292,"byte_end":80298,"line_start":188,"line_end":188,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(reloaded.call::<_, u32>(7)?, 7+2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80303,"byte_end":80352,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80357,"byte_end":80360,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80365,"byte_end":80377,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80382,"byte_end":80390,"line_start":192,"line_end":192,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80395,"byte_end":80402,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":80407,"byte_end":80414,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82201,"byte_end":82206,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Debug","qualname":"::hook::Debug","value":"Debug {  }","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378}],"decl_id":null,"docs":" Contains information about currently executing Lua code.","sig":null,"attributes":[{"value":"/ Contains information about currently executing Lua code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81642,"byte_end":81702,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81703,"byte_end":81706,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `Debug` structure is provided as a parameter to the hook function set with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81707,"byte_end":81789,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ [`Lua::set_hook`].  You may call the methods on this structure to retrieve information about the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81790,"byte_end":81890,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ Lua code executing at the time that the hook function was called.  Further information can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81891,"byte_end":81988,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ found in the [Lua 5.4 documentaton][lua_doc].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":81989,"byte_end":82038,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82039,"byte_end":82042,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [lua_doc]: https://www.lua.org/manual/5.4/manual.html#lua_Debug","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82043,"byte_end":82110,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ [`Lua::set_hook`]: struct.Lua.html#method.set_hook","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82111,"byte_end":82165,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82376,"byte_end":82381,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"names","qualname":"<Debug>::names","value":"pub fn names(&Self) -> DebugNames","parent":null,"children":[],"decl_id":null,"docs":" Corresponds to the `n` what mask.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `n` what mask.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82327,"byte_end":82364,"line_start":27,"line_end":27,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82805,"byte_end":82811,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"source","qualname":"<Debug>::source","value":"pub fn source(&Self) -> DebugSource","parent":null,"children":[],"decl_id":null,"docs":" Corresponds to the `S` what mask.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `S` what mask.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82756,"byte_end":82793,"line_start":41,"line_end":41,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":83459,"byte_end":83468,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"curr_line","qualname":"<Debug>::curr_line","value":"pub fn curr_line(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Corresponds to the `l` what mask. Returns the current line.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `l` what mask. Returns the current line.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":83384,"byte_end":83447,"line_start":58,"line_end":58,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":83851,"byte_end":83863,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"is_tail_call","qualname":"<Debug>::is_tail_call","value":"pub fn is_tail_call(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Corresponds to the `t` what mask. Returns true if the hook is in a function tail call, false\n otherwise.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `t` what mask. Returns true if the hook is in a function tail call, false","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":83724,"byte_end":83820,"line_start":69,"line_end":69,"column_start":5,"column_end":101}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":83825,"byte_end":83839,"line_start":70,"line_end":70,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84167,"byte_end":84172,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"stack","qualname":"<Debug>::stack","value":"pub fn stack(&Self) -> DebugStack","parent":null,"children":[],"decl_id":null,"docs":" Corresponds to the `u` what mask.\n","sig":null,"attributes":[{"value":"/ Corresponds to the `u` what mask.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84118,"byte_end":84155,"line_start":81,"line_end":81,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84726,"byte_end":84736,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"DebugNames","qualname":"::hook::DebugNames","value":"DebugNames { name, name_what }","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84751,"byte_end":84755,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"name","qualname":"::hook::DebugNames::name","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84783,"byte_end":84792,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"name_what","qualname":"::hook::DebugNames::name_what","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84850,"byte_end":84861,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"DebugSource","qualname":"::hook::DebugSource","value":"DebugSource { source, short_src, line_defined, last_line_defined, what }","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84876,"byte_end":84882,"line_start":107,"line_end":107,"column_start":9,"column_end":15},"name":"source","qualname":"::hook::DebugSource::source","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84910,"byte_end":84919,"line_start":108,"line_end":108,"column_start":9,"column_end":18},"name":"short_src","qualname":"::hook::DebugSource::short_src","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84947,"byte_end":84959,"line_start":109,"line_end":109,"column_start":9,"column_end":21},"name":"line_defined","qualname":"::hook::DebugSource::line_defined","value":"i32","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":84974,"byte_end":84991,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"name":"last_line_defined","qualname":"::hook::DebugSource::last_line_defined","value":"i32","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85006,"byte_end":85010,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"what","qualname":"::hook::DebugSource::what","value":"std::option::Option<&'a [u8]>","parent":{"krate":0,"index":2395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85074,"byte_end":85084,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"DebugStack","qualname":"::hook::DebugStack","value":"DebugStack { num_ups, num_params, is_vararg }","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85095,"byte_end":85102,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"num_ups","qualname":"::hook::DebugStack::num_ups","value":"i32","parent":{"krate":0,"index":2408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85157,"byte_end":85167,"line_start":118,"line_end":118,"column_start":9,"column_end":19},"name":"num_params","qualname":"::hook::DebugStack::num_params","value":"i32","parent":{"krate":0,"index":2408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(rlua_lua53, rlua_lua54))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85113,"byte_end":85148,"line_start":117,"line_end":117,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85222,"byte_end":85231,"line_start":120,"line_end":120,"column_start":9,"column_end":18},"name":"is_vararg","qualname":"::hook::DebugStack::is_vararg","value":"bool","parent":{"krate":0,"index":2408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(rlua_lua53, rlua_lua54))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85178,"byte_end":85213,"line_start":119,"line_end":119,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85351,"byte_end":85363,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"HookTriggers","qualname":"::hook::HookTriggers","value":"HookTriggers { on_calls, on_returns, every_line, every_nth_instruction }","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421}],"decl_id":null,"docs":" Determines when a hook function will be called by Lua.\n","sig":null,"attributes":[{"value":"/ Determines when a hook function will be called by Lua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85242,"byte_end":85300,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85406,"byte_end":85414,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"on_calls","qualname":"::hook::HookTriggers::on_calls","value":"bool","parent":{"krate":0,"index":2417},"children":[],"decl_id":null,"docs":" Before a function call.\n","sig":null,"attributes":[{"value":"/ Before a function call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85370,"byte_end":85397,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85472,"byte_end":85482,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"on_returns","qualname":"::hook::HookTriggers::on_returns","value":"bool","parent":{"krate":0,"index":2417},"children":[],"decl_id":null,"docs":" When Lua returns from a function.\n","sig":null,"attributes":[{"value":"/ When Lua returns from a function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85426,"byte_end":85463,"line_start":128,"line_end":128,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2420},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85570,"byte_end":85580,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"every_line","qualname":"::hook::HookTriggers::every_line","value":"bool","parent":{"krate":0,"index":2417},"children":[],"decl_id":null,"docs":" Before executing a new line, or returning from a function call.\n","sig":null,"attributes":[{"value":"/ Before executing a new line, or returning from a function call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85494,"byte_end":85561,"line_start":130,"line_end":130,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85892,"byte_end":85913,"line_start":138,"line_end":138,"column_start":9,"column_end":30},"name":"every_nth_instruction","qualname":"::hook::HookTriggers::every_nth_instruction","value":"std::option::Option<u32>","parent":{"krate":0,"index":2417},"children":[],"decl_id":null,"docs":" After a certain number of VM instructions have been executed.  When set to `Some(count)`,\n `count` is the number of VM instructions to execute before calling the hook.","sig":null,"attributes":[{"value":"/ After a certain number of VM instructions have been executed.  When set to `Some(count)`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85592,"byte_end":85685,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ `count` is the number of VM instructions to execute before calling the hook.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85690,"byte_end":85770,"line_start":133,"line_end":133,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85775,"byte_end":85778,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85783,"byte_end":85800,"line_start":135,"line_end":135,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85805,"byte_end":85808,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Setting this option to a low value can incur a very high overhead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85813,"byte_end":85883,"line_start":137,"line_end":137,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88209,"byte_end":88215,"line_start":28,"line_end":28,"column_start":16,"column_end":22},"name":"StdLib","qualname":"::lua::StdLib","value":"StdLib {  }","parent":null,"children":[{"krate":0,"index":2430}],"decl_id":null,"docs":" Flags describing the set of lua modules to load.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88237,"byte_end":88241,"line_start":29,"line_end":29,"column_start":15,"column_end":19},"name":"BASE","qualname":"::lua::StdLib::BASE","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88263,"byte_end":88272,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"name":"COROUTINE","qualname":"::lua::StdLib::COROUTINE","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88294,"byte_end":88299,"line_start":31,"line_end":31,"column_start":15,"column_end":20},"name":"TABLE","qualname":"::lua::StdLib::TABLE","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88321,"byte_end":88323,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"IO","qualname":"::lua::StdLib::IO","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88345,"byte_end":88347,"line_start":33,"line_end":33,"column_start":15,"column_end":17},"name":"OS","qualname":"::lua::StdLib::OS","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88370,"byte_end":88376,"line_start":34,"line_end":34,"column_start":15,"column_end":21},"name":"STRING","qualname":"::lua::StdLib::STRING","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88399,"byte_end":88403,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"name":"UTF8","qualname":"::lua::StdLib::UTF8","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88426,"byte_end":88430,"line_start":36,"line_end":36,"column_start":15,"column_end":19},"name":"MATH","qualname":"::lua::StdLib::MATH","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88453,"byte_end":88460,"line_start":37,"line_end":37,"column_start":15,"column_end":22},"name":"PACKAGE","qualname":"::lua::StdLib::PACKAGE","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88484,"byte_end":88489,"line_start":38,"line_end":38,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::lua::StdLib::DEBUG","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88514,"byte_end":88517,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"ALL","qualname":"::lua::StdLib::ALL","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":88850,"byte_end":88862,"line_start":51,"line_end":51,"column_start":15,"column_end":27},"name":"ALL_NO_DEBUG","qualname":"::lua::StdLib::ALL_NO_DEBUG","value":"Self","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89240,"byte_end":89249,"line_start":65,"line_end":65,"column_start":16,"column_end":25},"name":"InitFlags","qualname":"::lua::InitFlags","value":"InitFlags {  }","parent":null,"children":[{"krate":0,"index":2572}],"decl_id":null,"docs":" Flags describing the set of lua modules to load.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89271,"byte_end":89285,"line_start":66,"line_end":66,"column_start":15,"column_end":29},"name":"PCALL_WRAPPERS","qualname":"::lua::InitFlags::PCALL_WRAPPERS","value":"Self","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89307,"byte_end":89320,"line_start":67,"line_end":67,"column_start":15,"column_end":28},"name":"LOAD_WRAPPERS","qualname":"::lua::InitFlags::LOAD_WRAPPERS","value":"Self","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89342,"byte_end":89356,"line_start":68,"line_end":68,"column_start":15,"column_end":29},"name":"REMOVE_LOADLIB","qualname":"::lua::InitFlags::REMOVE_LOADLIB","value":"Self","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89379,"byte_end":89386,"line_start":70,"line_end":70,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::lua::InitFlags::DEFAULT","value":"Self","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89548,"byte_end":89552,"line_start":73,"line_end":73,"column_start":15,"column_end":19},"name":"NONE","qualname":"::lua::InitFlags::NONE","value":"Self","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89862,"byte_end":89865,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"Lua","qualname":"::lua::Lua","value":"Lua {  }","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"decl_id":null,"docs":" Top level Lua struct which holds the Lua state itself.\n","sig":null,"attributes":[{"value":"/ Top level Lua struct which holds the Lua state itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89775,"byte_end":89833,"line_start":85,"line_end":85,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90647,"byte_end":90650,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Lua>::new","value":"pub fn new() -> Lua","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Lua state and loads standard library without the `debug` library.\n","sig":null,"attributes":[{"value":"/ Creates a new Lua state and loads standard library without the `debug` library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90552,"byte_end":90635,"line_start":111,"line_end":111,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90959,"byte_end":90973,"line_start":119,"line_end":119,"column_start":19,"column_end":33},"name":"new_with_debug","qualname":"<Lua>::new_with_debug","value":"pub unsafe fn new_with_debug() -> Lua","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Lua state and loads the standard library including the `debug` library.","sig":null,"attributes":[{"value":"/ Creates a new Lua state and loads the standard library including the `debug` library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90745,"byte_end":90834,"line_start":116,"line_end":116,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90839,"byte_end":90842,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The debug library is very unsound, it can be used to break the safety guarantees of rlua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90847,"byte_end":90940,"line_start":118,"line_end":118,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91542,"byte_end":91550,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Lua>::new_with","value":"pub fn new_with(StdLib) -> Lua","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Lua state and loads a subset of the standard libraries.","sig":null,"attributes":[{"value":"/ Creates a new Lua state and loads a subset of the standard libraries.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91048,"byte_end":91121,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91126,"byte_end":91129,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Use the [`StdLib`] flags to specifiy the libraries you want to load.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91134,"byte_end":91206,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91211,"byte_end":91214,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that the `debug` library can't be loaded using this function as it can be used to break","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91219,"byte_end":91315,"line_start":127,"line_end":127,"column_start":5,"column_end":101}},{"value":"/ the safety guarantees of rlua.  If you really want to load it, use the sister function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91320,"byte_end":91410,"line_start":128,"line_end":128,"column_start":5,"column_end":95}},{"value":"/ [`Lua::unsafe_new_with`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91415,"byte_end":91444,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91449,"byte_end":91452,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91457,"byte_end":91469,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91474,"byte_end":91477,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Panics if `lua_mod` contains `StdLib::DEBUG`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91482,"byte_end":91530,"line_start":133,"line_end":133,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92165,"byte_end":92180,"line_start":149,"line_end":149,"column_start":19,"column_end":34},"name":"unsafe_new_with","qualname":"<Lua>::unsafe_new_with","value":"pub unsafe fn unsafe_new_with(StdLib) -> Lua","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Lua state and loads a subset of the standard libraries.","sig":null,"attributes":[{"value":"/ Creates a new Lua state and loads a subset of the standard libraries.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91822,"byte_end":91895,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91900,"byte_end":91903,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Use the [`StdLib`] flags to specifiy the libraries you want to load.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91908,"byte_end":91980,"line_start":145,"line_end":145,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91985,"byte_end":91988,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can be used to load the `debug` library which can be used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":91993,"byte_end":92089,"line_start":147,"line_end":147,"column_start":5,"column_end":101}},{"value":"/ to break the safety guarantees provided by rlua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92094,"byte_end":92146,"line_start":148,"line_end":148,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92910,"byte_end":92931,"line_start":165,"line_end":165,"column_start":19,"column_end":40},"name":"unsafe_new_with_flags","qualname":"<Lua>::unsafe_new_with_flags","value":"pub unsafe fn unsafe_new_with_flags(StdLib, InitFlags) -> Lua","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Lua state with a subset of the standard libraries and\n modified initialization.","sig":null,"attributes":[{"value":"/ Creates a new Lua state with a subset of the standard libraries and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92266,"byte_end":92337,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/ modified initialization.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92342,"byte_end":92370,"line_start":154,"line_end":154,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92375,"byte_end":92378,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Use the [`StdLib`] flags to specifiy the libraries you want to load.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92383,"byte_end":92455,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ Use the [`InitFlags`] to specify non-default Lua configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92460,"byte_end":92527,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92532,"byte_end":92535,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ `unsafe_new_with_flags(mods, InitFlags::DEFAULT)` is equivalent to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92540,"byte_end":92610,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/ `unsafe_new_with(mods)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92615,"byte_end":92643,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92648,"byte_end":92651,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can be used to load the `debug` library which can be used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92656,"byte_end":92752,"line_start":162,"line_end":162,"column_start":5,"column_end":101}},{"value":"/ to break the safety guarantees provided by rlua, or to disable some of the safety features","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92757,"byte_end":92851,"line_start":163,"line_end":163,"column_start":5,"column_end":99}},{"value":"/ which rlua provides by default.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":92856,"byte_end":92891,"line_start":164,"line_end":164,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93544,"byte_end":93561,"line_start":180,"line_end":180,"column_start":12,"column_end":29},"name":"load_from_std_lib","qualname":"<Lua>::load_from_std_lib","value":"pub fn load_from_std_lib(&Self, StdLib) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Loads the specified set of safe standard libraries into an existing Lua state.","sig":null,"attributes":[{"value":"/ Loads the specified set of safe standard libraries into an existing Lua state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93032,"byte_end":93114,"line_start":169,"line_end":169,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93119,"byte_end":93122,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Use the [`StdLib`] flags to specifiy the libraries you want to load.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93127,"byte_end":93199,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93204,"byte_end":93207,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that the `debug` library can't be loaded using this function as it can be used to break","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93212,"byte_end":93308,"line_start":173,"line_end":173,"column_start":5,"column_end":101}},{"value":"/ the safety guarantees of rlua.  If you really want to load it, use the sister function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93313,"byte_end":93403,"line_start":174,"line_end":174,"column_start":5,"column_end":95}},{"value":"/ [`Lua::unsafe_load_from_std_lib`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93408,"byte_end":93446,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93451,"byte_end":93454,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93459,"byte_end":93471,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93476,"byte_end":93479,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Panics if `lua_mod` contains `StdLib::DEBUG`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93484,"byte_end":93532,"line_start":179,"line_end":179,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94311,"byte_end":94335,"line_start":199,"line_end":199,"column_start":19,"column_end":43},"name":"unsafe_load_from_std_lib","qualname":"<Lua>::unsafe_load_from_std_lib","value":"pub unsafe fn unsafe_load_from_std_lib(&Self, StdLib) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Loads the specified set of standard libraries into an existing Lua state.","sig":null,"attributes":[{"value":"/ Loads the specified set of standard libraries into an existing Lua state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":93964,"byte_end":94041,"line_start":193,"line_end":193,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94046,"byte_end":94049,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Use the [`StdLib`] flags to specifiy the libraries you want to load.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94054,"byte_end":94126,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94131,"byte_end":94134,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it can be used to load the `debug` library which can be used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94139,"byte_end":94235,"line_start":197,"line_end":197,"column_start":5,"column_end":101}},{"value":"/ to break the safety guarantees provided by rlua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94240,"byte_end":94292,"line_start":198,"line_end":198,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97256,"byte_end":97263,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"context","qualname":"<Lua>::context","value":"pub fn context<F, R>(&Self, F) -> R where F: FnOnce(Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" The main entry point of the rlua API.","sig":null,"attributes":[{"value":"/ The main entry point of the rlua API.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94506,"byte_end":94547,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94552,"byte_end":94555,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ In order to create Lua values, load and execute Lua code, or otherwise interact with the Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94560,"byte_end":94656,"line_start":207,"line_end":207,"column_start":5,"column_end":101}},{"value":"/ state in any way, you must first call `Lua::context` and then call methods on the provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94661,"byte_end":94755,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ [`Context`] parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94760,"byte_end":94786,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94791,"byte_end":94794,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ rlua uses reference types like `String` and `Table` which reference shared data in the Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94799,"byte_end":94893,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ state.  These are special reference counted types that contain pointers to the main Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94898,"byte_end":94989,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ state via the [`Context`] type, and there is a `'lua` lifetime associated with these.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":94994,"byte_end":95083,"line_start":213,"line_end":213,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95088,"byte_end":95091,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This `'lua` lifetime is somewhat special.  It is what is sometimes called a \"generative\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95096,"byte_end":95188,"line_start":215,"line_end":215,"column_start":5,"column_end":97}},{"value":"/ lifetime or a \"branding\" lifetime, which is invariant, and unique for each call to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95193,"byte_end":95279,"line_start":216,"line_end":216,"column_start":5,"column_end":91}},{"value":"/ `Lua::context`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95284,"byte_end":95303,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95308,"byte_end":95311,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The reason this entry point must be a callback is so that this unique lifetime can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95316,"byte_end":95405,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"/ generated as part of the callback's parameters.  Even though this callback API is somewhat","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95410,"byte_end":95504,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"/ inconvenient, it has several advantages:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95509,"byte_end":95553,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95558,"byte_end":95561,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ - Inside calls to `Lua::context`, we know that all instances of the 'lua lifetime are the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95566,"byte_end":95659,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/   same unique lifetime.  Thus, it is impossible for the user to accidentally mix handle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95664,"byte_end":95755,"line_start":224,"line_end":224,"column_start":5,"column_end":96}},{"value":"/   types between different instances of `Lua`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95760,"byte_end":95809,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ - Because we know at compile time that handles cannot be mixed from different instances of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95814,"byte_end":95908,"line_start":226,"line_end":226,"column_start":5,"column_end":99}},{"value":"/   `Lua`, we do not need to do runtime checks to make sure that handles are from the same","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":95913,"byte_end":96005,"line_start":227,"line_end":227,"column_start":5,"column_end":97}},{"value":"/   state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96010,"byte_end":96022,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ - Handle types cannot escape the context call and the `'lua` context lifetime is in general","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96027,"byte_end":96122,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"/   very limited, preventing it from being stored in unexpected places.  This is a benefit as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96127,"byte_end":96222,"line_start":230,"line_end":230,"column_start":5,"column_end":100}},{"value":"/   it helps ensure the soundness of the API.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96227,"byte_end":96274,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96279,"byte_end":96282,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ It is not possible to return types with this `'lua` context lifetime from the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96287,"byte_end":96374,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ callback, or store them outside of the callback in any way.  There is an escape hatch here,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96379,"byte_end":96474,"line_start":234,"line_end":234,"column_start":5,"column_end":100}},{"value":"/ though: if you need to keep references to internal Lua values long-term, you can use the Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96479,"byte_end":96575,"line_start":235,"line_end":235,"column_start":5,"column_end":101}},{"value":"/ registry via [`Context::set_named_registry_value`] and [`Context::create_registry_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96580,"byte_end":96674,"line_start":236,"line_end":236,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96679,"byte_end":96682,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96687,"byte_end":96701,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96706,"byte_end":96709,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96714,"byte_end":96721,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96726,"byte_end":96756,"line_start":241,"line_end":241,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96761,"byte_end":96792,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/ let lua = Lua::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96797,"byte_end":96822,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/ lua.context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96827,"byte_end":96858,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/    lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96863,"byte_end":96890,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/        print(\"hello world!\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96895,"byte_end":96927,"line_start":246,"line_end":246,"column_start":5,"column_end":37}},{"value":"/    \"#).exec()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96932,"byte_end":96949,"line_start":247,"line_end":247,"column_start":5,"column_end":22}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96954,"byte_end":96962,"line_start":248,"line_end":248,"column_start":5,"column_end":13}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96967,"byte_end":96979,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96984,"byte_end":96991,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":96996,"byte_end":97003,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97008,"byte_end":97011,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: struct.Context.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97016,"byte_end":97052,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/ [`Context::set_named_registry_value`]: struct.Context.html#method.set_named_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97057,"byte_end":97151,"line_start":254,"line_end":254,"column_start":5,"column_end":99}},{"value":"/ [`Context::create_registry_value`]: struct.Context.html#method.create_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97156,"byte_end":97244,"line_start":255,"line_end":255,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98883,"byte_end":98891,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"set_hook","qualname":"<Lua>::set_hook","value":"pub fn set_hook<F>(&Self, HookTriggers, F) where F: 'static + Send +\nFnMut(Context, Debug) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a 'hook' function that will periodically be called as Lua code executes.","sig":null,"attributes":[{"value":"/ Sets a 'hook' function that will periodically be called as Lua code executes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97400,"byte_end":97481,"line_start":263,"line_end":263,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97486,"byte_end":97489,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ When exactly the hook function is called depends on the contents of the `triggers`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97494,"byte_end":97580,"line_start":265,"line_end":265,"column_start":5,"column_end":91}},{"value":"/ parameter, see [`HookTriggers`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97585,"byte_end":97638,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97643,"byte_end":97646,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The provided hook function can error, and this error will be propagated through the Lua code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97651,"byte_end":97747,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ that was executing at the time the hook was triggered.  This can be used to implement a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97752,"byte_end":97843,"line_start":269,"line_end":269,"column_start":5,"column_end":96}},{"value":"/ limited form of execution limits by setting [`HookTriggers.every_nth_instruction`] and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97848,"byte_end":97938,"line_start":270,"line_end":270,"column_start":5,"column_end":95}},{"value":"/ erroring once an instruction limit has been reached.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":97943,"byte_end":97999,"line_start":271,"line_end":271,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98004,"byte_end":98007,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98012,"byte_end":98025,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98030,"byte_end":98033,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Shows each line number of code being executed by the Lua interpreter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98038,"byte_end":98111,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98116,"byte_end":98119,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98124,"byte_end":98131,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, HookTriggers, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98136,"byte_end":98180,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98185,"byte_end":98216,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/ let lua = Lua::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98221,"byte_end":98246,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/ lua.set_hook(HookTriggers {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98251,"byte_end":98282,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/     every_line: true, ..Default::default()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98287,"byte_end":98333,"line_start":282,"line_end":282,"column_start":5,"column_end":51}},{"value":"/ }, |_lua_context, debug| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98338,"byte_end":98368,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/     println!(\"line {}\", debug.curr_line());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98373,"byte_end":98420,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98425,"byte_end":98439,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98444,"byte_end":98451,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ lua.context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98456,"byte_end":98487,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/     lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98492,"byte_end":98520,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/         local x = 2 + 3","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98525,"byte_end":98552,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/         local y = x * 63","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98557,"byte_end":98585,"line_start":290,"line_end":290,"column_start":5,"column_end":33}},{"value":"/         local z = string.len(x..\", \"..y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98590,"byte_end":98634,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/     \"#).exec()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98639,"byte_end":98657,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98662,"byte_end":98670,"line_start":293,"line_end":293,"column_start":5,"column_end":13}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98675,"byte_end":98687,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98692,"byte_end":98699,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98704,"byte_end":98711,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98716,"byte_end":98719,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`HookTriggers`]: struct.HookTriggers.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98724,"byte_end":98770,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/ [`HookTriggers.every_nth_instruction`]: struct.HookTriggers.html#field.every_nth_instruction","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":98775,"byte_end":98871,"line_start":299,"line_end":299,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99465,"byte_end":99476,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"remove_hook","qualname":"<Lua>::remove_hook","value":"pub fn remove_hook(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove any hook previously set by `set_hook`. This function has no effect if a hook was not\n previously set.\n","sig":null,"attributes":[{"value":"/ Remove any hook previously set by `set_hook`. This function has no effect if a hook was not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99334,"byte_end":99429,"line_start":315,"line_end":315,"column_start":5,"column_end":100}},{"value":"/ previously set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99434,"byte_end":99453,"line_start":316,"line_end":316,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99720,"byte_end":99731,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"used_memory","qualname":"<Lua>::used_memory","value":"pub fn used_memory(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory currently used inside this Lua state.\n","sig":null,"attributes":[{"value":"/ Returns the memory currently used inside this Lua state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99648,"byte_end":99708,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99992,"byte_end":100008,"line_start":331,"line_end":331,"column_start":12,"column_end":28},"name":"set_memory_limit","qualname":"<Lua>::set_memory_limit","value":"pub fn set_memory_limit(&Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a memory limit on this Lua state.  Once an allocation occurs that would pass this\n memory limit, a `Error::MemoryError` is generated instead.\n","sig":null,"attributes":[{"value":"/ Sets a memory limit on this Lua state.  Once an allocation occurs that would pass this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99823,"byte_end":99913,"line_start":329,"line_end":329,"column_start":5,"column_end":95}},{"value":"/ memory limit, a `Error::MemoryError` is generated instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":99918,"byte_end":99980,"line_start":330,"line_end":330,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100286,"byte_end":100299,"line_start":339,"line_end":339,"column_start":12,"column_end":25},"name":"gc_is_running","qualname":"<Lua>::gc_is_running","value":"pub fn gc_is_running(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the garbage collector is currently running automatically.\n","sig":null,"attributes":[{"value":"cfg(any(rlua_lua53, rlua_lua54))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100157,"byte_end":100192,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/ Returns true if the garbage collector is currently running automatically.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100197,"byte_end":100274,"line_start":338,"line_end":338,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100450,"byte_end":100457,"line_start":344,"line_end":344,"column_start":12,"column_end":19},"name":"gc_stop","qualname":"<Lua>::gc_stop","value":"pub fn gc_stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the Lua GC from running\n","sig":null,"attributes":[{"value":"/ Stop the Lua GC from running","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100406,"byte_end":100438,"line_start":343,"line_end":343,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100623,"byte_end":100633,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"gc_restart","qualname":"<Lua>::gc_restart","value":"pub fn gc_restart(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Restarts the Lua GC if it is not running\n","sig":null,"attributes":[{"value":"/ Restarts the Lua GC if it is not running","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100567,"byte_end":100611,"line_start":350,"line_end":350,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101003,"byte_end":101013,"line_start":361,"line_end":361,"column_start":12,"column_end":22},"name":"gc_collect","qualname":"<Lua>::gc_collect","value":"pub fn gc_collect(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Perform a full garbage-collection cycle.","sig":null,"attributes":[{"value":"/ Perform a full garbage-collection cycle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100746,"byte_end":100790,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100795,"byte_end":100798,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ It may be necessary to call this function twice to collect all currently unreachable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100803,"byte_end":100891,"line_start":359,"line_end":359,"column_start":5,"column_end":93}},{"value":"/ objects.  Once to finish the current gc cycle, and once to start and finish the next cycle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":100896,"byte_end":100991,"line_start":360,"line_end":360,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101349,"byte_end":101356,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"gc_step","qualname":"<Lua>::gc_step","value":"pub fn gc_step(&Self) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Steps the garbage collector one indivisible step.","sig":null,"attributes":[{"value":"/ Steps the garbage collector one indivisible step.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101214,"byte_end":101267,"line_start":369,"line_end":369,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101272,"byte_end":101275,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Returns true if this has finished a collection cycle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101280,"byte_end":101337,"line_start":371,"line_end":371,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101650,"byte_end":101664,"line_start":380,"line_end":380,"column_start":12,"column_end":26},"name":"gc_step_kbytes","qualname":"<Lua>::gc_step_kbytes","value":"pub fn gc_step_kbytes(&Self, c_int) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Steps the garbage collector as though memory had been allocated.","sig":null,"attributes":[{"value":"/ Steps the garbage collector as though memory had been allocated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101424,"byte_end":101492,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101497,"byte_end":101500,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ if `kbytes` is 0, then this is the same as calling `gc_step`.  Returns true if this step has","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101505,"byte_end":101601,"line_start":378,"line_end":378,"column_start":5,"column_end":101}},{"value":"/ finished a collection cycle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101606,"byte_end":101638,"line_start":379,"line_end":379,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102200,"byte_end":102210,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"gc_set_inc","qualname":"<Lua>::gc_set_inc","value":"pub fn gc_set_inc(&Self, c_int, c_int, c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Sets the garbage collector to incremental mode.","sig":null,"attributes":[{"value":"cfg(rlua_lua54)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101888,"byte_end":101906,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ Sets the garbage collector to incremental mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101911,"byte_end":101962,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101967,"byte_end":101970,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Returns the previous mode (`LUA_GCGEN` or `LUA_GCINC`).  More information can be found in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":101975,"byte_end":102072,"line_start":391,"line_end":391,"column_start":5,"column_end":102}},{"value":"/ [Lua 5.4 documentation][lua_doc].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102077,"byte_end":102114,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102119,"byte_end":102122,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [lua_doc]: https://www.lua.org/manual/5.4/manual.html#2.5","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102127,"byte_end":102188,"line_start":394,"line_end":394,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102823,"byte_end":102833,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"gc_set_gen","qualname":"<Lua>::gc_set_gen","value":"pub fn gc_set_gen(&Self, c_int, c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Sets the garbage collector to generational mode.","sig":null,"attributes":[{"value":"cfg(rlua_lua54)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102510,"byte_end":102528,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ Sets the garbage collector to generational mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102533,"byte_end":102585,"line_start":408,"line_end":408,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102590,"byte_end":102593,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Returns the previous mode (`LUA_GCGEN` or `LUA_GCINC`).  More information can be found in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102598,"byte_end":102695,"line_start":410,"line_end":410,"column_start":5,"column_end":102}},{"value":"/ [Lua 5.4 documentation][lua_doc].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102700,"byte_end":102737,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102742,"byte_end":102745,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [lua_doc]: https://www.lua.org/manual/5.4/manual.html#2.5","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":102750,"byte_end":102811,"line_start":413,"line_end":413,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103496,"byte_end":103508,"line_start":433,"line_end":433,"column_start":12,"column_end":24},"name":"gc_set_pause","qualname":"<Lua>::gc_set_pause","value":"pub fn gc_set_pause(&Self, c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Sets the 'pause' value of the incremental collector.","sig":null,"attributes":[{"value":"/ Sets the 'pause' value of the incremental collector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103112,"byte_end":103168,"line_start":425,"line_end":425,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103173,"byte_end":103176,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value of 'pause'.  More information can be found in the [Lua 5.4","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103181,"byte_end":103270,"line_start":427,"line_end":427,"column_start":5,"column_end":94}},{"value":"/ documentation][lua_doc].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103275,"byte_end":103303,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103308,"byte_end":103311,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [lua_doc]: https://www.lua.org/manual/5.4/manual.html#2.5","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103316,"byte_end":103377,"line_start":430,"line_end":430,"column_start":5,"column_end":66}},{"value":"deprecated(note = \"please use `gc_set_inc` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103405,"byte_end":103457,"line_start":431,"line_end":431,"column_start":28,"column_end":80}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103464,"byte_end":103484,"line_start":432,"line_end":432,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":104036,"byte_end":104058,"line_start":445,"line_end":445,"column_start":12,"column_end":34},"name":"gc_set_step_multiplier","qualname":"<Lua>::gc_set_step_multiplier","value":"pub fn gc_set_step_multiplier(&Self, c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Sets the 'step multiplier' value of the incremental collector.","sig":null,"attributes":[{"value":"/ Sets the 'step multiplier' value of the incremental collector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103628,"byte_end":103694,"line_start":437,"line_end":437,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103699,"byte_end":103702,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value of the 'step multiplier'.  More information can be found in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103707,"byte_end":103801,"line_start":439,"line_end":439,"column_start":5,"column_end":99}},{"value":"/ [Lua 5.4 documentation][lua_doc].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103806,"byte_end":103843,"line_start":440,"line_end":440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103848,"byte_end":103851,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [lua_doc]: https://www.lua.org/manual/5.4/manual.html#2.5","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103856,"byte_end":103917,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"deprecated(note = \"please use `gc_set_inc` instead\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":103945,"byte_end":103997,"line_start":443,"line_end":443,"column_start":28,"column_end":80}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":104004,"byte_end":104024,"line_start":444,"line_end":444,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121210,"byte_end":121218,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"Variadic","qualname":"::multi::Variadic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a variable number of `T`s.","sig":null,"attributes":[{"value":"/ Wraps a variable number of `T`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120230,"byte_end":120266,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120267,"byte_end":120270,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Can be used to work with variadic functions more easily. Using this type as the last argument of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120271,"byte_end":120371,"line_start":55,"line_end":55,"column_start":1,"column_end":101}},{"value":"/ a Rust callback will accept any number of arguments from Lua and convert them to the type `T`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120372,"byte_end":120469,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/ using [`FromLua`]. `Variadic<T>` can also be returned from a callback, returning a variable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120470,"byte_end":120565,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"/ number of values to Lua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120566,"byte_end":120594,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120595,"byte_end":120598,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The [`MultiValue`] type is equivalent to `Variadic<Value>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120599,"byte_end":120662,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120663,"byte_end":120666,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120667,"byte_end":120681,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120682,"byte_end":120685,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120686,"byte_end":120693,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # use rlua::{Lua, Variadic, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120694,"byte_end":120734,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120735,"byte_end":120766,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120767,"byte_end":120807,"line_start":67,"line_end":67,"column_start":1,"column_end":41}},{"value":"/ let add = lua_context.create_function(|_, vals: Variadic<f64>| -> Result<f64> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120808,"byte_end":120891,"line_start":68,"line_end":68,"column_start":1,"column_end":84}},{"value":"/     Ok(vals.iter().sum())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120892,"byte_end":120921,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120922,"byte_end":120938,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/ lua_context.globals().set(\"add\", add)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120939,"byte_end":120982,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(lua_context.load(\"add(3, 2, 5)\").eval::<f32>()?, 10.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120983,"byte_end":121053,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121054,"byte_end":121066,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121067,"byte_end":121075,"line_start":74,"line_end":74,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121076,"byte_end":121083,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121084,"byte_end":121091,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121092,"byte_end":121095,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`FromLua`]: trait.FromLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121096,"byte_end":121131,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/ [`MultiValue`]: struct.MultiValue.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121132,"byte_end":121174,"line_start":79,"line_end":79,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121331,"byte_end":121334,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Variadic<T>>::new","value":"pub fn new() -> Variadic<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `Variadic` wrapper containing no values.\n","sig":null,"attributes":[{"value":"/ Creates an empty `Variadic` wrapper containing no values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121258,"byte_end":121319,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125928,"byte_end":125933,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Scope","qualname":"::scope::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076}],"decl_id":null,"docs":" Constructed by the [`Context::scope`] method, allows temporarily creating Lua userdata and\n callbacks that are not required to be Send or 'static.","sig":null,"attributes":[{"value":"/ Constructed by the [`Context::scope`] method, allows temporarily creating Lua userdata and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125636,"byte_end":125730,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ callbacks that are not required to be Send or 'static.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125731,"byte_end":125789,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125790,"byte_end":125793,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ See [`Context::scope`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125794,"byte_end":125838,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125839,"byte_end":125842,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Context::scope`]: struct.Context.html#method.scope","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":125843,"byte_end":125899,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126770,"byte_end":126785,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"create_function","qualname":"<Scope>::create_function","value":"pub fn create_function<'callback, A, R, F>(&'callback Self, F)\n-> Result<Function> where A: FromLuaMulti, R: ToLuaMulti, F: 'scope +\nFn(Context, A) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a Rust function or closure, creating a callable Lua function handle to it.","sig":null,"attributes":[{"value":"/ Wraps a Rust function or closure, creating a callable Lua function handle to it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126355,"byte_end":126439,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126444,"byte_end":126447,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`Context::create_function`] that creates a callback which expires on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126452,"byte_end":126546,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/ scope drop.  See [`Context::scope`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126551,"byte_end":126608,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126613,"byte_end":126616,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [`Context::create_function`]: struct.Context.html#method.create_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126621,"byte_end":126697,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ [`Context::scope`]: struct.Context.html#method.scope","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126702,"byte_end":126758,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128404,"byte_end":128423,"line_start":80,"line_end":80,"column_start":12,"column_end":31},"name":"create_function_mut","qualname":"<Scope>::create_function_mut","value":"pub fn create_function_mut<'callback, A, R, F>(&'callback Self, F)\n-> Result<Function> where A: FromLuaMulti, R: ToLuaMulti, F: 'scope +\nFnMut(Context, A) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a Rust mutable closure, creating a callable Lua function handle to it.","sig":null,"attributes":[{"value":"/ Wraps a Rust mutable closure, creating a callable Lua function handle to it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":127890,"byte_end":127970,"line_start":72,"line_end":72,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":127975,"byte_end":127978,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`Context::create_function_mut`] that creates a callback which expires","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":127983,"byte_end":128078,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/ on scope drop.  See [`Context::scope`] and [`Scope::create_function`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128083,"byte_end":128174,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128179,"byte_end":128182,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`Context::create_function_mut`]: struct.Context.html#method.create_function_mut","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128187,"byte_end":128271,"line_start":77,"line_end":77,"column_start":5,"column_end":89}},{"value":"/ [`Context::scope`]: struct.Context.html#method.scope","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128276,"byte_end":128332,"line_start":78,"line_end":78,"column_start":5,"column_end":61}},{"value":"/ [`Scope::create_function`]: #method.create_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128337,"byte_end":128392,"line_start":79,"line_end":79,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129409,"byte_end":129431,"line_start":105,"line_end":105,"column_start":12,"column_end":34},"name":"create_static_userdata","qualname":"<Scope>::create_static_userdata","value":"pub fn create_static_userdata<T>(&Self, T) -> Result<AnyUserData> where\nT: 'static + UserData","parent":null,"children":[],"decl_id":null,"docs":" Create a Lua userdata object from a custom userdata type.","sig":null,"attributes":[{"value":"/ Create a Lua userdata object from a custom userdata type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128906,"byte_end":128967,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128972,"byte_end":128975,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`Context::create_userdata`] that creates a userdata which expires on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":128980,"byte_end":129074,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ scope drop, and does not require that the userdata type be Send (but still requires that the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129079,"byte_end":129175,"line_start":100,"line_end":100,"column_start":5,"column_end":101}},{"value":"/ UserData be 'static).  See [`Context::scope`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129180,"byte_end":129247,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129252,"byte_end":129255,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`Context::create_userdata`]: struct.Context.html#method.create_userdata","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129260,"byte_end":129336,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ [`Context::scope`]: struct.Context.html#method.scope","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":129341,"byte_end":129397,"line_start":104,"line_end":104,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131776,"byte_end":131801,"line_start":148,"line_end":148,"column_start":12,"column_end":37},"name":"create_nonstatic_userdata","qualname":"<Scope>::create_nonstatic_userdata","value":"pub fn create_nonstatic_userdata<T>(&Self, T) -> Result<AnyUserData> where\nT: 'scope + UserData","parent":null,"children":[],"decl_id":null,"docs":" Create a Lua userdata object from a custom userdata type.","sig":null,"attributes":[{"value":"/ Create a Lua userdata object from a custom userdata type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130168,"byte_end":130229,"line_start":125,"line_end":125,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130234,"byte_end":130237,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`Context::create_userdata`] that creates a userdata which expires on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130242,"byte_end":130336,"line_start":127,"line_end":127,"column_start":5,"column_end":99}},{"value":"/ scope drop, and does not require that the userdata type be Send or 'static. See","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130341,"byte_end":130424,"line_start":128,"line_end":128,"column_start":5,"column_end":88}},{"value":"/ [`Context::scope`] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130429,"byte_end":130469,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130474,"byte_end":130477,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Lifting the requirement that the UserData type be 'static comes with some important","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130482,"byte_end":130569,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/ limitations, so if you only need to eliminate the Send requirement, it is probably better to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130574,"byte_end":130670,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ use [`Scope::create_static_userdata`] instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130675,"byte_end":130725,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130730,"byte_end":130733,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The main limitation that comes from using non-'static userdata is that the produced userdata","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130738,"byte_end":130834,"line_start":135,"line_end":135,"column_start":5,"column_end":101}},{"value":"/ will no longer have a `TypeId` associated with it, becuase `TypeId` can only work for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130839,"byte_end":130928,"line_start":136,"line_end":136,"column_start":5,"column_end":94}},{"value":"/ 'static types.  This means that it is impossible, once the userdata is created, to get a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":130933,"byte_end":131025,"line_start":137,"line_end":137,"column_start":5,"column_end":97}},{"value":"/ reference to it back *out* of an `AnyUserData` handle.  This also implies that the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131030,"byte_end":131116,"line_start":138,"line_end":138,"column_start":5,"column_end":91}},{"value":"/ \"function\" type methods that can be added via [`UserDataMethods`] (the ones that accept","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131121,"byte_end":131212,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ `AnyUserData` as a first parameter) are vastly less useful.  Also, there is no way to re-use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131217,"byte_end":131313,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ a single metatable for multiple non-'static types, so there is a higher cost associated with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131318,"byte_end":131414,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ creating the userdata metatable each time a new userdata is created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131419,"byte_end":131491,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131496,"byte_end":131499,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`create_static_userdata`]: #method.create_static_userdata","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131504,"byte_end":131566,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/ [`Context::create_userdata`]: struct.Context.html#method.create_userdata","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131571,"byte_end":131647,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ [`Context::scope`]: struct.Context.html#method.scope","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131652,"byte_end":131708,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/ [`UserDataMethods`]: trait.UserDataMethods.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":131713,"byte_end":131764,"line_start":147,"line_end":147,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145867,"byte_end":145873,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"String","qualname":"::string::String","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to an internal Lua string.","sig":null,"attributes":[{"value":"/ Handle to an internal Lua string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145729,"byte_end":145766,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145767,"byte_end":145770,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Unlike Rust strings, Lua strings may not be valid UTF-8.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145771,"byte_end":145831,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146530,"byte_end":146536,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"to_str","qualname":"<String>::to_str","value":"pub fn to_str(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a `&str` slice if the Lua string is valid UTF-8.","sig":null,"attributes":[{"value":"/ Get a `&str` slice if the Lua string is valid UTF-8.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145937,"byte_end":145993,"line_start":16,"line_end":16,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145998,"byte_end":146001,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146006,"byte_end":146020,"line_start":18,"line_end":18,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146025,"byte_end":146028,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146033,"byte_end":146040,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, String, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146045,"byte_end":146083,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146088,"byte_end":146119,"line_start":22,"line_end":22,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146124,"byte_end":146164,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"/ let globals = lua_context.globals();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146169,"byte_end":146209,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146214,"byte_end":146217,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let version: String = globals.get(\"_VERSION\")?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146222,"byte_end":146273,"line_start":26,"line_end":26,"column_start":5,"column_end":56}},{"value":"/ assert!(version.to_str().unwrap().contains(\"Lua\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146278,"byte_end":146333,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146338,"byte_end":146341,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let non_utf8: String = lua_context.load(r#\"  \"test\\255\"  \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146346,"byte_end":146419,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ assert!(non_utf8.to_str().is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146424,"byte_end":146464,"line_start":30,"line_end":30,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146469,"byte_end":146481,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146486,"byte_end":146494,"line_start":32,"line_end":32,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146499,"byte_end":146506,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146511,"byte_end":146518,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147400,"byte_end":147408,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<String>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the bytes that make up this string.","sig":null,"attributes":[{"value":"/ Get the bytes that make up this string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146762,"byte_end":146805,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146810,"byte_end":146813,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned slice will not contain the terminating nul byte, but will contain any nul","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146818,"byte_end":146908,"line_start":45,"line_end":45,"column_start":5,"column_end":95}},{"value":"/ bytes embedded into the Lua string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146913,"byte_end":146952,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146957,"byte_end":146960,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146965,"byte_end":146979,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146984,"byte_end":146987,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":146992,"byte_end":146999,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, String, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147004,"byte_end":147042,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147047,"byte_end":147078,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147083,"byte_end":147137,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/ let non_utf8: String = lua_context.load(r#\"  \"test\\255\"  \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147142,"byte_end":147215,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ assert!(non_utf8.to_str().is_err());    // oh no :(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147220,"byte_end":147275,"line_start":55,"line_end":55,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(non_utf8.as_bytes(), &b\"test\\xff\"[..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147280,"byte_end":147334,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147339,"byte_end":147351,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147356,"byte_end":147364,"line_start":58,"line_end":58,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147369,"byte_end":147376,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147381,"byte_end":147388,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147609,"byte_end":147626,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"as_bytes_with_nul","qualname":"<String>::as_bytes_with_nul","value":"pub fn as_bytes_with_nul(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the bytes that make up this string, including the trailing nul byte.\n","sig":null,"attributes":[{"value":"/ Get the bytes that make up this string, including the trailing nul byte.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":147521,"byte_end":147597,"line_start":66,"line_end":66,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149517,"byte_end":149522,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Table","qualname":"::table::Table","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to an internal Lua table.\n","sig":null,"attributes":[{"value":"/ Handle to an internal Lua table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149445,"byte_end":149481,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150558,"byte_end":150561,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"set","qualname":"<Table>::set","value":"pub fn set<K: ToLua, V: ToLua>(&Self, K, V) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a key-value pair in the table.","sig":null,"attributes":[{"value":"/ Sets a key-value pair in the table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149585,"byte_end":149624,"line_start":17,"line_end":17,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149629,"byte_end":149632,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ If the value is `nil`, this will effectively remove the pair.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149637,"byte_end":149702,"line_start":19,"line_end":19,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149707,"byte_end":149710,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This might invoke the `__newindex` metamethod. Use the [`raw_set`] method if that is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149715,"byte_end":149807,"line_start":21,"line_end":21,"column_start":5,"column_end":97}},{"value":"/ desired.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149812,"byte_end":149824,"line_start":22,"line_end":22,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149829,"byte_end":149832,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149837,"byte_end":149851,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149856,"byte_end":149859,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Export a value as a global to make it usable from Lua:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149864,"byte_end":149922,"line_start":26,"line_end":26,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149927,"byte_end":149930,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149935,"byte_end":149942,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149947,"byte_end":149977,"line_start":29,"line_end":29,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149982,"byte_end":150013,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150018,"byte_end":150058,"line_start":31,"line_end":31,"column_start":5,"column_end":45}},{"value":"/ let globals = lua_context.globals();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150063,"byte_end":150103,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150108,"byte_end":150111,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ globals.set(\"assertions\", cfg!(debug_assertions))?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150116,"byte_end":150171,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150176,"byte_end":150179,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150184,"byte_end":150208,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/     if assertions == true then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150213,"byte_end":150247,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/         -- ...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150252,"byte_end":150270,"line_start":38,"line_end":38,"column_start":5,"column_end":23}},{"value":"/     elseif assertions == false then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150275,"byte_end":150314,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/         -- ...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150319,"byte_end":150337,"line_start":40,"line_end":40,"column_start":5,"column_end":23}},{"value":"/     else","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150342,"byte_end":150354,"line_start":41,"line_end":41,"column_start":5,"column_end":17}},{"value":"/         error(\"assertions neither on nor off?\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150359,"byte_end":150410,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/     end","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150415,"byte_end":150426,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ \"#).exec()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150431,"byte_end":150447,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150452,"byte_end":150464,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150469,"byte_end":150477,"line_start":46,"line_end":46,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150482,"byte_end":150489,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150494,"byte_end":150501,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150506,"byte_end":150509,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ [`raw_set`]: #method.raw_set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":150514,"byte_end":150546,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151922,"byte_end":151925,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"get","qualname":"<Table>::get","value":"pub fn get<K: ToLua, V: FromLua>(&Self, K) -> Result<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated to `key` from the table.","sig":null,"attributes":[{"value":"/ Gets the value associated to `key` from the table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151185,"byte_end":151239,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151244,"byte_end":151247,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If no value is associated to `key`, returns the `nil` value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151252,"byte_end":151316,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151321,"byte_end":151324,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This might invoke the `__index` metamethod. Use the [`raw_get`] method if that is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151329,"byte_end":151418,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ desired.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151423,"byte_end":151435,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151440,"byte_end":151443,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151448,"byte_end":151462,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151467,"byte_end":151470,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Query the version of the Lua interpreter:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151475,"byte_end":151520,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151525,"byte_end":151528,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151533,"byte_end":151540,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151545,"byte_end":151575,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151580,"byte_end":151611,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151616,"byte_end":151656,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/ let globals = lua_context.globals();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151661,"byte_end":151701,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151706,"byte_end":151709,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let version: String = globals.get(\"_VERSION\")?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151714,"byte_end":151765,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ println!(\"Lua version: {}\", version);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151770,"byte_end":151811,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151816,"byte_end":151828,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151833,"byte_end":151841,"line_start":91,"line_end":91,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151846,"byte_end":151853,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151858,"byte_end":151865,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151870,"byte_end":151873,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`raw_get`]: #method.raw_get","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":151878,"byte_end":151910,"line_start":95,"line_end":95,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":152615,"byte_end":152627,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Table>::contains_key","value":"pub fn contains_key<K: ToLua>(&Self, K) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the table contains a non-nil value for `key`.\n","sig":null,"attributes":[{"value":"/ Checks whether the table contains a non-nil value for `key`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":152539,"byte_end":152603,"line_start":116,"line_end":116,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":153304,"byte_end":153311,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"raw_set","qualname":"<Table>::raw_set","value":"pub fn raw_set<K: ToLua, V: ToLua>(&Self, K, V) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets a key-value pair without invoking metamethods.\n","sig":null,"attributes":[{"value":"/ Sets a key-value pair without invoking metamethods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":153237,"byte_end":153292,"line_start":139,"line_end":139,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154032,"byte_end":154039,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"raw_get","qualname":"<Table>::raw_get","value":"pub fn raw_get<K: ToLua, V: FromLua>(&Self, K) -> Result<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value associated to `key` without invoking metamethods.\n","sig":null,"attributes":[{"value":"/ Gets the value associated to `key` without invoking metamethods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":153952,"byte_end":154020,"line_start":163,"line_end":163,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154698,"byte_end":154701,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"len","qualname":"<Table>::len","value":"pub fn len(&Self) -> Result<Integer>","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the Lua `#` operator.","sig":null,"attributes":[{"value":"/ Returns the result of the Lua `#` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154485,"byte_end":154532,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154537,"byte_end":154540,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This might invoke the `__len` metamethod. Use the [`raw_len`] method if that is not desired.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154545,"byte_end":154641,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154646,"byte_end":154649,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`raw_len`]: #method.raw_len","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154654,"byte_end":154686,"line_start":183,"line_end":183,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":155099,"byte_end":155106,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"raw_len","qualname":"<Table>::raw_len","value":"pub fn raw_len(&Self) -> Integer","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the Lua `#` operator, without invoking the `__len` metamethod.\n","sig":null,"attributes":[{"value":"/ Returns the result of the Lua `#` operator, without invoking the `__len` metamethod.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":154999,"byte_end":155087,"line_start":194,"line_end":194,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":155594,"byte_end":155607,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"get_metatable","qualname":"<Table>::get_metatable","value":"pub fn get_metatable(&Self) -> Option<Table>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the metatable of this table, or `None` if no metatable is set.","sig":null,"attributes":[{"value":"/ Returns a reference to the metatable of this table, or `None` if no metatable is set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":155392,"byte_end":155481,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":155486,"byte_end":155489,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Unlike the `getmetatable` Lua function, this method ignores the `__metatable` field.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":155494,"byte_end":155582,"line_start":208,"line_end":208,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156206,"byte_end":156219,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"set_metatable","qualname":"<Table>::set_metatable","value":"pub fn set_metatable(&Self, Option<Table>)","parent":null,"children":[],"decl_id":null,"docs":" Sets or removes the metatable of this table.","sig":null,"attributes":[{"value":"/ Sets or removes the metatable of this table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156026,"byte_end":156074,"line_start":224,"line_end":224,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156079,"byte_end":156082,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If `metatable` is `None`, the metatable is removed (if no metatable is set, this does","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156087,"byte_end":156176,"line_start":226,"line_end":226,"column_start":5,"column_end":94}},{"value":"/ nothing).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156181,"byte_end":156194,"line_start":227,"line_end":227,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157847,"byte_end":157852,"line_start":277,"line_end":277,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Table>::pairs","value":"pub fn pairs<K: FromLua, V: FromLua>(Self) -> TablePairs","parent":null,"children":[],"decl_id":null,"docs":" Consume this table and return an iterator over the pairs of the table.","sig":null,"attributes":[{"value":"/ Consume this table and return an iterator over the pairs of the table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156677,"byte_end":156751,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156756,"byte_end":156759,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This works like the Lua `pairs` function, but does not invoke the `__pairs` metamethod.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156764,"byte_end":156855,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156860,"byte_end":156863,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The pairs are wrapped in a [`Result`], since they are lazily converted to `K` and `V` types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156868,"byte_end":156964,"line_start":247,"line_end":247,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156969,"byte_end":156972,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156977,"byte_end":156987,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":156992,"byte_end":156995,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ While this method consumes the `Table` object, it can not prevent code from mutating the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157000,"byte_end":157092,"line_start":251,"line_end":251,"column_start":5,"column_end":97}},{"value":"/ table while the iteration is in progress. Refer to the [Lua manual] for information about","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157097,"byte_end":157190,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ the consequences of such mutation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157195,"byte_end":157233,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157238,"byte_end":157241,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157246,"byte_end":157260,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157265,"byte_end":157268,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Iterate over all globals:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157273,"byte_end":157302,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157307,"byte_end":157310,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157315,"byte_end":157322,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result, Value};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157327,"byte_end":157364,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157369,"byte_end":157400,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157405,"byte_end":157445,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ let globals = lua_context.globals();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157450,"byte_end":157490,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157495,"byte_end":157498,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ for pair in globals.pairs::<Value, Value>() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157503,"byte_end":157552,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/     let (key, value) = pair?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157557,"byte_end":157590,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/ #   let _ = (key, value);   // used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157595,"byte_end":157634,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157639,"byte_end":157653,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157658,"byte_end":157663,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157668,"byte_end":157680,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157685,"byte_end":157693,"line_start":271,"line_end":271,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157698,"byte_end":157705,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157710,"byte_end":157717,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157722,"byte_end":157725,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: type.Result.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157730,"byte_end":157762,"line_start":275,"line_end":275,"column_start":5,"column_end":37}},{"value":"/ [Lua manual]: http://www.lua.org/manual/5.4/manual.html#pdf-next","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":157767,"byte_end":157835,"line_start":276,"line_end":276,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159594,"byte_end":159609,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"sequence_values","qualname":"<Table>::sequence_values","value":"pub fn sequence_values<V: FromLua>(Self) -> TableSequence","parent":null,"children":[],"decl_id":null,"docs":" Consume this table and return an iterator over all values in the sequence part of the table.","sig":null,"attributes":[{"value":"/ Consume this table and return an iterator over all values in the sequence part of the table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158060,"byte_end":158156,"line_start":285,"line_end":285,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158161,"byte_end":158164,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield all values `t[1]`, `t[2]`, and so on, until a `nil` value is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158169,"byte_end":158257,"line_start":287,"line_end":287,"column_start":5,"column_end":93}},{"value":"/ encountered. This mirrors the behaviour of Lua's `ipairs` function and will invoke the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158262,"byte_end":158352,"line_start":288,"line_end":288,"column_start":5,"column_end":95}},{"value":"/ `__index` metamethod according to the usual rules. However, the deprecated `__ipairs`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158357,"byte_end":158446,"line_start":289,"line_end":289,"column_start":5,"column_end":94}},{"value":"/ metatable will not be called.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158451,"byte_end":158484,"line_start":290,"line_end":290,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158489,"byte_end":158492,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Just like [`pairs`], the values are wrapped in a [`Result`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158497,"byte_end":158561,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158566,"byte_end":158569,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158574,"byte_end":158584,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158589,"byte_end":158592,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ While this method consumes the `Table` object, it can not prevent code from mutating the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158597,"byte_end":158689,"line_start":296,"line_end":296,"column_start":5,"column_end":97}},{"value":"/ table while the iteration is in progress. Refer to the [Lua manual] for information about","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158694,"byte_end":158787,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/ the consequences of such mutation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158792,"byte_end":158830,"line_start":298,"line_end":298,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158835,"byte_end":158838,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158843,"byte_end":158857,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158862,"byte_end":158865,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158870,"byte_end":158877,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Result, Table};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158882,"byte_end":158919,"line_start":303,"line_end":303,"column_start":5,"column_end":42}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158924,"byte_end":158955,"line_start":304,"line_end":304,"column_start":5,"column_end":36}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":158960,"byte_end":159000,"line_start":305,"line_end":305,"column_start":5,"column_end":45}},{"value":"/ let my_table: Table = lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159005,"byte_end":159051,"line_start":306,"line_end":306,"column_start":5,"column_end":51}},{"value":"/     {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159056,"byte_end":159065,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/         [1] = 4,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159070,"byte_end":159090,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/         [2] = 5,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159095,"byte_end":159115,"line_start":309,"line_end":309,"column_start":5,"column_end":25}},{"value":"/         [4] = 7,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159120,"byte_end":159140,"line_start":310,"line_end":310,"column_start":5,"column_end":25}},{"value":"/         key = 2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159145,"byte_end":159164,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159169,"byte_end":159178,"line_start":312,"line_end":312,"column_start":5,"column_end":14}},{"value":"/ \"#).eval()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159183,"byte_end":159199,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159204,"byte_end":159207,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let expected = [4, 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159212,"byte_end":159238,"line_start":315,"line_end":315,"column_start":5,"column_end":31}},{"value":"/ for (&expected, got) in expected.iter().zip(my_table.sequence_values::<u32>()) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159243,"byte_end":159327,"line_start":316,"line_end":316,"column_start":5,"column_end":89}},{"value":"/     assert_eq!(expected, got?);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159332,"byte_end":159367,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159372,"byte_end":159377,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159382,"byte_end":159394,"line_start":319,"line_end":319,"column_start":5,"column_end":17}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159399,"byte_end":159407,"line_start":320,"line_end":320,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159412,"byte_end":159419,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159424,"byte_end":159431,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159436,"byte_end":159439,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`pairs`]: #method.pairs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159444,"byte_end":159472,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ [`Result`]: type.Result.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159477,"byte_end":159509,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/ [Lua manual]: http://www.lua.org/manual/5.4/manual.html#pdf-next","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159514,"byte_end":159582,"line_start":326,"line_end":326,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159973,"byte_end":159983,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"TablePairs","qualname":"::table::TablePairs","value":"TablePairs {  }","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391}],"decl_id":null,"docs":" An iterator over the pairs of a Lua table.","sig":null,"attributes":[{"value":"/ An iterator over the pairs of a Lua table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159795,"byte_end":159841,"line_start":336,"line_end":336,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159842,"byte_end":159845,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Table::pairs`] method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159846,"byte_end":159904,"line_start":338,"line_end":338,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159905,"byte_end":159908,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ [`Table::pairs`]: struct.Table.html#method.pairs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":159909,"byte_end":159961,"line_start":340,"line_end":340,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161840,"byte_end":161853,"line_start":403,"line_end":403,"column_start":12,"column_end":25},"name":"TableSequence","qualname":"::table::TableSequence","value":"TableSequence {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" An iterator over the sequence part of a Lua table.","sig":null,"attributes":[{"value":"/ An iterator over the sequence part of a Lua table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161624,"byte_end":161678,"line_start":398,"line_end":398,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161679,"byte_end":161682,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Table::sequence_values`] method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161683,"byte_end":161751,"line_start":400,"line_end":400,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161752,"byte_end":161755,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`Table::sequence_values`]: struct.Table.html#method.sequence_values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161756,"byte_end":161828,"line_start":402,"line_end":402,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163683,"byte_end":163692,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Resumable","qualname":"::thread::ThreadStatus::Resumable","value":"ThreadStatus::Resumable","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":" The thread was just created, or is suspended because it has called `coroutine.yield`.","sig":null,"attributes":[{"value":"/ The thread was just created, or is suspended because it has called `coroutine.yield`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163425,"byte_end":163514,"line_start":15,"line_end":15,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163519,"byte_end":163522,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If a thread is in this state, it can be resumed by calling [`Thread::resume`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163527,"byte_end":163609,"line_start":17,"line_end":17,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163614,"byte_end":163617,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ [`Thread::resume`]: struct.Thread.html#method.resume","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163622,"byte_end":163678,"line_start":19,"line_end":19,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163784,"byte_end":163795,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"name":"Unresumable","qualname":"::thread::ThreadStatus::Unresumable","value":"ThreadStatus::Unresumable","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":" Either the thread has finished executing, or the thread is currently running.\n","sig":null,"attributes":[{"value":"/ Either the thread has finished executing, or the thread is currently running.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163698,"byte_end":163779,"line_start":21,"line_end":21,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163861,"byte_end":163866,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Error","qualname":"::thread::ThreadStatus::Error","value":"ThreadStatus::Error","parent":{"krate":0,"index":3101},"children":[],"decl_id":null,"docs":" The thread has raised a Lua error during execution.\n","sig":null,"attributes":[{"value":"/ The thread has raised a Lua error during execution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163801,"byte_end":163856,"line_start":23,"line_end":23,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163406,"byte_end":163418,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"ThreadStatus","qualname":"::thread::ThreadStatus","value":"pub enum ThreadStatus { Resumable, Unresumable, Error, }","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106}],"decl_id":null,"docs":" Status of a Lua thread (or coroutine).\n","sig":null,"attributes":[{"value":"/ Status of a Lua thread (or coroutine).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163309,"byte_end":163351,"line_start":12,"line_end":12,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163959,"byte_end":163965,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Thread","qualname":"::thread::Thread","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to an internal Lua thread (or coroutine).\n","sig":null,"attributes":[{"value":"/ Handle to an internal Lua thread (or coroutine).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":163871,"byte_end":163923,"line_start":27,"line_end":27,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165635,"byte_end":165641,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"resume","qualname":"<Thread>::resume","value":"pub fn resume<A, R>(&Self, A) -> Result<R> where A: ToLuaMulti,\nR: FromLuaMulti","parent":null,"children":[],"decl_id":null,"docs":" Resumes execution of this thread.","sig":null,"attributes":[{"value":"/ Resumes execution of this thread.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164029,"byte_end":164066,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164071,"byte_end":164074,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `coroutine.resume`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164079,"byte_end":164116,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164121,"byte_end":164124,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Passes `args` as arguments to the thread. If the coroutine has called `coroutine.yield`, it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164129,"byte_end":164224,"line_start":36,"line_end":36,"column_start":5,"column_end":100}},{"value":"/ will return these arguments. Otherwise, the coroutine wasn't yet started, so the arguments","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164229,"byte_end":164323,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"/ are passed to its main function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164328,"byte_end":164364,"line_start":38,"line_end":38,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164369,"byte_end":164372,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If the thread is no longer in `Active` state (meaning it has finished execution or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164377,"byte_end":164463,"line_start":40,"line_end":40,"column_start":5,"column_end":91}},{"value":"/ encountered an error), this will return `Err(CoroutineInactive)`, otherwise will return `Ok`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164468,"byte_end":164564,"line_start":41,"line_end":41,"column_start":5,"column_end":101}},{"value":"/ as follows:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164569,"byte_end":164584,"line_start":42,"line_end":42,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164589,"byte_end":164592,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If the thread calls `coroutine.yield`, returns the values passed to `yield`. If the thread","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164597,"byte_end":164691,"line_start":44,"line_end":44,"column_start":5,"column_end":99}},{"value":"/ `return`s values from its main function, returns those.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164696,"byte_end":164755,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164760,"byte_end":164763,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164768,"byte_end":164782,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164787,"byte_end":164790,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164795,"byte_end":164802,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ # use rlua::{Lua, Thread, Error};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164807,"byte_end":164844,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164849,"byte_end":164866,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164871,"byte_end":164911,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ let thread: Thread = lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164916,"byte_end":164961,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/     coroutine.create(function(arg)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164966,"byte_end":165004,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/         assert(arg == 42)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165009,"byte_end":165038,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/         local yieldarg = coroutine.yield(123)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165043,"byte_end":165092,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/         assert(yieldarg == 43)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165097,"byte_end":165131,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/         return 987","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165136,"byte_end":165158,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/     end)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165163,"byte_end":165175,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/ \"#).eval().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165180,"byte_end":165204,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165209,"byte_end":165212,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(thread.resume::<_, u32>(42).unwrap(), 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165217,"byte_end":165275,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(thread.resume::<_, u32>(43).unwrap(), 987);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165280,"byte_end":165338,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165343,"byte_end":165346,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ // The coroutine has now returned, so `resume` will fail","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165351,"byte_end":165411,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/ match thread.resume::<_, u32>(()) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165416,"byte_end":165455,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/     Err(Error::CoroutineInactive) => {},","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165460,"byte_end":165504,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/     unexpected => panic!(\"unexpected result {:?}\", unexpected),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165509,"byte_end":165576,"line_start":68,"line_end":68,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165581,"byte_end":165586,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165591,"byte_end":165599,"line_start":70,"line_end":70,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165604,"byte_end":165611,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":165616,"byte_end":165623,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":167364,"byte_end":167370,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"status","qualname":"<Thread>::status","value":"pub fn status(&Self) -> ThreadStatus","parent":null,"children":[],"decl_id":null,"docs":" Gets the status of the thread.\n","sig":null,"attributes":[{"value":"/ Gets the status of the thread.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":167318,"byte_end":167352,"line_start":125,"line_end":125,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168291,"byte_end":168298,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Integer","qualname":"::types::Integer","value":"ffi::lua_Integer","parent":null,"children":[],"decl_id":null,"docs":" Type of Lua integer numbers.\n","sig":null,"attributes":[{"value":"/ Type of Lua integer numbers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168249,"byte_end":168281,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168368,"byte_end":168374,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Number","qualname":"::types::Number","value":"ffi::lua_Number","parent":null,"children":[],"decl_id":null,"docs":" Type of Lua floating point numbers.\n","sig":null,"attributes":[{"value":"/ Type of Lua floating point numbers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168319,"byte_end":168358,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168521,"byte_end":168534,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"LightUserData","qualname":"::types::LightUserData","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"light\" userdata value. Equivalent to an unmanaged raw pointer.\n","sig":null,"attributes":[{"value":"/ A \"light\" userdata value. Equivalent to an unmanaged raw pointer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168395,"byte_end":168464,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168535,"byte_end":168550,"line_start":17,"line_end":17,"column_start":26,"column_end":41},"name":"0","qualname":"::types::LightUserData::0","value":"*mut libc::c_void","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170670,"byte_end":170681,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"RegistryKey","qualname":"::types::RegistryKey","value":"RegistryKey {  }","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" An auto generated key into the Lua registry.","sig":null,"attributes":[{"value":"/ An auto generated key into the Lua registry.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168675,"byte_end":168723,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168724,"byte_end":168727,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is a handle to a value stored inside the Lua registry.  Unlike the `Table` or `Function`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168728,"byte_end":168825,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"/ handle types, this handle is `Send + Sync + 'static` and can be returned outside of a call to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168826,"byte_end":168923,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ `Lua::context`.  Also, rather than calling methods directly on it, you must instead retrieve the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":168924,"byte_end":169024,"line_start":26,"line_end":26,"column_start":1,"column_end":101}},{"value":"/ value first by calling [`Context::registry_value`] inside a call to `Lua::context`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169025,"byte_end":169112,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169113,"byte_end":169116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ It is not automatically garbage collected on Drop, but it can be removed with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169117,"byte_end":169198,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"/ [`Context::remove_registry_value`], and instances not manually removed can be garbage collected","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169199,"byte_end":169298,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ with [`Context::expire_registry_values`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169299,"byte_end":169344,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169345,"byte_end":169348,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Be warned, If you place this into Lua via a `UserData` type or a rust callback and rely on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169349,"byte_end":169443,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ [`Context::expire_registry_values`], it is *very easy* to accidentally cause reference cycles","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169444,"byte_end":169541,"line_start":34,"line_end":34,"column_start":1,"column_end":98}},{"value":"/ that cannot be automatically collected.  The Lua garbage collector is not aware of the registry","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169542,"byte_end":169641,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/ handle pattern, so holding onto a `RegistryKey` inside Lua may lead to it never being dropped,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169642,"byte_end":169740,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and it if it is not droped, [`Context::expire_registry_values`] will never remove the value from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169741,"byte_end":169841,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/ the registry, leading to an uncollectable cycle.  Instead of placing a `RegistryKey` into Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169842,"byte_end":169939,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ and relying on it being automatically dropped, prefer APIs which the Lua garbage collector","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":169940,"byte_end":170034,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ understands, such as [`UserData::set_i_user_value`] / [`UserData::get_i_user_value`] for UserData","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170035,"byte_end":170136,"line_start":40,"line_end":40,"column_start":1,"column_end":102}},{"value":"/ types and [`Function::bind`] for callbacks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170137,"byte_end":170184,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170185,"byte_end":170188,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`Context::registry_value`]: struct.Context.html#method.registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170189,"byte_end":170263,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ [`Context::remove_registry_value`]: struct.Context.html#method.remove_registry_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170264,"byte_end":170352,"line_start":44,"line_end":44,"column_start":1,"column_end":89}},{"value":"/ [`Context::expire_registry_values`]: struct.Context.html#method.expire_registry_values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170353,"byte_end":170443,"line_start":45,"line_end":45,"column_start":1,"column_end":91}},{"value":"/ [`Function::bind`]: struct.Function.html#method.bind","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170444,"byte_end":170500,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ [`UserData::set_i_user_value`]: struct.UserData.html#method.set_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170501,"byte_end":170579,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ [`UserData::get_i_user_value`]: struct.UserData.html#method.get_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170580,"byte_end":170658,"line_start":48,"line_end":48,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172612,"byte_end":172615,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Add","qualname":"::userdata::MetaMethod::Add","value":"MetaMethod::Add","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `+` operator.\n","sig":null,"attributes":[{"value":"/ The `+` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172586,"byte_end":172607,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172647,"byte_end":172650,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Sub","qualname":"::userdata::MetaMethod::Sub","value":"MetaMethod::Sub","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `-` operator.\n","sig":null,"attributes":[{"value":"/ The `-` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172621,"byte_end":172642,"line_start":21,"line_end":21,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172682,"byte_end":172685,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Mul","qualname":"::userdata::MetaMethod::Mul","value":"MetaMethod::Mul","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `*` operator.\n","sig":null,"attributes":[{"value":"/ The `*` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172656,"byte_end":172677,"line_start":23,"line_end":23,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172717,"byte_end":172720,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Div","qualname":"::userdata::MetaMethod::Div","value":"MetaMethod::Div","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `/` operator.\n","sig":null,"attributes":[{"value":"/ The `/` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172691,"byte_end":172712,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172752,"byte_end":172755,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Mod","qualname":"::userdata::MetaMethod::Mod","value":"MetaMethod::Mod","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `%` operator.\n","sig":null,"attributes":[{"value":"/ The `%` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172726,"byte_end":172747,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172787,"byte_end":172790,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"Pow","qualname":"::userdata::MetaMethod::Pow","value":"MetaMethod::Pow","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `^` operator.\n","sig":null,"attributes":[{"value":"/ The `^` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172761,"byte_end":172782,"line_start":29,"line_end":29,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3157},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172836,"byte_end":172839,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Unm","qualname":"::userdata::MetaMethod::Unm","value":"MetaMethod::Unm","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The unary minus (`-`) operator.\n","sig":null,"attributes":[{"value":"/ The unary minus (`-`) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172796,"byte_end":172831,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172887,"byte_end":172891,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"IDiv","qualname":"::userdata::MetaMethod::IDiv","value":"MetaMethod::IDiv","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The floor division (//) operator.\n","sig":null,"attributes":[{"value":"/ The floor division (//) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172845,"byte_end":172882,"line_start":33,"line_end":33,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172935,"byte_end":172939,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"BAnd","qualname":"::userdata::MetaMethod::BAnd","value":"MetaMethod::BAnd","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise AND (&) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise AND (&) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172897,"byte_end":172930,"line_start":35,"line_end":35,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172982,"byte_end":172985,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"BOr","qualname":"::userdata::MetaMethod::BOr","value":"MetaMethod::BOr","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise OR (|) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise OR (|) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172945,"byte_end":172977,"line_start":37,"line_end":37,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173036,"byte_end":173040,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"BXor","qualname":"::userdata::MetaMethod::BXor","value":"MetaMethod::BXor","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise XOR (binary ~) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise XOR (binary ~) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172991,"byte_end":173031,"line_start":39,"line_end":39,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173090,"byte_end":173094,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"BNot","qualname":"::userdata::MetaMethod::BNot","value":"MetaMethod::BNot","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise NOT (unary ~) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise NOT (unary ~) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173046,"byte_end":173085,"line_start":41,"line_end":41,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173146,"byte_end":173149,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Shl","qualname":"::userdata::MetaMethod::Shl","value":"MetaMethod::Shl","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise left shift (<<) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise left shift (<<) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173100,"byte_end":173141,"line_start":43,"line_end":43,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173202,"byte_end":173205,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Shr","qualname":"::userdata::MetaMethod::Shr","value":"MetaMethod::Shr","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The bitwise right shift (>>) operator.\n","sig":null,"attributes":[{"value":"/ The bitwise right shift (>>) operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173155,"byte_end":173197,"line_start":45,"line_end":45,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173259,"byte_end":173265,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Concat","qualname":"::userdata::MetaMethod::Concat","value":"MetaMethod::Concat","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The string concatenation operator `..`.\n","sig":null,"attributes":[{"value":"/ The string concatenation operator `..`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173211,"byte_end":173254,"line_start":47,"line_end":47,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173304,"byte_end":173307,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Len","qualname":"::userdata::MetaMethod::Len","value":"MetaMethod::Len","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The length operator `#`.\n","sig":null,"attributes":[{"value":"/ The length operator `#`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173271,"byte_end":173299,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173340,"byte_end":173342,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"Eq","qualname":"::userdata::MetaMethod::Eq","value":"MetaMethod::Eq","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `==` operator.\n","sig":null,"attributes":[{"value":"/ The `==` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173313,"byte_end":173335,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173374,"byte_end":173376,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"Lt","qualname":"::userdata::MetaMethod::Lt","value":"MetaMethod::Lt","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `<` operator.\n","sig":null,"attributes":[{"value":"/ The `<` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173348,"byte_end":173369,"line_start":53,"line_end":53,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173409,"byte_end":173411,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"Le","qualname":"::userdata::MetaMethod::Le","value":"MetaMethod::Le","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `<=` operator.\n","sig":null,"attributes":[{"value":"/ The `<=` operator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173382,"byte_end":173404,"line_start":55,"line_end":55,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173450,"byte_end":173455,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Index","qualname":"::userdata::MetaMethod::Index","value":"MetaMethod::Index","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" Index access `obj[key]`.\n","sig":null,"attributes":[{"value":"/ Index access `obj[key]`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173417,"byte_end":173445,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173508,"byte_end":173516,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"NewIndex","qualname":"::userdata::MetaMethod::NewIndex","value":"MetaMethod::NewIndex","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" Index write access `obj[key] = value`.\n","sig":null,"attributes":[{"value":"/ Index write access `obj[key] = value`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173461,"byte_end":173503,"line_start":59,"line_end":59,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173575,"byte_end":173579,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Call","qualname":"::userdata::MetaMethod::Call","value":"MetaMethod::Call","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The call \"operator\" `obj(arg1, args2, ...)`.\n","sig":null,"attributes":[{"value":"/ The call \"operator\" `obj(arg1, args2, ...)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173522,"byte_end":173570,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173725,"byte_end":173733,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"ToString","qualname":"::userdata::MetaMethod::ToString","value":"MetaMethod::ToString","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `__tostring` metamethod.","sig":null,"attributes":[{"value":"/ The `__tostring` metamethod.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173585,"byte_end":173617,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173622,"byte_end":173625,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is not an operator, but will be called by methods such as `tostring` and `print`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173630,"byte_end":173720,"line_start":65,"line_end":65,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173870,"byte_end":173875,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Pairs","qualname":"::userdata::MetaMethod::Pairs","value":"MetaMethod::Pairs","parent":{"krate":0,"index":3144},"children":[],"decl_id":null,"docs":" The `__pairs` metamethod.","sig":null,"attributes":[{"value":"/ The `__pairs` metamethod.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173739,"byte_end":173768,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173773,"byte_end":173776,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This is not an operator, but it will be called by the built-in `pairs` function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173781,"byte_end":173865,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172569,"byte_end":172579,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"MetaMethod","qualname":"::userdata::MetaMethod","value":"pub enum MetaMethod {\n    Add,\n    Sub,\n    Mul,\n    Div,\n    Mod,\n    Pow,\n    Unm,\n    IDiv,\n    BAnd,\n    BOr,\n    BXor,\n    BNot,\n    Shl,\n    Shr,\n    Concat,\n    Len,\n    Eq,\n    Lt,\n    Le,\n    Index,\n    NewIndex,\n    Call,\n    ToString,\n    Pairs,\n}","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3191}],"decl_id":null,"docs":" Kinds of metamethods that can be overridden.","sig":null,"attributes":[{"value":"/ Kinds of metamethods that can be overridden.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172227,"byte_end":172275,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172276,"byte_end":172279,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently, this mechanism does not allow overriding the `__gc` metamethod, since there is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172280,"byte_end":172373,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ generally no need to do so: [`UserData`] implementors can instead just implement `Drop`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172374,"byte_end":172466,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172467,"byte_end":172470,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":172471,"byte_end":172508,"line_start":16,"line_end":16,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175111,"byte_end":175126,"line_start":107,"line_end":107,"column_start":11,"column_end":26},"name":"UserDataMethods","qualname":"::userdata::UserDataMethods","value":"UserDataMethods<'lua, T: UserData>","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1601},{"krate":0,"index":1606},{"krate":0,"index":1611},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1624},{"krate":0,"index":1628}],"decl_id":null,"docs":" Method registry for [`UserData`] implementors.","sig":null,"attributes":[{"value":"/ Method registry for [`UserData`] implementors.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175008,"byte_end":175058,"line_start":104,"line_end":104,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175059,"byte_end":175062,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175063,"byte_end":175100,"line_start":106,"line_end":106,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175595,"byte_end":175605,"line_start":115,"line_end":115,"column_start":8,"column_end":18},"name":"add_method","qualname":"::userdata::UserDataMethods::add_method","value":"pub fn add_method<S, A, R, M>(&mut Self, &S, M) where S: ?Sized + AsRef<[u8]>,\nA: FromLuaMulti, R: ToLuaMulti, M: 'static + Send + Fn(Context, &T, A) ->\nResult<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a method which accepts a `&T` as the first parameter.","sig":null,"attributes":[{"value":"/ Add a method which accepts a `&T` as the first parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175152,"byte_end":175213,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175218,"byte_end":175221,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Regular methods are implemented by overriding the `__index` metamethod and returning the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175226,"byte_end":175318,"line_start":110,"line_end":110,"column_start":5,"column_end":97}},{"value":"/ accessed method. This allows them to be used with the expected `userdata:method()` syntax.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175323,"byte_end":175417,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175422,"byte_end":175425,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If `add_meta_method` is used to set the `__index` metamethod, the `__index` metamethod will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175430,"byte_end":175525,"line_start":113,"line_end":113,"column_start":5,"column_end":100}},{"value":"/ be used as a fall-back if no regular method is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175530,"byte_end":175587,"line_start":114,"line_end":114,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176044,"byte_end":176058,"line_start":127,"line_end":127,"column_start":8,"column_end":22},"name":"add_method_mut","qualname":"::userdata::UserDataMethods::add_method_mut","value":"pub fn add_method_mut<S, A, R, M>(&mut Self, &S, M) where S: ?Sized +\nAsRef<[u8]>, A: FromLuaMulti, R: ToLuaMulti, M: 'static + Send +\nFnMut(Context, &mut T, A) -> Result<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a regular method which accepts a `&mut T` as the first parameter.","sig":null,"attributes":[{"value":"/ Add a regular method which accepts a `&mut T` as the first parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175825,"byte_end":175898,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175903,"byte_end":175906,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Refer to [`add_method`] for more information about the implementation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175911,"byte_end":175985,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175990,"byte_end":175993,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`add_method`]: #method.add_method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":175998,"byte_end":176036,"line_start":126,"line_end":126,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176811,"byte_end":176823,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"add_function","qualname":"::userdata::UserDataMethods::add_function","value":"pub fn add_function<S, A, R, F>(&mut Self, &S, F) where S: ?Sized +\nAsRef<[u8]>, A: FromLuaMulti, R: ToLuaMulti, F: 'static + Send +\nFn(Context, A) -> Result<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a regular method as a function which accepts generic arguments, the first argument will\n be a `UserData` of type T if the method is called with Lua method syntax:\n `my_userdata:my_method(arg1, arg2)`, or it is passed in as the first argument:\n `my_userdata.my_method(my_userdata, arg1, arg2)`.","sig":null,"attributes":[{"value":"/ Add a regular method as a function which accepts generic arguments, the first argument will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176285,"byte_end":176380,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/ be a `UserData` of type T if the method is called with Lua method syntax:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176385,"byte_end":176462,"line_start":135,"line_end":135,"column_start":5,"column_end":82}},{"value":"/ `my_userdata:my_method(arg1, arg2)`, or it is passed in as the first argument:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176467,"byte_end":176549,"line_start":136,"line_end":136,"column_start":5,"column_end":87}},{"value":"/ `my_userdata.my_method(my_userdata, arg1, arg2)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176554,"byte_end":176607,"line_start":137,"line_end":137,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176612,"byte_end":176615,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Prefer to use [`add_method`] or [`add_method_mut`] as they are easier to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176620,"byte_end":176701,"line_start":139,"line_end":139,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176706,"byte_end":176709,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`add_method`]: #method.add_method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176714,"byte_end":176752,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`add_method_mut`]: #method.add_method_mut","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":176757,"byte_end":176803,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177268,"byte_end":177284,"line_start":155,"line_end":155,"column_start":8,"column_end":24},"name":"add_function_mut","qualname":"::userdata::UserDataMethods::add_function_mut","value":"pub fn add_function_mut<S, A, R, F>(&mut Self, &S, F) where S: ?Sized +\nAsRef<[u8]>, A: FromLuaMulti, R: ToLuaMulti, F: 'static + Send +\nFnMut(Context, A) -> Result<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a regular method as a mutable function which accepts generic arguments.","sig":null,"attributes":[{"value":"/ Add a regular method as a mutable function which accepts generic arguments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177041,"byte_end":177120,"line_start":150,"line_end":150,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177125,"byte_end":177128,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`add_function`] that accepts a FnMut argument.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177133,"byte_end":177205,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177210,"byte_end":177213,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ [`add_function`]: #method.add_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177218,"byte_end":177260,"line_start":154,"line_end":154,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177847,"byte_end":177862,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"add_meta_method","qualname":"::userdata::UserDataMethods::add_meta_method","value":"pub fn add_meta_method<A, R, M>(&mut Self, MetaMethod, M) where\nA: FromLuaMulti, R: ToLuaMulti, M: 'static + Send + Fn(Context, &T, A) ->\nResult<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a metamethod which accepts a `&T` as the first parameter.","sig":null,"attributes":[{"value":"/ Add a metamethod which accepts a `&T` as the first parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177505,"byte_end":177570,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177575,"byte_end":177578,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177583,"byte_end":177593,"line_start":164,"line_end":164,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177598,"byte_end":177601,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can cause an error with certain binary metamethods that can trigger if only the right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177606,"byte_end":177700,"line_start":166,"line_end":166,"column_start":5,"column_end":99}},{"value":"/ side has a metatable. To prevent this, use [`add_meta_function`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177705,"byte_end":177774,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177779,"byte_end":177782,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [`add_meta_function`]: #method.add_meta_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":177787,"byte_end":177839,"line_start":169,"line_end":169,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178414,"byte_end":178433,"line_start":184,"line_end":184,"column_start":8,"column_end":27},"name":"add_meta_method_mut","qualname":"::userdata::UserDataMethods::add_meta_method_mut","value":"pub fn add_meta_method_mut<A, R, M>(&mut Self, MetaMethod, M) where\nA: FromLuaMulti, R: ToLuaMulti, M: 'static + Send + FnMut(Context, &mut T, A)\n-> Result<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a metamethod as a function which accepts a `&mut T` as the first parameter.","sig":null,"attributes":[{"value":"/ Add a metamethod as a function which accepts a `&mut T` as the first parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178054,"byte_end":178137,"line_start":176,"line_end":176,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178142,"byte_end":178145,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178150,"byte_end":178160,"line_start":178,"line_end":178,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178165,"byte_end":178168,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This can cause an error with certain binary metamethods that can trigger if only the right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178173,"byte_end":178267,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ side has a metatable. To prevent this, use [`add_meta_function`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178272,"byte_end":178341,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178346,"byte_end":178349,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ [`add_meta_function`]: #method.add_meta_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178354,"byte_end":178406,"line_start":183,"line_end":183,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178922,"byte_end":178939,"line_start":195,"line_end":195,"column_start":8,"column_end":25},"name":"add_meta_function","qualname":"::userdata::UserDataMethods::add_meta_function","value":"pub fn add_meta_function<A, R, F>(&mut Self, MetaMethod, F) where\nA: FromLuaMulti, R: ToLuaMulti, F: 'static + Send + Fn(Context, A) ->\nResult<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a metamethod which accepts generic arguments.","sig":null,"attributes":[{"value":"/ Add a metamethod which accepts generic arguments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178632,"byte_end":178685,"line_start":190,"line_end":190,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178690,"byte_end":178693,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Metamethods for binary operators can be triggered if either the left or right argument to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178698,"byte_end":178791,"line_start":192,"line_end":192,"column_start":5,"column_end":98}},{"value":"/ the binary operator has a metatable, so the first argument here is not necessarily a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178796,"byte_end":178884,"line_start":193,"line_end":193,"column_start":5,"column_end":93}},{"value":"/ userdata of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":178889,"byte_end":178914,"line_start":194,"line_end":194,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179367,"byte_end":179388,"line_start":206,"line_end":206,"column_start":8,"column_end":29},"name":"add_meta_function_mut","qualname":"::userdata::UserDataMethods::add_meta_function_mut","value":"pub fn add_meta_function_mut<A, R, F>(&mut Self, MetaMethod, F) where\nA: FromLuaMulti, R: ToLuaMulti, F: 'static + Send + FnMut(Context, A) ->\nResult<R>","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" Add a metamethod as a mutable function which accepts generic arguments.","sig":null,"attributes":[{"value":"/ Add a metamethod as a mutable function which accepts generic arguments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179129,"byte_end":179204,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179209,"byte_end":179212,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This is a version of [`add_meta_function`] that accepts a FnMut argument.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179217,"byte_end":179294,"line_start":203,"line_end":203,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179299,"byte_end":179302,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`add_meta_function`]: #method.add_meta_function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179307,"byte_end":179359,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181466,"byte_end":181474,"line_start":279,"line_end":279,"column_start":11,"column_end":19},"name":"UserData","qualname":"::userdata::UserData","value":"UserData: Sized","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1636}],"decl_id":null,"docs":" Trait for custom userdata types.","sig":null,"attributes":[{"value":"/ Trait for custom userdata types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179579,"byte_end":179615,"line_start":213,"line_end":213,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179616,"byte_end":179619,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, a struct becomes eligible for use inside Lua code. Implementations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179620,"byte_end":179718,"line_start":215,"line_end":215,"column_start":1,"column_end":99}},{"value":"/ of [`ToLua`] and [`FromLua`] are automatically provided.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179719,"byte_end":179779,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179780,"byte_end":179783,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179784,"byte_end":179798,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179799,"byte_end":179802,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179803,"byte_end":179810,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # use rlua::{Lua, UserData, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179811,"byte_end":179851,"line_start":221,"line_end":221,"column_start":1,"column_end":41}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179852,"byte_end":179883,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179884,"byte_end":179924,"line_start":223,"line_end":223,"column_start":1,"column_end":41}},{"value":"/ struct MyUserData(i32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179925,"byte_end":179952,"line_start":224,"line_end":224,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179953,"byte_end":179956,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ impl UserData for MyUserData {}","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179957,"byte_end":179992,"line_start":226,"line_end":226,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179993,"byte_end":179996,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ // `MyUserData` now implements `ToLua`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":179997,"byte_end":180040,"line_start":228,"line_end":228,"column_start":1,"column_end":44}},{"value":"/ lua_context.globals().set(\"myobject\", MyUserData(123))?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180041,"byte_end":180101,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180102,"byte_end":180105,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ lua_context.load(\"assert(type(myobject) == 'userdata')\").exec()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180106,"byte_end":180175,"line_start":231,"line_end":231,"column_start":1,"column_end":70}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180176,"byte_end":180188,"line_start":232,"line_end":232,"column_start":1,"column_end":13}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180189,"byte_end":180197,"line_start":233,"line_end":233,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180198,"byte_end":180205,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180206,"byte_end":180213,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180214,"byte_end":180217,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Custom methods and operators can be provided by implementing `add_methods` (refer to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180218,"byte_end":180306,"line_start":237,"line_end":237,"column_start":1,"column_end":89}},{"value":"/ [`UserDataMethods`] for more information):","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180307,"byte_end":180353,"line_start":238,"line_end":238,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180354,"byte_end":180357,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180358,"byte_end":180365,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # use rlua::{Lua, MetaMethod, UserData, UserDataMethods, Result};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180366,"byte_end":180435,"line_start":241,"line_end":241,"column_start":1,"column_end":70}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180436,"byte_end":180467,"line_start":242,"line_end":242,"column_start":1,"column_end":32}},{"value":"/ # Lua::new().context(|lua_context| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180468,"byte_end":180508,"line_start":243,"line_end":243,"column_start":1,"column_end":41}},{"value":"/ struct MyUserData(i32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180509,"byte_end":180536,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180537,"byte_end":180540,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ impl UserData for MyUserData {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180541,"byte_end":180575,"line_start":246,"line_end":246,"column_start":1,"column_end":35}},{"value":"/     fn add_methods<'lua, M: UserDataMethods<'lua, Self>>(methods: &mut M) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180576,"byte_end":180655,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/         methods.add_method(\"get\", |_, this, _: ()| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180656,"byte_end":180712,"line_start":248,"line_end":248,"column_start":1,"column_end":57}},{"value":"/             Ok(this.0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180713,"byte_end":180739,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180740,"byte_end":180755,"line_start":250,"line_end":250,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180756,"byte_end":180759,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/         methods.add_method_mut(\"add\", |_, this, value: i32| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180760,"byte_end":180825,"line_start":252,"line_end":252,"column_start":1,"column_end":66}},{"value":"/             this.0 += value;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180826,"byte_end":180858,"line_start":253,"line_end":253,"column_start":1,"column_end":33}},{"value":"/             Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180859,"byte_end":180881,"line_start":254,"line_end":254,"column_start":1,"column_end":23}},{"value":"/         });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180882,"byte_end":180897,"line_start":255,"line_end":255,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180898,"byte_end":180901,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/         methods.add_meta_method(MetaMethod::Add, |_, this, value: i32| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180902,"byte_end":180978,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/             Ok(this.0 + value)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":180979,"byte_end":181013,"line_start":258,"line_end":258,"column_start":1,"column_end":35}},{"value":"/         });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181014,"byte_end":181029,"line_start":259,"line_end":259,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181030,"byte_end":181039,"line_start":260,"line_end":260,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181040,"byte_end":181045,"line_start":261,"line_end":261,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181046,"byte_end":181049,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ lua_context.globals().set(\"myobject\", MyUserData(123))?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181050,"byte_end":181110,"line_start":263,"line_end":263,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181111,"byte_end":181114,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ lua_context.load(r#\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181115,"byte_end":181139,"line_start":265,"line_end":265,"column_start":1,"column_end":25}},{"value":"/     assert(myobject:get() == 123)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181140,"byte_end":181177,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/     myobject:add(7)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181178,"byte_end":181201,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/     assert(myobject:get() == 130)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181202,"byte_end":181239,"line_start":268,"line_end":268,"column_start":1,"column_end":38}},{"value":"/     assert(myobject + 10 == 140)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181240,"byte_end":181276,"line_start":269,"line_end":269,"column_start":1,"column_end":37}},{"value":"/ \"#).exec()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181277,"byte_end":181293,"line_start":270,"line_end":270,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181294,"byte_end":181306,"line_start":271,"line_end":271,"column_start":1,"column_end":13}},{"value":"/ # })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181307,"byte_end":181315,"line_start":272,"line_end":272,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181316,"byte_end":181323,"line_start":273,"line_end":273,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181324,"byte_end":181331,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181332,"byte_end":181335,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ [`ToLua`]: trait.ToLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181336,"byte_end":181367,"line_start":276,"line_end":276,"column_start":1,"column_end":32}},{"value":"/ [`FromLua`]: trait.FromLua.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181368,"byte_end":181403,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/ [`UserDataMethods`]: trait.UserDataMethods.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181404,"byte_end":181455,"line_start":278,"line_end":278,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181560,"byte_end":181571,"line_start":281,"line_end":281,"column_start":8,"column_end":19},"name":"add_methods","qualname":"::userdata::UserData::add_methods","value":"pub fn add_methods<'lua, T: UserDataMethods>(&mut T)","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Adds custom methods and operators specific to this userdata.\n","sig":null,"attributes":[{"value":"/ Adds custom methods and operators specific to this userdata.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181488,"byte_end":181552,"line_start":280,"line_end":280,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181754,"byte_end":181771,"line_start":285,"line_end":285,"column_start":8,"column_end":25},"name":"get_uvalues_count","qualname":"::userdata::UserData::get_uvalues_count","value":"pub fn get_uvalues_count(&Self) -> c_int","parent":{"krate":0,"index":1632},"children":[],"decl_id":null,"docs":" Used to determine how many user values this userdata should have.\n Defaults to a single user value.\n","sig":null,"attributes":[{"value":"/ Used to determine how many user values this userdata should have.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181636,"byte_end":181705,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ Defaults to a single user value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181710,"byte_end":181746,"line_start":284,"line_end":284,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182463,"byte_end":182474,"line_start":307,"line_end":307,"column_start":12,"column_end":23},"name":"AnyUserData","qualname":"::userdata::AnyUserData","value":"","parent":null,"children":[],"decl_id":null,"docs":" Handle to an internal Lua userdata for any type that implements [`UserData`].","sig":null,"attributes":[{"value":"/ Handle to an internal Lua userdata for any type that implements [`UserData`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181809,"byte_end":181890,"line_start":290,"line_end":290,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181891,"byte_end":181894,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ Similar to `std::any::Any`, this provides an interface for dynamic type checking via the [`is`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181895,"byte_end":181994,"line_start":292,"line_end":292,"column_start":1,"column_end":100}},{"value":"/ and [`borrow`] methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181995,"byte_end":182022,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182023,"byte_end":182026,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Internally, instances are stored in a `RefCell`, to best match the mutable semantics of the Lua","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182027,"byte_end":182126,"line_start":295,"line_end":295,"column_start":1,"column_end":100}},{"value":"/ language.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182127,"byte_end":182140,"line_start":296,"line_end":296,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182141,"byte_end":182144,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182145,"byte_end":182155,"line_start":298,"line_end":298,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182156,"byte_end":182159,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ This API should only be used when necessary. Implementing [`UserData`] already allows defining","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182160,"byte_end":182258,"line_start":300,"line_end":300,"column_start":1,"column_end":99}},{"value":"/ methods which check the type and acquire a borrow behind the scenes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182259,"byte_end":182331,"line_start":301,"line_end":301,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182332,"byte_end":182335,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`UserData`]: trait.UserData.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182336,"byte_end":182373,"line_start":303,"line_end":303,"column_start":1,"column_end":38}},{"value":"/ [`is`]: #method.is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182374,"byte_end":182396,"line_start":304,"line_end":304,"column_start":1,"column_end":23}},{"value":"/ [`borrow`]: #method.borrow","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182397,"byte_end":182427,"line_start":305,"line_end":305,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182607,"byte_end":182609,"line_start":311,"line_end":311,"column_start":12,"column_end":14},"name":"is","qualname":"<AnyUserData>::is","value":"pub fn is<T: 'static + UserData>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the type of this userdata is `T`.\n","sig":null,"attributes":[{"value":"/ Checks whether the type of this userdata is `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182543,"byte_end":182595,"line_start":310,"line_end":310,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183109,"byte_end":183115,"line_start":325,"line_end":325,"column_start":12,"column_end":18},"name":"borrow","qualname":"<AnyUserData>::borrow","value":"pub fn borrow<T: 'static + UserData>(&Self) -> Result<Ref<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Borrow this userdata immutably if it is of type `T`.","sig":null,"attributes":[{"value":"/ Borrow this userdata immutably if it is of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182846,"byte_end":182902,"line_start":319,"line_end":319,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182907,"byte_end":182910,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182915,"byte_end":182927,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182932,"byte_end":182935,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Returns a `UserDataBorrowError` if the userdata is already mutably borrowed. Returns a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182940,"byte_end":183030,"line_start":323,"line_end":323,"column_start":5,"column_end":95}},{"value":"/ `UserDataTypeMismatch` if the userdata is not of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183035,"byte_end":183097,"line_start":324,"line_end":324,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183525,"byte_end":183535,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<AnyUserData>::borrow_mut","value":"pub fn borrow_mut<T: 'static + UserData>(&Self) -> Result<RefMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Borrow this userdata mutably if it is of type `T`.","sig":null,"attributes":[{"value":"/ Borrow this userdata mutably if it is of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183269,"byte_end":183323,"line_start":329,"line_end":329,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183328,"byte_end":183331,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183336,"byte_end":183348,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183353,"byte_end":183356,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Returns a `UserDataBorrowMutError` if the userdata is already borrowed. Returns a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183361,"byte_end":183446,"line_start":333,"line_end":333,"column_start":5,"column_end":90}},{"value":"/ `UserDataTypeMismatch` if the userdata is not of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183451,"byte_end":183513,"line_start":334,"line_end":334,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184054,"byte_end":184068,"line_start":350,"line_end":350,"column_start":12,"column_end":26},"name":"set_user_value","qualname":"<AnyUserData>::set_user_value","value":"pub fn set_user_value<V: ToLua>(&Self, V) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets an associated value to this `AnyUserData`.","sig":null,"attributes":[{"value":"/ Sets an associated value to this `AnyUserData`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183757,"byte_end":183808,"line_start":343,"line_end":343,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183813,"byte_end":183816,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The value may be any Lua value whatsoever, and can be retrieved with [`AnyUserData::get_user_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183821,"byte_end":183926,"line_start":345,"line_end":345,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183931,"byte_end":183934,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Equivalent to set_i_user_value(v, 1)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183939,"byte_end":183979,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183984,"byte_end":183987,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`get_i_user_value`]: #method.get_i_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":183992,"byte_end":184042,"line_start":349,"line_end":349,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184394,"byte_end":184410,"line_start":359,"line_end":359,"column_start":12,"column_end":28},"name":"set_i_user_value","qualname":"<AnyUserData>::set_i_user_value","value":"pub fn set_i_user_value<V: ToLua>(&Self, V, c_int) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets an associated value to this `AnyUserData`.","sig":null,"attributes":[{"value":"/ Sets an associated value to this `AnyUserData`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184161,"byte_end":184212,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184217,"byte_end":184220,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The value may be any Lua value whatsoever, and can be retrieved with [`get_i_user_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184225,"byte_end":184319,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184324,"byte_end":184327,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`get_i_user_value`]: #method.get_i_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184332,"byte_end":184382,"line_start":358,"line_end":358,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185115,"byte_end":185129,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"get_user_value","qualname":"<AnyUserData>::get_user_value","value":"pub fn get_user_value<V: FromLua>(&Self) -> Result<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an associated value set by [`set_user_value`].","sig":null,"attributes":[{"value":"/ Returns an associated value set by [`set_user_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":184986,"byte_end":185044,"line_start":378,"line_end":378,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185049,"byte_end":185052,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`set_user_value`]: #method.set_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185057,"byte_end":185103,"line_start":380,"line_end":380,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185349,"byte_end":185365,"line_start":388,"line_end":388,"column_start":12,"column_end":28},"name":"get_i_user_value","qualname":"<AnyUserData>::get_i_user_value","value":"pub fn get_i_user_value<V: FromLua>(&Self, c_int) -> Result<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an associated value set by [`set_i_user_value`].","sig":null,"attributes":[{"value":"/ Returns an associated value set by [`set_i_user_value`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185214,"byte_end":185274,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185279,"byte_end":185282,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`set_i_user_value`]: #method.set_i_user_value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":185287,"byte_end":185337,"line_start":387,"line_end":387,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232759,"byte_end":232762,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Nil","qualname":"::value::Value::Nil","value":"Value::Nil","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" The Lua value `nil`.\n","sig":null,"attributes":[{"value":"/ The Lua value `nil`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232730,"byte_end":232754,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232809,"byte_end":232816,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" The Lua value `true` or `false`.\n","sig":null,"attributes":[{"value":"/ The Lua value `true` or `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232768,"byte_end":232804,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232892,"byte_end":232905,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"name":"LightUserData","qualname":"::value::Value::LightUserData","value":"Value::LightUserData(LightUserData)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" A \"light userdata\" object, equivalent to a raw pointer.\n","sig":null,"attributes":[{"value":"/ A \"light userdata\" object, equivalent to a raw pointer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232828,"byte_end":232887,"line_start":25,"line_end":25,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233112,"byte_end":233119,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(Integer)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" An integer number.","sig":null,"attributes":[{"value":"cfg(any(rlua_lua53, rlua_lua54))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232926,"byte_end":232961,"line_start":27,"line_end":27,"column_start":5,"column_end":40}},{"value":"/ An integer number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232966,"byte_end":232988,"line_start":28,"line_end":28,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232993,"byte_end":232996,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Any Lua number convertible to a `Integer` will be represented as this variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233001,"byte_end":233083,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ (Lua 5.3+ only)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233088,"byte_end":233107,"line_start":31,"line_end":31,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233167,"byte_end":233173,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Number","qualname":"::value::Value::Number","value":"Value::Number(Number)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" A floating point number.\n","sig":null,"attributes":[{"value":"/ A floating point number.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233134,"byte_end":233162,"line_start":33,"line_end":33,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233304,"byte_end":233310,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" An interned string, managed by Lua.","sig":null,"attributes":[{"value":"/ An interned string, managed by Lua.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233187,"byte_end":233226,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233231,"byte_end":233234,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Unlike Rust strings, Lua strings may not be valid UTF-8.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233239,"byte_end":233299,"line_start":37,"line_end":37,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233364,"byte_end":233369,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" Reference to a Lua table.\n","sig":null,"attributes":[{"value":"/ Reference to a Lua table.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233330,"byte_end":233359,"line_start":39,"line_end":39,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233438,"byte_end":233446,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Function","qualname":"::value::Value::Function","value":"Value::Function(Function)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" Reference to a Lua function (or closure).\n","sig":null,"attributes":[{"value":"/ Reference to a Lua function (or closure).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233388,"byte_end":233433,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233518,"byte_end":233524,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Thread","qualname":"::value::Value::Thread","value":"Value::Thread(Thread)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" Reference to a Lua thread (or coroutine).\n","sig":null,"attributes":[{"value":"/ Reference to a Lua thread (or coroutine).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233468,"byte_end":233513,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233723,"byte_end":233731,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"UserData","qualname":"::value::Value::UserData","value":"Value::UserData(AnyUserData)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" Reference to a userdata object that holds a custom type which implements `UserData`.\n Special builtin userdata types will be represented as other `Value` variants.\n","sig":null,"attributes":[{"value":"/ Reference to a userdata object that holds a custom type which implements `UserData`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233544,"byte_end":233632,"line_start":45,"line_end":45,"column_start":5,"column_end":93}},{"value":"/ Special builtin userdata types will be represented as other `Value` variants.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233637,"byte_end":233718,"line_start":46,"line_end":46,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233857,"byte_end":233862,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Error","qualname":"::value::Value::Error","value":"Value::Error(Error)","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" `Error` is a special builtin userdata type.  When received from Lua it is implicitly cloned.\n","sig":null,"attributes":[{"value":"/ `Error` is a special builtin userdata type.  When received from Lua it is implicitly cloned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233756,"byte_end":233852,"line_start":48,"line_end":48,"column_start":5,"column_end":101}}]},{"kind":"Enum","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232712,"byte_end":232717,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value<'lua> {\n    Nil,\n    Boolean(bool),\n    LightUserData(LightUserData),\n    Integer(Integer),\n    Number(Number),\n    String(String),\n    Table(Table),\n    Function(Function),\n    Thread(Thread),\n    UserData(AnyUserData),\n    Error(Error),\n}","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3248}],"decl_id":null,"docs":" A dynamically typed Lua value.  The `String`, `Table`, `Function`, `Thread`, and `UserData`\n variants contain handle types into the internal Lua state.  It is a logic error to mix handle\n types between separate `Lua` instances, or between a parent `Lua` instance and one received as a\n parameter in a Rust callback, and doing so will result in a panic.\n","sig":null,"attributes":[{"value":"/ A dynamically typed Lua value.  The `String`, `Table`, `Function`, `Thread`, and `UserData`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232313,"byte_end":232408,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ variants contain handle types into the internal Lua state.  It is a logic error to mix handle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232409,"byte_end":232506,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ types between separate `Lua` instances, or between a parent `Lua` instance and one received as a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232507,"byte_end":232607,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ parameter in a Rust callback, and doing so will result in a panic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":232608,"byte_end":232678,"line_start":18,"line_end":18,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233936,"byte_end":233945,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"type_name","qualname":"<Value>::type_name","value":"pub fn type_name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234589,"byte_end":234594,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"ToLua","qualname":"::value::ToLua","value":"ToLua<'lua>","parent":null,"children":[{"krate":0,"index":1908}],"decl_id":null,"docs":" Trait for types convertible to `Value`.\n","sig":null,"attributes":[{"value":"/ Trait for types convertible to `Value`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234535,"byte_end":234578,"line_start":72,"line_end":72,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234643,"byte_end":234649,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"to_lua","qualname":"::value::ToLua::to_lua","value":"pub fn to_lua(Self, Context) -> Result<Value>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234607,"byte_end":234635,"line_start":74,"line_end":74,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234759,"byte_end":234766,"line_start":79,"line_end":79,"column_start":11,"column_end":18},"name":"FromLua","qualname":"::value::FromLua","value":"FromLua<'lua>: Sized","parent":null,"children":[{"krate":0,"index":1911}],"decl_id":null,"docs":" Trait for types convertible from `Value`.\n","sig":null,"attributes":[{"value":"/ Trait for types convertible from `Value`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234703,"byte_end":234748,"line_start":78,"line_end":78,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234822,"byte_end":234830,"line_start":81,"line_end":81,"column_start":8,"column_end":16},"name":"from_lua","qualname":"::value::FromLua::from_lua","value":"pub fn from_lua(Value, Context) -> Result<Self>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234786,"byte_end":234814,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235022,"byte_end":235032,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"MultiValue","qualname":"::value::MultiValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multiple Lua values used for both argument passing and also for multiple return values.\n","sig":null,"attributes":[{"value":"/ Multiple Lua values used for both argument passing and also for multiple return values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234895,"byte_end":234986,"line_start":84,"line_end":84,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235160,"byte_end":235163,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiValue>::new","value":"pub fn new() -> MultiValue","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `MultiValue` containing no values.\n","sig":null,"attributes":[{"value":"/ Creates an empty `MultiValue` containing no values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235093,"byte_end":235148,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236037,"byte_end":236045,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<MultiValue>::from_vec","value":"pub fn from_vec(Vec<Value>) -> MultiValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236154,"byte_end":236162,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MultiValue>::into_vec","value":"pub fn into_vec(Self) -> Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236546,"byte_end":236549,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"len","qualname":"<MultiValue>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236607,"byte_end":236615,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MultiValue>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236677,"byte_end":236681,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"iter","qualname":"<MultiValue>::iter","value":"pub fn iter(&Self) -> iter::Rev<slice::Iter<, Value>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237026,"byte_end":237036,"line_start":166,"line_end":166,"column_start":11,"column_end":21},"name":"ToLuaMulti","qualname":"::value::ToLuaMulti","value":"ToLuaMulti<'lua>","parent":null,"children":[{"krate":0,"index":1945}],"decl_id":null,"docs":" Trait for types convertible to any number of Lua values.","sig":null,"attributes":[{"value":"/ Trait for types convertible to any number of Lua values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236767,"byte_end":236827,"line_start":162,"line_end":162,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236828,"byte_end":236831,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This is a generalization of `ToLua`, allowing any number of resulting Lua values instead of just","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236832,"byte_end":236932,"line_start":164,"line_end":164,"column_start":1,"column_end":101}},{"value":"/ one. Any type that implements `ToLua` will automatically implement this trait.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236933,"byte_end":237015,"line_start":165,"line_end":165,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237085,"byte_end":237097,"line_start":168,"line_end":168,"column_start":8,"column_end":20},"name":"to_lua_multi","qualname":"::value::ToLuaMulti::to_lua_multi","value":"pub fn to_lua_multi(Self, Context) -> Result<MultiValue>","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":" Performs the conversion.\n","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237049,"byte_end":237077,"line_start":167,"line_end":167,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237450,"byte_end":237462,"line_start":175,"line_end":175,"column_start":11,"column_end":23},"name":"FromLuaMulti","qualname":"::value::FromLuaMulti","value":"FromLuaMulti<'lua>: Sized","parent":null,"children":[{"krate":0,"index":1948}],"decl_id":null,"docs":" Trait for types that can be created from an arbitrary number of Lua values.","sig":null,"attributes":[{"value":"/ Trait for types that can be created from an arbitrary number of Lua values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237156,"byte_end":237235,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237236,"byte_end":237239,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This is a generalization of `FromLua`, allowing an arbitrary number of Lua values to participate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237240,"byte_end":237340,"line_start":173,"line_end":173,"column_start":1,"column_end":101}},{"value":"/ in the conversion. Any type that implements `FromLua` will automatically implement this trait.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237341,"byte_end":237439,"line_start":174,"line_end":174,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237854,"byte_end":237868,"line_start":182,"line_end":182,"column_start":8,"column_end":22},"name":"from_lua_multi","qualname":"::value::FromLuaMulti::from_lua_multi","value":"pub fn from_lua_multi(MultiValue, Context) -> Result<Self>","parent":{"krate":0,"index":1946},"children":[],"decl_id":null,"docs":" Performs the conversion.","sig":null,"attributes":[{"value":"/ Performs the conversion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237482,"byte_end":237510,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237515,"byte_end":237518,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ In case `values` contains more values than needed to perform the conversion, the excess","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237523,"byte_end":237614,"line_start":178,"line_end":178,"column_start":5,"column_end":96}},{"value":"/ values should be ignored. This reflects the semantics of Lua when calling a function or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237619,"byte_end":237710,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ assigning values. Similarly, if not enough values are given, conversions should assume that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237715,"byte_end":237810,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ any missing values are nil.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237815,"byte_end":237846,"line_start":181,"line_end":181,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176}],"decl_id":null,"docs":" Re-exports most types with an extra `Lua*` prefix to prevent name clashes.\n","sig":null,"attributes":[{"value":"/ Re-exports most types with an extra `Lua*` prefix to prevent name clashes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\prelude.rs","byte_start":237935,"byte_end":238013,"line_start":1,"line_end":1,"column_start":1,"column_end":79}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5896,"byte_end":5903,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38385,"byte_end":38390,"line_start":917,"line_end":917,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":43054,"byte_end":43075,"line_start":1030,"line_end":1030,"column_start":47,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":43357,"byte_end":43378,"line_start":1040,"line_end":1040,"column_start":64,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":46007,"byte_end":46028,"line_start":1123,"line_end":1123,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49171,"byte_end":49176,"line_start":20,"line_end":20,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49303,"byte_end":49308,"line_start":26,"line_end":26,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49451,"byte_end":49457,"line_start":32,"line_end":32,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49599,"byte_end":49605,"line_start":38,"line_end":38,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50004,"byte_end":50009,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50150,"byte_end":50155,"line_start":56,"line_end":56,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50527,"byte_end":50535,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50679,"byte_end":50687,"line_start":75,"line_end":75,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51068,"byte_end":51074,"line_start":88,"line_end":88,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51216,"byte_end":51222,"line_start":94,"line_end":94,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51589,"byte_end":51600,"line_start":107,"line_end":107,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51744,"byte_end":51755,"line_start":113,"line_end":113,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52163,"byte_end":52164,"line_start":126,"line_end":126,"column_start":58,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52357,"byte_end":52358,"line_start":132,"line_end":132,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52737,"byte_end":52742,"line_start":145,"line_end":145,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52877,"byte_end":52882,"line_start":151,"line_end":151,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":53690,"byte_end":53703,"line_start":180,"line_end":180,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":53846,"byte_end":53859,"line_start":186,"line_end":186,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":54223,"byte_end":54232,"line_start":199,"line_end":199,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":54391,"byte_end":54400,"line_start":205,"line_end":205,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":55017,"byte_end":55024,"line_start":226,"line_end":226,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":55193,"byte_end":55200,"line_start":232,"line_end":232,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":56113,"byte_end":56120,"line_start":260,"line_end":260,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":56279,"byte_end":56286,"line_start":266,"line_end":266,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":62566,"byte_end":62569,"line_start":437,"line_end":437,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":62754,"byte_end":62757,"line_start":443,"line_end":443,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63245,"byte_end":63252,"line_start":458,"line_end":458,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63500,"byte_end":63507,"line_start":466,"line_end":466,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63969,"byte_end":63977,"line_start":481,"line_end":481,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64186,"byte_end":64194,"line_start":487,"line_end":487,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64632,"byte_end":64638,"line_start":501,"line_end":501,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64867,"byte_end":64873,"line_start":510,"line_end":510,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70948,"byte_end":70953,"line_start":133,"line_end":133,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73567,"byte_end":73572,"line_start":195,"line_end":195,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73839,"byte_end":73844,"line_start":205,"line_end":205,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74074,"byte_end":74075,"line_start":215,"line_end":215,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74308,"byte_end":74317,"line_start":228,"line_end":228,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74898,"byte_end":74906,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82311,"byte_end":82316,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85936,"byte_end":85948,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89971,"byte_end":89974,"line_start":92,"line_end":92,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89993,"byte_end":89996,"line_start":94,"line_end":94,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90542,"byte_end":90545,"line_start":110,"line_end":110,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":104215,"byte_end":104218,"line_start":450,"line_end":450,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119079,"byte_end":119088,"line_start":11,"line_end":11,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119511,"byte_end":119512,"line_start":27,"line_end":27,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119746,"byte_end":119747,"line_start":35,"line_end":35,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119946,"byte_end":119956,"line_start":41,"line_end":41,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120099,"byte_end":120109,"line_start":47,"line_end":47,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121240,"byte_end":121248,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121412,"byte_end":121420,"line_start":90,"line_end":90,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121521,"byte_end":121529,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121671,"byte_end":121679,"line_start":102,"line_end":102,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121858,"byte_end":121866,"line_start":111,"line_end":111,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121984,"byte_end":121992,"line_start":119,"line_end":119,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":122126,"byte_end":122134,"line_start":125,"line_end":125,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":122337,"byte_end":122345,"line_start":131,"line_end":131,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126118,"byte_end":126123,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1142},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":140239,"byte_end":140244,"line_start":334,"line_end":334,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":141445,"byte_end":141469,"line_start":364,"line_end":364,"column_start":37,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":141715,"byte_end":141739,"line_start":373,"line_end":373,"column_start":54,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1212},{"krate":0,"index":1218},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":1235},{"krate":0,"index":1240},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145918,"byte_end":145924,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148311,"byte_end":148317,"line_start":89,"line_end":89,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148849,"byte_end":148855,"line_start":103,"line_end":103,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148997,"byte_end":149003,"line_start":112,"line_end":112,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":149034,"byte_end":149040,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149567,"byte_end":149572,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1361},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":160126,"byte_end":160136,"line_start":347,"line_end":347,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161978,"byte_end":161991,"line_start":409,"line_end":409,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164010,"byte_end":164016,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170801,"byte_end":170812,"line_start":54,"line_end":54,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170952,"byte_end":170963,"line_start":60,"line_end":60,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171155,"byte_end":171166,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171571,"byte_end":171577,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171716,"byte_end":171722,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171823,"byte_end":171829,"line_start":97,"line_end":97,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173885,"byte_end":173895,"line_start":73,"line_end":73,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182519,"byte_end":182530,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\util.rs","byte_start":188432,"byte_end":188442,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\util.rs","byte_start":188910,"byte_end":188920,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233911,"byte_end":233916,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235070,"byte_end":235080,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235251,"byte_end":235261,"line_start":95,"line_end":95,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235385,"byte_end":235395,"line_start":101,"line_end":101,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235565,"byte_end":235575,"line_start":107,"line_end":107,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236007,"byte_end":236017,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lib.rs","byte_start":2913,"byte_end":2920,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2072}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":5896,"byte_end":5903,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":38385,"byte_end":38390,"line_start":917,"line_end":917,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":43054,"byte_end":43075,"line_start":1030,"line_end":1030,"column_start":47,"column_end":68},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":43357,"byte_end":43378,"line_start":1040,"line_end":1040,"column_start":64,"column_end":85},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":310},"to":{"krate":0,"index":1593}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\context.rs","byte_start":46007,"byte_end":46028,"line_start":1123,"line_end":1123,"column_start":35,"column_end":56},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49171,"byte_end":49176,"line_start":20,"line_end":20,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3217},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49303,"byte_end":49308,"line_start":26,"line_end":26,"column_start":30,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3217},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49451,"byte_end":49457,"line_start":32,"line_end":32,"column_start":28,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3081},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":49599,"byte_end":49605,"line_start":38,"line_end":38,"column_start":30,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3081},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50004,"byte_end":50009,"line_start":50,"line_end":50,"column_start":28,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3091},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50150,"byte_end":50155,"line_start":56,"line_end":56,"column_start":30,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3091},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50527,"byte_end":50535,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2364},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":50679,"byte_end":50687,"line_start":75,"line_end":75,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2364},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51068,"byte_end":51074,"line_start":88,"line_end":88,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3119},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51216,"byte_end":51222,"line_start":94,"line_end":94,"column_start":30,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3119},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51589,"byte_end":51600,"line_start":107,"line_end":107,"column_start":28,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3207},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":51744,"byte_end":51755,"line_start":113,"line_end":113,"column_start":30,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3207},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52163,"byte_end":52164,"line_start":126,"line_end":126,"column_start":58,"column_end":59},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52357,"byte_end":52358,"line_start":132,"line_end":132,"column_start":61,"column_end":62},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":514},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52737,"byte_end":52742,"line_start":145,"line_end":145,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2318},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":52877,"byte_end":52882,"line_start":151,"line_end":151,"column_start":30,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2318},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":53690,"byte_end":53703,"line_start":180,"line_end":180,"column_start":28,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3129},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":53846,"byte_end":53859,"line_start":186,"line_end":186,"column_start":30,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3129},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":54223,"byte_end":54232,"line_start":199,"line_end":199,"column_start":28,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":54391,"byte_end":54400,"line_start":205,"line_end":205,"column_start":30,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":55017,"byte_end":55024,"line_start":226,"line_end":226,"column_start":28,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":9951},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":55193,"byte_end":55200,"line_start":232,"line_end":232,"column_start":30,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":9951},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":56113,"byte_end":56120,"line_start":260,"line_end":260,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":17,"index":950},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":56279,"byte_end":56286,"line_start":266,"line_end":266,"column_start":30,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":17,"index":950},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":62566,"byte_end":62569,"line_start":437,"line_end":437,"column_start":44,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":62754,"byte_end":62757,"line_start":443,"line_end":443,"column_start":48,"column_end":51},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63245,"byte_end":63252,"line_start":458,"line_end":458,"column_start":9,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63500,"byte_end":63507,"line_start":466,"line_end":466,"column_start":9,"column_end":16},"kind":{"Impl":{"id":62}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":63969,"byte_end":63977,"line_start":481,"line_end":481,"column_start":66,"column_end":74},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64186,"byte_end":64194,"line_start":487,"line_end":487,"column_start":72,"column_end":80},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64632,"byte_end":64638,"line_start":501,"line_end":501,"column_start":44,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":1906}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\conversion.rs","byte_start":64867,"byte_end":64873,"line_start":510,"line_end":510,"column_start":48,"column_end":54},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":70948,"byte_end":70953,"line_start":133,"line_end":133,"column_start":23,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2318},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73567,"byte_end":73572,"line_start":195,"line_end":195,"column_start":19,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2318},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":73839,"byte_end":73844,"line_start":205,"line_end":205,"column_start":6,"column_end":11},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74074,"byte_end":74075,"line_start":215,"line_end":215,"column_start":27,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":647}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\error.rs","byte_start":74308,"byte_end":74317,"line_start":228,"line_end":228,"column_start":34,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":652}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\function.rs","byte_start":74898,"byte_end":74906,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":82311,"byte_end":82316,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\hook.rs","byte_start":85936,"byte_end":85948,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89971,"byte_end":89974,"line_start":92,"line_end":92,"column_start":22,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2678},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":89993,"byte_end":89996,"line_start":94,"line_end":94,"column_start":15,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2678},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":90542,"byte_end":90545,"line_start":110,"line_end":110,"column_start":6,"column_end":9},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\lua.rs","byte_start":104215,"byte_end":104218,"line_start":450,"line_end":450,"column_start":18,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2678},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119079,"byte_end":119088,"line_start":11,"line_end":11,"column_start":65,"column_end":74},"kind":{"Impl":{"id":79}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":1943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119511,"byte_end":119512,"line_start":27,"line_end":27,"column_start":49,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":987},"to":{"krate":0,"index":1943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119746,"byte_end":119747,"line_start":35,"line_end":35,"column_start":53,"column_end":54},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":991},"to":{"krate":0,"index":1946}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":119946,"byte_end":119956,"line_start":41,"line_end":41,"column_start":33,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3257},"to":{"krate":0,"index":1943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":120099,"byte_end":120109,"line_start":47,"line_end":47,"column_start":35,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3257},"to":{"krate":0,"index":1946}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121240,"byte_end":121248,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121412,"byte_end":121420,"line_start":90,"line_end":90,"column_start":21,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121521,"byte_end":121529,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121671,"byte_end":121679,"line_start":102,"line_end":102,"column_start":26,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121858,"byte_end":121866,"line_start":111,"line_end":111,"column_start":19,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":121984,"byte_end":121992,"line_start":119,"line_end":119,"column_start":22,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":122126,"byte_end":122134,"line_start":125,"line_end":125,"column_start":49,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2687},"to":{"krate":0,"index":1943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\multi.rs","byte_start":122337,"byte_end":122345,"line_start":131,"line_end":131,"column_start":53,"column_end":61},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2687},"to":{"krate":0,"index":1946}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":126118,"byte_end":126123,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":140239,"byte_end":140244,"line_start":334,"line_end":334,"column_start":29,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3071},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":141445,"byte_end":141469,"line_start":364,"line_end":364,"column_start":37,"column_end":61},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\scope.rs","byte_start":141715,"byte_end":141739,"line_start":373,"line_end":373,"column_start":54,"column_end":78},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1194},"to":{"krate":0,"index":1593}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":145918,"byte_end":145924,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148311,"byte_end":148317,"line_start":89,"line_end":89,"column_start":28,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":2954}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148849,"byte_end":148855,"line_start":103,"line_end":103,"column_start":32,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":148997,"byte_end":149003,"line_start":112,"line_end":112,"column_start":19,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\string.rs","byte_start":149034,"byte_end":149040,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":9892}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":149567,"byte_end":149572,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":160126,"byte_end":160136,"line_start":347,"line_end":347,"column_start":31,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1385},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\table.rs","byte_start":161978,"byte_end":161991,"line_start":409,"line_end":409,"column_start":28,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\thread.rs","byte_start":164010,"byte_end":164016,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170801,"byte_end":170812,"line_start":54,"line_end":54,"column_start":21,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":170952,"byte_end":170963,"line_start":60,"line_end":60,"column_start":15,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171155,"byte_end":171166,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171571,"byte_end":171577,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171716,"byte_end":171722,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\types.rs","byte_start":171823,"byte_end":171829,"line_start":97,"line_end":97,"column_start":21,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":173885,"byte_end":173895,"line_start":73,"line_end":73,"column_start":6,"column_end":16},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":181476,"byte_end":181481,"line_start":279,"line_end":279,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1632}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\userdata.rs","byte_start":182519,"byte_end":182530,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\util.rs","byte_start":188432,"byte_end":188442,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\util.rs","byte_start":188910,"byte_end":188920,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1718},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":233911,"byte_end":233916,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":234774,"byte_end":234779,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1909}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235070,"byte_end":235080,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235251,"byte_end":235261,"line_start":95,"line_end":95,"column_start":24,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235385,"byte_end":235395,"line_start":101,"line_end":101,"column_start":42,"column_end":52},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":7786}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":235565,"byte_end":235575,"line_start":107,"line_end":107,"column_start":29,"column_end":39},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":236007,"byte_end":236017,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rlua-0.19.2\\src\\value.rs","byte_start":237470,"byte_end":237475,"line_start":175,"line_end":175,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1946}}]}