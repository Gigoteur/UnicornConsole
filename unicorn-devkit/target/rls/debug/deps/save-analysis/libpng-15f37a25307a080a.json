{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","png","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=15f37a25307a080a","-C","extra-filename=-15f37a25307a080a","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--extern","bitflags=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libbitflags-185035745ee30f8b.rmeta","--extern","crc32fast=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libcrc32fast-11c6a03e50d91402.rmeta","--extern","deflate=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libdeflate-a61a0bf846bc8aca.rmeta","--extern","miniz_oxide=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libminiz_oxide-c9e24721d1fe6be0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libpng-15f37a25307a080a.rmeta"},"prelude":{"crate_id":{"name":"png","disambiguator":[10172609251210395407,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","num":16,"id":{"name":"bitflags","disambiguator":[12784266730172947800,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","num":17,"id":{"name":"crc32fast","disambiguator":[18099511047436909692,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","num":18,"id":{"name":"cfg_if","disambiguator":[10957320824083538926,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","num":19,"id":{"name":"miniz_oxide","disambiguator":[4530293038941873756,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","num":20,"id":{"name":"adler","disambiguator":[9280317352830166534,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","num":21,"id":{"name":"deflate","disambiguator":[17097841196527613731,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","num":22,"id":{"name":"adler32","disambiguator":[9489779933095753068,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":0,"byte_end":2983,"line_start":1,"line_end":82,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33205,"byte_end":33212,"line_start":5,"line_end":5,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33214,"byte_end":33227,"line_start":5,"line_end":5,"column_start":33,"column_end":46},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33229,"byte_end":33245,"line_start":5,"line_end":5,"column_start":48,"column_end":64},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":158}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2777,"byte_end":2778,"line_start":78,"line_end":78,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"ScaledFloat, SourceChromaticities, SrgbRenderingIntent","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2794,"byte_end":2801,"line_start":79,"line_end":79,"column_start":15,"column_end":22},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2803,"byte_end":2810,"line_start":79,"line_end":79,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2812,"byte_end":2825,"line_start":79,"line_end":79,"column_start":33,"column_end":46},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2827,"byte_end":2833,"line_start":79,"line_end":79,"column_start":48,"column_end":54},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2835,"byte_end":2845,"line_start":79,"line_end":79,"column_start":56,"column_end":66},"alias_span":null,"name":"OutputInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2847,"byte_end":2853,"line_start":79,"line_end":79,"column_start":68,"column_end":74},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2855,"byte_end":2871,"line_start":79,"line_end":79,"column_start":76,"column_end":92},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2888,"byte_end":2895,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2897,"byte_end":2910,"line_start":80,"line_end":80,"column_start":24,"column_end":37},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2912,"byte_end":2924,"line_start":80,"line_end":80,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2926,"byte_end":2932,"line_start":80,"line_end":80,"column_start":53,"column_end":59},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2948,"byte_end":2966,"line_start":81,"line_end":81,"column_start":14,"column_end":32},"alias_span":null,"name":"AdaptiveFilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2968,"byte_end":2978,"line_start":81,"line_end":81,"column_start":34,"column_end":44},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":0,"byte_end":2983,"line_start":1,"line_end":82,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":38},{"krate":0,"index":158},{"krate":0,"index":549},{"krate":0,"index":881},{"krate":0,"index":902},{"krate":0,"index":912},{"krate":0,"index":1007},{"krate":0,"index":1019},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1088}],"decl_id":null,"docs":" # PNG encoder and decoder","sig":null,"attributes":[{"value":"/ # PNG encoder and decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains a PNG encoder and decoder. It supports reading of single lines or whole frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":34,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":138,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## The decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":142,"byte_end":160,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":161,"byte_end":164,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The most important types for decoding purposes are [`Decoder`](struct.Decoder.html) and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":165,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ [`Reader`](struct.Reader.html). They both wrap a `std::io::Read`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":257,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":327,"byte_end":435,"line_start":9,"line_end":9,"column_start":1,"column_end":109}},{"value":"/ image data is reached.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":436,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":463,"byte_end":466,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ### Using the decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":467,"byte_end":492,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":493,"byte_end":500,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":501,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ // The decoder is a build for reader and can be used to set various decoding options","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":524,"byte_end":612,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"/ // via `Transformations`. The default output transformation is `Transformations::IDENTITY`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":613,"byte_end":708,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ let decoder = png::Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":709,"byte_end":797,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ let mut reader = decoder.read_info().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":798,"byte_end":848,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ // Allocate the output buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":849,"byte_end":883,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ let mut buf = vec![0; reader.output_buffer_size()];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":884,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ // Read the next frame. An APNG might contain multiple frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":940,"byte_end":1006,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ let info = reader.next_frame(&mut buf).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1007,"byte_end":1059,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ // Grab the bytes of the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1060,"byte_end":1095,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ let bytes = &buf[..info.buffer_size()];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1096,"byte_end":1139,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ // Inspect more details of the last read frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1140,"byte_end":1191,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/ let in_animation = reader.info().frame_control.is_some();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1192,"byte_end":1253,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1254,"byte_end":1261,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1262,"byte_end":1265,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1266,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ ### Using the encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1281,"byte_end":1306,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1307,"byte_end":1310,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1311,"byte_end":1324,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ // For reading and opening files","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1325,"byte_end":1361,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1362,"byte_end":1386,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1387,"byte_end":1409,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufWriter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1410,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1438,"byte_end":1441,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(r\"/path/to/image.png\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1442,"byte_end":1490,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/ let file = File::create(path).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1491,"byte_end":1534,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ let ref mut w = BufWriter::new(file);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1535,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1577,"byte_end":1580,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1581,"byte_end":1668,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1669,"byte_end":1713,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/ encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1714,"byte_end":1758,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/ encoder.set_trns(vec!(0xFFu8, 0xFFu8, 0xFFu8, 0xFFu8));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1759,"byte_end":1818,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::from_scaled(45455)); // 1.0 / 2.2, scaled by 100000","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1819,"byte_end":1917,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ encoder.set_source_gamma(png::ScaledFloat::new(1.0 / 2.2));     // 1.0 / 2.2, unscaled, but rounded","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":1918,"byte_end":2021,"line_start":47,"line_end":47,"column_start":1,"column_end":104}},{"value":"/ let source_chromaticities = png::SourceChromaticities::new(     // Using unscaled instantiation here","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2022,"byte_end":2126,"line_start":48,"line_end":48,"column_start":1,"column_end":105}},{"value":"/     (0.31270, 0.32900),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2127,"byte_end":2154,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/     (0.64000, 0.33000),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2155,"byte_end":2182,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/     (0.30000, 0.60000),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2183,"byte_end":2210,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     (0.15000, 0.06000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2211,"byte_end":2237,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2238,"byte_end":2244,"line_start":53,"line_end":53,"column_start":1,"column_end":7}},{"value":"/ encoder.set_source_chromaticities(source_chromaticities);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2245,"byte_end":2306,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ let mut writer = encoder.write_header().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2307,"byte_end":2360,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2361,"byte_end":2364,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2365,"byte_end":2497,"line_start":57,"line_end":57,"column_start":1,"column_end":133}},{"value":"/ writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2498,"byte_end":2550,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2551,"byte_end":2558,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2559,"byte_end":2562,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2564,"byte_end":2587,"line_start":62,"line_end":62,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chunk","qualname":"::chunk","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Chunk types and functions\n","sig":null,"attributes":[{"value":"/ Chunk types and functions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":2985,"byte_end":3014,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3015,"byte_end":3035,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3036,"byte_end":3069,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3141,"byte_end":3150,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"ChunkType","qualname":"::chunk::ChunkType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3151,"byte_end":3162,"line_start":7,"line_end":7,"column_start":22,"column_end":33},"name":"0","qualname":"::chunk::ChunkType::0","value":"[u8; 4]","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3219,"byte_end":3223,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"IHDR","qualname":"::chunk::IHDR","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image header\n","sig":null,"attributes":[{"value":"/ Image header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3192,"byte_end":3208,"line_start":11,"line_end":11,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3280,"byte_end":3284,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"PLTE","qualname":"::chunk::PLTE","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Palette\n","sig":null,"attributes":[{"value":"/ Palette","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3258,"byte_end":3269,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3344,"byte_end":3348,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"IDAT","qualname":"::chunk::IDAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image data\n","sig":null,"attributes":[{"value":"/ Image data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3319,"byte_end":3333,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3411,"byte_end":3415,"line_start":18,"line_end":18,"column_start":11,"column_end":15},"name":"IEND","qualname":"::chunk::IEND","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image trailer\n","sig":null,"attributes":[{"value":"/ Image trailer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3383,"byte_end":3400,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3505,"byte_end":3509,"line_start":23,"line_end":23,"column_start":11,"column_end":15},"name":"tRNS","qualname":"::chunk::tRNS","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Transparency\n","sig":null,"attributes":[{"value":"/ Transparency","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3478,"byte_end":3494,"line_start":22,"line_end":22,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3576,"byte_end":3580,"line_start":25,"line_end":25,"column_start":11,"column_end":15},"name":"bKGD","qualname":"::chunk::bKGD","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Background colour\n","sig":null,"attributes":[{"value":"/ Background colour","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3544,"byte_end":3565,"line_start":24,"line_end":24,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3658,"byte_end":3662,"line_start":27,"line_end":27,"column_start":11,"column_end":15},"name":"tIME","qualname":"::chunk::tIME","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Image last-modification time\n","sig":null,"attributes":[{"value":"/ Image last-modification time","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3615,"byte_end":3647,"line_start":26,"line_end":26,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3737,"byte_end":3741,"line_start":29,"line_end":29,"column_start":11,"column_end":15},"name":"pHYs","qualname":"::chunk::pHYs","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Physical pixel dimensions\n","sig":null,"attributes":[{"value":"/ Physical pixel dimensions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3697,"byte_end":3726,"line_start":28,"line_end":28,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3827,"byte_end":3831,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"name":"cHRM","qualname":"::chunk::cHRM","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's pixel chromaticities\n","sig":null,"attributes":[{"value":"/ Source system's pixel chromaticities","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3776,"byte_end":3816,"line_start":30,"line_end":30,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3908,"byte_end":3912,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"name":"gAMA","qualname":"::chunk::gAMA","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Source system's gamma value\n","sig":null,"attributes":[{"value":"/ Source system's gamma value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3866,"byte_end":3897,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3984,"byte_end":3988,"line_start":35,"line_end":35,"column_start":11,"column_end":15},"name":"sRGB","qualname":"::chunk::sRGB","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" sRGB color space chunk\n","sig":null,"attributes":[{"value":"/ sRGB color space chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":3947,"byte_end":3973,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4055,"byte_end":4059,"line_start":37,"line_end":37,"column_start":11,"column_end":15},"name":"iCCP","qualname":"::chunk::iCCP","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" ICC profile chunk\n","sig":null,"attributes":[{"value":"/ ICC profile chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4023,"byte_end":4044,"line_start":36,"line_end":36,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4142,"byte_end":4146,"line_start":39,"line_end":39,"column_start":11,"column_end":15},"name":"tEXt","qualname":"::chunk::tEXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 uncompressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 uncompressed textual data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4094,"byte_end":4131,"line_start":38,"line_end":38,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4227,"byte_end":4231,"line_start":41,"line_end":41,"column_start":11,"column_end":15},"name":"zTXt","qualname":"::chunk::zTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Latin-1 compressed textual data\n","sig":null,"attributes":[{"value":"/ Latin-1 compressed textual data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4181,"byte_end":4216,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4299,"byte_end":4303,"line_start":43,"line_end":43,"column_start":11,"column_end":15},"name":"iTXt","qualname":"::chunk::iTXt","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 textual data\n","sig":null,"attributes":[{"value":"/ UTF-8 textual data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4266,"byte_end":4288,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4398,"byte_end":4402,"line_start":48,"line_end":48,"column_start":11,"column_end":15},"name":"acTL","qualname":"::chunk::acTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Animation control\n","sig":null,"attributes":[{"value":"/ Animation control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4366,"byte_end":4387,"line_start":47,"line_end":47,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4465,"byte_end":4469,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"fcTL","qualname":"::chunk::fcTL","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame control\n","sig":null,"attributes":[{"value":"/ Frame control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4437,"byte_end":4454,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4529,"byte_end":4533,"line_start":52,"line_end":52,"column_start":11,"column_end":15},"name":"fdAT","qualname":"::chunk::fdAT","value":"ChunkType","parent":null,"children":[],"decl_id":null,"docs":" Frame data\n","sig":null,"attributes":[{"value":"/ Frame data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4504,"byte_end":4518,"line_start":51,"line_end":51,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4654,"byte_end":4665,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"is_critical","qualname":"::chunk::is_critical","value":"pub fn is_critical(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is critical.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is critical.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4604,"byte_end":4646,"line_start":56,"line_end":56,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4780,"byte_end":4790,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"is_private","qualname":"::chunk::is_private","value":"pub fn is_private(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is private.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is private.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4731,"byte_end":4772,"line_start":61,"line_end":61,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4969,"byte_end":4981,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"reserved_set","qualname":"::chunk::reserved_set","value":"pub fn reserved_set(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the reserved bit of the chunk name is set.\n If it is set the chunk name is invalid.\n","sig":null,"attributes":[{"value":"/ Checks whether the reserved bit of the chunk name is set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4856,"byte_end":4917,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ If it is set the chunk name is invalid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":4918,"byte_end":4961,"line_start":67,"line_end":67,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5112,"byte_end":5124,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"safe_to_copy","qualname":"::chunk::safe_to_copy","value":"pub fn safe_to_copy(ChunkType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the chunk is safe to copy if unknown.\n","sig":null,"attributes":[{"value":"/ Returns true if the chunk is safe to copy if unknown.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5047,"byte_end":5104,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6301,"byte_end":6310,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::common::ColorType::Grayscale","value":"ColorType::Grayscale","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 grayscale sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6273,"byte_end":6296,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6373,"byte_end":6376,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::common::ColorType::Rgb","value":"ColorType::Rgb","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6320,"byte_end":6368,"line_start":13,"line_end":13,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6426,"byte_end":6433,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::common::ColorType::Indexed","value":"ColorType::Indexed","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 sample for the palette index.\n","sig":null,"attributes":[{"value":"/ 1 sample for the palette index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6386,"byte_end":6421,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6492,"byte_end":6506,"line_start":18,"line_end":18,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::common::ColorType::GrayscaleAlpha","value":"ColorType::GrayscaleAlpha","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 grayscale sample, then 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 grayscale sample, then 1 alpha sample.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6443,"byte_end":6487,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6598,"byte_end":6602,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::common::ColorType::Rgba","value":"ColorType::Rgba","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.\n","sig":null,"attributes":[{"value":"/ 1 red sample, 1 green sample, 1 blue sample, and finally, 1 alpha sample.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6516,"byte_end":6593,"line_start":19,"line_end":19,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1110},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6257,"byte_end":6266,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::common::ColorType","value":"pub enum ColorType {\n    Grayscale = ,\n    Rgb = ,\n    Indexed = ,\n    GrayscaleAlpha = ,\n    Rgba = ,\n}","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123}],"decl_id":null,"docs":" Describes how a pixel is encoded.\n","sig":null,"attributes":[{"value":"/ Describes how a pixel is encoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6153,"byte_end":6190,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6236,"byte_end":6247,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6713,"byte_end":6720,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"samples","qualname":"<ColorType>::samples","value":"pub fn samples(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of samples used per pixel encoded in this way.\n","sig":null,"attributes":[{"value":"/ Returns the number of samples used per pixel encoded in this way.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6632,"byte_end":6701,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":7094,"byte_end":7101,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<ColorType>::from_u8","value":"pub fn from_u8(u8) -> Option<ColorType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":7011,"byte_end":7082,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8946,"byte_end":8949,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"One","qualname":"::common::BitDepth::One","value":"BitDepth::One","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8959,"byte_end":8962,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"name":"Two","qualname":"::common::BitDepth::Two","value":"BitDepth::Two","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8972,"byte_end":8976,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Four","qualname":"::common::BitDepth::Four","value":"BitDepth::Four","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8986,"byte_end":8991,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Eight","qualname":"::common::BitDepth::Eight","value":"BitDepth::Eight","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9001,"byte_end":9008,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"Sixteen","qualname":"::common::BitDepth::Sixteen","value":"BitDepth::Sixteen","parent":{"krate":0,"index":1137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8931,"byte_end":8939,"line_start":86,"line_end":86,"column_start":10,"column_end":18},"name":"BitDepth","qualname":"::common::BitDepth","value":"pub enum BitDepth { One = , Two = , Four = , Eight = , Sixteen = , }","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150}],"decl_id":null,"docs":" Bit depth of the PNG file.\n Specifies the number of bits per sample.\n","sig":null,"attributes":[{"value":"/ Bit depth of the PNG file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8789,"byte_end":8819,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ Specifies the number of bits per sample.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8820,"byte_end":8864,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":8910,"byte_end":8921,"line_start":85,"line_end":85,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9527,"byte_end":9534,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BitDepth>::from_u8","value":"pub fn from_u8(u8) -> Option<BitDepth>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9444,"byte_end":9515,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9962,"byte_end":9977,"line_start":129,"line_end":129,"column_start":12,"column_end":27},"name":"PixelDimensions","qualname":"::common::PixelDimensions","value":"PixelDimensions { xppu, yppu, unit }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":" Pixel dimensions information\n","sig":null,"attributes":[{"value":"/ Pixel dimensions information","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9888,"byte_end":9920,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10020,"byte_end":10024,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"name":"xppu","qualname":"::common::PixelDimensions::xppu","value":"u32","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Pixels per unit, X axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, X axis","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9984,"byte_end":10011,"line_start":130,"line_end":130,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10071,"byte_end":10075,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"yppu","qualname":"::common::PixelDimensions::yppu","value":"u32","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Pixels per unit, Y axis\n","sig":null,"attributes":[{"value":"/ Pixels per unit, Y axis","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10035,"byte_end":10062,"line_start":132,"line_end":132,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10130,"byte_end":10134,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"unit","qualname":"::common::PixelDimensions::unit","value":"common::Unit","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Either *Meter* or *Unspecified*\n","sig":null,"attributes":[{"value":"/ Either *Meter* or *Unspecified*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10086,"byte_end":10121,"line_start":134,"line_end":134,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10264,"byte_end":10275,"line_start":142,"line_end":142,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::common::Unit::Unspecified","value":"Unit::Unspecified","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10285,"byte_end":10290,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Meter","qualname":"::common::Unit::Meter","value":"Unit::Meter","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10253,"byte_end":10257,"line_start":141,"line_end":141,"column_start":10,"column_end":14},"name":"Unit","qualname":"::common::Unit","value":"pub enum Unit { Unspecified = , Meter = , }","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1201}],"decl_id":null,"docs":" Physical unit of the pixel dimensions\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10190,"byte_end":10201,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ Physical unit of the pixel dimensions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10202,"byte_end":10243,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10398,"byte_end":10405,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Unit>::from_u8","value":"pub fn from_u8(u8) -> Option<Unit>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10315,"byte_end":10386,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10760,"byte_end":10764,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"None","qualname":"::common::DisposeOp::None","value":"DisposeOp::None","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Leave the buffer unchanged.\n","sig":null,"attributes":[{"value":"/ Leave the buffer unchanged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10724,"byte_end":10755,"line_start":161,"line_end":161,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10822,"byte_end":10832,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposeOp::Background","value":"DisposeOp::Background","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Clear buffer with the background color.\n","sig":null,"attributes":[{"value":"/ Clear buffer with the background color.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10774,"byte_end":10817,"line_start":163,"line_end":163,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10906,"byte_end":10914,"line_start":166,"line_end":166,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposeOp::Previous","value":"DisposeOp::Previous","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" Reset the buffer to the state before the current frame.\n","sig":null,"attributes":[{"value":"/ Reset the buffer to the state before the current frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10842,"byte_end":10901,"line_start":165,"line_end":165,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10708,"byte_end":10717,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"name":"DisposeOp","qualname":"::common::DisposeOp","value":"pub enum DisposeOp { None = , Background = , Previous = , }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222}],"decl_id":null,"docs":" How to reset buffer of an animated png (APNG) at the end of a frame.\n","sig":null,"attributes":[{"value":"/ How to reset buffer of an animated png (APNG) at the end of a frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10569,"byte_end":10641,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10687,"byte_end":10698,"line_start":159,"line_end":159,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11059,"byte_end":11066,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposeOp>::from_u8","value":"pub fn from_u8(u8) -> Option<DisposeOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10944,"byte_end":11047,"line_start":170,"line_end":170,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11811,"byte_end":11817,"line_start":197,"line_end":197,"column_start":5,"column_end":11},"name":"Source","qualname":"::common::BlendOp::Source","value":"BlendOp::Source","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" Pixels overwrite the value at their position.\n","sig":null,"attributes":[{"value":"/ Pixels overwrite the value at their position.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11757,"byte_end":11806,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11901,"byte_end":11905,"line_start":199,"line_end":199,"column_start":5,"column_end":9},"name":"Over","qualname":"::common::BlendOp::Over","value":"BlendOp::Over","parent":{"krate":0,"index":1236},"children":[],"decl_id":null,"docs":" The new pixels are blended into the current state based on alpha.\n","sig":null,"attributes":[{"value":"/ The new pixels are blended into the current state based on alpha.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11827,"byte_end":11896,"line_start":198,"line_end":198,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11743,"byte_end":11750,"line_start":195,"line_end":195,"column_start":10,"column_end":17},"name":"BlendOp","qualname":"::common::BlendOp","value":"pub enum BlendOp { Source = , Over = , }","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1240}],"decl_id":null,"docs":" How pixels are written into the buffer.\n","sig":null,"attributes":[{"value":"/ How pixels are written into the buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11633,"byte_end":11676,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11722,"byte_end":11733,"line_start":194,"line_end":194,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12048,"byte_end":12055,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<BlendOp>::from_u8","value":"pub fn from_u8(u8) -> Option<BlendOp>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Using enum_primitive or transmute is probably the right thing but this will do for now.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11933,"byte_end":12036,"line_start":203,"line_end":203,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12563,"byte_end":12575,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"FrameControl","qualname":"::common::FrameControl","value":"FrameControl { sequence_number, width, height, x_offset, y_offset, delay_num, delay_den, dispose_op, blend_op }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":" Frame control information\n","sig":null,"attributes":[{"value":"/ Frame control information","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12492,"byte_end":12521,"line_start":223,"line_end":223,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12650,"byte_end":12665,"line_start":227,"line_end":227,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::common::FrameControl::sequence_number","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Sequence number of the animation chunk, starting from 0\n","sig":null,"attributes":[{"value":"/ Sequence number of the animation chunk, starting from 0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12582,"byte_end":12641,"line_start":226,"line_end":226,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12717,"byte_end":12722,"line_start":229,"line_end":229,"column_start":9,"column_end":14},"name":"width","qualname":"::common::FrameControl::width","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Width of the following frame\n","sig":null,"attributes":[{"value":"/ Width of the following frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12676,"byte_end":12708,"line_start":228,"line_end":228,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12775,"byte_end":12781,"line_start":231,"line_end":231,"column_start":9,"column_end":15},"name":"height","qualname":"::common::FrameControl::height","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Height of the following frame\n","sig":null,"attributes":[{"value":"/ Height of the following frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12733,"byte_end":12766,"line_start":230,"line_end":230,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12854,"byte_end":12862,"line_start":233,"line_end":233,"column_start":9,"column_end":17},"name":"x_offset","qualname":"::common::FrameControl::x_offset","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" X position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ X position at which to render the following frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12792,"byte_end":12845,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12935,"byte_end":12943,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::common::FrameControl::y_offset","value":"u32","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Y position at which to render the following frame\n","sig":null,"attributes":[{"value":"/ Y position at which to render the following frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12873,"byte_end":12926,"line_start":234,"line_end":234,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12997,"byte_end":13006,"line_start":237,"line_end":237,"column_start":9,"column_end":18},"name":"delay_num","qualname":"::common::FrameControl::delay_num","value":"u16","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Frame delay fraction numerator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction numerator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12954,"byte_end":12988,"line_start":236,"line_end":236,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13062,"byte_end":13071,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"name":"delay_den","qualname":"::common::FrameControl::delay_den","value":"u16","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Frame delay fraction denominator\n","sig":null,"attributes":[{"value":"/ Frame delay fraction denominator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13017,"byte_end":13053,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13160,"byte_end":13170,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"dispose_op","qualname":"::common::FrameControl::dispose_op","value":"common::DisposeOp","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Type of frame area disposal to be done after rendering this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area disposal to be done after rendering this frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13082,"byte_end":13151,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13243,"byte_end":13251,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"blend_op","qualname":"::common::FrameControl::blend_op","value":"common::BlendOp","parent":{"krate":0,"index":1254},"children":[],"decl_id":null,"docs":" Type of frame area rendering for this frame\n","sig":null,"attributes":[{"value":"/ Type of frame area rendering for this frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13187,"byte_end":13234,"line_start":242,"line_end":242,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13665,"byte_end":13676,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"set_seq_num","qualname":"<FrameControl>::set_seq_num","value":"pub fn set_seq_num(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13750,"byte_end":13761,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"inc_seq_num","qualname":"<FrameControl>::inc_seq_num","value":"pub fn inc_seq_num(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13836,"byte_end":13842,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"encode","qualname":"<FrameControl>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14622,"byte_end":14638,"line_start":289,"line_end":289,"column_start":12,"column_end":28},"name":"AnimationControl","qualname":"::common::AnimationControl","value":"AnimationControl { num_frames, num_plays }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" Animation control information\n","sig":null,"attributes":[{"value":"/ Animation control information","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14547,"byte_end":14580,"line_start":287,"line_end":287,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14674,"byte_end":14684,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"name":"num_frames","qualname":"::common::AnimationControl::num_frames","value":"u32","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Number of frames\n","sig":null,"attributes":[{"value":"/ Number of frames","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14645,"byte_end":14665,"line_start":290,"line_end":290,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14773,"byte_end":14782,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"num_plays","qualname":"::common::AnimationControl::num_plays","value":"u32","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" Number of times to loop this APNG.  0 indicates infinite looping.\n","sig":null,"attributes":[{"value":"/ Number of times to loop this APNG.  0 indicates infinite looping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14695,"byte_end":14764,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14827,"byte_end":14833,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"encode","qualname":"<AnimationControl>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15240,"byte_end":15247,"line_start":309,"line_end":309,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Default level\n","sig":null,"attributes":[{"value":"/ Default level","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15218,"byte_end":15235,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15286,"byte_end":15290,"line_start":311,"line_end":311,"column_start":5,"column_end":9},"name":"Fast","qualname":"::common::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Fast minimal compression\n","sig":null,"attributes":[{"value":"/ Fast minimal compression","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15253,"byte_end":15281,"line_start":310,"line_end":310,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15512,"byte_end":15516,"line_start":317,"line_end":317,"column_start":5,"column_end":9},"name":"Best","qualname":"::common::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Higher compression level","sig":null,"attributes":[{"value":"/ Higher compression level","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15296,"byte_end":15324,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15329,"byte_end":15332,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15337,"byte_end":15403,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15408,"byte_end":15490,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15495,"byte_end":15507,"line_start":316,"line_end":316,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15522,"byte_end":15529,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::common::Compression::Huffman","value":"Compression::Huffman","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15535,"byte_end":15538,"line_start":319,"line_end":319,"column_start":5,"column_end":8},"name":"Rle","qualname":"::common::Compression::Rle","value":"Compression::Rle","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15200,"byte_end":15211,"line_start":307,"line_end":307,"column_start":10,"column_end":21},"name":"Compression","qualname":"::common::Compression","value":"pub enum Compression { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286}],"decl_id":null,"docs":" The type and strength of applied compression.\n","sig":null,"attributes":[{"value":"/ The type and strength of applied compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15111,"byte_end":15160,"line_start":305,"line_end":305,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15738,"byte_end":15749,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"ScaledFloat","qualname":"::common::ScaledFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer scaled version of a floating point value,\n equivalent to an integer quotient with fixed denominator (100_000)).\n","sig":null,"attributes":[{"value":"/ An unsigned integer scaled version of a floating point value,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15543,"byte_end":15608,"line_start":322,"line_end":322,"column_start":1,"column_end":66}},{"value":"/ equivalent to an integer quotient with fixed denominator (100_000)).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15609,"byte_end":15681,"line_start":323,"line_end":323,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15897,"byte_end":15905,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"in_range","qualname":"<ScaledFloat>::in_range","value":"pub fn in_range(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value is within the clamped range of this type.\n","sig":null,"attributes":[{"value":"/ Gets whether the value is within the clamped range of this type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15817,"byte_end":15885,"line_start":330,"line_end":330,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16192,"byte_end":16197,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"exact","qualname":"<ScaledFloat>::exact","value":"pub fn exact(f32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the value can be exactly converted in round-trip.\n","sig":null,"attributes":[{"value":"/ Gets whether the value can be exactly converted in round-trip.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16019,"byte_end":16085,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16090,"byte_end":16117,"line_start":336,"line_end":336,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16666,"byte_end":16669,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<ScaledFloat>::new","value":"pub fn new(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Slightly inaccurate scaling and quantization.\n Clamps the value into the representable range if it is negative or too large.\n","sig":null,"attributes":[{"value":"/ Slightly inaccurate scaling and quantization.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16519,"byte_end":16568,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ Clamps the value into the representable range if it is negative or too large.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16573,"byte_end":16654,"line_start":352,"line_end":352,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16850,"byte_end":16861,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"from_scaled","qualname":"<ScaledFloat>::from_scaled","value":"pub fn from_scaled(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully accurate construction from a value scaled as per specification.\n","sig":null,"attributes":[{"value":"/ Fully accurate construction from a value scaled as per specification.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16765,"byte_end":16838,"line_start":359,"line_end":359,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16964,"byte_end":16975,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"into_scaled","qualname":"<ScaledFloat>::into_scaled","value":"pub fn into_scaled(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the accurate encoded value.\n","sig":null,"attributes":[{"value":"/ Get the accurate encoded value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":16917,"byte_end":16952,"line_start":364,"line_end":364,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17076,"byte_end":17086,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"into_value","qualname":"<ScaledFloat>::into_value","value":"pub fn into_value(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled value as a floating point.\n","sig":null,"attributes":[{"value":"/ Get the unscaled value as a floating point.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17017,"byte_end":17064,"line_start":369,"line_end":369,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17421,"byte_end":17441,"line_start":381,"line_end":381,"column_start":12,"column_end":32},"name":"SourceChromaticities","qualname":"::common::SourceChromaticities","value":"SourceChromaticities { white, red, green, blue }","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" Chromaticities of the color space primaries\n","sig":null,"attributes":[{"value":"/ Chromaticities of the color space primaries","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17317,"byte_end":17364,"line_start":379,"line_end":379,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17452,"byte_end":17457,"line_start":382,"line_end":382,"column_start":9,"column_end":14},"name":"white","qualname":"::common::SourceChromaticities::white","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17495,"byte_end":17498,"line_start":383,"line_end":383,"column_start":9,"column_end":12},"name":"red","qualname":"::common::SourceChromaticities::red","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17536,"byte_end":17541,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"green","qualname":"::common::SourceChromaticities::green","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17579,"byte_end":17583,"line_start":385,"line_end":385,"column_start":9,"column_end":13},"name":"blue","qualname":"::common::SourceChromaticities::blue","value":"(common::ScaledFloat, common::ScaledFloat)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17655,"byte_end":17658,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"new","qualname":"<SourceChromaticities>::new","value":"pub fn new((f32, f32), (f32, f32), (f32, f32), (f32, f32)) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":18113,"byte_end":18124,"line_start":399,"line_end":399,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SourceChromaticities>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":18085,"byte_end":18101,"line_start":398,"line_end":398,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19163,"byte_end":19169,"line_start":420,"line_end":420,"column_start":12,"column_end":18},"name":"encode","qualname":"<SourceChromaticities>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19662,"byte_end":19672,"line_start":432,"line_end":432,"column_start":5,"column_end":15},"name":"Perceptual","qualname":"::common::SrgbRenderingIntent::Perceptual","value":"SrgbRenderingIntent::Perceptual","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.\n","sig":null,"attributes":[{"value":"/ For images preferring good adaptation to the output device gamut at the expense of colorimetric accuracy, such as photographs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19527,"byte_end":19657,"line_start":431,"line_end":431,"column_start":5,"column_end":135}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19798,"byte_end":19818,"line_start":434,"line_end":434,"column_start":5,"column_end":25},"name":"RelativeColorimetric","qualname":"::common::SrgbRenderingIntent::RelativeColorimetric","value":"SrgbRenderingIntent::RelativeColorimetric","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images requiring colour appearance matching (relative to the output device white point), such as logos.\n","sig":null,"attributes":[{"value":"/ For images requiring colour appearance matching (relative to the output device white point), such as logos.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19682,"byte_end":19793,"line_start":433,"line_end":433,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19949,"byte_end":19959,"line_start":436,"line_end":436,"column_start":5,"column_end":15},"name":"Saturation","qualname":"::common::SrgbRenderingIntent::Saturation","value":"SrgbRenderingIntent::Saturation","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.\n","sig":null,"attributes":[{"value":"/ For images preferring preservation of saturation at the expense of hue and lightness, such as charts and graphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19828,"byte_end":19944,"line_start":435,"line_end":435,"column_start":5,"column_end":121}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20112,"byte_end":20132,"line_start":438,"line_end":438,"column_start":5,"column_end":25},"name":"AbsoluteColorimetric","qualname":"::common::SrgbRenderingIntent::AbsoluteColorimetric","value":"SrgbRenderingIntent::AbsoluteColorimetric","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).\n","sig":null,"attributes":[{"value":"/ For images requiring preservation of absolute colorimetry, such as previews of images destined for a different output device (proofs).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19969,"byte_end":20107,"line_start":437,"line_end":437,"column_start":5,"column_end":143}}]},{"kind":"Enum","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19501,"byte_end":19520,"line_start":430,"line_end":430,"column_start":10,"column_end":29},"name":"SrgbRenderingIntent","qualname":"::common::SrgbRenderingIntent","value":"pub enum SrgbRenderingIntent {\n    Perceptual = ,\n    RelativeColorimetric = ,\n    Saturation = ,\n    AbsoluteColorimetric = ,\n}","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337}],"decl_id":null,"docs":" The rendering intent for an sRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent for an sRGB image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19297,"byte_end":19340,"line_start":425,"line_end":425,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19341,"byte_end":19344,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ Presence of this data also indicates that the image conforms to the sRGB color space.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19345,"byte_end":19434,"line_start":427,"line_end":427,"column_start":1,"column_end":90}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":19435,"byte_end":19446,"line_start":428,"line_end":428,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20604,"byte_end":20610,"line_start":456,"line_end":456,"column_start":12,"column_end":18},"name":"encode","qualname":"<SrgbRenderingIntent>::encode","value":"pub fn encode<W: Write>(Self, &mut W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20810,"byte_end":20814,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"Info","qualname":"::common::Info","value":"Info { width, height, bit_depth, color_type, interlaced, trns, pixel_dims, palette, gama_chunk, chrm_chunk, frame_control, animation_control, compression, source_gamma, source_chromaticities, srgb, icc_profile, uncompressed_latin1_text, compressed_latin1_text, utf8_text }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" PNG info struct\n","sig":null,"attributes":[{"value":"/ PNG info struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20737,"byte_end":20756,"line_start":461,"line_end":461,"column_start":1,"column_end":20}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20781,"byte_end":20798,"line_start":463,"line_end":463,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20829,"byte_end":20834,"line_start":465,"line_end":465,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Info::width","value":"u32","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20849,"byte_end":20855,"line_start":466,"line_end":466,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Info::height","value":"u32","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20870,"byte_end":20879,"line_start":467,"line_end":467,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::common::Info::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20943,"byte_end":20953,"line_start":469,"line_end":469,"column_start":9,"column_end":19},"name":"color_type","qualname":"::common::Info::color_type","value":"common::ColorType","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" How colors are stored in the image.\n","sig":null,"attributes":[{"value":"/ How colors are stored in the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20895,"byte_end":20934,"line_start":468,"line_end":468,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20974,"byte_end":20984,"line_start":470,"line_end":470,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Info::interlaced","value":"bool","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21115,"byte_end":21119,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"name":"trns","qualname":"::common::Info::trns","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.\n","sig":null,"attributes":[{"value":"/ The image's `tRNS` chunk, if present; contains the alpha channel of the image's palette, 1 byte per entry.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20996,"byte_end":21106,"line_start":471,"line_end":471,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21152,"byte_end":21162,"line_start":473,"line_end":473,"column_start":9,"column_end":19},"name":"pixel_dims","qualname":"::common::Info::pixel_dims","value":"std::option::Option<common::PixelDimensions>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21345,"byte_end":21352,"line_start":475,"line_end":475,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Info::palette","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).\n","sig":null,"attributes":[{"value":"/ The image's `PLTE` chunk, if present; contains the RGB channels (in that order) of the image's palettes, 3 bytes per entry (1 per channel).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21193,"byte_end":21336,"line_start":474,"line_end":474,"column_start":5,"column_end":148}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21535,"byte_end":21545,"line_start":478,"line_end":478,"column_start":9,"column_end":19},"name":"gama_chunk","qualname":"::common::Info::gama_chunk","value":"std::option::Option<common::ScaledFloat>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The contents of the image's gAMA chunk, if present.\n Prefer `source_gamma` to also get the derived replacement gamma from sRGB chunks.\n","sig":null,"attributes":[{"value":"/ The contents of the image's gAMA chunk, if present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21381,"byte_end":21436,"line_start":476,"line_end":476,"column_start":5,"column_end":60}},{"value":"/ Prefer `source_gamma` to also get the derived replacement gamma from sRGB chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21441,"byte_end":21526,"line_start":477,"line_end":477,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21732,"byte_end":21742,"line_start":481,"line_end":481,"column_start":9,"column_end":19},"name":"chrm_chunk","qualname":"::common::Info::chrm_chunk","value":"std::option::Option<common::SourceChromaticities>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The contents of the image's `cHRM` chunk, if present.\n Prefer `source_chromaticities` to also get the derived replacements from sRGB chunks.\n","sig":null,"attributes":[{"value":"/ The contents of the image's `cHRM` chunk, if present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21572,"byte_end":21629,"line_start":479,"line_end":479,"column_start":5,"column_end":62}},{"value":"/ Prefer `source_chromaticities` to also get the derived replacements from sRGB chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21634,"byte_end":21723,"line_start":480,"line_end":480,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21783,"byte_end":21796,"line_start":483,"line_end":483,"column_start":9,"column_end":22},"name":"frame_control","qualname":"::common::Info::frame_control","value":"std::option::Option<common::FrameControl>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21828,"byte_end":21845,"line_start":484,"line_end":484,"column_start":9,"column_end":26},"name":"animation_control","qualname":"::common::Info::animation_control","value":"std::option::Option<common::AnimationControl>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21881,"byte_end":21892,"line_start":485,"line_end":485,"column_start":9,"column_end":20},"name":"compression","qualname":"::common::Info::compression","value":"common::Compression","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22023,"byte_end":22035,"line_start":488,"line_end":488,"column_start":9,"column_end":21},"name":"source_gamma","qualname":"::common::Info::source_gamma","value":"std::option::Option<common::ScaledFloat>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" Gamma of the source system.\n Set by both `gAMA` as well as to a replacement by `sRGB` chunk.\n","sig":null,"attributes":[{"value":"/ Gamma of the source system.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21911,"byte_end":21942,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ Set by both `gAMA` as well as to a replacement by `sRGB` chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":21947,"byte_end":22014,"line_start":487,"line_end":487,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22183,"byte_end":22204,"line_start":491,"line_end":491,"column_start":9,"column_end":30},"name":"source_chromaticities","qualname":"::common::Info::source_chromaticities","value":"std::option::Option<common::SourceChromaticities>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" Chromaticities of the source system.\n Set by both `cHRM` as well as to a replacement by `sRGB` chunk.\n","sig":null,"attributes":[{"value":"/ Chromaticities of the source system.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22062,"byte_end":22102,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ Set by both `cHRM` as well as to a replacement by `sRGB` chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22107,"byte_end":22174,"line_start":490,"line_end":490,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22394,"byte_end":22398,"line_start":495,"line_end":495,"column_start":9,"column_end":13},"name":"srgb","qualname":"::common::Info::srgb","value":"std::option::Option<common::SrgbRenderingIntent>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The rendering intent of an SRGB image.","sig":null,"attributes":[{"value":"/ The rendering intent of an SRGB image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22240,"byte_end":22282,"line_start":492,"line_end":492,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22287,"byte_end":22290,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Presence of this value also indicates that the image conforms to the SRGB color space.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22295,"byte_end":22385,"line_start":494,"line_end":494,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22476,"byte_end":22487,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"icc_profile","qualname":"::common::Info::icc_profile","value":"std::option::Option<std::borrow::Cow<'a, [u8]>>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" The ICC profile for the image.\n","sig":null,"attributes":[{"value":"/ The ICC profile for the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22433,"byte_end":22467,"line_start":496,"line_end":496,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22539,"byte_end":22563,"line_start":499,"line_end":499,"column_start":9,"column_end":33},"name":"uncompressed_latin1_text","qualname":"::common::Info::uncompressed_latin1_text","value":"std::vec::Vec<text_metadata::TEXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" tEXt field\n","sig":null,"attributes":[{"value":"/ tEXt field","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22516,"byte_end":22530,"line_start":498,"line_end":498,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22608,"byte_end":22630,"line_start":501,"line_end":501,"column_start":9,"column_end":31},"name":"compressed_latin1_text","qualname":"::common::Info::compressed_latin1_text","value":"std::vec::Vec<text_metadata::ZTXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" zTXt field\n","sig":null,"attributes":[{"value":"/ zTXt field","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22585,"byte_end":22599,"line_start":500,"line_end":500,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22675,"byte_end":22684,"line_start":503,"line_end":503,"column_start":9,"column_end":18},"name":"utf8_text","qualname":"::common::Info::utf8_text","value":"std::vec::Vec<text_metadata::ITXtChunk>","parent":{"krate":0,"index":1351},"children":[],"decl_id":null,"docs":" iTXt field\n","sig":null,"attributes":[{"value":"/ iTXt field","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22652,"byte_end":22666,"line_start":502,"line_end":502,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23720,"byte_end":23729,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"with_size","qualname":"<Info>::with_size","value":"pub fn with_size(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A utility constructor for a default info with width and height.\n","sig":null,"attributes":[{"value":"/ A utility constructor for a default info with width and height.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23641,"byte_end":23708,"line_start":536,"line_end":536,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23926,"byte_end":23930,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"size","qualname":"<Info>::size","value":"pub fn size(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Size of the image, width then height.\n","sig":null,"attributes":[{"value":"/ Size of the image, width then height.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23873,"byte_end":23914,"line_start":545,"line_end":545,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24058,"byte_end":24069,"line_start":551,"line_end":551,"column_start":12,"column_end":23},"name":"is_animated","qualname":"<Info>::is_animated","value":"pub fn is_animated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the image is an APNG image.\n","sig":null,"attributes":[{"value":"/ Returns true if the image is an APNG image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23999,"byte_end":24046,"line_start":550,"line_end":550,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24238,"byte_end":24255,"line_start":556,"line_end":556,"column_start":12,"column_end":29},"name":"animation_control","qualname":"<Info>::animation_control","value":"pub fn animation_control(&Self) -> Option<&AnimationControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the image.\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24171,"byte_end":24226,"line_start":555,"line_end":555,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24419,"byte_end":24432,"line_start":561,"line_end":561,"column_start":12,"column_end":25},"name":"frame_control","qualname":"<Info>::frame_control","value":"pub fn frame_control(&Self) -> Option<&FrameControl>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame control information of the current frame\n","sig":null,"attributes":[{"value":"/ Returns the frame control information of the current frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24345,"byte_end":24407,"line_start":560,"line_end":560,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24567,"byte_end":24581,"line_start":566,"line_end":566,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<Info>::bits_per_pixel","value":"pub fn bits_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bits per pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24514,"byte_end":24555,"line_start":565,"line_end":565,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24725,"byte_end":24740,"line_start":571,"line_end":571,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<Info>::bytes_per_pixel","value":"pub fn bytes_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes per pixel.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes per pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":24671,"byte_end":24713,"line_start":570,"line_end":570,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26131,"byte_end":26140,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<Info>::raw_bytes","value":"pub fn raw_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced image.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26053,"byte_end":26119,"line_start":596,"line_end":596,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26299,"byte_end":26313,"line_start":602,"line_end":602,"column_start":12,"column_end":26},"name":"raw_row_length","qualname":"<Info>::raw_row_length","value":"pub fn raw_row_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26223,"byte_end":26287,"line_start":601,"line_end":601,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26649,"byte_end":26674,"line_start":612,"line_end":612,"column_start":12,"column_end":37},"name":"raw_row_length_from_width","qualname":"<Info>::raw_row_length_from_width","value":"pub fn raw_row_length_from_width(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes needed for one deinterlaced row of width `width`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes needed for one deinterlaced row of width `width`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26556,"byte_end":26637,"line_start":611,"line_end":611,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":27020,"byte_end":27026,"line_start":621,"line_end":621,"column_start":12,"column_end":18},"name":"encode","qualname":"<Info>::encode","value":"pub fn encode<W: Write>(&Self, W) -> encoder::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this header to the writer.","sig":null,"attributes":[{"value":"/ Encode this header to the writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26802,"byte_end":26839,"line_start":617,"line_end":617,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26844,"byte_end":26847,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ Note that this does _not_ include the PNG signature, it starts with the IHDR chunk and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26852,"byte_end":26947,"line_start":619,"line_end":619,"column_start":5,"column_end":100}},{"value":"/ includes other chunks that were added to the header.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":26952,"byte_end":27008,"line_start":620,"line_end":620,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30421,"byte_end":30436,"line_start":716,"line_end":716,"column_start":16,"column_end":31},"name":"Transformations","qualname":"::common::Transformations","value":"Transformations {  }","parent":null,"children":[{"krate":0,"index":1380}],"decl_id":null,"docs":" Output transformations","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30488,"byte_end":30496,"line_start":718,"line_end":718,"column_start":15,"column_end":23},"name":"IDENTITY","qualname":"::common::Transformations::IDENTITY","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" No transformation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30596,"byte_end":30604,"line_start":720,"line_end":720,"column_start":15,"column_end":23},"name":"STRIP_16","qualname":"::common::Transformations::STRIP_16","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" Strip 16-bit samples to 8 bits\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30830,"byte_end":30836,"line_start":724,"line_end":724,"column_start":15,"column_end":21},"name":"EXPAND","qualname":"::common::Transformations::EXPAND","value":"Self","parent":{"krate":0,"index":1413},"children":[],"decl_id":null,"docs":" Expand paletted images to RGB; expand grayscale images of\n less than 8-bit depth to 8-bit depth; and expand tRNS chunks\n to alpha channels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":31120,"byte_end":31139,"line_start":733,"line_end":733,"column_start":12,"column_end":31},"name":"normalize_to_color8","qualname":"<Transformations>::normalize_to_color8","value":"pub fn normalize_to_color8() -> Transformations","parent":null,"children":[],"decl_id":null,"docs":" Transform every input to 8bit grayscale or color.","sig":null,"attributes":[{"value":"/ Transform every input to 8bit grayscale or color.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30912,"byte_end":30965,"line_start":729,"line_end":729,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30970,"byte_end":30973,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This sets `EXPAND` and `STRIP_16` which is similar to the default transformation used by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30978,"byte_end":31070,"line_start":731,"line_end":731,"column_start":5,"column_end":97}},{"value":"/ this library prior to `0.17`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":31075,"byte_end":31108,"line_start":732,"line_end":732,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":31445,"byte_end":31459,"line_start":746,"line_end":746,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::common::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68873,"byte_end":68880,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::decoder::stream::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Nothing decoded yet\n","sig":null,"attributes":[{"value":"/ Nothing decoded yet","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68845,"byte_end":68868,"line_start":53,"line_end":53,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68886,"byte_end":68892,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Header","qualname":"::decoder::stream::Decoded::Header","value":"Decoded::Header(u32, u32, BitDepth, ColorType, bool)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68935,"byte_end":68945,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ChunkBegin","qualname":"::decoder::stream::Decoded::ChunkBegin","value":"Decoded::ChunkBegin(u32, ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68967,"byte_end":68980,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"ChunkComplete","qualname":"::decoder::stream::Decoded::ChunkComplete","value":"Decoded::ChunkComplete(u32, ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69002,"byte_end":69017,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"PixelDimensions","qualname":"::decoder::stream::Decoded::PixelDimensions","value":"Decoded::PixelDimensions(PixelDimensions)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69040,"byte_end":69056,"line_start":59,"line_end":59,"column_start":5,"column_end":21},"name":"AnimationControl","qualname":"::decoder::stream::Decoded::AnimationControl","value":"Decoded::AnimationControl(AnimationControl)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69080,"byte_end":69092,"line_start":60,"line_end":60,"column_start":5,"column_end":17},"name":"FrameControl","qualname":"::decoder::stream::Decoded::FrameControl","value":"Decoded::FrameControl(FrameControl)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69144,"byte_end":69153,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"ImageData","qualname":"::decoder::stream::Decoded::ImageData","value":"Decoded::ImageData","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Decoded raw image data.\n","sig":null,"attributes":[{"value":"/ Decoded raw image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69112,"byte_end":69139,"line_start":61,"line_end":61,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69368,"byte_end":69384,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"name":"ImageDataFlushed","qualname":"::decoder::stream::Decoded::ImageDataFlushed","value":"Decoded::ImageDataFlushed","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" The last of a consecutive chunk of IDAT was done.\n This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but\n not that no additional IDAT chunk follows.\n","sig":null,"attributes":[{"value":"/ The last of a consecutive chunk of IDAT was done.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69159,"byte_end":69212,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/ This is distinct from ChunkComplete which only marks that some IDAT chunk was completed but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69217,"byte_end":69312,"line_start":64,"line_end":64,"column_start":5,"column_end":100}},{"value":"/ not that no additional IDAT chunk follows.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69317,"byte_end":69363,"line_start":65,"line_end":65,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69390,"byte_end":69402,"line_start":67,"line_end":67,"column_start":5,"column_end":17},"name":"PartialChunk","qualname":"::decoder::stream::Decoded::PartialChunk","value":"Decoded::PartialChunk(ChunkType)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69419,"byte_end":69427,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::decoder::stream::Decoded::ImageEnd","value":"Decoded::ImageEnd","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68831,"byte_end":68838,"line_start":52,"line_end":52,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::decoder::stream::Decoded","value":"pub enum Decoded {\n    Nothing,\n    Header(u32, u32, BitDepth, ColorType, bool),\n    ChunkBegin(u32, ChunkType),\n    ChunkComplete(u32, ChunkType),\n    PixelDimensions(PixelDimensions),\n    AnimationControl(AnimationControl),\n    FrameControl(FrameControl),\n    ImageData,\n    ImageDataFlushed,\n    PartialChunk(ChunkType),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1542},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1566}],"decl_id":null,"docs":" Result of the decoding process\n","sig":null,"attributes":[{"value":"/ Result of the decoding process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":68787,"byte_end":68821,"line_start":51,"line_end":51,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69860,"byte_end":69867,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"IoError","qualname":"::decoder::stream::DecodingError::IoError","value":"DecodingError::IoError(io::Error)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" An error in IO of the underlying reader.\n","sig":null,"attributes":[{"value":"/ An error in IO of the underlying reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69811,"byte_end":69855,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70279,"byte_end":70285,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Format","qualname":"::decoder::stream::DecodingError::Format","value":"DecodingError::Format(FormatError)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" The input image was not a valid PNG.","sig":null,"attributes":[{"value":"/ The input image was not a valid PNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69884,"byte_end":69924,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69929,"byte_end":69932,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ There isn't a lot that can be done here, except if the program itself was responsible for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69937,"byte_end":70030,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ creating this image then investigate the generator. This is internally implemented with a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70035,"byte_end":70128,"line_start":83,"line_end":83,"column_start":5,"column_end":98}},{"value":"/ large Enum. If You are interested in accessing some of the more exact information on the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70133,"byte_end":70225,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ variant then we can discuss in an issue.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70230,"byte_end":70274,"line_start":85,"line_end":85,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71125,"byte_end":71134,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::decoder::stream::DecodingError::Parameter","value":"DecodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" An interface was used incorrectly.","sig":null,"attributes":[{"value":"/ An interface was used incorrectly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70304,"byte_end":70342,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70347,"byte_end":70350,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is used in cases where it's expected that the programmer might trip up and stability","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70355,"byte_end":70448,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ could be affected. For example when:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70453,"byte_end":70493,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70498,"byte_end":70501,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ * The decoder is polled for more animation frames despite being done (or not being animated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70506,"byte_end":70601,"line_start":92,"line_end":92,"column_start":5,"column_end":100}},{"value":"/   in the first place).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70606,"byte_end":70632,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/ * The output buffer does not have the required size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70637,"byte_end":70693,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70698,"byte_end":70701,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ As a rough guideline for introducing new variants parts of the requirements are dynamically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70706,"byte_end":70801,"line_start":96,"line_end":96,"column_start":5,"column_end":100}},{"value":"/ derived from the (untrusted) input data while the other half is from the caller. In the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70806,"byte_end":70897,"line_start":97,"line_end":97,"column_start":5,"column_end":96}},{"value":"/ above cases the number of frames respectively the size is determined by the file while the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":70902,"byte_end":70996,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ number of calls","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71001,"byte_end":71020,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71025,"byte_end":71028,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If you're an application you might want to signal that a bug report is appreciated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71033,"byte_end":71120,"line_start":101,"line_end":101,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71549,"byte_end":71563,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::decoder::stream::DecodingError::LimitsExceeded","value":"DecodingError::LimitsExceeded","parent":{"krate":0,"index":1570},"children":[],"decl_id":null,"docs":" The image would have required exceeding the limits configured with the decoder.","sig":null,"attributes":[{"value":"/ The image would have required exceeding the limits configured with the decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71156,"byte_end":71239,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71244,"byte_end":71247,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that Your allocations, e.g. when reading into a pre-allocated buffer, is __NOT__","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71252,"byte_end":71341,"line_start":105,"line_end":105,"column_start":5,"column_end":94}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71346,"byte_end":71436,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71441,"byte_end":71489,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71494,"byte_end":71497,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71502,"byte_end":71544,"line_start":109,"line_end":109,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69791,"byte_end":69804,"line_start":77,"line_end":77,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::decoder::stream::DecodingError","value":"pub enum DecodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1580}],"decl_id":null,"docs":" Any kind of error during PNG decoding.","sig":null,"attributes":[{"value":"/ Any kind of error during PNG decoding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69432,"byte_end":69474,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69475,"byte_end":69478,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This enumeration provides a very rough analysis on the origin of the failure. That is, each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69479,"byte_end":69574,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ variant corresponds to one kind of actor causing the error. It should not be understood as a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69575,"byte_end":69671,"line_start":74,"line_end":74,"column_start":1,"column_end":97}},{"value":"/ direct blame but can inform the search for a root cause or if such a search is required.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":69672,"byte_end":69764,"line_start":75,"line_end":75,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":71596,"byte_end":71607,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::decoder::stream::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":82489,"byte_end":82505,"line_start":398,"line_end":398,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::decoder::stream::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" PNG StreamingDecoder (low-level interface)\n","sig":null,"attributes":[{"value":"/ PNG StreamingDecoder (low-level interface)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":82431,"byte_end":82477,"line_start":397,"line_end":397,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83458,"byte_end":83461,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new StreamingDecoder","sig":null,"attributes":[{"value":"/ Creates a new StreamingDecoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83364,"byte_end":83398,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83403,"byte_end":83406,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Allocates the internal buffers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83411,"byte_end":83446,"line_start":431,"line_end":431,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83899,"byte_end":83904,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"reset","qualname":"<StreamingDecoder>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the StreamingDecoder\n","sig":null,"attributes":[{"value":"/ Resets the StreamingDecoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83856,"byte_end":83887,"line_start":445,"line_end":445,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84353,"byte_end":84357,"line_start":459,"line_end":459,"column_start":12,"column_end":16},"name":"info","qualname":"<StreamingDecoder>::info","value":"pub fn info(&Self) -> Option<&Info>","parent":null,"children":[],"decl_id":null,"docs":" Provides access to the inner `info` field\n","sig":null,"attributes":[{"value":"/ Provides access to the inner `info` field","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84296,"byte_end":84341,"line_start":458,"line_end":458,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84593,"byte_end":84614,"line_start":468,"line_end":468,"column_start":12,"column_end":33},"name":"set_ignore_text_chunk","qualname":"<StreamingDecoder>::set_ignore_text_chunk","value":"pub fn set_ignore_text_chunk(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":85073,"byte_end":85079,"line_start":477,"line_end":477,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update(&mut Self, &[u8], &mut Vec<u8>)\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Low level StreamingDecoder interface.","sig":null,"attributes":[{"value":"/ Low level StreamingDecoder interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84733,"byte_end":84774,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84779,"byte_end":84782,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Allows to stream partial data to the encoder. Returns a tuple containing the bytes that have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84787,"byte_end":84883,"line_start":474,"line_end":474,"column_start":5,"column_end":101}},{"value":"/ been consumed from the input buffer and the current decoding result. If the decoded chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84888,"byte_end":84981,"line_start":475,"line_end":475,"column_start":5,"column_end":98}},{"value":"/ was an image data chunk, it also appends the read data to `image_data`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":84986,"byte_end":85061,"line_start":476,"line_end":476,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33876,"byte_end":33886,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"OutputInfo","qualname":"::decoder::OutputInfo","value":"OutputInfo { width, height, color_type, bit_depth, line_size }","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679}],"decl_id":null,"docs":" Output info.","sig":null,"attributes":[{"value":"/ Output info.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33718,"byte_end":33734,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33735,"byte_end":33738,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This describes one particular frame of the image that was written into the output buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33739,"byte_end":33832,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33936,"byte_end":33941,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"width","qualname":"::decoder::OutputInfo::width","value":"u32","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The pixel width of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel width of this frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33893,"byte_end":33927,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33996,"byte_end":34002,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"height","qualname":"::decoder::OutputInfo::height","value":"u32","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The pixel height of this frame.\n","sig":null,"attributes":[{"value":"/ The pixel height of this frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":33952,"byte_end":33987,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34055,"byte_end":34065,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"color_type","qualname":"::decoder::OutputInfo::color_type","value":"common::ColorType","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The chosen output color type.\n","sig":null,"attributes":[{"value":"/ The chosen output color type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34013,"byte_end":34046,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34123,"byte_end":34132,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"bit_depth","qualname":"::decoder::OutputInfo::bit_depth","value":"common::BitDepth","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The chosen output bit depth.\n","sig":null,"attributes":[{"value":"/ The chosen output bit depth.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34082,"byte_end":34114,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34207,"byte_end":34216,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"line_size","qualname":"::decoder::OutputInfo::line_size","value":"usize","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" The byte count of each scan line in the image.\n","sig":null,"attributes":[{"value":"/ The byte count of each scan line in the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34148,"byte_end":34198,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34442,"byte_end":34453,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<OutputInfo>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size needed to hold a decoded frame\n If the output buffer was larger then bytes after this count should be ignored. They may\n still have been changed.\n","sig":null,"attributes":[{"value":"/ Returns the size needed to hold a decoded frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34250,"byte_end":34301,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ If the output buffer was larger then bytes after this count should be ignored. They may","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34306,"byte_end":34397,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ still have been changed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34402,"byte_end":34430,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34629,"byte_end":34635,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"Limits","qualname":"::decoder::Limits","value":"Limits { bytes }","parent":null,"children":[{"krate":0,"index":1690}],"decl_id":null,"docs":" Limits on the resources the `Decoder` is allowed too use\n","sig":null,"attributes":[{"value":"/ Limits on the resources the `Decoder` is allowed too use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34557,"byte_end":34617,"line_start":56,"line_end":56,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34731,"byte_end":34736,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"bytes","qualname":"::decoder::Limits::bytes","value":"usize","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":" maximum number of bytes the decoder is allowed to allocate, default is 64Mib\n","sig":null,"attributes":[{"value":"/ maximum number of bytes the decoder is allowed to allocate, default is 64Mib","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34642,"byte_end":34722,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34903,"byte_end":34910,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" PNG Decoder\n","sig":null,"attributes":[{"value":"/ PNG Decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34876,"byte_end":34891,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35220,"byte_end":35233,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"InterlacedRow","qualname":"::decoder::InterlacedRow","value":"InterlacedRow {  }","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"decl_id":null,"docs":" A row of data with interlace information attached.\n","sig":null,"attributes":[{"value":"/ A row of data with interlace information attached.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35124,"byte_end":35178,"line_start":81,"line_end":81,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35345,"byte_end":35349,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"data","qualname":"<InterlacedRow>::data","value":"pub fn data(&Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35410,"byte_end":35419,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"interlace","qualname":"<InterlacedRow>::interlace","value":"pub fn interlace(&Self) -> InterlaceInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35660,"byte_end":35664,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Null","qualname":"::decoder::InterlaceInfo::Null","value":"InterlaceInfo::Null","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" the null method means no interlacing\n","sig":null,"attributes":[{"value":"/ the null method means no interlacing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35615,"byte_end":35655,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36098,"byte_end":36103,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Adam7","qualname":"::decoder::InterlaceInfo::Adam7","value":"InterlaceInfo::Adam7 { pass, line, width }","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.\n The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","sig":null,"attributes":[{"value":"/ Adam7 derives its name from doing 7 passes over the image, only decoding a subset of all pixels in each pass.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35670,"byte_end":35783,"line_start":103,"line_end":103,"column_start":5,"column_end":118}},{"value":"/ The following table shows pictorially what parts of each 8x8 area of the image is found in each pass:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35788,"byte_end":35893,"line_start":104,"line_end":104,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35898,"byte_end":35901,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ 1 6 4 6 2 6 4 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35906,"byte_end":35925,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35930,"byte_end":35949,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35954,"byte_end":35973,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35978,"byte_end":35997,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ 3 6 4 6 3 6 4 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36002,"byte_end":36021,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36026,"byte_end":36045,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ 5 6 5 6 5 6 5 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36050,"byte_end":36069,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ 7 7 7 7 7 7 7 7","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36074,"byte_end":36093,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35595,"byte_end":35608,"line_start":100,"line_end":100,"column_start":10,"column_end":23},"name":"InterlaceInfo","qualname":"::decoder::InterlaceInfo","value":"pub enum InterlaceInfo {\n    Null,\n    Adam7 {\n            pass: u8,\n            line: u32,\n            width: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1711}],"decl_id":null,"docs":" PNG (2003) specifies two interlace modes, but reserves future extensions.\n","sig":null,"attributes":[{"value":"/ PNG (2003) specifies two interlace modes, but reserves future extensions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35478,"byte_end":35555,"line_start":98,"line_end":98,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36234,"byte_end":36237,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"Row","qualname":"::decoder::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":1722}],"decl_id":null,"docs":" A row of data without interlace information.\n","sig":null,"attributes":[{"value":"/ A row of data without interlace information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36144,"byte_end":36192,"line_start":117,"line_end":117,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36309,"byte_end":36313,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"data","qualname":"<Row>::data","value":"pub fn data(&Self) -> &'data [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36467,"byte_end":36470,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with default limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with default limits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36396,"byte_end":36455,"line_start":130,"line_end":130,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36629,"byte_end":36644,"line_start":136,"line_end":136,"column_start":12,"column_end":27},"name":"new_with_limits","qualname":"<Decoder<R>>::new_with_limits","value":"pub fn new_with_limits(R, Limits) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder configuration with custom limits.\n","sig":null,"attributes":[{"value":"/ Create a new decoder configuration with custom limits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36559,"byte_end":36617,"line_start":135,"line_end":135,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37952,"byte_end":37962,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Decoder<R>>::set_limits","value":"pub fn set_limits(&mut Self, Limits)","parent":null,"children":[],"decl_id":null,"docs":" Limit resource usage.","sig":null,"attributes":[{"value":"/ Limit resource usage.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36859,"byte_end":36884,"line_start":145,"line_end":145,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36889,"byte_end":36892,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that your allocations, e.g. when reading into a pre-allocated buffer, are __NOT__","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36897,"byte_end":36987,"line_start":147,"line_end":147,"column_start":5,"column_end":95}},{"value":"/ considered part of the limits. Nevertheless, required intermediate buffers such as for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36992,"byte_end":37082,"line_start":148,"line_end":148,"column_start":5,"column_end":95}},{"value":"/ singular lines is checked against the limit.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37087,"byte_end":37135,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37140,"byte_end":37143,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that this is a best-effort basis.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37148,"byte_end":37190,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37195,"byte_end":37198,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37203,"byte_end":37210,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37215,"byte_end":37237,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use png::{Decoder, Limits};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37242,"byte_end":37273,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/ // This image is 32×32, 1bit per pixel. The reader buffers one row which requires 4 bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37278,"byte_end":37373,"line_start":156,"line_end":156,"column_start":5,"column_end":99}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37378,"byte_end":37417,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 3;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37422,"byte_end":37443,"line_start":158,"line_end":158,"column_start":5,"column_end":26}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37448,"byte_end":37555,"line_start":159,"line_end":159,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_err());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37560,"byte_end":37602,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37607,"byte_end":37610,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ // This image is 32x32 pixels, so the decoder will allocate less than 10Kib","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37615,"byte_end":37694,"line_start":162,"line_end":162,"column_start":5,"column_end":84}},{"value":"/ let mut limits = Limits::default();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37699,"byte_end":37738,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ limits.bytes = 10*1024;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37743,"byte_end":37770,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/ let mut decoder = Decoder::new_with_limits(File::open(\"tests/pngsuite/basi0g01.png\").unwrap(), limits);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37775,"byte_end":37882,"line_start":165,"line_end":165,"column_start":5,"column_end":112}},{"value":"/ assert!(decoder.read_info().is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37887,"byte_end":37928,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":37933,"byte_end":37940,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38095,"byte_end":38104,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"read_info","qualname":"<Decoder<R>>::read_info","value":"pub fn read_info(Self) -> Result<Reader<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads all meta data until the first IDAT chunk\n","sig":null,"attributes":[{"value":"/ Reads all meta data until the first IDAT chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38033,"byte_end":38083,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38859,"byte_end":38878,"line_start":192,"line_end":192,"column_start":12,"column_end":31},"name":"set_transformations","qualname":"<Decoder<R>>::set_transformations","value":"pub fn set_transformations(&mut Self, Transformations)","parent":null,"children":[],"decl_id":null,"docs":" Set the allowed and performed transformations.","sig":null,"attributes":[{"value":"/ Set the allowed and performed transformations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38615,"byte_end":38665,"line_start":188,"line_end":188,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38670,"byte_end":38673,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ A transformation is a pre-processing on the raw image data modifying content or encoding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38678,"byte_end":38771,"line_start":190,"line_end":190,"column_start":5,"column_end":98}},{"value":"/ Many options have an impact on memory or CPU usage during decoding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38776,"byte_end":38847,"line_start":191,"line_end":191,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39319,"byte_end":39340,"line_start":206,"line_end":206,"column_start":12,"column_end":33},"name":"set_ignore_text_chunk","qualname":"<Decoder<R>>::set_ignore_text_chunk","value":"pub fn set_ignore_text_chunk(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the decoder to ignore all text chunks while parsing.","sig":null,"attributes":[{"value":"/ Set the decoder to ignore all text chunks while parsing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":38967,"byte_end":39027,"line_start":196,"line_end":196,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39032,"byte_end":39035,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ eg.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39040,"byte_end":39047,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39052,"byte_end":39059,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39064,"byte_end":39086,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"/ use png::Decoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39091,"byte_end":39112,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/ let mut decoder = Decoder::new(File::open(\"tests/pngsuite/basi0g01.png\").unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39117,"byte_end":39204,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ decoder.set_ignore_text_chunk(true);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39209,"byte_end":39249,"line_start":203,"line_end":203,"column_start":5,"column_end":45}},{"value":"/ assert!(decoder.read_info().is_ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39254,"byte_end":39295,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39300,"byte_end":39307,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":41666,"byte_end":41672,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Reader","qualname":"::decoder::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" PNG reader (mostly high-level interface)","sig":null,"attributes":[{"value":"/ PNG reader (mostly high-level interface)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":41538,"byte_end":41582,"line_start":272,"line_end":272,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":41583,"byte_end":41586,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Provides a high level that iterates over lines or whole images.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":41587,"byte_end":41654,"line_start":274,"line_end":274,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":47336,"byte_end":47340,"line_start":437,"line_end":437,"column_start":12,"column_end":16},"name":"info","qualname":"<Reader<R>>::info","value":"pub fn info(&Self) -> &Info","parent":null,"children":[],"decl_id":null,"docs":" Get information on the image.","sig":null,"attributes":[{"value":"/ Get information on the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":47201,"byte_end":47234,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":47239,"byte_end":47242,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The structure will change as new frames of an animated image are decoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":47247,"byte_end":47324,"line_start":436,"line_end":436,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49872,"byte_end":49882,"line_start":493,"line_end":493,"column_start":12,"column_end":22},"name":"next_frame","qualname":"<Reader<R>>::next_frame","value":"pub fn next_frame(&mut Self, &mut [u8]) -> Result<OutputInfo, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the next frame into `buf`.","sig":null,"attributes":[{"value":"/ Decodes the next frame into `buf`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49076,"byte_end":49114,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49119,"byte_end":49122,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Note that this decodes raw subframes that need to be mixed according to blend-op and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49127,"byte_end":49215,"line_start":482,"line_end":482,"column_start":5,"column_end":93}},{"value":"/ dispose-op by the caller.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49220,"byte_end":49249,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49254,"byte_end":49257,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The caller must always provide a buffer large enough to hold a complete frame (the APNG","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49262,"byte_end":49353,"line_start":485,"line_end":485,"column_start":5,"column_end":96}},{"value":"/ specification restricts subframes to the dimensions given in the image header). The region","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49358,"byte_end":49452,"line_start":486,"line_end":486,"column_start":5,"column_end":99}},{"value":"/ that has been written be checked afterwards by calling `info` after a successful call and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49457,"byte_end":49550,"line_start":487,"line_end":487,"column_start":5,"column_end":98}},{"value":"/ inspecting the `frame_control` data. This requirement may be lifted in a later version of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49555,"byte_end":49648,"line_start":488,"line_end":488,"column_start":5,"column_end":98}},{"value":"/ `png`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49653,"byte_end":49663,"line_start":489,"line_end":489,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49668,"byte_end":49671,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Output lines will be written in row-major, packed matrix with width and height of the read","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49676,"byte_end":49770,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ frame (or subframe), all samples are in big endian byte order where this matters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":49775,"byte_end":49860,"line_start":492,"line_end":492,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":51681,"byte_end":51689,"line_start":541,"line_end":541,"column_start":12,"column_end":20},"name":"next_row","qualname":"<Reader<R>>::next_row","value":"pub fn next_row(&mut Self) -> Result<Option<Row>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":51622,"byte_end":51669,"line_start":540,"line_end":540,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":51900,"byte_end":51919,"line_start":547,"line_end":547,"column_start":12,"column_end":31},"name":"next_interlaced_row","qualname":"<Reader<R>>::next_interlaced_row","value":"pub fn next_interlaced_row(&mut Self)\n-> Result<Option<InterlacedRow>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next processed row of the image\n","sig":null,"attributes":[{"value":"/ Returns the next processed row of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":51841,"byte_end":51888,"line_start":546,"line_end":546,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":54818,"byte_end":54835,"line_start":627,"line_end":627,"column_start":12,"column_end":29},"name":"output_color_type","qualname":"<Reader<R>>::output_color_type","value":"pub fn output_color_type(&Self) -> (ColorType, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type and the number of bits per sample\n of the data returned by `Reader::next_row` and Reader::frames`.\n","sig":null,"attributes":[{"value":"/ Returns the color type and the number of bits per sample","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":54674,"byte_end":54734,"line_start":625,"line_end":625,"column_start":5,"column_end":65}},{"value":"/ of the data returned by `Reader::next_row` and Reader::frames`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":54739,"byte_end":54806,"line_start":626,"line_end":626,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":56012,"byte_end":56030,"line_start":657,"line_end":657,"column_start":12,"column_end":30},"name":"output_buffer_size","qualname":"<Reader<R>>::output_buffer_size","value":"pub fn output_buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced image frame\n that is decoded using the given input transformations.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced image frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":55862,"byte_end":55937,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ that is decoded using the given input transformations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":55942,"byte_end":56000,"line_start":656,"line_end":656,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":57095,"byte_end":57111,"line_start":686,"line_end":686,"column_start":12,"column_end":28},"name":"output_line_size","qualname":"<Reader<R>>::output_line_size","value":"pub fn output_line_size(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes required to hold a deinterlaced row.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes required to hold a deinterlaced row.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":57015,"byte_end":57083,"line_start":685,"line_end":685,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136645,"byte_end":136652,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"IoError","qualname":"::encoder::EncodingError::IoError","value":"EncodingError::IoError(io::Error)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136669,"byte_end":136675,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(FormatError)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136694,"byte_end":136703,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::encoder::EncodingError::Parameter","value":"EncodingError::Parameter(ParameterError)","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136725,"byte_end":136739,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"LimitsExceeded","qualname":"::encoder::EncodingError::LimitsExceeded","value":"EncodingError::LimitsExceeded","parent":{"krate":0,"index":1764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136625,"byte_end":136638,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"pub enum EncodingError {\n    IoError(io::Error),\n    Format(FormatError),\n    Parameter(ParameterError),\n    LimitsExceeded,\n}","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":136772,"byte_end":136783,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"FormatError","qualname":"::encoder::FormatError","value":"FormatError {  }","parent":null,"children":[{"krate":0,"index":1779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140687,"byte_end":140694,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":" PNG Encoder.","sig":null,"attributes":[{"value":"/ PNG Encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140351,"byte_end":140367,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140368,"byte_end":140371,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This configures the PNG format options such as animation chunks, palette use, color types,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140372,"byte_end":140466,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ auxiliary chunks etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140467,"byte_end":140492,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140493,"byte_end":140496,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ FIXME: Configuring APNG might be easier (less individual errors) if we had an _adapter_ which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140497,"byte_end":140594,"line_start":146,"line_end":146,"column_start":1,"column_end":98}},{"value":"/ borrows this mutably but guarantees that `info.frame_control` is not `None`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140595,"byte_end":140675,"line_start":147,"line_end":147,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141031,"byte_end":141034,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(W, u32, u32) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141888,"byte_end":141900,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"set_animated","qualname":"<Encoder>::set_animated","value":"pub fn set_animated(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Specify that the image is animated.","sig":null,"attributes":[{"value":"/ Specify that the image is animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141236,"byte_end":141275,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141280,"byte_end":141283,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ `num_frames` controls how many frames the animation has, while","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141288,"byte_end":141354,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ `num_plays` controls how many times the animation should be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141359,"byte_end":141422,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/ repeated until it stops, if it's zero then it will repeat","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141427,"byte_end":141488,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ infinitely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141493,"byte_end":141508,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141513,"byte_end":141516,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When this method is returns successfully then the images written will be encoded as fdAT","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141521,"byte_end":141613,"line_start":179,"line_end":179,"column_start":5,"column_end":97}},{"value":"/ chunks, except for the first image that is still encoded as `IDAT`. You can control if the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141618,"byte_end":141712,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ first frame should be treated as an animation frame with [`Encoder::set_sep_def_img()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141717,"byte_end":141809,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141814,"byte_end":141817,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if `num_frames` is 0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141822,"byte_end":141876,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143076,"byte_end":143091,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"set_sep_def_img","qualname":"<Encoder>::set_sep_def_img","value":"pub fn set_sep_def_img(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark the first animated frame as a 'separate default image'.","sig":null,"attributes":[{"value":"/ Mark the first animated frame as a 'separate default image'.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142488,"byte_end":142552,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142557,"byte_end":142560,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ In APNG each animated frame is preceded by a special control chunk, `fcTL`. It's up to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142565,"byte_end":142659,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ encoder to decide if the first image, the standard `IDAT` data, should be part of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142664,"byte_end":142753,"line_start":209,"line_end":209,"column_start":5,"column_end":94}},{"value":"/ animation by emitting this chunk or by not doing so. A default image that is _not_ part of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142758,"byte_end":142852,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ the animation is often interpreted as a thumbnail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142857,"byte_end":142911,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142916,"byte_end":142919,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This method will return an error when animation control was not configured","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":142924,"byte_end":143002,"line_start":213,"line_end":213,"column_start":5,"column_end":83}},{"value":"/ (which is done by calling [`Encoder::set_animated`]).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143007,"byte_end":143064,"line_start":214,"line_end":214,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143498,"byte_end":143509,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"set_palette","qualname":"<Encoder>::set_palette","value":"pub fn set_palette<T: Into<Cow>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the PLTE chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the PLTE chunk. This method accepts","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143374,"byte_end":143443,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143448,"byte_end":143486,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143744,"byte_end":143752,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"set_trns","qualname":"<Encoder>::set_trns","value":"pub fn set_trns<T: Into<Cow>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the raw byte contents of the tRNS chunk. This method accepts\n both borrowed and owned byte data.\n","sig":null,"attributes":[{"value":"/ Sets the raw byte contents of the tRNS chunk. This method accepts","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143620,"byte_end":143689,"line_start":230,"line_end":230,"column_start":5,"column_end":74}},{"value":"/ both borrowed and owned byte data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143694,"byte_end":143732,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143961,"byte_end":143977,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"set_source_gamma","qualname":"<Encoder>::set_source_gamma","value":"pub fn set_source_gamma(&mut Self, ScaledFloat)","parent":null,"children":[],"decl_id":null,"docs":" Set the display gamma of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the display gamma of the source system on which the image was generated or last edited.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":143854,"byte_end":143949,"line_start":236,"line_end":236,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144277,"byte_end":144302,"line_start":243,"line_end":243,"column_start":12,"column_end":37},"name":"set_source_chromaticities","qualname":"<Encoder>::set_source_chromaticities","value":"pub fn set_source_chromaticities(&mut Self, super::SourceChromaticities)","parent":null,"children":[],"decl_id":null,"docs":" Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint\n of the source system on which the image was generated or last edited.\n","sig":null,"attributes":[{"value":"/ Set the chromaticities for the source system's display channels (red, green, blue) and the whitepoint","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144082,"byte_end":144187,"line_start":241,"line_end":241,"column_start":5,"column_end":110}},{"value":"/ of the source system on which the image was generated or last edited.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144192,"byte_end":144265,"line_start":242,"line_end":242,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144751,"byte_end":144759,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"set_srgb","qualname":"<Encoder>::set_srgb","value":"pub fn set_srgb(&mut Self, super::SrgbRenderingIntent)","parent":null,"children":[],"decl_id":null,"docs":" Mark the image data as conforming to the SRGB color space with the specified rendering intent.","sig":null,"attributes":[{"value":"/ Mark the image data as conforming to the SRGB color space with the specified rendering intent.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144473,"byte_end":144571,"line_start":250,"line_end":250,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144576,"byte_end":144579,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Matching source gamma and chromaticities chunks are added automatically.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144584,"byte_end":144660,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ Any manually specified source gamma or chromaticities will be ignored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144665,"byte_end":144739,"line_start":253,"line_end":253,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145027,"byte_end":145039,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"write_header","qualname":"<Encoder>::write_header","value":"pub fn write_header(Self) -> Result<Writer<W>>","parent":null,"children":[],"decl_id":null,"docs":" Start encoding by writing the header data.","sig":null,"attributes":[{"value":"/ Start encoding by writing the header data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144879,"byte_end":144925,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144930,"byte_end":144933,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The remaining data can be supplied by methods on the returned [`Writer`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":144938,"byte_end":145015,"line_start":260,"line_end":260,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145446,"byte_end":145455,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Encoder>::set_color","value":"pub fn set_color(&mut Self, ColorType)","parent":null,"children":[],"decl_id":null,"docs":" Set the color of the encoded image.","sig":null,"attributes":[{"value":"/ Set the color of the encoded image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145169,"byte_end":145208,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145213,"byte_end":145216,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ These correspond to the color types in the png IHDR data that will be written. The length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145221,"byte_end":145314,"line_start":267,"line_end":267,"column_start":5,"column_end":98}},{"value":"/ of the image data that is later supplied must match the color type, otherwise an error will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145319,"byte_end":145414,"line_start":268,"line_end":268,"column_start":5,"column_end":100}},{"value":"/ be emitted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145419,"byte_end":145434,"line_start":269,"line_end":269,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145594,"byte_end":145603,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"set_depth","qualname":"<Encoder>::set_depth","value":"pub fn set_depth(&mut Self, BitDepth)","parent":null,"children":[],"decl_id":null,"docs":" Set the indicated depth of the image data.\n","sig":null,"attributes":[{"value":"/ Set the indicated depth of the image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145536,"byte_end":145582,"line_start":274,"line_end":274,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145910,"byte_end":145925,"line_start":283,"line_end":283,"column_start":12,"column_end":27},"name":"set_compression","qualname":"<Encoder>::set_compression","value":"pub fn set_compression(&mut Self, Compression)","parent":null,"children":[],"decl_id":null,"docs":" Set compression parameters.","sig":null,"attributes":[{"value":"/ Set compression parameters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145682,"byte_end":145713,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145718,"byte_end":145721,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Accepts a `Compression` or any type that can transform into a `Compression`. Notably `deflate::Compression` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145726,"byte_end":145841,"line_start":281,"line_end":281,"column_start":5,"column_end":120}},{"value":"/ `deflate::CompressionOptions` which \"just work\".","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":145846,"byte_end":145898,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146472,"byte_end":146482,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Encoder>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type.","sig":null,"attributes":[{"value":"/ Set the used filter type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146021,"byte_end":146050,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146055,"byte_end":146058,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146063,"byte_end":146156,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146161,"byte_end":146252,"line_start":290,"line_end":290,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146257,"byte_end":146324,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146329,"byte_end":146332,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146337,"byte_end":146394,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146399,"byte_end":146460,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146978,"byte_end":146997,"line_start":307,"line_end":307,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Encoder>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146565,"byte_end":146598,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146603,"byte_end":146606,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146611,"byte_end":146682,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146687,"byte_end":146762,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146767,"byte_end":146839,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146844,"byte_end":146884,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146889,"byte_end":146892,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":146897,"byte_end":146966,"line_start":306,"line_end":306,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148094,"byte_end":148109,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Encoder>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time every frame is going to be displayed, in seconds.","sig":null,"attributes":[{"value":"/ Set the fraction of time every frame is going to be displayed, in seconds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147115,"byte_end":147193,"line_start":311,"line_end":311,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147198,"byte_end":147201,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147206,"byte_end":147278,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ [`Encoder::write_header`] is called. (see [`Writer::set_frame_delay`])*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147283,"byte_end":147358,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147363,"byte_end":147366,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147371,"byte_end":147437,"line_start":316,"line_end":316,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147442,"byte_end":147507,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147512,"byte_end":147595,"line_start":318,"line_end":318,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147600,"byte_end":147679,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147684,"byte_end":147687,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The default value is 0 for both the numerator and denominator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147692,"byte_end":147758,"line_start":321,"line_end":321,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147763,"byte_end":147766,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147771,"byte_end":147837,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147842,"byte_end":147868,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147873,"byte_end":147876,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147881,"byte_end":147942,"line_start":326,"line_end":326,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":147947,"byte_end":148008,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_frame_delay`]: struct.Writer#method.set_frame_delay","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148013,"byte_end":148082,"line_start":328,"line_end":328,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149627,"byte_end":149639,"line_start":364,"line_end":364,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Encoder>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for every frame.","sig":null,"attributes":[{"value":"/ Set the blend operation for every frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148448,"byte_end":148492,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148497,"byte_end":148500,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148505,"byte_end":148579,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148584,"byte_end":148659,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148664,"byte_end":148708,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148713,"byte_end":148716,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148721,"byte_end":148793,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called. (see [`Writer::set_blend_op`])*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148798,"byte_end":148861,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148866,"byte_end":148869,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148874,"byte_end":148954,"line_start":348,"line_end":348,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148959,"byte_end":148962,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":148967,"byte_end":149038,"line_start":350,"line_end":350,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149043,"byte_end":149115,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149120,"byte_end":149138,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149143,"byte_end":149146,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The default value is [`BlendOp::Source`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149151,"byte_end":149196,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149201,"byte_end":149204,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149209,"byte_end":149275,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149280,"byte_end":149306,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149311,"byte_end":149314,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149319,"byte_end":149353,"line_start":359,"line_end":359,"column_start":5,"column_end":39}},{"value":"/ [`BlendOP::Source`]: enum.BlendOp.html#variant.Source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149358,"byte_end":149415,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149420,"byte_end":149481,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149486,"byte_end":149547,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_blend_op`]: struct.Writer#method.set_blend_op","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149552,"byte_end":149615,"line_start":363,"line_end":363,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151162,"byte_end":151176,"line_start":398,"line_end":398,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Encoder>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for every frame.","sig":null,"attributes":[{"value":"/ Set the dispose operation for every frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149907,"byte_end":149953,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149958,"byte_end":149961,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":149966,"byte_end":150041,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150046,"byte_end":150107,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150112,"byte_end":150115,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ *Note that this parameter can be set for each individual frame after","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150120,"byte_end":150192,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ [`write_header`] is called (see [`Writer::set_dispose_op`])*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150197,"byte_end":150261,"line_start":379,"line_end":379,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150266,"byte_end":150269,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150274,"byte_end":150356,"line_start":381,"line_end":381,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150361,"byte_end":150364,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150369,"byte_end":150431,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150436,"byte_end":150489,"line_start":384,"line_end":384,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150494,"byte_end":150497,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The default value is [`DisposeOp::None`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150502,"byte_end":150547,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150552,"byte_end":150555,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150560,"byte_end":150626,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/ (see [`set_animated`])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150631,"byte_end":150657,"line_start":389,"line_end":389,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150662,"byte_end":150665,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150670,"byte_end":150716,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150721,"byte_end":150794,"line_start":392,"line_end":392,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150799,"byte_end":150876,"line_start":393,"line_end":393,"column_start":5,"column_end":82}},{"value":"/ [`DisposeOp::None`]: ../common/enum.BlendOp.html#variant.None","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150881,"byte_end":150946,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/ [`write_header`]: struct.Encoder.html#method.write_header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":150951,"byte_end":151012,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ [`set_animated`]: struct.Encoder.html#method.set_animated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151017,"byte_end":151078,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ [`Writer::set_dispose_op`]: struct.Writer#method.set_dispose_op","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151083,"byte_end":151150,"line_start":397,"line_end":397,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151522,"byte_end":151536,"line_start":408,"line_end":408,"column_start":12,"column_end":26},"name":"add_text_chunk","qualname":"<Encoder>::add_text_chunk","value":"pub fn add_text_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add tEXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add tEXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151448,"byte_end":151510,"line_start":407,"line_end":407,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151812,"byte_end":151826,"line_start":415,"line_end":415,"column_start":12,"column_end":26},"name":"add_ztxt_chunk","qualname":"<Encoder>::add_ztxt_chunk","value":"pub fn add_ztxt_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add zTXt chunks to [`Info`] struct\n","sig":null,"attributes":[{"value":"/ Convenience function to add zTXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":151738,"byte_end":151800,"line_start":414,"line_end":414,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152297,"byte_end":152311,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"add_itxt_chunk","qualname":"<Encoder>::add_itxt_chunk","value":"pub fn add_itxt_chunk(&mut Self, String, String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to add iTXt chunks to [`Info`] struct","sig":null,"attributes":[{"value":"/ Convenience function to add iTXt chunks to [`Info`] struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152026,"byte_end":152088,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152093,"byte_end":152096,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function only sets the `keyword` and `text` field of the iTXt chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152101,"byte_end":152178,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ To set the other fields, create a [`ITXtChunk`] directly, and then encode it to the output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152183,"byte_end":152285,"line_start":424,"line_end":424,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153046,"byte_end":153063,"line_start":441,"line_end":441,"column_start":12,"column_end":29},"name":"validate_sequence","qualname":"<Encoder>::validate_sequence","value":"pub fn validate_sequence(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Validate the written image sequence.","sig":null,"attributes":[{"value":"/ Validate the written image sequence.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152498,"byte_end":152538,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152543,"byte_end":152546,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ When validation is turned on (it's turned off by default) then attempts to write more than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152551,"byte_end":152645,"line_start":433,"line_end":433,"column_start":5,"column_end":99}},{"value":"/ one `IDAT` image or images beyond the number of frames indicated in the animation control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152650,"byte_end":152743,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ chunk will fail and return an error result instead. Attempts to [finish][finish] the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152748,"byte_end":152842,"line_start":435,"line_end":435,"column_start":5,"column_end":99}},{"value":"/ with missing frames will also return an error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152847,"byte_end":152897,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152902,"byte_end":152905,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [finish]: StreamWriter::finish","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152910,"byte_end":152944,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152949,"byte_end":152952,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ (It's possible to circumvent these checks by writing raw chunks instead.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":152957,"byte_end":153034,"line_start":440,"line_end":440,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153594,"byte_end":153600,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"Writer","qualname":"::encoder::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" PNG writer","sig":null,"attributes":[{"value":"/ PNG writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153153,"byte_end":153167,"line_start":446,"line_end":446,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153168,"byte_end":153171,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ Progresses through the image by writing images, frames, or raw individual chunks. This is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153172,"byte_end":153265,"line_start":448,"line_end":448,"column_start":1,"column_end":94}},{"value":"/ constructed through [`Encoder::write_header()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153266,"byte_end":153318,"line_start":449,"line_end":449,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153319,"byte_end":153322,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ FIXME: Writing of animated chunks might be clearer if we had an _adapter_ that you would call","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153323,"byte_end":153420,"line_start":451,"line_end":451,"column_start":1,"column_end":98}},{"value":"/ to guarantee the next image to be prefaced with a fcTL-chunk, and all other chunks would be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153421,"byte_end":153516,"line_start":452,"line_end":452,"column_start":1,"column_end":96}},{"value":"/ guaranteed to be `IDAT`/not affected by APNG's frame control.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":153517,"byte_end":153582,"line_start":453,"line_end":453,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157499,"byte_end":157510,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<Writer<W>>::write_chunk","value":"pub fn write_chunk(&mut Self, ChunkType, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a raw chunk of PNG data.","sig":null,"attributes":[{"value":"/ Write a raw chunk of PNG data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157261,"byte_end":157295,"line_start":578,"line_end":578,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157300,"byte_end":157303,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The chunk will have its CRC calculated and correctly. The data is not filtered in any way,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157308,"byte_end":157402,"line_start":580,"line_end":580,"column_start":5,"column_end":99}},{"value":"/ but the chunk needs to be short enough to have its length encoded correctly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157407,"byte_end":157487,"line_start":581,"line_end":581,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":157913,"byte_end":157929,"line_start":593,"line_end":593,"column_start":12,"column_end":28},"name":"write_text_chunk","qualname":"<Writer<W>>::write_text_chunk","value":"pub fn write_text_chunk<T: EncodableTextChunk>(&mut Self, &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":159381,"byte_end":159397,"line_start":640,"line_end":640,"column_start":12,"column_end":28},"name":"write_image_data","qualname":"<Writer<W>>::write_image_data","value":"pub fn write_image_data(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next image data.\n","sig":null,"attributes":[{"value":"/ Writes the next image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":159338,"byte_end":159369,"line_start":639,"line_end":639,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163970,"byte_end":163980,"line_start":756,"line_end":756,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<Writer<W>>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the used filter type for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163494,"byte_end":163548,"line_start":748,"line_end":748,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163553,"byte_end":163556,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163561,"byte_end":163654,"line_start":750,"line_end":750,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163659,"byte_end":163750,"line_start":751,"line_end":751,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163755,"byte_end":163822,"line_start":752,"line_end":752,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163827,"byte_end":163830,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163835,"byte_end":163892,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":163897,"byte_end":163958,"line_start":755,"line_end":755,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164501,"byte_end":164520,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<Writer<W>>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the following frames.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164063,"byte_end":164121,"line_start":760,"line_end":760,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164126,"byte_end":164129,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164134,"byte_end":164205,"line_start":762,"line_end":762,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164210,"byte_end":164285,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164290,"byte_end":164362,"line_start":764,"line_end":764,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164367,"byte_end":164407,"line_start":765,"line_end":765,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164412,"byte_end":164415,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164420,"byte_end":164489,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165145,"byte_end":165160,"line_start":781,"line_end":781,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<Writer<W>>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164638,"byte_end":164714,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164719,"byte_end":164733,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164738,"byte_end":164741,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164746,"byte_end":164812,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164817,"byte_end":164882,"line_start":776,"line_end":776,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164887,"byte_end":164970,"line_start":777,"line_end":777,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":164975,"byte_end":165054,"line_start":778,"line_end":778,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165059,"byte_end":165062,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165067,"byte_end":165133,"line_start":780,"line_end":780,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165917,"byte_end":165936,"line_start":803,"line_end":803,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<Writer<W>>::set_frame_dimension","value":"pub fn set_frame_dimension(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165499,"byte_end":165545,"line_start":791,"line_end":791,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165550,"byte_end":165553,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165558,"byte_end":165602,"line_start":793,"line_end":793,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165607,"byte_end":165642,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165647,"byte_end":165650,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165655,"byte_end":165729,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165734,"byte_end":165774,"line_start":797,"line_end":797,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165779,"byte_end":165782,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165787,"byte_end":165832,"line_start":799,"line_end":799,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":165837,"byte_end":165840,"line_start":800,"line_end":800,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167105,"byte_end":167123,"line_start":832,"line_end":832,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<Writer<W>>::set_frame_position","value":"pub fn set_frame_position(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166760,"byte_end":166805,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166810,"byte_end":166813,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166818,"byte_end":166851,"line_start":824,"line_end":824,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166856,"byte_end":166888,"line_start":825,"line_end":825,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166893,"byte_end":166896,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166901,"byte_end":166975,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":166980,"byte_end":167020,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167025,"byte_end":167028,"line_start":829,"line_end":829,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168067,"byte_end":168088,"line_start":856,"line_end":856,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<Writer<W>>::reset_frame_dimension","value":"pub fn reset_frame_dimension(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167676,"byte_end":167742,"line_start":847,"line_end":847,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167747,"byte_end":167772,"line_start":848,"line_end":848,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167777,"byte_end":167780,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167785,"byte_end":167855,"line_start":850,"line_end":850,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167860,"byte_end":167887,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167892,"byte_end":167895,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167900,"byte_end":167966,"line_start":853,"line_end":853,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167971,"byte_end":167974,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":167979,"byte_end":168055,"line_start":855,"line_end":855,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168716,"byte_end":168736,"line_start":873,"line_end":873,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<Writer<W>>::reset_frame_position","value":"pub fn reset_frame_position(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168429,"byte_end":168466,"line_start":866,"line_end":866,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168471,"byte_end":168474,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168479,"byte_end":168534,"line_start":868,"line_end":868,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168539,"byte_end":168542,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168547,"byte_end":168613,"line_start":870,"line_end":870,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168618,"byte_end":168621,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":168626,"byte_end":168704,"line_start":872,"line_end":872,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169705,"byte_end":169717,"line_start":898,"line_end":898,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<Writer<W>>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169021,"byte_end":169074,"line_start":883,"line_end":883,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169079,"byte_end":169082,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169087,"byte_end":169161,"line_start":885,"line_end":885,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169166,"byte_end":169241,"line_start":886,"line_end":886,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169246,"byte_end":169290,"line_start":887,"line_end":887,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169295,"byte_end":169298,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169303,"byte_end":169383,"line_start":889,"line_end":889,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169388,"byte_end":169391,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169396,"byte_end":169467,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169472,"byte_end":169544,"line_start":892,"line_end":892,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169549,"byte_end":169567,"line_start":893,"line_end":893,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169572,"byte_end":169575,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169580,"byte_end":169646,"line_start":895,"line_end":895,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169651,"byte_end":169654,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169659,"byte_end":169693,"line_start":897,"line_end":897,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170732,"byte_end":170746,"line_start":922,"line_end":922,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<Writer<W>>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":169985,"byte_end":170040,"line_start":907,"line_end":907,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170045,"byte_end":170048,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170053,"byte_end":170128,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170133,"byte_end":170194,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170199,"byte_end":170202,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170207,"byte_end":170289,"line_start":912,"line_end":912,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170294,"byte_end":170297,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170302,"byte_end":170364,"line_start":914,"line_end":914,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170369,"byte_end":170422,"line_start":915,"line_end":915,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170427,"byte_end":170430,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170435,"byte_end":170501,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170506,"byte_end":170509,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170514,"byte_end":170560,"line_start":919,"line_end":919,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170565,"byte_end":170638,"line_start":920,"line_end":920,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":170643,"byte_end":170720,"line_start":921,"line_end":921,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171377,"byte_end":171390,"line_start":939,"line_end":939,"column_start":12,"column_end":25},"name":"stream_writer","qualname":"<Writer<W>>::stream_writer","value":"pub fn stream_writer(&mut Self) -> Result<StreamWriter<, W>>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer.","sig":null,"attributes":[{"value":"/ Create a stream writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171018,"byte_end":171045,"line_start":931,"line_end":931,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171050,"byte_end":171053,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171058,"byte_end":171133,"line_start":933,"line_end":933,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171138,"byte_end":171210,"line_start":934,"line_end":934,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171215,"byte_end":171224,"line_start":935,"line_end":935,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171229,"byte_end":171232,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ This borrows the writer which allows for manually appending additional","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171237,"byte_end":171311,"line_start":937,"line_end":937,"column_start":5,"column_end":79}},{"value":"/ chunks after the image data has been written.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171316,"byte_end":171365,"line_start":938,"line_end":938,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171657,"byte_end":171680,"line_start":948,"line_end":948,"column_start":12,"column_end":35},"name":"stream_writer_with_size","qualname":"<Writer<W>>::stream_writer_with_size","value":"pub fn stream_writer_with_size(&mut Self, usize) -> Result<StreamWriter<, W>>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Create a stream writer with custom buffer size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171502,"byte_end":171553,"line_start":943,"line_end":943,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171558,"byte_end":171561,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ See [`stream_writer`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171566,"byte_end":171592,"line_start":945,"line_end":945,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171597,"byte_end":171600,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ [`stream_writer`]: #fn.stream_writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171605,"byte_end":171645,"line_start":947,"line_end":947,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172047,"byte_end":172065,"line_start":957,"line_end":957,"column_start":12,"column_end":30},"name":"into_stream_writer","qualname":"<Writer<W>>::into_stream_writer","value":"pub fn into_stream_writer(Self) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer for image data.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer for image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171806,"byte_end":171856,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171861,"byte_end":171864,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ This allows you to create images that do not fit in memory. The default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171869,"byte_end":171944,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ chunk size is 4K, use `stream_writer_with_size` to set another chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":171949,"byte_end":172021,"line_start":955,"line_end":955,"column_start":5,"column_end":77}},{"value":"/ size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172026,"byte_end":172035,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172364,"byte_end":172392,"line_start":966,"line_end":966,"column_start":12,"column_end":40},"name":"into_stream_writer_with_size","qualname":"<Writer<W>>::into_stream_writer_with_size","value":"pub fn into_stream_writer_with_size(Self, usize) -> Result<StreamWriter>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream writer with custom buffer size.","sig":null,"attributes":[{"value":"/ Turn this into a stream writer with custom buffer size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172186,"byte_end":172245,"line_start":961,"line_end":961,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172250,"byte_end":172253,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ See [`into_stream_writer`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172258,"byte_end":172289,"line_start":963,"line_end":963,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172294,"byte_end":172297,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ [`into_stream_writer`]: #fn.into_stream_writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172302,"byte_end":172352,"line_start":965,"line_end":965,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172860,"byte_end":172866,"line_start":975,"line_end":975,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer<W>>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consume the stream writer with validation.","sig":null,"attributes":[{"value":"/ Consume the stream writer with validation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172519,"byte_end":172565,"line_start":970,"line_end":970,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172570,"byte_end":172573,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Unlike a simple drop this ensures that the final chunk was written correctly. When other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172578,"byte_end":172670,"line_start":972,"line_end":972,"column_start":5,"column_end":97}},{"value":"/ validation options (chunk sequencing) had been turned on in the configuration then it will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172675,"byte_end":172769,"line_start":973,"line_end":973,"column_start":5,"column_end":99}},{"value":"/ also do a check on their correctness _before_ writing the final chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":172774,"byte_end":172848,"line_start":974,"line_end":974,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":181131,"byte_end":181143,"line_start":1234,"line_end":1234,"column_start":12,"column_end":24},"name":"StreamWriter","qualname":"::encoder::StreamWriter","value":"StreamWriter {  }","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"decl_id":null,"docs":" Streaming PNG writer","sig":null,"attributes":[{"value":"/ Streaming PNG writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180864,"byte_end":180888,"line_start":1228,"line_end":1228,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180889,"byte_end":180892,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ This may silently fail in the destructor, so it is a good idea to call","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180893,"byte_end":180967,"line_start":1230,"line_end":1230,"column_start":1,"column_end":75}},{"value":"/ [`finish`](#method.finish) or [`flush`] before dropping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180968,"byte_end":181028,"line_start":1231,"line_end":1231,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":181029,"byte_end":181032,"line_start":1232,"line_end":1232,"column_start":1,"column_end":4}},{"value":"/ [`flush`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html#tymethod.flush","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":181033,"byte_end":181119,"line_start":1233,"line_end":1233,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183441,"byte_end":183451,"line_start":1304,"line_end":1304,"column_start":12,"column_end":22},"name":"set_filter","qualname":"<StreamWriter>::set_filter","value":"pub fn set_filter(&mut Self, FilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the used filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the used filter type for the next frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":182971,"byte_end":183019,"line_start":1296,"line_end":1296,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183024,"byte_end":183027,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ The default filter is [`FilterType::Sub`] which provides a basic prediction algorithm for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183032,"byte_end":183125,"line_start":1298,"line_end":1298,"column_start":5,"column_end":98}},{"value":"/ sample values based on the previous. For a potentially better compression ratio, at the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183130,"byte_end":183221,"line_start":1299,"line_end":1299,"column_start":5,"column_end":96}},{"value":"/ cost of more complex processing, try out [`FilterType::Paeth`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183226,"byte_end":183293,"line_start":1300,"line_end":1300,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183298,"byte_end":183301,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ [`FilterType::Sub`]: enum.FilterType.html#variant.Sub","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183306,"byte_end":183363,"line_start":1302,"line_end":1302,"column_start":5,"column_end":62}},{"value":"/ [`FilterType::Paeth`]: enum.FilterType.html#variant.Paeth","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183368,"byte_end":183429,"line_start":1303,"line_end":1303,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183958,"byte_end":183977,"line_start":1316,"line_end":1316,"column_start":12,"column_end":31},"name":"set_adaptive_filter","qualname":"<StreamWriter>::set_adaptive_filter","value":"pub fn set_adaptive_filter(&mut Self, AdaptiveFilterType)","parent":null,"children":[],"decl_id":null,"docs":" Set the adaptive filter type for the next frame.","sig":null,"attributes":[{"value":"/ Set the adaptive filter type for the next frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183526,"byte_end":183578,"line_start":1308,"line_end":1308,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183583,"byte_end":183586,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Adaptive filtering attempts to select the best filter for each line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183591,"byte_end":183662,"line_start":1310,"line_end":1310,"column_start":5,"column_end":76}},{"value":"/ based on heuristics which minimize the file size for compression rather","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183667,"byte_end":183742,"line_start":1311,"line_end":1311,"column_start":5,"column_end":80}},{"value":"/ than use a single filter for the entire image. The default method is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183747,"byte_end":183819,"line_start":1312,"line_end":1312,"column_start":5,"column_end":77}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183824,"byte_end":183864,"line_start":1313,"line_end":1313,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183869,"byte_end":183872,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`AdaptiveFilterType::NonAdaptive`]: enum.AdaptiveFilterType.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":183877,"byte_end":183946,"line_start":1315,"line_end":1315,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184594,"byte_end":184609,"line_start":1329,"line_end":1329,"column_start":12,"column_end":27},"name":"set_frame_delay","qualname":"<StreamWriter>::set_frame_delay","value":"pub fn set_frame_delay(&mut Self, u16, u16) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the fraction of time the following frames are going to be displayed,\n in seconds","sig":null,"attributes":[{"value":"/ Set the fraction of time the following frames are going to be displayed,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184087,"byte_end":184163,"line_start":1320,"line_end":1320,"column_start":5,"column_end":81}},{"value":"/ in seconds","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184168,"byte_end":184182,"line_start":1321,"line_end":1321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184187,"byte_end":184190,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ If the denominator is 0, it is to be treated as if it were 100","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184195,"byte_end":184261,"line_start":1323,"line_end":1323,"column_start":5,"column_end":71}},{"value":"/ (that is, the numerator then specifies 1/100ths of a second).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184266,"byte_end":184331,"line_start":1324,"line_end":1324,"column_start":5,"column_end":70}},{"value":"/ If the the value of the numerator is 0 the decoder should render the next frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184336,"byte_end":184419,"line_start":1325,"line_end":1325,"column_start":5,"column_end":88}},{"value":"/ as quickly as possible, though viewers may impose a reasonable lower bound.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184424,"byte_end":184503,"line_start":1326,"line_end":1326,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184508,"byte_end":184511,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184516,"byte_end":184582,"line_start":1328,"line_end":1328,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185287,"byte_end":185306,"line_start":1349,"line_end":1349,"column_start":12,"column_end":31},"name":"set_frame_dimension","qualname":"<StreamWriter>::set_frame_dimension","value":"pub fn set_frame_dimension(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dimension of the following frames.","sig":null,"attributes":[{"value":"/ Set the dimension of the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184934,"byte_end":184980,"line_start":1339,"line_end":1339,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184985,"byte_end":184988,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This function will return an error when:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":184993,"byte_end":185037,"line_start":1341,"line_end":1341,"column_start":5,"column_end":49}},{"value":"/ - The image is not an animated;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185042,"byte_end":185077,"line_start":1342,"line_end":1342,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185082,"byte_end":185085,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ - The selected dimension, considering also the current frame position,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185090,"byte_end":185164,"line_start":1344,"line_end":1344,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185169,"byte_end":185209,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185214,"byte_end":185217,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ - One or both the width and height are 0;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185222,"byte_end":185267,"line_start":1347,"line_end":1347,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":185272,"byte_end":185275,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186386,"byte_end":186404,"line_start":1376,"line_end":1376,"column_start":12,"column_end":30},"name":"set_frame_position","qualname":"<StreamWriter>::set_frame_position","value":"pub fn set_frame_position(&mut Self, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the position of the following frames.","sig":null,"attributes":[{"value":"/ Set the position of the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186106,"byte_end":186151,"line_start":1368,"line_end":1368,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186156,"byte_end":186159,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186164,"byte_end":186197,"line_start":1370,"line_end":1370,"column_start":5,"column_end":38}},{"value":"/ - The image is not animated;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186202,"byte_end":186234,"line_start":1371,"line_end":1371,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186239,"byte_end":186242,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ - The selected position, considering also the current frame dimension,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186247,"byte_end":186321,"line_start":1373,"line_end":1373,"column_start":5,"column_end":79}},{"value":"/   goes outside the image boundaries;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186326,"byte_end":186366,"line_start":1374,"line_end":1374,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186371,"byte_end":186374,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187324,"byte_end":187345,"line_start":1400,"line_end":1400,"column_start":12,"column_end":33},"name":"reset_frame_dimension","qualname":"<StreamWriter>::reset_frame_dimension","value":"pub fn reset_frame_dimension(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame dimension to occupy all the image, starting from\n the current position.","sig":null,"attributes":[{"value":"/ Set the frame dimension to occupy all the image, starting from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":186933,"byte_end":186999,"line_start":1391,"line_end":1391,"column_start":5,"column_end":71}},{"value":"/ the current position.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187004,"byte_end":187029,"line_start":1392,"line_end":1392,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187034,"byte_end":187037,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ To reset the frame to the full image size [`reset_frame_position`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187042,"byte_end":187112,"line_start":1394,"line_end":1394,"column_start":5,"column_end":75}},{"value":"/ should be called first.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187117,"byte_end":187144,"line_start":1395,"line_end":1395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187149,"byte_end":187152,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187157,"byte_end":187223,"line_start":1397,"line_end":1397,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187228,"byte_end":187231,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ [`reset_frame_position`]: struct.Writer.html#method.reset_frame_position","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187236,"byte_end":187312,"line_start":1399,"line_end":1399,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187949,"byte_end":187969,"line_start":1417,"line_end":1417,"column_start":12,"column_end":32},"name":"reset_frame_position","qualname":"<StreamWriter>::reset_frame_position","value":"pub fn reset_frame_position(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the frame position to (0, 0).","sig":null,"attributes":[{"value":"/ Set the frame position to (0, 0).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187662,"byte_end":187699,"line_start":1410,"line_end":1410,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187704,"byte_end":187707,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ Equivalent to calling [`set_frame_position(0, 0)`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187712,"byte_end":187767,"line_start":1412,"line_end":1412,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187772,"byte_end":187775,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187780,"byte_end":187846,"line_start":1414,"line_end":1414,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187851,"byte_end":187854,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ [`set_frame_position(0, 0)`]: struct.Writer.html#method.set_frame_position","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":187859,"byte_end":187937,"line_start":1416,"line_end":1416,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188924,"byte_end":188936,"line_start":1442,"line_end":1442,"column_start":12,"column_end":24},"name":"set_blend_op","qualname":"<StreamWriter>::set_blend_op","value":"pub fn set_blend_op(&mut Self, BlendOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the blend operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the blend operation for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188240,"byte_end":188293,"line_start":1427,"line_end":1427,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188298,"byte_end":188301,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ The blend operation specifies whether the frame is to be alpha blended","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188306,"byte_end":188380,"line_start":1429,"line_end":1429,"column_start":5,"column_end":79}},{"value":"/ into the current output buffer content, or whether it should completely","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188385,"byte_end":188460,"line_start":1430,"line_end":1430,"column_start":5,"column_end":80}},{"value":"/ replace its region in the output buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188465,"byte_end":188509,"line_start":1431,"line_end":1431,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188514,"byte_end":188517,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ See the [`BlendOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188522,"byte_end":188602,"line_start":1433,"line_end":1433,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188607,"byte_end":188610,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ *Note that for the first frame the two blend modes are functionally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188615,"byte_end":188686,"line_start":1435,"line_end":1435,"column_start":5,"column_end":76}},{"value":"/ equivalent due to the clearing of the output buffer at the beginning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188691,"byte_end":188763,"line_start":1436,"line_end":1436,"column_start":5,"column_end":77}},{"value":"/ of each play.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188768,"byte_end":188786,"line_start":1437,"line_end":1437,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188791,"byte_end":188794,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188799,"byte_end":188865,"line_start":1439,"line_end":1439,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188870,"byte_end":188873,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ [`BlendOP`]: enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":188878,"byte_end":188912,"line_start":1441,"line_end":1441,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189937,"byte_end":189951,"line_start":1466,"line_end":1466,"column_start":12,"column_end":26},"name":"set_dispose_op","qualname":"<StreamWriter>::set_dispose_op","value":"pub fn set_dispose_op(&mut Self, DisposeOp) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the dispose operation for the following frames.","sig":null,"attributes":[{"value":"/ Set the dispose operation for the following frames.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189190,"byte_end":189245,"line_start":1451,"line_end":1451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189250,"byte_end":189253,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ The dispose operation specifies how the output buffer should be changed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189258,"byte_end":189333,"line_start":1453,"line_end":1453,"column_start":5,"column_end":80}},{"value":"/ at the end of the delay (before rendering the next frame)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189338,"byte_end":189399,"line_start":1454,"line_end":1454,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189404,"byte_end":189407,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ See the [`DisposeOp`] documentation for the possible values and their effects.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189412,"byte_end":189494,"line_start":1456,"line_end":1456,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189499,"byte_end":189502,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ *Note that if the first frame uses [`DisposeOp::Previous`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189507,"byte_end":189569,"line_start":1458,"line_end":1458,"column_start":5,"column_end":67}},{"value":"/ it will be treated as [`DisposeOp::Background`].*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189574,"byte_end":189627,"line_start":1459,"line_end":1459,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189632,"byte_end":189635,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the image is not animated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189640,"byte_end":189706,"line_start":1461,"line_end":1461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189711,"byte_end":189714,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ [`DisposeOp`]: ../common/enum.BlendOp.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189719,"byte_end":189765,"line_start":1463,"line_end":1463,"column_start":5,"column_end":51}},{"value":"/ [`DisposeOp::Previous`]: ../common/enum.BlendOp.html#variant.Previous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189770,"byte_end":189843,"line_start":1464,"line_end":1464,"column_start":5,"column_end":78}},{"value":"/ [`DisposeOp::Background`]: ../common/enum.BlendOp.html#variant.Background","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":189848,"byte_end":189925,"line_start":1465,"line_end":1465,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":190216,"byte_end":190222,"line_start":1475,"line_end":1475,"column_start":12,"column_end":18},"name":"finish","qualname":"<StreamWriter>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219957,"byte_end":219965,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::filter::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219975,"byte_end":219978,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Sub","qualname":"::filter::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219988,"byte_end":219990,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Up","qualname":"::filter::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220000,"byte_end":220003,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"Avg","qualname":"::filter::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220013,"byte_end":220018,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::filter::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219940,"byte_end":219950,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::filter::FilterType","value":"pub enum FilterType { NoFilter = , Sub = , Up = , Avg = , Paeth = , }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836}],"decl_id":null,"docs":" The byte level filter applied to scanlines to prepare them for compression.","sig":null,"attributes":[{"value":"/ The byte level filter applied to scanlines to prepare them for compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219528,"byte_end":219607,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219608,"byte_end":219611,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Compression in general benefits from repetitive data. The filter is a content-aware method of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219612,"byte_end":219709,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ compressing the range of occurring byte values to help the compression algorithm. Note that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219710,"byte_end":219805,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ this does not operate on pixels but on raw bytes of a scanline.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219806,"byte_end":219873,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":219919,"byte_end":219930,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220222,"byte_end":220229,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<FilterType>::from_u8","value":"pub fn from_u8(u8) -> Option<FilterType>","parent":null,"children":[],"decl_id":null,"docs":" u8 -> Self. Temporary solution until Rust provides a canonical one.\n","sig":null,"attributes":[{"value":"/ u8 -> Self. Temporary solution until Rust provides a canonical one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220139,"byte_end":220210,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220929,"byte_end":220937,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::filter::AdaptiveFilterType::Adaptive","value":"AdaptiveFilterType::Adaptive","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220943,"byte_end":220954,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"NonAdaptive","qualname":"::filter::AdaptiveFilterType::NonAdaptive","value":"AdaptiveFilterType::NonAdaptive","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220904,"byte_end":220922,"line_start":46,"line_end":46,"column_start":10,"column_end":28},"name":"AdaptiveFilterType","qualname":"::filter::AdaptiveFilterType","value":"pub enum AdaptiveFilterType { Adaptive, NonAdaptive, }","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1853}],"decl_id":null,"docs":" The filtering method for preprocessing scanline data before compression.","sig":null,"attributes":[{"value":"/ The filtering method for preprocessing scanline data before compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220527,"byte_end":220603,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220604,"byte_end":220607,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Adaptive filtering performs additional computation in an attempt to maximize","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220608,"byte_end":220688,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ the compression of the data. [`NonAdaptive`] filtering is the default.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220689,"byte_end":220763,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220764,"byte_end":220767,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`NonAdaptive`]: enum.AdaptiveFilterType.html#variant.NonAdaptive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220768,"byte_end":220837,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220883,"byte_end":220894,"line_start":45,"line_end":45,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_metadata","qualname":"::text_metadata","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":1872},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":948},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":965},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":968},{"krate":0,"index":980},{"krate":0,"index":1952},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":985},{"krate":0,"index":1001}],"decl_id":null,"docs":" # Text chunks (tEXt/zTXt/iTXt) structs and functions","sig":null,"attributes":[{"value":"/ # Text chunks (tEXt/zTXt/iTXt) structs and functions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233258,"byte_end":233314,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233315,"byte_end":233318,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [PNG spec](https://www.w3.org/TR/2003/REC-PNG-20031110/#11textinfo) optionally allows for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233319,"byte_end":233416,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ embedded text chunks in the file. They may appear either before or after the image data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233417,"byte_end":233508,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ chunks. There are three kinds of text chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233509,"byte_end":233558,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/  -   `tEXt`: This has a `keyword` and `text` field, and is ISO 8859-1 encoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233559,"byte_end":233641,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/  -   `zTXt`: This is semantically the same as `tEXt`, i.e. it has the same fields and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233642,"byte_end":233731,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/       encoding, but the `text` field is compressed before being written into the PNG file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233732,"byte_end":233826,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/  -   `iTXt`: This chunk allows for its `text` field to be any valid UTF-8, and supports","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233827,"byte_end":233918,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/        compression of the text field as well.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233919,"byte_end":233968,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233969,"byte_end":233972,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/  The `ISO 8859-1` encoding technically doesn't allow any control characters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":233973,"byte_end":234052,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/  to be used, but in practice these values are encountered anyway. This can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234053,"byte_end":234131,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/  either be the extended `ISO-8859-1` encoding with control characters or the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234132,"byte_end":234212,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/  `Windows-1252` encoding. This crate assumes the `ISO-8859-1` encoding is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234213,"byte_end":234290,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/  used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234291,"byte_end":234301,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234302,"byte_end":234305,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/  ## Reading text chunks","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234306,"byte_end":234333,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234334,"byte_end":234337,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/  As a PNG is decoded, any text chunk encountered is appended the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234338,"byte_end":234406,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/  [`Info`](`crate::common::Info`) struct, in the `uncompressed_latin1_text`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234407,"byte_end":234486,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/  `compressed_latin1_text`, and the `utf8_text` fields depending on whether the encountered","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234487,"byte_end":234581,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/  chunk is `tEXt`, `zTXt`, or `iTXt`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234582,"byte_end":234622,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234623,"byte_end":234626,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234627,"byte_end":234635,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/  use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234636,"byte_end":234659,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/  use std::iter::FromIterator;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234660,"byte_end":234693,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/  use std::path::PathBuf;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234694,"byte_end":234722,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234723,"byte_end":234726,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/  // Opening a png file that has a zTXt chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234727,"byte_end":234775,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/  let decoder = png::Decoder::new(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234776,"byte_end":234813,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/      File::open(PathBuf::from_iter([","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234814,"byte_end":234854,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/          \"tests\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234855,"byte_end":234876,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/          \"text_chunk_examples\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234877,"byte_end":234912,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/          \"ztxt_example.png\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234913,"byte_end":234945,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/      ]))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234946,"byte_end":234958,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/      .unwrap(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234959,"byte_end":234978,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/  );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234979,"byte_end":234986,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/  let mut reader = decoder.read_info().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":234987,"byte_end":235038,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/  // If the text chunk is before the image data frames, `reader.info()` already contains the text.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235039,"byte_end":235140,"line_start":40,"line_end":40,"column_start":1,"column_end":102}},{"value":"/  for text_chunk in &reader.info().compressed_latin1_text {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235141,"byte_end":235203,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/      println!(\"{:?}\", text_chunk.keyword); // Prints the keyword","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235204,"byte_end":235272,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/      println!(\"{:#?}\", text_chunk); // Prints out the text chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235273,"byte_end":235342,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/      // To get the uncompressed text, use the `get_text` method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235343,"byte_end":235411,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/      println!(\"{}\", text_chunk.get_text().unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235412,"byte_end":235468,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/  }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235469,"byte_end":235475,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/  ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235476,"byte_end":235484,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235485,"byte_end":235488,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/  ## Writing text chunks","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235489,"byte_end":235516,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235517,"byte_end":235520,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/  There are two ways to write text chunks: the first is to add the appropriate text structs directly to the encoder header before the header is written to file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235521,"byte_end":235684,"line_start":51,"line_end":51,"column_start":1,"column_end":164}},{"value":"/  To add a text chunk at any point in the stream, use the `write_text_chunk` method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235685,"byte_end":235772,"line_start":52,"line_end":52,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235773,"byte_end":235776,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235777,"byte_end":235785,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/  # use png::text_metadata::{ITXtChunk, ZTXtChunk};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235786,"byte_end":235840,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/  # use std::env;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235841,"byte_end":235861,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/  # use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235862,"byte_end":235887,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/  # use std::io::BufWriter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235888,"byte_end":235918,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/  # use std::iter::FromIterator;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235919,"byte_end":235954,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/  # use std::path::PathBuf;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235955,"byte_end":235985,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/  # let file = File::create(PathBuf::from_iter([\"target\", \"text_chunk.png\"])).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":235986,"byte_end":236076,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/  # let ref mut w = BufWriter::new(file);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236077,"byte_end":236121,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/  let mut encoder = png::Encoder::new(w, 2, 1); // Width is 2 pixels and height is 1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236122,"byte_end":236210,"line_start":63,"line_end":63,"column_start":1,"column_end":89}},{"value":"/  encoder.set_color(png::ColorType::Rgba);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236211,"byte_end":236256,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/  encoder.set_depth(png::BitDepth::Eight);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236257,"byte_end":236302,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/  // Adding text chunks to the header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236303,"byte_end":236343,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236344,"byte_end":236356,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"/     .add_text_chunk(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236357,"byte_end":236381,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/         \"Testing tEXt\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236382,"byte_end":236421,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         \"This is a tEXt chunk that will appear before the IDAT chunks.\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236422,"byte_end":236510,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/     )","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236511,"byte_end":236520,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236521,"byte_end":236539,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236540,"byte_end":236552,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/      .add_ztxt_chunk(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236553,"byte_end":236578,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/          \"Testing zTXt\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236579,"byte_end":236619,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/          \"This is a zTXt chunk that is compressed in the png file.\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236620,"byte_end":236704,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/      )","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236705,"byte_end":236715,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236716,"byte_end":236735,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/  encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236736,"byte_end":236748,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/      .add_itxt_chunk(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236749,"byte_end":236774,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/          \"Testing iTXt\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236775,"byte_end":236815,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/          \"iTXt chunks support all of UTF8. Example: हिंदी.\".to_string(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236816,"byte_end":236902,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/      )","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236903,"byte_end":236913,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/      .unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236914,"byte_end":236933,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236934,"byte_end":236937,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  let mut writer = encoder.write_header().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236938,"byte_end":236992,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236993,"byte_end":236996,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/  let data = [255, 0, 0, 255, 0, 0, 0, 255]; // An array containing a RGBA sequence. First pixel is red and second pixel is black.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":236997,"byte_end":237130,"line_start":88,"line_end":88,"column_start":1,"column_end":134}},{"value":"/  writer.write_image_data(&data).unwrap(); // Save","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237131,"byte_end":237184,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237185,"byte_end":237188,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/  // We can add a tEXt/zTXt/iTXt at any point before the encoder is dropped from scope. These chunks will be at the end of the png file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237189,"byte_end":237328,"line_start":91,"line_end":91,"column_start":1,"column_end":140}},{"value":"/  let tail_ztxt_chunk = ZTXtChunk::new(\"Comment\".to_string(), \"A zTXt chunk after the image data.\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237329,"byte_end":237444,"line_start":92,"line_end":92,"column_start":1,"column_end":116}},{"value":"/  writer.write_text_chunk(&tail_ztxt_chunk).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237445,"byte_end":237501,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237502,"byte_end":237505,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/  // The fields of the text chunk are public, so they can be mutated before being written to the file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237506,"byte_end":237611,"line_start":95,"line_end":95,"column_start":1,"column_end":106}},{"value":"/  let mut tail_itxt_chunk = ITXtChunk::new(\"Author\".to_string(), \"सायंतन खान\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237612,"byte_end":237724,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/  tail_itxt_chunk.compressed = true;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237725,"byte_end":237764,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/  tail_itxt_chunk.language_tag = \"hi\".to_string();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237765,"byte_end":237818,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/  tail_itxt_chunk.translated_keyword = \"लेखक\".to_string();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237819,"byte_end":237888,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/  writer.write_text_chunk(&tail_itxt_chunk).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237889,"byte_end":237945,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/  ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237946,"byte_end":237954,"line_start":101,"line_end":101,"column_start":1,"column_end":9}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":237956,"byte_end":237978,"line_start":103,"line_end":103,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":238285,"byte_end":238304,"line_start":111,"line_end":111,"column_start":11,"column_end":30},"name":"DECOMPRESSION_LIMIT","qualname":"::text_metadata::DECOMPRESSION_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Default decompression limit for compressed text chunks.\n","sig":null,"attributes":[{"value":"/ Default decompression limit for compressed text chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":238215,"byte_end":238274,"line_start":110,"line_end":110,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239463,"byte_end":239481,"line_start":146,"line_end":146,"column_start":11,"column_end":29},"name":"EncodableTextChunk","qualname":"::text_metadata::EncodableTextChunk","value":"EncodableTextChunk","parent":null,"children":[{"krate":0,"index":949}],"decl_id":null,"docs":" A generalized text chunk trait\n","sig":null,"attributes":[{"value":"/ A generalized text chunk trait","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239418,"byte_end":239452,"line_start":145,"line_end":145,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239541,"byte_end":239547,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"encode","qualname":"::text_metadata::EncodableTextChunk::encode","value":"pub fn encode<W: Write>(&Self, &mut W) -> Result<(), EncodingError>","parent":{"krate":0,"index":948},"children":[],"decl_id":null,"docs":" Encode text chunk as Vec<u8> to a `Write`\n","sig":null,"attributes":[{"value":"/ Encode text chunk as Vec<u8> to a `Write`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239488,"byte_end":239533,"line_start":147,"line_end":147,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239696,"byte_end":239705,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"TEXtChunk","qualname":"::text_metadata::TEXtChunk","value":"TEXtChunk { keyword, text }","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908}],"decl_id":null,"docs":" Struct representing a tEXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a tEXt chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239609,"byte_end":239645,"line_start":151,"line_end":151,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239813,"byte_end":239820,"line_start":155,"line_end":155,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::TEXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239712,"byte_end":239804,"line_start":154,"line_end":154,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239892,"byte_end":239896,"line_start":157,"line_end":157,"column_start":9,"column_end":13},"name":"text","qualname":"::text_metadata::TEXtChunk::text","value":"std::string::String","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":" Text field of tEXt chunk. Can be at most 2GB.\n","sig":null,"attributes":[{"value":"/ Text field of tEXt chunk. Can be at most 2GB.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":239834,"byte_end":239883,"line_start":156,"line_end":156,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":241018,"byte_end":241021,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<TEXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TEXtChunk.\n Not sure whether it should take &str or String.\n","sig":null,"attributes":[{"value":"/ Constructs a new TEXtChunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":240919,"byte_end":240950,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ Not sure whether it should take &str or String.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":240955,"byte_end":241006,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242383,"byte_end":242392,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"ZTXtChunk","qualname":"::text_metadata::ZTXtChunk","value":"ZTXtChunk { keyword }","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" Struct representing a zTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct representing a zTXt chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242296,"byte_end":242332,"line_start":234,"line_end":234,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242500,"byte_end":242507,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ZTXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ Keyword field of the tEXt chunk. Needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242399,"byte_end":242491,"line_start":237,"line_end":237,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":243007,"byte_end":243010,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<ZTXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ZTXt chunk.\n","sig":null,"attributes":[{"value":"/ Creates a new ZTXt chunk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242966,"byte_end":242995,"line_start":253,"line_end":253,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":243916,"byte_end":243931,"line_start":281,"line_end":281,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ZTXtChunk>::decompress_text","value":"pub fn decompress_text(&mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":243779,"byte_end":243904,"line_start":280,"line_end":280,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":244169,"byte_end":244195,"line_start":286,"line_end":286,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ZTXtChunk>::decompress_text_with_limit","value":"pub fn decompress_text_with_limit(&mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":244046,"byte_end":244157,"line_start":285,"line_end":285,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":245245,"byte_end":245253,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ZTXtChunk>::get_text","value":"pub fn get_text(&Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression uses more the 2MiB, first call decompress with limit, and then this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":245070,"byte_end":245132,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ If decompression uses more the 2MiB, first call decompress with limit, and then this method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":245137,"byte_end":245233,"line_start":308,"line_end":308,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":245749,"byte_end":245762,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ZTXtChunk>::compress_text","value":"pub fn compress_text(&mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":245683,"byte_end":245737,"line_start":320,"line_end":320,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":247846,"byte_end":247855,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"ITXtChunk","qualname":"::text_metadata::ITXtChunk","value":"ITXtChunk { keyword, compressed, language_tag, translated_keyword }","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Struct encoding an iTXt chunk\n","sig":null,"attributes":[{"value":"/ Struct encoding an iTXt chunk","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":247762,"byte_end":247795,"line_start":377,"line_end":377,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":247954,"byte_end":247961,"line_start":381,"line_end":381,"column_start":9,"column_end":16},"name":"keyword","qualname":"::text_metadata::ITXtChunk::keyword","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.\n","sig":null,"attributes":[{"value":"/ The keyword field. This needs to be between 1-79 bytes when encoded as Latin-1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":247862,"byte_end":247945,"line_start":380,"line_end":380,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248054,"byte_end":248064,"line_start":383,"line_end":383,"column_start":9,"column_end":19},"name":"compressed","qualname":"::text_metadata::ITXtChunk::compressed","value":"bool","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Indicates whether the text will be (or was) compressed in the PNG.\n","sig":null,"attributes":[{"value":"/ Indicates whether the text will be (or was) compressed in the PNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":247975,"byte_end":248045,"line_start":382,"line_end":382,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248185,"byte_end":248197,"line_start":385,"line_end":385,"column_start":9,"column_end":21},"name":"language_tag","qualname":"::text_metadata::ITXtChunk::language_tag","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.\n","sig":null,"attributes":[{"value":"/ A hyphen separated list of languages that the keyword is translated to. This is ASCII-7 encoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248076,"byte_end":248176,"line_start":384,"line_end":384,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248266,"byte_end":248284,"line_start":387,"line_end":387,"column_start":9,"column_end":27},"name":"translated_keyword","qualname":"::text_metadata::ITXtChunk::translated_keyword","value":"std::string::String","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Translated keyword. This is UTF-8 encoded.\n","sig":null,"attributes":[{"value":"/ Translated keyword. This is UTF-8 encoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248211,"byte_end":248257,"line_start":386,"line_end":386,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248539,"byte_end":248542,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<ITXtChunk>::new","value":"pub fn new<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new iTXt chunk. Leaves all but keyword and text to default values.\n","sig":null,"attributes":[{"value":"/ Constructs a new iTXt chunk. Leaves all but keyword and text to default values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248444,"byte_end":248527,"line_start":393,"line_end":393,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":250471,"byte_end":250486,"line_start":451,"line_end":451,"column_start":12,"column_end":27},"name":"decompress_text","qualname":"<ITXtChunk>::decompress_text","value":"pub fn decompress_text(&mut Self) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `DECOMPRESSION_LIMIT` bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":250334,"byte_end":250459,"line_start":450,"line_end":450,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":250724,"byte_end":250750,"line_start":456,"line_end":456,"column_start":12,"column_end":38},"name":"decompress_text_with_limit","qualname":"<ITXtChunk>::decompress_text_with_limit","value":"pub fn decompress_text_with_limit(&mut Self, usize)\n-> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, mutating its own state. Can only handle decompressed text up to `limit` bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":250601,"byte_end":250712,"line_start":455,"line_end":455,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":251917,"byte_end":251925,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"get_text","qualname":"<ITXtChunk>::get_text","value":"pub fn get_text(&Self) -> Result<String, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the inner text, and returns it as a `String`.\n If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.\n","sig":null,"attributes":[{"value":"/ Decompresses the inner text, and returns it as a `String`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":251737,"byte_end":251799,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ If decompression takes more than 2 MiB, try `decompress_text_with_limit` followed by this method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":251804,"byte_end":251905,"line_start":481,"line_end":481,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":252492,"byte_end":252505,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"compress_text","qualname":"<ITXtChunk>::compress_text","value":"pub fn compress_text(&mut Self) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the inner text, mutating its own state.\n","sig":null,"attributes":[{"value":"/ Compresses the inner text, mutating its own state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":252426,"byte_end":252480,"line_start":494,"line_end":494,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5210,"byte_end":5219,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5345,"byte_end":5354,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6616,"byte_end":6625,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9429,"byte_end":9437,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10304,"byte_end":10308,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10928,"byte_end":10937,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11309,"byte_end":11318,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11919,"byte_end":11926,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12244,"byte_end":12251,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13282,"byte_end":13294,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13639,"byte_end":13651,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14797,"byte_end":14813,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15762,"byte_end":15773,"line_start":327,"line_end":327,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17621,"byte_end":17641,"line_start":388,"line_end":388,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":1325},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20146,"byte_end":20165,"line_start":441,"line_end":441,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22722,"byte_end":22726,"line_start":506,"line_end":506,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23626,"byte_end":23630,"line_start":535,"line_end":535,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":28745,"byte_end":28758,"line_start":674,"line_end":674,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30890,"byte_end":30905,"line_start":728,"line_end":728,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":31318,"byte_end":31333,"line_start":739,"line_end":739,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":32562,"byte_end":32576,"line_start":767,"line_end":767,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":32692,"byte_end":32706,"line_start":773,"line_end":773,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":74573,"byte_end":74586,"line_start":212,"line_end":212,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":74791,"byte_end":74804,"line_start":221,"line_end":221,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":75205,"byte_end":75216,"line_start":233,"line_end":233,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81334,"byte_end":81347,"line_start":350,"line_end":350,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81469,"byte_end":81482,"line_start":356,"line_end":356,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81610,"byte_end":81621,"line_start":362,"line_end":362,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81743,"byte_end":81748,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81992,"byte_end":82005,"line_start":377,"line_end":377,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":82284,"byte_end":82296,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83341,"byte_end":83357,"line_start":428,"line_end":428,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":115470,"byte_end":115474,"line_start":1274,"line_end":1274,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":116149,"byte_end":116165,"line_start":1292,"line_end":1292,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":116241,"byte_end":116251,"line_start":1298,"line_end":1298,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\zlib.rs","byte_start":129984,"byte_end":129994,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34233,"byte_end":34243,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34765,"byte_end":34771,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35311,"byte_end":35324,"line_start":88,"line_end":88,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36285,"byte_end":36288,"line_start":123,"line_end":123,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36379,"byte_end":36386,"line_start":129,"line_end":129,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39579,"byte_end":39590,"line_start":217,"line_end":217,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":43646,"byte_end":43652,"line_start":339,"line_end":339,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":62597,"byte_end":62609,"line_start":821,"line_end":821,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137198,"byte_end":137211,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137416,"byte_end":137429,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137838,"byte_end":137849,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":139715,"byte_end":139728,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":139856,"byte_end":139861,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140030,"byte_end":140041,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140167,"byte_end":140180,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141003,"byte_end":141010,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":154521,"byte_end":154532,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":156210,"byte_end":156216,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173107,"byte_end":173113,"line_start":986,"line_end":986,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173395,"byte_end":173406,"line_start":1000,"line_end":1000,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173660,"byte_end":173671,"line_start":1011,"line_end":1011,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":174732,"byte_end":174743,"line_start":1042,"line_end":1042,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":178088,"byte_end":178099,"line_start":1146,"line_end":1146,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":179455,"byte_end":179466,"line_start":1187,"line_end":1187,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180588,"byte_end":180595,"line_start":1218,"line_end":1218,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":181808,"byte_end":181820,"line_start":1257,"line_end":1257,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":192076,"byte_end":192088,"line_start":1531,"line_end":1531,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":194742,"byte_end":194754,"line_start":1608,"line_end":1608,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":219017,"byte_end":219028,"line_start":2291,"line_end":2291,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220044,"byte_end":220054,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220122,"byte_end":220132,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220976,"byte_end":220994,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":240903,"byte_end":240912,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":241787,"byte_end":241796,"line_start":217,"line_end":217,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242950,"byte_end":242959,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":246549,"byte_end":246558,"line_start":342,"line_end":342,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248428,"byte_end":248437,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":253282,"byte_end":253291,"line_start":516,"line_end":516,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\utils.rs","byte_start":259879,"byte_end":259892,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\utils.rs","byte_start":261041,"byte_end":261054,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2634,"byte_end":2639,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\lib.rs","byte_start":2709,"byte_end":2722,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":912}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5210,"byte_end":5219,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1091},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\chunk.rs","byte_start":5345,"byte_end":5354,"line_start":81,"line_end":81,"column_start":29,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":6616,"byte_end":6625,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":9429,"byte_end":9437,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10304,"byte_end":10308,"line_start":146,"line_end":146,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":10928,"byte_end":10937,"line_start":169,"line_end":169,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11309,"byte_end":11318,"line_start":181,"line_end":181,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":11919,"byte_end":11926,"line_start":202,"line_end":202,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":12244,"byte_end":12251,"line_start":213,"line_end":213,"column_start":23,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1236},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13282,"byte_end":13294,"line_start":246,"line_end":246,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":13639,"byte_end":13651,"line_start":262,"line_end":262,"column_start":6,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":14797,"byte_end":14813,"line_start":296,"line_end":296,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":15762,"byte_end":15773,"line_start":327,"line_end":327,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":17621,"byte_end":17641,"line_start":388,"line_end":388,"column_start":6,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":20146,"byte_end":20165,"line_start":441,"line_end":441,"column_start":6,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":22722,"byte_end":22726,"line_start":506,"line_end":506,"column_start":18,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":23626,"byte_end":23630,"line_start":535,"line_end":535,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":28745,"byte_end":28758,"line_start":674,"line_end":674,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":30890,"byte_end":30905,"line_start":728,"line_end":728,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":31318,"byte_end":31333,"line_start":739,"line_end":739,"column_start":18,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":32562,"byte_end":32576,"line_start":767,"line_end":767,"column_start":35,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\common.rs","byte_start":32692,"byte_end":32706,"line_start":773,"line_end":773,"column_start":23,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":74573,"byte_end":74586,"line_start":212,"line_end":212,"column_start":23,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1570},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":74791,"byte_end":74804,"line_start":221,"line_end":221,"column_start":23,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":75205,"byte_end":75216,"line_start":233,"line_end":233,"column_start":23,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1584},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81334,"byte_end":81347,"line_start":350,"line_end":350,"column_start":26,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81469,"byte_end":81482,"line_start":356,"line_end":356,"column_start":28,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81610,"byte_end":81621,"line_start":362,"line_end":362,"column_start":33,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1584},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81743,"byte_end":81748,"line_start":368,"line_end":368,"column_start":34,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":81992,"byte_end":82005,"line_start":377,"line_end":377,"column_start":34,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":82284,"byte_end":82296,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":83341,"byte_end":83357,"line_start":428,"line_end":428,"column_start":6,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":115470,"byte_end":115474,"line_start":1274,"line_end":1274,"column_start":6,"column_end":10},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":116149,"byte_end":116165,"line_start":1292,"line_end":1292,"column_start":18,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\stream.rs","byte_start":116241,"byte_end":116251,"line_start":1298,"line_end":1298,"column_start":18,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\zlib.rs","byte_start":129984,"byte_end":129994,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34233,"byte_end":34243,"line_start":46,"line_end":46,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":34765,"byte_end":34771,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":35311,"byte_end":35324,"line_start":88,"line_end":88,"column_start":13,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36285,"byte_end":36288,"line_start":123,"line_end":123,"column_start":13,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":36379,"byte_end":36386,"line_start":129,"line_end":129,"column_start":15,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":39579,"byte_end":39590,"line_start":217,"line_end":217,"column_start":15,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":43646,"byte_end":43652,"line_start":339,"line_end":339,"column_start":15,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\decoder\\mod.rs","byte_start":62597,"byte_end":62609,"line_start":821,"line_end":821,"column_start":6,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137198,"byte_end":137211,"line_start":53,"line_end":53,"column_start":23,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1764},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137416,"byte_end":137429,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":137838,"byte_end":137849,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":139715,"byte_end":139728,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":139856,"byte_end":139861,"line_start":120,"line_end":120,"column_start":34,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140030,"byte_end":140041,"line_start":127,"line_end":127,"column_start":32,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":140167,"byte_end":140180,"line_start":133,"line_end":133,"column_start":34,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":141003,"byte_end":141010,"line_start":163,"line_end":163,"column_start":20,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":154521,"byte_end":154532,"line_start":482,"line_end":482,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":156210,"byte_end":156216,"line_start":540,"line_end":540,"column_start":16,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173107,"byte_end":173113,"line_start":986,"line_end":986,"column_start":25,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173395,"byte_end":173406,"line_start":1000,"line_end":1000,"column_start":30,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":173660,"byte_end":173671,"line_start":1011,"line_end":1011,"column_start":33,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":781},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":174732,"byte_end":174743,"line_start":1042,"line_end":1042,"column_start":20,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":178088,"byte_end":178099,"line_start":1146,"line_end":1146,"column_start":30,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":799},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":179455,"byte_end":179466,"line_start":1187,"line_end":1187,"column_start":25,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":799},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":180588,"byte_end":180595,"line_start":1218,"line_end":1218,"column_start":20,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":181808,"byte_end":181820,"line_start":1257,"line_end":1257,"column_start":20,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":192076,"byte_end":192088,"line_start":1531,"line_end":1531,"column_start":30,"column_end":42},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":194742,"byte_end":194754,"line_start":1608,"line_end":1608,"column_start":25,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\encoder.rs","byte_start":219017,"byte_end":219028,"line_start":2291,"line_end":2291,"column_start":6,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220044,"byte_end":220054,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220122,"byte_end":220132,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\filter.rs","byte_start":220976,"byte_end":220994,"line_start":51,"line_end":51,"column_start":18,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":240903,"byte_end":240912,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":241787,"byte_end":241796,"line_start":217,"line_end":217,"column_start":29,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1906},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":242950,"byte_end":242959,"line_start":252,"line_end":252,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":246549,"byte_end":246558,"line_start":342,"line_end":342,"column_start":29,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1920},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":248428,"byte_end":248437,"line_start":392,"line_end":392,"column_start":6,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\text_metadata.rs","byte_start":253282,"byte_end":253291,"line_start":516,"line_end":516,"column_start":29,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1952},"to":{"krate":0,"index":948}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\traits.rs","byte_start":256368,"byte_end":256372,"line_start":28,"line_end":28,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":4723},"to":{"krate":0,"index":1013}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\traits.rs","byte_start":256566,"byte_end":256571,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":4780},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\utils.rs","byte_start":259879,"byte_end":259892,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\png-0.17.5\\src\\utils.rs","byte_start":261041,"byte_end":261054,"line_start":152,"line_end":152,"column_start":19,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":7985}}]}