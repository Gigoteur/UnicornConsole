{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","either","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=910a39260a40160e","-C","extra-filename=-910a39260a40160e","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libeither-910a39260a40160e.rmeta"},"prelude":{"crate_id":{"name":"either","disambiguator":[5580897624720220718,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":29559,"line_start":1,"line_end":1146,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1003,"byte_end":1007,"line_start":41,"line_end":41,"column_start":18,"column_end":22},"alias_span":null,"name":"Left","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1003,"byte_end":1007,"line_start":41,"line_end":41,"column_start":18,"column_end":22},"alias_span":null,"name":"Left","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1009,"byte_end":1014,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"alias_span":null,"name":"Right","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1009,"byte_end":1014,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"alias_span":null,"name":"Right","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":29559,"line_start":1,"line_end":1146,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":181},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":78},{"krate":0,"index":83},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":137},{"krate":0,"index":142},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" The enum [`Either`] with variants `Left` and `Right` is a general purpose\n sum type with two cases.","sig":null,"attributes":[{"value":"/ The enum [`Either`] with variants `Left` and `Right` is a general purpose","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ sum type with two cases.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":78,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":107,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`Either`]: enum.Either.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":111,"byte_end":143,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":144,"byte_end":147,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ **Crate features:**","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":148,"byte_end":171,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":172,"byte_end":175,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * `\"use_std\"`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":176,"byte_end":193,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/ Enabled by default. Disable to make the library `#![no_std]`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":194,"byte_end":259,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":260,"byte_end":263,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `\"serde\"`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":264,"byte_end":279,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ Disabled by default. Enable to `#[derive(Serialize, Deserialize)]` for `Either`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":280,"byte_end":363,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":364,"byte_end":367,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":476,"byte_end":482,"line_start":16,"line_end":16,"column_start":55,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1492,"byte_end":1496,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Left","qualname":"::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" A value of type `L`.\n","sig":null,"attributes":[{"value":"/ A value of type `L`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1463,"byte_end":1487,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1534,"byte_end":1539,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Right","qualname":"::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" A value of type `R`.\n","sig":null,"attributes":[{"value":"/ A value of type `R`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1505,"byte_end":1529,"line_start":54,"line_end":54,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1444,"byte_end":1450,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Either","qualname":"::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" The enum `Either` with variants `Left` and `Right` is a general purpose\n sum type with two cases.","sig":null,"attributes":[{"value":"/ The enum `Either` with variants `Left` and `Right` is a general purpose","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1018,"byte_end":1093,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ sum type with two cases.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1094,"byte_end":1122,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1123,"byte_end":1126,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The `Either` type is symmetric and treats its variants the same way, without","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1127,"byte_end":1207,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ preference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1208,"byte_end":1223,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/ (For representing success or error, use the regular `Result` enum instead.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":1224,"byte_end":1303,"line_start":48,"line_end":48,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3287,"byte_end":3294,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"is_left","qualname":"<Either<L, R>>::is_left","value":"pub fn is_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the value is the `Left` variant.","sig":null,"attributes":[{"value":"/ Return true if the value is the `Left` variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3008,"byte_end":3059,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3064,"byte_end":3067,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3072,"byte_end":3079,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3084,"byte_end":3102,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3107,"byte_end":3110,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let values = [Left(1), Right(\"the right value\")];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3115,"byte_end":3168,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(values[0].is_left(), true);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3173,"byte_end":3215,"line_start":118,"line_end":118,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(values[1].is_left(), false);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3220,"byte_end":3263,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3268,"byte_end":3275,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3697,"byte_end":3705,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"is_right","qualname":"<Either<L, R>>::is_right","value":"pub fn is_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the value is the `Right` variant.","sig":null,"attributes":[{"value":"/ Return true if the value is the `Right` variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3415,"byte_end":3467,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3472,"byte_end":3475,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3480,"byte_end":3487,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3492,"byte_end":3510,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3515,"byte_end":3518,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let values = [Left(1), Right(\"the right value\")];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3523,"byte_end":3576,"line_start":133,"line_end":133,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(values[0].is_right(), false);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3581,"byte_end":3625,"line_start":134,"line_end":134,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(values[1].is_right(), true);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3630,"byte_end":3673,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3678,"byte_end":3685,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4098,"byte_end":4102,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"left","qualname":"<Either<L, R>>::left","value":"pub fn left(Self) -> Option<L>","parent":null,"children":[],"decl_id":null,"docs":" Convert the left side of `Either<L, R>` to an `Option<L>`.","sig":null,"attributes":[{"value":"/ Convert the left side of `Either<L, R>` to an `Option<L>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3758,"byte_end":3820,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3825,"byte_end":3828,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3833,"byte_end":3840,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3845,"byte_end":3863,"line_start":144,"line_end":144,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3868,"byte_end":3871,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3876,"byte_end":3925,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.left(),  Some(\"some value\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3930,"byte_end":3979,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3984,"byte_end":3987,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(321);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":3992,"byte_end":4034,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(right.left(), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4039,"byte_end":4074,"line_start":150,"line_end":150,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4079,"byte_end":4086,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4562,"byte_end":4567,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"right","qualname":"<Either<L, R>>::right","value":"pub fn right(Self) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Convert the right side of `Either<L, R>` to an `Option<R>`.","sig":null,"attributes":[{"value":"/ Convert the right side of `Either<L, R>` to an `Option<R>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4228,"byte_end":4291,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4296,"byte_end":4299,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4304,"byte_end":4311,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4316,"byte_end":4334,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4339,"byte_end":4342,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4347,"byte_end":4396,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.right(),  None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4401,"byte_end":4437,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4442,"byte_end":4445,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(321);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4450,"byte_end":4492,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(right.right(), Some(321));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4497,"byte_end":4538,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4543,"byte_end":4550,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5048,"byte_end":5054,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Either<L, R>>::as_ref","value":"pub fn as_ref(&Self) -> Either<&L, &R>","parent":null,"children":[],"decl_id":null,"docs":" Convert `&Either<L, R>` to `Either<&L, &R>`.","sig":null,"attributes":[{"value":"/ Convert `&Either<L, R>` to `Either<&L, &R>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4693,"byte_end":4741,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4746,"byte_end":4749,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4754,"byte_end":4761,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4766,"byte_end":4784,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4789,"byte_end":4792,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(\"some value\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4797,"byte_end":4846,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(left.as_ref(), Left(&\"some value\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4851,"byte_end":4902,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4907,"byte_end":4910,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(\"some value\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4915,"byte_end":4966,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.as_ref(), Right(&\"some value\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":4971,"byte_end":5024,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5029,"byte_end":5036,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5727,"byte_end":5733,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Either<L, R>>::as_mut","value":"pub fn as_mut(&mut Self) -> Either<&mut L, &mut R>","parent":null,"children":[],"decl_id":null,"docs":" Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","sig":null,"attributes":[{"value":"/ Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5215,"byte_end":5275,"line_start":195,"line_end":195,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5280,"byte_end":5283,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5288,"byte_end":5295,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5300,"byte_end":5318,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5323,"byte_end":5326,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ fn mutate_left(value: &mut Either<u32, u32>) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5331,"byte_end":5381,"line_start":200,"line_end":200,"column_start":5,"column_end":55}},{"value":"/     if let Some(l) = value.as_mut().left() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5386,"byte_end":5434,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/         *l = 999;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5439,"byte_end":5460,"line_start":202,"line_end":202,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5465,"byte_end":5474,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5479,"byte_end":5484,"line_start":204,"line_end":204,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5489,"byte_end":5492,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let mut left = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5497,"byte_end":5526,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/ let mut right = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5531,"byte_end":5562,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ mutate_left(&mut left);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5567,"byte_end":5594,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ mutate_left(&mut right);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5599,"byte_end":5627,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(left, Left(999));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5632,"byte_end":5664,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(right, Right(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5669,"byte_end":5703,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5708,"byte_end":5715,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6242,"byte_end":6246,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"flip","qualname":"<Either<L, R>>::flip","value":"pub fn flip(Self) -> Either<R, L>","parent":null,"children":[],"decl_id":null,"docs":" Convert `Either<L, R>` to `Either<R, L>`.","sig":null,"attributes":[{"value":"/ Convert `Either<L, R>` to `Either<R, L>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5914,"byte_end":5959,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5964,"byte_end":5967,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5972,"byte_end":5979,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":5984,"byte_end":6002,"line_start":223,"line_end":223,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6007,"byte_end":6010,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, ()> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6015,"byte_end":6055,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(left.flip(), Right(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6060,"byte_end":6100,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6105,"byte_end":6108,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(), _> = Right(\"some value\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6113,"byte_end":6164,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.flip(), Left(\"some value\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6169,"byte_end":6218,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6223,"byte_end":6230,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6791,"byte_end":6799,"line_start":250,"line_end":250,"column_start":12,"column_end":20},"name":"map_left","qualname":"<Either<L, R>>::map_left","value":"pub fn map_left<F, M>(Self, F) -> Either<M, R> where F: FnOnce(L) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Left` variant if it is present rewrapping the\n result in `Left`.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Left` variant if it is present rewrapping the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6379,"byte_end":6472,"line_start":238,"line_end":238,"column_start":5,"column_end":98}},{"value":"/ result in `Left`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6477,"byte_end":6498,"line_start":239,"line_end":239,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6503,"byte_end":6506,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6511,"byte_end":6518,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6523,"byte_end":6541,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6546,"byte_end":6549,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6554,"byte_end":6595,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.map_left(|x| x * 2), Left(246));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6600,"byte_end":6652,"line_start":245,"line_end":245,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6657,"byte_end":6660,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6665,"byte_end":6708,"line_start":247,"line_end":247,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.map_left(|x| x * 2), Right(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6713,"byte_end":6767,"line_start":248,"line_end":248,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6772,"byte_end":6779,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7404,"byte_end":7413,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"map_right","qualname":"<Either<L, R>>::map_right","value":"pub fn map_right<F, S>(Self, F) -> Either<L, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Right` variant if it is present rewrapping the\n result in `Right`.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Right` variant if it is present rewrapping the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":6988,"byte_end":7082,"line_start":260,"line_end":260,"column_start":5,"column_end":99}},{"value":"/ result in `Right`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7087,"byte_end":7109,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7114,"byte_end":7117,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7122,"byte_end":7129,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7134,"byte_end":7152,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7157,"byte_end":7160,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7165,"byte_end":7206,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.map_right(|x| x * 2), Left(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7211,"byte_end":7264,"line_start":267,"line_end":267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7269,"byte_end":7272,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7277,"byte_end":7320,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.map_right(|x| x * 2), Right(246));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7325,"byte_end":7380,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7385,"byte_end":7392,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8205,"byte_end":8211,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"either","qualname":"<Either<L, R>>::either","value":"pub fn either<F, G, T>(Self, F, G) -> T where F: FnOnce(L) -> T, G: FnOnce(R)\n-> T","parent":null,"children":[],"decl_id":null,"docs":" Apply one of two functions depending on contents, unifying their result. If the value is\n `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\n function `g` is applied.","sig":null,"attributes":[{"value":"/ Apply one of two functions depending on contents, unifying their result. If the value is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7602,"byte_end":7694,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/ `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7699,"byte_end":7788,"line_start":283,"line_end":283,"column_start":5,"column_end":94}},{"value":"/ function `g` is applied.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7793,"byte_end":7821,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7826,"byte_end":7829,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7834,"byte_end":7841,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7846,"byte_end":7864,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7869,"byte_end":7872,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ fn square(n: u32) -> i32 { (n * n) as i32 }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7877,"byte_end":7924,"line_start":289,"line_end":289,"column_start":5,"column_end":52}},{"value":"/ fn negate(n: i32) -> i32 { -n }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7929,"byte_end":7964,"line_start":290,"line_end":290,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7969,"byte_end":7972,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let left: Either<u32, i32> = Left(4);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":7977,"byte_end":8018,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.either(square, negate), 16);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8023,"byte_end":8071,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8076,"byte_end":8079,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, i32> = Right(-4);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8084,"byte_end":8128,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(right.either(square, negate), 4);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8133,"byte_end":8181,"line_start":296,"line_end":296,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8186,"byte_end":8193,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9030,"byte_end":9041,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"either_with","qualname":"<Either<L, R>>::either_with","value":"pub fn either_with<Ctx, F, G, T>(Self, Ctx, F, G) -> T where F: FnOnce(Ctx, L)\n-> T, G: FnOnce(Ctx, R) -> T","parent":null,"children":[],"decl_id":null,"docs":" Like `either`, but provide some context to whichever of the\n functions ends up being called.","sig":null,"attributes":[{"value":"/ Like `either`, but provide some context to whichever of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8415,"byte_end":8478,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ functions ends up being called.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8483,"byte_end":8518,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8523,"byte_end":8526,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8531,"byte_end":8538,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ // In this example, the context is a mutable reference","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8543,"byte_end":8601,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8606,"byte_end":8624,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8629,"byte_end":8632,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let mut result = Vec::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8637,"byte_end":8669,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8674,"byte_end":8677,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let values = vec![Left(2), Right(2.7)];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8682,"byte_end":8725,"line_start":318,"line_end":318,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8730,"byte_end":8733,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ for value in values {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8738,"byte_end":8763,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/     value.either_with(&mut result,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8768,"byte_end":8806,"line_start":321,"line_end":321,"column_start":5,"column_end":43}},{"value":"/                       |ctx, integer| ctx.push(integer),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8811,"byte_end":8870,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/                       |ctx, real| ctx.push(f64::round(real) as i32));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8875,"byte_end":8948,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8953,"byte_end":8958,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8963,"byte_end":8966,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":8971,"byte_end":9006,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9011,"byte_end":9018,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9694,"byte_end":9707,"line_start":350,"line_end":350,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<Either<L, R>>::left_and_then","value":"pub fn left_and_then<F, S>(Self, F) -> Either<S, R> where F: FnOnce(L) ->\nEither<S, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Left` variant if it is present.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Left` variant if it is present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9280,"byte_end":9359,"line_start":339,"line_end":339,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9364,"byte_end":9367,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9372,"byte_end":9379,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9384,"byte_end":9402,"line_start":342,"line_end":342,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9407,"byte_end":9410,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9415,"byte_end":9456,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.left_and_then::<_,()>(|x| Right(x * 2)), Right(246));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9461,"byte_end":9534,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9539,"byte_end":9542,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9547,"byte_end":9590,"line_start":347,"line_end":347,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.left_and_then(|x| Right::<(), _>(x * 2)), Right(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9595,"byte_end":9670,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9675,"byte_end":9682,"line_start":349,"line_end":349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10300,"byte_end":10314,"line_start":371,"line_end":371,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<Either<L, R>>::right_and_then","value":"pub fn right_and_then<F, S>(Self, F) -> Either<L, S> where F: FnOnce(R) ->\nEither<L, S>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value in the `Right` variant if it is present.","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value in the `Right` variant if it is present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9901,"byte_end":9981,"line_start":360,"line_end":360,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9986,"byte_end":9989,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":9994,"byte_end":10001,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10006,"byte_end":10024,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10029,"byte_end":10032,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10037,"byte_end":10078,"line_start":365,"line_end":365,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.right_and_then(|x| Right(x * 2)), Left(123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10083,"byte_end":10148,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10153,"byte_end":10156,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10161,"byte_end":10204,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.right_and_then(|x| Right(x * 2)), Right(246));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10209,"byte_end":10276,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10281,"byte_end":10288,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10847,"byte_end":10856,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<Either<L, R>>::into_iter","value":"pub fn into_iter(Self) -> Either<L::IntoIter, R::IntoIter> where\nL: IntoIterator, R: IntoIterator<Item = L::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert the inner value to an iterator.","sig":null,"attributes":[{"value":"/ Convert the inner value to an iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10507,"byte_end":10550,"line_start":381,"line_end":381,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10555,"byte_end":10558,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10563,"byte_end":10570,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10575,"byte_end":10593,"line_start":384,"line_end":384,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10598,"byte_end":10601,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, Vec<u32>> = Left(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10606,"byte_end":10668,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ let mut right: Either<Vec<u32>, _> = Right(vec![]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10673,"byte_end":10728,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/ right.extend(left.into_iter());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10733,"byte_end":10768,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, Right(vec![1, 2, 3, 4, 5]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10773,"byte_end":10823,"line_start":389,"line_end":389,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":10828,"byte_end":10835,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11722,"byte_end":11729,"line_start":420,"line_end":420,"column_start":12,"column_end":19},"name":"left_or","qualname":"<Either<L, R>>::left_or","value":"pub fn left_or(Self, L) -> L","parent":null,"children":[],"decl_id":null,"docs":" Return left value or given value","sig":null,"attributes":[{"value":"/ Return left value or given value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11113,"byte_end":11149,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11154,"byte_end":11157,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Arguments passed to `left_or` are eagerly evaluated; if you are passing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11162,"byte_end":11237,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ the result of a function call, it is recommended to use [`left_or_else`],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11242,"byte_end":11319,"line_start":405,"line_end":405,"column_start":5,"column_end":82}},{"value":"/ which is lazily evaluated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11324,"byte_end":11354,"line_start":406,"line_end":406,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11359,"byte_end":11362,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ [`left_or_else`]: #method.left_or_else","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11367,"byte_end":11409,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11414,"byte_end":11417,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11422,"byte_end":11436,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11441,"byte_end":11444,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11449,"byte_end":11456,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11461,"byte_end":11481,"line_start":413,"line_end":413,"column_start":5,"column_end":25}},{"value":"/ let left: Either<&str, &str> = Left(\"left\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11486,"byte_end":11534,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(left.left_or(\"foo\"), \"left\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11539,"byte_end":11583,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11588,"byte_end":11591,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let right: Either<&str, &str> = Right(\"right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11596,"byte_end":11647,"line_start":417,"line_end":417,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.left_or(\"left\"), \"left\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11652,"byte_end":11698,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11703,"byte_end":11710,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12234,"byte_end":12249,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"left_or_default","qualname":"<Either<L, R>>::left_or_default","value":"pub fn left_or_default(Self) -> L where L: Default","parent":null,"children":[],"decl_id":null,"docs":" Return left or a default","sig":null,"attributes":[{"value":"/ Return left or a default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11868,"byte_end":11896,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11901,"byte_end":11904,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11909,"byte_end":11923,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11928,"byte_end":11931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11936,"byte_end":11943,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11948,"byte_end":11968,"line_start":432,"line_end":432,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"left\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":11973,"byte_end":12034,"line_start":433,"line_end":433,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(left.left_or_default(), \"left\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12039,"byte_end":12086,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12091,"byte_end":12094,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(42);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12099,"byte_end":12146,"line_start":436,"line_end":436,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(right.left_or_default(), String::default());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12151,"byte_end":12210,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12215,"byte_end":12222,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12817,"byte_end":12829,"line_start":461,"line_end":461,"column_start":12,"column_end":24},"name":"left_or_else","qualname":"<Either<L, R>>::left_or_else","value":"pub fn left_or_else<F>(Self, F) -> L where F: FnOnce(R) -> L","parent":null,"children":[],"decl_id":null,"docs":" Returns left value or computes it from a closure","sig":null,"attributes":[{"value":"/ Returns left value or computes it from a closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12419,"byte_end":12471,"line_start":449,"line_end":449,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12476,"byte_end":12479,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12484,"byte_end":12498,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12503,"byte_end":12506,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12511,"byte_end":12518,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12523,"byte_end":12543,"line_start":454,"line_end":454,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"3\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12548,"byte_end":12606,"line_start":455,"line_end":455,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(left.left_or_else(|_| unreachable!()), \"3\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12611,"byte_end":12670,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12675,"byte_end":12678,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12683,"byte_end":12729,"line_start":458,"line_end":458,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(right.left_or_else(|x| x.to_string()), \"3\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12734,"byte_end":12793,"line_start":459,"line_end":459,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":12798,"byte_end":12805,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13626,"byte_end":13634,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"right_or","qualname":"<Either<L, R>>::right_or","value":"pub fn right_or(Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Return right value or given value","sig":null,"attributes":[{"value":"/ Return right value or given value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13007,"byte_end":13044,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13049,"byte_end":13052,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Arguments passed to `right_or` are eagerly evaluated; if you are passing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13057,"byte_end":13133,"line_start":473,"line_end":473,"column_start":5,"column_end":81}},{"value":"/ the result of a function call, it is recommended to use [`right_or_else`],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13138,"byte_end":13216,"line_start":474,"line_end":474,"column_start":5,"column_end":83}},{"value":"/ which is lazily evaluated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13221,"byte_end":13251,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13256,"byte_end":13259,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`right_or_else`]: #method.right_or_else","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13264,"byte_end":13308,"line_start":477,"line_end":477,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13313,"byte_end":13316,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13321,"byte_end":13335,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13340,"byte_end":13343,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13348,"byte_end":13355,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13360,"byte_end":13380,"line_start":482,"line_end":482,"column_start":5,"column_end":25}},{"value":"/ let right: Either<&str, &str> = Right(\"right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13385,"byte_end":13436,"line_start":483,"line_end":483,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(right.right_or(\"foo\"), \"right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13441,"byte_end":13488,"line_start":484,"line_end":484,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13493,"byte_end":13496,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let left: Either<&str, &str> = Left(\"left\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13501,"byte_end":13549,"line_start":486,"line_end":486,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(left.right_or(\"right\"), \"right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13554,"byte_end":13602,"line_start":487,"line_end":487,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13607,"byte_end":13614,"line_start":488,"line_end":488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14135,"byte_end":14151,"line_start":508,"line_end":508,"column_start":12,"column_end":28},"name":"right_or_default","qualname":"<Either<L, R>>::right_or_default","value":"pub fn right_or_default(Self) -> R where R: Default","parent":null,"children":[],"decl_id":null,"docs":" Return right or a default","sig":null,"attributes":[{"value":"/ Return right or a default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13773,"byte_end":13802,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13807,"byte_end":13810,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13815,"byte_end":13829,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13834,"byte_end":13837,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13842,"byte_end":13849,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13854,"byte_end":13874,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"left\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13879,"byte_end":13940,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(left.right_or_default(), u32::default());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":13945,"byte_end":14001,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14006,"byte_end":14009,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(42);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14014,"byte_end":14061,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(right.right_or_default(), 42);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14066,"byte_end":14111,"line_start":506,"line_end":506,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14116,"byte_end":14123,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14723,"byte_end":14736,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"right_or_else","qualname":"<Either<L, R>>::right_or_else","value":"pub fn right_or_else<F>(Self, F) -> R where F: FnOnce(L) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns right value or computes it from a closure","sig":null,"attributes":[{"value":"/ Returns right value or computes it from a closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14321,"byte_end":14374,"line_start":518,"line_end":518,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14379,"byte_end":14382,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14387,"byte_end":14401,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14406,"byte_end":14409,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14414,"byte_end":14421,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14426,"byte_end":14446,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/ let left: Either<String, u32> = Left(\"3\".to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14451,"byte_end":14509,"line_start":524,"line_end":524,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(left.right_or_else(|x| x.parse().unwrap()), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14514,"byte_end":14576,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14581,"byte_end":14584,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let right: Either<String, u32> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14589,"byte_end":14635,"line_start":527,"line_end":527,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(right.right_or_else(|_| unreachable!()), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14640,"byte_end":14699,"line_start":528,"line_end":528,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14704,"byte_end":14711,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15339,"byte_end":15350,"line_start":559,"line_end":559,"column_start":12,"column_end":23},"name":"unwrap_left","qualname":"<Either<L, R>>::unwrap_left","value":"pub fn unwrap_left(Self) -> L where R: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the left value","sig":null,"attributes":[{"value":"/ Returns the left value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14914,"byte_end":14940,"line_start":540,"line_end":540,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14945,"byte_end":14948,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14953,"byte_end":14967,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14972,"byte_end":14975,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14980,"byte_end":14987,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":14992,"byte_end":15012,"line_start":545,"line_end":545,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15017,"byte_end":15055,"line_start":546,"line_end":546,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(left.unwrap_left(), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15060,"byte_end":15098,"line_start":547,"line_end":547,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15103,"byte_end":15110,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15115,"byte_end":15118,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15123,"byte_end":15135,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15140,"byte_end":15143,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Right` value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15148,"byte_end":15184,"line_start":552,"line_end":552,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15189,"byte_end":15192,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15197,"byte_end":15216,"line_start":554,"line_end":554,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15221,"byte_end":15241,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15246,"byte_end":15286,"line_start":556,"line_end":556,"column_start":5,"column_end":45}},{"value":"/ right.unwrap_left();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15291,"byte_end":15315,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15320,"byte_end":15327,"line_start":558,"line_end":558,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16042,"byte_end":16054,"line_start":590,"line_end":590,"column_start":12,"column_end":24},"name":"unwrap_right","qualname":"<Either<L, R>>::unwrap_right","value":"pub fn unwrap_right(Self) -> R where L: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the right value","sig":null,"attributes":[{"value":"/ Returns the right value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15615,"byte_end":15642,"line_start":571,"line_end":571,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15647,"byte_end":15650,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15655,"byte_end":15669,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15674,"byte_end":15677,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15682,"byte_end":15689,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15694,"byte_end":15714,"line_start":576,"line_end":576,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15719,"byte_end":15759,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(right.unwrap_right(), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15764,"byte_end":15804,"line_start":578,"line_end":578,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15809,"byte_end":15816,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15821,"byte_end":15824,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15829,"byte_end":15841,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15846,"byte_end":15849,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Left` value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15854,"byte_end":15889,"line_start":583,"line_end":583,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15894,"byte_end":15897,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15902,"byte_end":15921,"line_start":585,"line_end":585,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15926,"byte_end":15946,"line_start":586,"line_end":586,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15951,"byte_end":15989,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/ left.unwrap_right();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":15994,"byte_end":16018,"line_start":588,"line_end":588,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16023,"byte_end":16030,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16747,"byte_end":16758,"line_start":619,"line_end":619,"column_start":12,"column_end":23},"name":"expect_left","qualname":"<Either<L, R>>::expect_left","value":"pub fn expect_left(Self, &str) -> L where R: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the left value","sig":null,"attributes":[{"value":"/ Returns the left value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16288,"byte_end":16314,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16319,"byte_end":16322,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16327,"byte_end":16341,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16346,"byte_end":16349,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16354,"byte_end":16361,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16366,"byte_end":16386,"line_start":605,"line_end":605,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16391,"byte_end":16429,"line_start":606,"line_end":606,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(left.expect_left(\"value was Right\"), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16434,"byte_end":16489,"line_start":607,"line_end":607,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16494,"byte_end":16501,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16506,"byte_end":16509,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16514,"byte_end":16526,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16531,"byte_end":16534,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Right` value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16539,"byte_end":16575,"line_start":612,"line_end":612,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16580,"byte_end":16583,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16588,"byte_end":16607,"line_start":614,"line_end":614,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16612,"byte_end":16632,"line_start":615,"line_end":615,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16637,"byte_end":16677,"line_start":616,"line_end":616,"column_start":5,"column_end":45}},{"value":"/ right.expect_left(\"value was Right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16682,"byte_end":16723,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16728,"byte_end":16735,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17421,"byte_end":17433,"line_start":648,"line_end":648,"column_start":12,"column_end":24},"name":"expect_right","qualname":"<Either<L, R>>::expect_right","value":"pub fn expect_right(Self, &str) -> R where L: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Returns the right value","sig":null,"attributes":[{"value":"/ Returns the right value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16961,"byte_end":16988,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":16993,"byte_end":16996,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17001,"byte_end":17015,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17020,"byte_end":17023,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17028,"byte_end":17035,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17040,"byte_end":17060,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/ let right: Either<(), _> = Right(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17065,"byte_end":17105,"line_start":635,"line_end":635,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(right.expect_right(\"value was Left\"), 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17110,"byte_end":17166,"line_start":636,"line_end":636,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17171,"byte_end":17178,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17183,"byte_end":17186,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17191,"byte_end":17203,"line_start":639,"line_end":639,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17208,"byte_end":17211,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ When `Either` is a `Left` value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17216,"byte_end":17251,"line_start":641,"line_end":641,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17256,"byte_end":17259,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17264,"byte_end":17283,"line_start":643,"line_end":643,"column_start":5,"column_end":24}},{"value":"/ # use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17288,"byte_end":17308,"line_start":644,"line_end":644,"column_start":5,"column_end":25}},{"value":"/ let left: Either<_, ()> = Left(3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17313,"byte_end":17351,"line_start":645,"line_end":645,"column_start":5,"column_end":43}},{"value":"/ left.expect_right(\"value was Right\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17356,"byte_end":17397,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17402,"byte_end":17409,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18128,"byte_end":18140,"line_start":672,"line_end":672,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, L), (T, R)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<L, R>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17677,"byte_end":17735,"line_start":660,"line_end":660,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17740,"byte_end":17743,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17748,"byte_end":17813,"line_start":662,"line_end":662,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17818,"byte_end":17821,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17826,"byte_end":17833,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17838,"byte_end":17856,"line_start":665,"line_end":665,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, (u32, String)> = Left((123, vec![0]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17861,"byte_end":17923,"line_start":666,"line_end":666,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(left.factor_first().0, 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17928,"byte_end":17971,"line_start":667,"line_end":667,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17976,"byte_end":17979,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(u32, Vec<u8>), _> = Right((123, String::new()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17984,"byte_end":18055,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(right.factor_first().0, 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18060,"byte_end":18104,"line_start":670,"line_end":670,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18109,"byte_end":18116,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18793,"byte_end":18806,"line_start":693,"line_end":693,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(L, T), (R, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<L, R>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18339,"byte_end":18397,"line_start":681,"line_end":681,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18402,"byte_end":18405,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18410,"byte_end":18476,"line_start":683,"line_end":683,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18481,"byte_end":18484,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18489,"byte_end":18496,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18501,"byte_end":18519,"line_start":686,"line_end":686,"column_start":5,"column_end":23}},{"value":"/ let left: Either<_, (String, u32)> = Left((vec![0], 123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18524,"byte_end":18586,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(left.factor_second().1, 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18591,"byte_end":18635,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18640,"byte_end":18643,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let right: Either<(Vec<u8>, u32), _> = Right((String::new(), 123));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18648,"byte_end":18719,"line_start":690,"line_end":690,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(right.factor_second().1, 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18724,"byte_end":18769,"line_start":691,"line_end":691,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18774,"byte_end":18781,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19316,"byte_end":19326,"line_start":713,"line_end":713,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18989,"byte_end":19050,"line_start":702,"line_end":702,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19055,"byte_end":19058,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19063,"byte_end":19070,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19075,"byte_end":19093,"line_start":705,"line_end":705,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19098,"byte_end":19101,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let left: Either<_, u32> = Left(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19106,"byte_end":19147,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(left.into_inner(), 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19152,"byte_end":19191,"line_start":708,"line_end":708,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19196,"byte_end":19199,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let right: Either<u32, _> = Right(123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19204,"byte_end":19247,"line_start":710,"line_end":710,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(right.into_inner(), 123);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19252,"byte_end":19292,"line_start":711,"line_end":711,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19297,"byte_end":19304,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19695,"byte_end":19698,"line_start":728,"line_end":728,"column_start":12,"column_end":15},"name":"map","qualname":"<Either<T, T>>::map","value":"pub fn map<F, M>(Self, F) -> Either<M, M> where F: FnOnce(T) -> M","parent":null,"children":[],"decl_id":null,"docs":" Map `f` over the contained value and return the result in the\n corresponding variant.","sig":null,"attributes":[{"value":"/ Map `f` over the contained value and return the result in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19389,"byte_end":19454,"line_start":717,"line_end":717,"column_start":5,"column_end":70}},{"value":"/ corresponding variant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19459,"byte_end":19485,"line_start":718,"line_end":718,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19490,"byte_end":19493,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19498,"byte_end":19505,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/ use either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19510,"byte_end":19528,"line_start":721,"line_end":721,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19533,"byte_end":19536,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let value: Either<_, i32> = Right(42);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19541,"byte_end":19583,"line_start":723,"line_end":723,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19588,"byte_end":19591,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ let other = value.map(|x| x * 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19596,"byte_end":19633,"line_start":725,"line_end":725,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(other, Right(84));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19638,"byte_end":19671,"line_start":726,"line_end":726,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19676,"byte_end":19683,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":2989,"byte_end":2995,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17648,"byte_end":17654,"line_start":659,"line_end":659,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18310,"byte_end":18316,"line_start":680,"line_end":680,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18970,"byte_end":18976,"line_start":701,"line_end":701,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19998,"byte_end":20004,"line_start":740,"line_end":740,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20261,"byte_end":20267,"line_start":750,"line_end":750,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20442,"byte_end":20448,"line_start":759,"line_end":759,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20749,"byte_end":20755,"line_start":773,"line_end":773,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":21863,"byte_end":21869,"line_start":822,"line_end":822,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":22109,"byte_end":22115,"line_start":832,"line_end":832,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":23543,"byte_end":23549,"line_start":891,"line_end":891,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":24753,"byte_end":24759,"line_start":940,"line_end":940,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":24956,"byte_end":24962,"line_start":950,"line_end":950,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25167,"byte_end":25173,"line_start":960,"line_end":960,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25366,"byte_end":25372,"line_start":970,"line_end":970,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25582,"byte_end":25588,"line_start":982,"line_end":982,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":26273,"byte_end":26279,"line_start":1011,"line_end":1011,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":2989,"byte_end":2995,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":17648,"byte_end":17654,"line_start":659,"line_end":659,"column_start":15,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18310,"byte_end":18316,"line_start":680,"line_end":680,"column_start":15,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":18970,"byte_end":18976,"line_start":701,"line_end":701,"column_start":9,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":19998,"byte_end":20004,"line_start":740,"line_end":740,"column_start":35,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20261,"byte_end":20267,"line_start":750,"line_end":750,"column_start":35,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2960}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20442,"byte_end":20448,"line_start":759,"line_end":759,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":7799}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":20749,"byte_end":20755,"line_start":773,"line_end":773,"column_start":25,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":21863,"byte_end":21869,"line_start":822,"line_end":822,"column_start":36,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":22109,"byte_end":22115,"line_start":832,"line_end":832,"column_start":34,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":23543,"byte_end":23549,"line_start":891,"line_end":891,"column_start":38,"column_end":44},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":24753,"byte_end":24759,"line_start":940,"line_end":940,"column_start":40,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2954}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":24956,"byte_end":24962,"line_start":950,"line_end":950,"column_start":38,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2957}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25167,"byte_end":25173,"line_start":960,"line_end":960,"column_start":40,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2957}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25366,"byte_end":25372,"line_start":970,"line_end":970,"column_start":22,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":3276}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":25582,"byte_end":25588,"line_start":982,"line_end":982,"column_start":25,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":3289}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\either-1.6.1\\src\\lib.rs","byte_start":26273,"byte_end":26279,"line_start":1011,"line_end":1011,"column_start":29,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":9692}}]}