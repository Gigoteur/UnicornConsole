{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","scoped_threadpool","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=b430858cc1b8b52a","-C","extra-filename=-b430858cc1b8b52a","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libscoped_threadpool-b430858cc1b8b52a.rmeta"},"prelude":{"crate_id":{"name":"scoped_threadpool","disambiguator":[16746923382914492840,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":15322,"line_start":1,"line_end":518,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":15322,"line_start":1,"line_end":518,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":86}],"decl_id":null,"docs":" This crate provides a stable, safe and scoped threadpool.","sig":null,"attributes":[{"value":"/ This crate provides a stable, safe and scoped threadpool.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It can be used to execute a number of short-lived jobs in parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":66,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ without the need to respawn the underlying threads.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":137,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":193,"byte_end":196,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Jobs are runnable by borrowing the pool for a given scope, during which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":197,"byte_end":272,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ an arbitrary number of them can be executed. These jobs can access data of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":273,"byte_end":351,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ any lifetime outside of the pools scope, which allows working on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":352,"byte_end":420,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ non-`'static` references in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":421,"byte_end":462,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":463,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For safety reasons, a panic inside a worker thread will not be isolated,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":467,"byte_end":543,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ but rather propagate to the outside of the pool.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":544,"byte_end":596,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":601,"byte_end":616,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":617,"byte_end":620,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":621,"byte_end":632,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ extern crate scoped_threadpool;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":633,"byte_end":668,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ use scoped_threadpool::Pool;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":669,"byte_end":701,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":702,"byte_end":705,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":706,"byte_end":721,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     // Create a threadpool holding 4 threads","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":722,"byte_end":770,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/     let mut pool = Pool::new(4);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":771,"byte_end":807,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":808,"byte_end":811,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     let mut vec = vec![0, 1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":812,"byte_end":863,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":864,"byte_end":867,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Use the threads as scoped threads that can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":868,"byte_end":921,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/     // reference anything outside this closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":922,"byte_end":972,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/     pool.scoped(|scope| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":973,"byte_end":1002,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/         // Create references to each element in the vector ...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1003,"byte_end":1069,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/         for e in &mut vec {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1070,"byte_end":1101,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/             // ... and add 1 to it in a seperate thread","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1102,"byte_end":1161,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/             scope.execute(move || {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1162,"byte_end":1201,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/                 *e += 1;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1202,"byte_end":1230,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/             });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1231,"byte_end":1250,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1251,"byte_end":1264,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1265,"byte_end":1276,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1277,"byte_end":1280,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(vec, vec![1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1281,"byte_end":1335,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1336,"byte_end":1341,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1342,"byte_end":1349,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":1656,"byte_end":1678,"line_start":48,"line_end":48,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2360,"byte_end":2364,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"Pool","qualname":"::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A threadpool that acts as a handle to a number\n of threads spawned at construction.\n","sig":null,"attributes":[{"value":"/ A threadpool that acts as a handle to a number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2258,"byte_end":2308,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ of threads spawned at construction.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2309,"byte_end":2348,"line_start":84,"line_end":84,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2690,"byte_end":2693,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool>::new","value":"pub fn new(u32) -> Pool","parent":null,"children":[],"decl_id":null,"docs":" Construct a threadpool with the given number of threads.\n Minimum value is `1`.\n","sig":null,"attributes":[{"value":"/ Construct a threadpool with the given number of threads.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2588,"byte_end":2648,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/ Minimum value is `1`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2653,"byte_end":2678,"line_start":98,"line_end":98,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5396,"byte_end":5402,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"scoped","qualname":"<Pool>::scoped","value":"pub fn scoped<'pool, 'scope, F, R>(&'pool mut Self, F) -> R where\nF: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Borrows the pool and allows executing jobs on other\n threads during that scope via the argument of the closure.","sig":null,"attributes":[{"value":"/ Borrows the pool and allows executing jobs on other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5156,"byte_end":5211,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/ threads during that scope via the argument of the closure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5216,"byte_end":5278,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5283,"byte_end":5286,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method will block until the closure and all its jobs have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5291,"byte_end":5357,"line_start":172,"line_end":172,"column_start":5,"column_end":71}},{"value":"/ run to completion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5362,"byte_end":5384,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5699,"byte_end":5711,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"thread_count","qualname":"<Pool>::thread_count","value":"pub fn thread_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of threads inside this pool.\n","sig":null,"attributes":[{"value":"/ Returns the number of threads inside this pool.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5636,"byte_end":5687,"line_start":184,"line_end":184,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5926,"byte_end":5931,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Handle to the scope during which the threadpool is borrowed.\n","sig":null,"attributes":[{"value":"/ Handle to the scope during which the threadpool is borrowed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":5850,"byte_end":5914,"line_start":192,"line_end":192,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6346,"byte_end":6353,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"execute","qualname":"<Scope>::execute","value":"pub fn execute<F>(&Self, F) where F: FnOnce() -> () + Send + 'scope","parent":null,"children":[],"decl_id":null,"docs":" Execute a job on the threadpool.","sig":null,"attributes":[{"value":"/ Execute a job on the threadpool.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6140,"byte_end":6176,"line_start":200,"line_end":200,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6181,"byte_end":6184,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The body of the closure will be send to one of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6189,"byte_end":6243,"line_start":202,"line_end":202,"column_start":5,"column_end":59}},{"value":"/ internal threads, and this method itself will not wait","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6248,"byte_end":6306,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/ for its completion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6311,"byte_end":6334,"line_start":204,"line_end":204,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6786,"byte_end":6794,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"join_all","qualname":"<Scope>::join_all","value":"pub fn join_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks until all currently queued jobs have run to completion.\n","sig":null,"attributes":[{"value":"/ Blocks until all currently queued jobs have run to completion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6708,"byte_end":6774,"line_start":216,"line_end":216,"column_start":5,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2066,"byte_end":2067,"line_start":69,"line_end":69,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2185,"byte_end":2189,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2577,"byte_end":2581,"line_start":96,"line_end":96,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6113,"byte_end":6118,"line_start":199,"line_end":199,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":7816,"byte_end":7821,"line_start":246,"line_end":246,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2066,"byte_end":2067,"line_start":69,"line_end":69,"column_start":29,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":51},"to":{"krate":0,"index":48}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2185,"byte_end":2189,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":2577,"byte_end":2581,"line_start":96,"line_end":96,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":6113,"byte_end":6118,"line_start":199,"line_end":199,"column_start":21,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\scoped_threadpool-0.1.9\\src\\lib.rs","byte_start":7816,"byte_end":7821,"line_start":246,"line_end":246,"column_start":30,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3300}}]}