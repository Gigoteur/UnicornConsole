{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","deflate","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=8c70c5d4295d017c","-C","extra-filename=-8c70c5d4295d017c","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps","--extern","adler32=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libadler32-99c2ecb5b34135f9.rmeta","--extern","byteorder=d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libbyteorder-28560ac13332040e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-devkit\\target\\rls\\debug\\deps\\libdeflate-8c70c5d4295d017c.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[8018695135220829884,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":16,"id":{"name":"adler32","disambiguator":[9489779933095753068,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","num":17,"id":{"name":"byteorder","disambiguator":[11419227432139273805,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":0,"byte_end":14941,"line_start":1,"line_end":495,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3003,"byte_end":3021,"line_start":102,"line_end":102,"column_start":31,"column_end":49},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3023,"byte_end":3037,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3039,"byte_end":3050,"line_start":102,"line_end":102,"column_start":67,"column_end":78},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3088,"byte_end":3100,"line_start":104,"line_end":104,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3221,"byte_end":3235,"line_start":110,"line_end":110,"column_start":22,"column_end":36},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":913}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3237,"byte_end":3248,"line_start":110,"line_end":110,"column_start":38,"column_end":49},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":913}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":0,"byte_end":14941,"line_start":1,"line_end":495,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":31},{"krate":0,"index":108},{"krate":0,"index":203},{"krate":0,"index":218},{"krate":0,"index":255},{"krate":0,"index":291},{"krate":0,"index":338},{"krate":0,"index":364},{"krate":0,"index":468},{"krate":0,"index":499},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":560},{"krate":0,"index":596},{"krate":0,"index":614},{"krate":0,"index":636},{"krate":0,"index":713},{"krate":0,"index":764},{"krate":0,"index":793},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":932}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorightm in pure rust.","sig":null,"attributes":[{"value":"/ An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":0,"byte_end":91,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"/ compression algorightm in pure rust.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":92,"byte_end":132,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":133,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This library provides functions to compress data using the DEFLATE algorithm,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":137,"byte_end":218,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ optionally wrapped using the [zlib](https://tools.ietf.org/html/rfc1950) or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":219,"byte_end":298,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ [gzip](http://www.gzip.org/zlib/rfc-gzip.html) formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":299,"byte_end":358,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ The current implementation is still a bit lacking speed-wise compared to C-libraries","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":359,"byte_end":447,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/ like zlib and miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":448,"byte_end":472,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":473,"byte_end":476,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm is an older compression algorithm that is still widely used today,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":477,"byte_end":569,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ by e.g html headers, the `.png` inage format, the unix `gzip` program and commonly in `.zip`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":570,"byte_end":666,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ files. The `zlib` and `gzip` formats are wrappers around DEFLATE-compressed data, containing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":667,"byte_end":763,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ some extra metadata and a checksum to validate the integrity of the raw data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":764,"byte_end":845,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":846,"byte_end":849,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm does not perform as well as newer algorhitms used in file formats such as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":850,"byte_end":949,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ `.7z`, `.rar`, `.xz` and `.bz2`, and is thus not the ideal choice for applications where","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":950,"byte_end":1042,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ the `DEFLATE` format (with or without wrappers) is not required.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1043,"byte_end":1111,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1112,"byte_end":1115,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Support for the gzip wrapper (the wrapper that is used in `.gz` files) is disabled by default,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1116,"byte_end":1214,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ but can be enabled with the `gzip` feature.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1215,"byte_end":1262,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1263,"byte_end":1266,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As this library is still in development, the compression output may change slightly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1267,"byte_end":1354,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ between versions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1355,"byte_end":1376,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1377,"byte_end":1380,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1381,"byte_end":1384,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1385,"byte_end":1400,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ ## Simple compression function:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1401,"byte_end":1436,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ ``` rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1437,"byte_end":1449,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1450,"byte_end":1481,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1482,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let data = b\"Some data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1486,"byte_end":1514,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ let compressed = deflate_bytes(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1515,"byte_end":1556,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ # let _ = compressed;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1557,"byte_end":1582,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1583,"byte_end":1590,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1591,"byte_end":1594,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Using a writer:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1595,"byte_end":1617,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ ``` rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1618,"byte_end":1630,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1631,"byte_end":1654,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1655,"byte_end":1658,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1659,"byte_end":1688,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1689,"byte_end":1725,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1726,"byte_end":1729,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1730,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1772,"byte_end":1845,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data).expect(\"Write error!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1846,"byte_end":1897,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ let compressed_data = encoder.finish().expect(\"Failed to finish compression!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1898,"byte_end":1981,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":1982,"byte_end":2012,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":2013,"byte_end":2020,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16369,"byte_end":16373,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[{"value":"/ Fast minimal compression (`CompressionOptions::fast()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16304,"byte_end":16364,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16436,"byte_end":16443,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[{"value":"/ Default level (`CompressionOptions::default()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16379,"byte_end":16431,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16697,"byte_end":16701,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[{"value":"/ Higher compression level (`CompressionOptions::high()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16449,"byte_end":16509,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16514,"byte_end":16517,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16522,"byte_end":16588,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16593,"byte_end":16675,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16680,"byte_end":16692,"line_start":40,"line_end":40,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16286,"byte_end":16297,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"pub enum Compression { Fast, Default, Best, }","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[{"value":"/ An enum describing the level of compression to be used by the encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":15870,"byte_end":15943,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":15944,"byte_end":15947,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Higher compression ratios will take longer to encode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":15948,"byte_end":16005,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16006,"byte_end":16009,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a simplified interface to specify a compression level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16010,"byte_end":16076,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16077,"byte_end":16080,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [See also `CompressionOptions`](./struct.CompressionOptions.html) which provides for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16081,"byte_end":16169,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ tweaking the settings more finely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16170,"byte_end":16208,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16979,"byte_end":16985,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[{"value":"/ Compress normally.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16952,"byte_end":16974,"line_start":53,"line_end":53,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17045,"byte_end":17056,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Force fixed huffman tables. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force fixed huffman tables. (Unimplemented!).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16991,"byte_end":17040,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17129,"byte_end":17141,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force stored (uncompressed) blocks only. (Unimplemented!).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17062,"byte_end":17124,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16931,"byte_end":16945,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"pub enum SpecialOptions { Normal, _ForceFixed, _ForceStored, }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[{"value":"/ Enum allowing some special options (not implemented yet)!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16809,"byte_end":16870,"line_start":50,"line_end":50,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17707,"byte_end":17725,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[{"value":"/ A struct describing the options for a compressor or compression function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17502,"byte_end":17579,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17580,"byte_end":17583,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ These values are not stable and still subject to change!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17584,"byte_end":17644,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18163,"byte_end":18178,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[{"value":"/ The maximum number of checks to make in the hash table for matches.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17732,"byte_end":17803,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17808,"byte_end":17811,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Higher numbers mean slower, but better compression. Very high (say `>1024`) values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17816,"byte_end":17902,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ will impact compression speed a lot. The maximum match length is 2^15, so values higher than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17907,"byte_end":18003,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ this won't make any difference, and will be truncated to 2^15 by the compression","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18008,"byte_end":18092,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ function/writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18097,"byte_end":18117,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18122,"byte_end":18125,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Default value: `128`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18130,"byte_end":18154,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18782,"byte_end":18799,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[{"value":"/ Only lazy match if we have a length less than this value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18219,"byte_end":18280,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18285,"byte_end":18288,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Higher values degrade compression slightly, but improve compression speed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18293,"byte_end":18371,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18376,"byte_end":18379,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `0`: Never lazy match. (Same effect as setting MatchingType to greedy, but may be slower).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18384,"byte_end":18480,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ * `1...257`: Only check for a better match if the first match was shorter than this value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18485,"byte_end":18579,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ * `258`: Always lazy match.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18584,"byte_end":18615,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18620,"byte_end":18623,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ As the maximum length of a match is `258`, values higher than this will have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18628,"byte_end":18708,"line_start":97,"line_end":97,"column_start":5,"column_end":85}},{"value":"/ no further effect.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18713,"byte_end":18735,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18740,"byte_end":18743,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Default value: `32`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18748,"byte_end":18773,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19424,"byte_end":19437,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[{"value":"/ Whether to use lazy or greedy matching.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18842,"byte_end":18885,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18890,"byte_end":18893,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Lazy matching will provide better compression, at the expense of compression speed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18898,"byte_end":18985,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18990,"byte_end":18993,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, and matching_type is set to lazy,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":18998,"byte_end":19086,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ compression using only run-length encoding (i.e maximum match distance of 1) is performed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19091,"byte_end":19185,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ (This may be changed in the future but is defined like this at the moment to avoid API","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19190,"byte_end":19280,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"/ breakage.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19285,"byte_end":19298,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19303,"byte_end":19306,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [See `MatchingType`](./enum.MatchingType.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19311,"byte_end":19361,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19366,"byte_end":19369,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * Default value: `MatchingType::Lazy`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19374,"byte_end":19415,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19568,"byte_end":19575,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":979},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[{"value":"/ Force fixed/stored blocks (Not implemented yet).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19457,"byte_end":19509,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ * Default value: `SpecialOptions::Normal`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19514,"byte_end":19559,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19872,"byte_end":19876,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"high","qualname":"<CompressionOptions>::high","value":"pub fn high() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings rouhgly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[{"value":"/ Returns compression settings rouhgly corresponding to the `HIGH(9)` setting in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19771,"byte_end":19860,"line_start":125,"line_end":125,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20511,"byte_end":20515,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"fast","qualname":"<CompressionOptions>::fast","value":"pub fn fast() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[{"value":"/ Returns  a fast set of compression settings","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20151,"byte_end":20198,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20203,"byte_end":20206,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Ideally this should roughly correspond to the `FAST(1)` setting in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20211,"byte_end":20288,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/ However, that setting makes miniz use a somewhat different algorhithm,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20293,"byte_end":20367,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ so currently hte fast level in this library is slower and better compressing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20372,"byte_end":20452,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/ than the corresponding level in miniz.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20457,"byte_end":20499,"line_start":140,"line_end":140,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21076,"byte_end":21088,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"pub fn huffman_only() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor only compress using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20752,"byte_end":20839,"line_start":150,"line_end":150,"column_start":5,"column_end":92}},{"value":"/ huffman coding. (Ignoring any length/distance matching)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20844,"byte_end":20903,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20908,"byte_end":20911,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This will normally have the worst compression ratio (besides only using uncompressed data),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":20916,"byte_end":21011,"line_start":153,"line_end":153,"column_start":5,"column_end":100}},{"value":"/ but may be the fastest method in some cases.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21016,"byte_end":21064,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21767,"byte_end":21770,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"rle","qualname":"<CompressionOptions>::rle","value":"pub fn rle() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor compress only using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21325,"byte_end":21412,"line_start":164,"line_end":164,"column_start":5,"column_end":92}},{"value":"/ run-length encoding (i.e only looking for matches one byte back).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21417,"byte_end":21486,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21491,"byte_end":21494,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This is very fast, but tends to compress worse than looking for more matches using hash","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21499,"byte_end":21590,"line_start":167,"line_end":167,"column_start":5,"column_end":96}},{"value":"/ chains that the slower settings do.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21595,"byte_end":21634,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ Works best on data that has runs of equivialent bytes, like binary or simple images,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21639,"byte_end":21727,"line_start":169,"line_end":169,"column_start":5,"column_end":93}},{"value":"/ less good for text.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":21732,"byte_end":21755,"line_start":170,"line_end":170,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49299,"byte_end":49305,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":1014},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[{"value":"/ Use greedy matching: the matching algorithm simply uses a match right away","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49198,"byte_end":49276,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ if found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49281,"byte_end":49294,"line_start":30,"line_end":30,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49623,"byte_end":49627,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":1014},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[{"value":"/ Use lazy matching: after finding a match, the next input byte is checked, to see","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49311,"byte_end":49395,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ if there is a better match starting at that byte.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49400,"byte_end":49453,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49458,"byte_end":49461,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, compression using only run-length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49466,"byte_end":49554,"line_start":35,"line_end":35,"column_start":5,"column_end":93}},{"value":"/ (i.e maximum match distance of 1) is performed instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49559,"byte_end":49618,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49179,"byte_end":49191,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"pub enum MatchingType { Greedy, Lazy, }","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1017}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[{"value":"/ An enum describing whether we use lazy or greedy matching.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49039,"byte_end":49101,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227816,"byte_end":227830,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":842}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder/compressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227044,"byte_end":227077,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227078,"byte_end":227081,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes unencoded data and compresses it to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227082,"byte_end":227176,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227177,"byte_end":227227,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227228,"byte_end":227231,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227232,"byte_end":227246,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227247,"byte_end":227250,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227251,"byte_end":227262,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227263,"byte_end":227281,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227282,"byte_end":227287,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227288,"byte_end":227332,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227333,"byte_end":227338,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227339,"byte_end":227362,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227363,"byte_end":227366,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227367,"byte_end":227396,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::DeflateEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227397,"byte_end":227436,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227437,"byte_end":227440,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227441,"byte_end":227482,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227483,"byte_end":227559,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227560,"byte_end":227589,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227590,"byte_end":227634,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227635,"byte_end":227660,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227661,"byte_end":227666,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227667,"byte_end":227674,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227675,"byte_end":227692,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227693,"byte_end":227723,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227724,"byte_end":227731,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227732,"byte_end":227739,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227740,"byte_end":227804,"line_start":90,"line_end":90,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227998,"byte_end":228001,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder using the provided compression options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227921,"byte_end":227986,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228349,"byte_end":228355,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `DeflateEncoder`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228193,"byte_end":228276,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228281,"byte_end":228337,"line_start":104,"line_end":104,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228771,"byte_end":228776,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228627,"byte_end":228712,"line_start":112,"line_end":112,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":228717,"byte_end":228759,"line_start":113,"line_end":113,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231160,"byte_end":231171,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[{"value":"/ A Zlib encoder/compressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230366,"byte_end":230396,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230397,"byte_end":230400,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes unencoded data and compresses it to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230401,"byte_end":230495,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression with Zlib headers and trailers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230496,"byte_end":230577,"line_start":160,"line_end":160,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230578,"byte_end":230581,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230582,"byte_end":230596,"line_start":162,"line_end":162,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230597,"byte_end":230600,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230601,"byte_end":230612,"line_start":164,"line_end":164,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230613,"byte_end":230631,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230632,"byte_end":230637,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230638,"byte_end":230682,"line_start":167,"line_end":167,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230683,"byte_end":230688,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230689,"byte_end":230712,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230713,"byte_end":230716,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230717,"byte_end":230746,"line_start":171,"line_end":171,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230747,"byte_end":230783,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230784,"byte_end":230787,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230788,"byte_end":230829,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230830,"byte_end":230903,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230904,"byte_end":230933,"line_start":176,"line_end":176,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230934,"byte_end":230978,"line_start":177,"line_end":177,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":230979,"byte_end":231004,"line_start":178,"line_end":178,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231005,"byte_end":231010,"line_start":179,"line_end":179,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231011,"byte_end":231018,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231019,"byte_end":231036,"line_start":181,"line_end":181,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231037,"byte_end":231067,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231068,"byte_end":231075,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231076,"byte_end":231083,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231084,"byte_end":231148,"line_start":185,"line_end":185,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231398,"byte_end":231401,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Create a new `ZlibEncoder` using the provided compression options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231316,"byte_end":231386,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":232146,"byte_end":232152,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `ZlibEncoder`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231993,"byte_end":232073,"line_start":210,"line_end":210,"column_start":5,"column_end":85}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":232078,"byte_end":232134,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":232568,"byte_end":232573,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":232424,"byte_end":232509,"line_start":219,"line_end":219,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":232514,"byte_end":232556,"line_start":220,"line_end":220,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":233475,"byte_end":233483,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[{"value":"/ Return the adler32 checksum of the currently consumed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":233400,"byte_end":233463,"line_start":248,"line_end":248,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3192,"byte_end":3197,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[{"value":"/ Encoders implementing a `Write` interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3137,"byte_end":3183,"line_start":108,"line_end":108,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4237,"byte_end":4255,"line_start":143,"line_end":143,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"pub fn deflate_bytes_conf<O: Into<CompressionOptions>>(&[u8], O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3875,"byte_end":3938,"line_start":130,"line_end":130,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3939,"byte_end":3942,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3943,"byte_end":3990,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3991,"byte_end":3994,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":3995,"byte_end":4009,"line_start":134,"line_end":134,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4010,"byte_end":4013,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4014,"byte_end":4021,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_conf, Compression};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4022,"byte_end":4073,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4074,"byte_end":4077,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4078,"byte_end":4119,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4120,"byte_end":4190,"line_start":140,"line_end":140,"column_start":1,"column_end":71}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4191,"byte_end":4221,"line_start":141,"line_end":141,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4222,"byte_end":4229,"line_start":142,"line_end":142,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4908,"byte_end":4921,"line_start":168,"line_end":168,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"pub fn deflate_bytes(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression using the default compression","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4550,"byte_end":4642,"line_start":154,"line_end":154,"column_start":1,"column_end":93}},{"value":"/ level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4643,"byte_end":4653,"line_start":155,"line_end":155,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4654,"byte_end":4657,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4658,"byte_end":4705,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4706,"byte_end":4709,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4710,"byte_end":4724,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4725,"byte_end":4728,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4729,"byte_end":4736,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4737,"byte_end":4768,"line_start":162,"line_end":162,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4769,"byte_end":4772,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4773,"byte_end":4814,"line_start":164,"line_end":164,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4815,"byte_end":4861,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4862,"byte_end":4892,"line_start":166,"line_end":166,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":4893,"byte_end":4900,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5461,"byte_end":5484,"line_start":187,"line_end":187,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"pub fn deflate_bytes_zlib_conf<O: Into<CompressionOptions>>(&[u8], O)\n-> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5004,"byte_end":5104,"line_start":172,"line_end":172,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5105,"byte_end":5108,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5109,"byte_end":5156,"line_start":174,"line_end":174,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5157,"byte_end":5160,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5161,"byte_end":5204,"line_start":176,"line_end":176,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5205,"byte_end":5208,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5209,"byte_end":5223,"line_start":178,"line_end":178,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5224,"byte_end":5227,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5228,"byte_end":5235,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_zlib_conf, Compression};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5236,"byte_end":5292,"line_start":181,"line_end":181,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5293,"byte_end":5296,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5297,"byte_end":5338,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib_conf(data, Compression::Best);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5339,"byte_end":5414,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5415,"byte_end":5445,"line_start":185,"line_end":185,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":5446,"byte_end":5453,"line_start":186,"line_end":186,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6606,"byte_end":6624,"line_start":222,"line_end":222,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"pub fn deflate_bytes_zlib(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6154,"byte_end":6254,"line_start":206,"line_end":206,"column_start":1,"column_end":101}},{"value":"/ using the default compression level.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6255,"byte_end":6295,"line_start":207,"line_end":207,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6296,"byte_end":6299,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Returns a Vec<u8> of the compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6300,"byte_end":6345,"line_start":209,"line_end":209,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6346,"byte_end":6349,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6350,"byte_end":6393,"line_start":211,"line_end":211,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6394,"byte_end":6397,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6398,"byte_end":6412,"line_start":213,"line_end":213,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6413,"byte_end":6416,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6417,"byte_end":6424,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes_zlib;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6425,"byte_end":6461,"line_start":216,"line_end":216,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6462,"byte_end":6465,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6466,"byte_end":6507,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib(data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6508,"byte_end":6559,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6560,"byte_end":6590,"line_start":220,"line_end":220,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lib.rs","byte_start":6591,"byte_end":6598,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16723,"byte_end":16734,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17163,"byte_end":17177,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19746,"byte_end":19764,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":22020,"byte_end":22038,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":22212,"byte_end":22230,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":36975,"byte_end":36986,"line_start":1333,"line_end":1333,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":37205,"byte_end":37216,"line_start":1344,"line_end":1344,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":40020,"byte_end":40032,"line_start":1425,"line_end":1425,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49654,"byte_end":49666,"line_start":40,"line_end":40,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":51190,"byte_end":51199,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":54175,"byte_end":54185,"line_start":176,"line_end":176,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lzvalue.rs","byte_start":96316,"byte_end":96328,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lzvalue.rs","byte_start":97099,"byte_end":97106,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":99445,"byte_end":99451,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":99608,"byte_end":99614,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":101130,"byte_end":101146,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\length_encode.rs","byte_start":110884,"byte_end":110897,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\output_writer.rs","byte_start":146359,"byte_end":146372,"line_start":34,"line_end":34,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":170823,"byte_end":170833,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":170925,"byte_end":170935,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":171332,"byte_end":171347,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":171502,"byte_end":171517,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\bitstream.rs","byte_start":174785,"byte_end":174794,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\bitstream.rs","byte_start":176248,"byte_end":176257,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\encoder_state.rs","byte_start":180024,"byte_end":180036,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\input_buffer.rs","byte_start":199201,"byte_end":199212,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":204434,"byte_end":204446,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":205042,"byte_end":205055,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":206574,"byte_end":206586,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227897,"byte_end":227911,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":229131,"byte_end":229145,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":229729,"byte_end":229743,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231295,"byte_end":231306,"line_start":192,"line_end":192,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":233575,"byte_end":233586,"line_start":254,"line_end":254,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":234584,"byte_end":234595,"line_start":280,"line_end":280,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":16723,"byte_end":16734,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":17163,"byte_end":17177,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":958},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":19746,"byte_end":19764,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":22020,"byte_end":22038,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\compression_options.rs","byte_start":22212,"byte_end":22230,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":36975,"byte_end":36986,"line_start":1333,"line_end":1333,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1006},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":37205,"byte_end":37216,"line_start":1344,"line_end":1344,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\huffman_table.rs","byte_start":40020,"byte_end":40032,"line_start":1425,"line_end":1425,"column_start":6,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":49654,"byte_end":49666,"line_start":40,"line_end":40,"column_start":23,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":51190,"byte_end":51199,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lz77.rs","byte_start":54175,"byte_end":54185,"line_start":176,"line_end":176,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lzvalue.rs","byte_start":96316,"byte_end":96328,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\lzvalue.rs","byte_start":97099,"byte_end":97106,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":99445,"byte_end":99451,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":99608,"byte_end":99614,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\chained_hash_table.rs","byte_start":101130,"byte_end":101146,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\length_encode.rs","byte_start":110884,"byte_end":110897,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\output_writer.rs","byte_start":146359,"byte_end":146372,"line_start":34,"line_end":34,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":170823,"byte_end":170833,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":170925,"byte_end":170935,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":507},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":171332,"byte_end":171347,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\checksum.rs","byte_start":171502,"byte_end":171517,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":519},"to":{"krate":0,"index":503}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\bitstream.rs","byte_start":174785,"byte_end":174794,"line_start":58,"line_end":58,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\bitstream.rs","byte_start":176248,"byte_end":176257,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\encoder_state.rs","byte_start":180024,"byte_end":180036,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\input_buffer.rs","byte_start":199201,"byte_end":199212,"line_start":15,"line_end":15,"column_start":6,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":204434,"byte_end":204446,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":205042,"byte_end":205055,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\deflate_state.rs","byte_start":206574,"byte_end":206586,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":227897,"byte_end":227911,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":229131,"byte_end":229145,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":840},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":229729,"byte_end":229743,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":231295,"byte_end":231306,"line_start":192,"line_end":192,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":233575,"byte_end":233586,"line_start":254,"line_end":254,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":857},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.7.20\\src\\writer.rs","byte_start":234584,"byte_end":234595,"line_start":280,"line_end":280,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":857},"to":{"krate":2,"index":3300}}]}