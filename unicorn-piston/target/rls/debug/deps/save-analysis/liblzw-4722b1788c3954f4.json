{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","lzw","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","-C","metadata=4722b1788c3954f4","-C","extra-filename=-4722b1788c3954f4","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\liblzw-4722b1788c3954f4.rmeta"},"prelude":{"crate_id":{"name":"lzw","disambiguator":[15116990504302203478,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":0,"byte_end":1119,"line_start":1,"line_end":43,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":936,"byte_end":943,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":949,"byte_end":967,"line_start":30,"line_end":30,"column_start":5,"column_end":23},"alias_span":null,"name":"DecoderEarlyChange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":973,"byte_end":980,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":986,"byte_end":992,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1022,"byte_end":1031,"line_start":36,"line_end":36,"column_start":5,"column_end":14},"alias_span":null,"name":"BitReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1037,"byte_end":1046,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"alias_span":null,"name":"BitWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1052,"byte_end":1061,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"alias_span":null,"name":"LsbReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1067,"byte_end":1076,"line_start":39,"line_end":39,"column_start":5,"column_end":14},"alias_span":null,"name":"LsbWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1082,"byte_end":1091,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"alias_span":null,"name":"MsbReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1097,"byte_end":1106,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"alias_span":null,"name":"MsbWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":1112,"byte_end":1116,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"alias_span":null,"name":"Bits","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":0,"byte_end":1119,"line_start":1,"line_end":43,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":72},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136}],"decl_id":null,"docs":" # LZW decoder and encoder","sig":null,"attributes":[{"value":"/ # LZW decoder and encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crates provides a `LzwEncoder` and `LzwDecoder`. The code words are written from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":34,"byte_end":123,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ and to bit streams where it is possible to write either the most or least significant ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":124,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"/ bit first. The maximum possible code size is 16 bits. Both types rely on RAII to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":215,"byte_end":299,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ produced correct results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":300,"byte_end":329,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":330,"byte_end":333,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The de- and encoder expect the LZW stream to start with a clear code and end with an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":334,"byte_end":422,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ end code which are defined as follows:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":423,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":466,"byte_end":469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/  * `CLEAR_CODE == 1 << min_code_size`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":470,"byte_end":511,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/  * `END_CODE   == CLEAR_CODE + 1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":512,"byte_end":549,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":550,"byte_end":553,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Examplary use of the encoder:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":554,"byte_end":587,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":588,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/     use lzw::{LsbWriter, Encoder};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":592,"byte_end":630,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     let size = 8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":631,"byte_end":652,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/     let data = b\"TOBEORNOTTOBEORTOBEORNOT\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":653,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/     let mut compressed = vec![];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":701,"byte_end":737,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/     {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":738,"byte_end":747,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/         let mut enc = Encoder::new(LsbWriter::new(&mut compressed), size).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":748,"byte_end":835,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/         enc.encode_bytes(data).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":836,"byte_end":880,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lib.rs","byte_start":881,"byte_end":890,"line_start":23,"line_end":23,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8284,"byte_end":8291,"line_start":215,"line_end":215,"column_start":5,"column_end":12},"name":"Decoder","qualname":"::lzw::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":"Decoder for a LZW compressed stream (this algorithm is used for GIF files).\n \n The maximum supported code size is 16 bits. The decoder assumes two\n special code word to be present in the stream:","sig":null,"attributes":[{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4508,"byte_end":4512,"line_start":112,"line_end":112,"column_start":1,"column_end":5}},{"value":"/ The maximum supported code size is 16 bits. The decoder assumes two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4513,"byte_end":4585,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ special code word to be present in the stream:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4586,"byte_end":4636,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4637,"byte_end":4640,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/  * `CLEAR_CODE == 1 << min_code_size`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4641,"byte_end":4682,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/  * `END_CODE   == CLEAR_CODE + 1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4683,"byte_end":4720,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4721,"byte_end":4724,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/Furthermore the decoder expects the stream to start with a `CLEAR_CODE`. This","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4725,"byte_end":4805,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/ corresponds to the implementation needed for en- and decoding GIF and TIFF files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4806,"byte_end":4891,"line_start":120,"line_end":120,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8388,"byte_end":8406,"line_start":216,"line_end":216,"column_start":5,"column_end":23},"name":"DecoderEarlyChange","qualname":"::lzw::DecoderEarlyChange","value":"DecoderEarlyChange {  }","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":"Decoder for a LZW compressed stream using an “early change” algorithm (used in TIFF files).\n \n The maximum supported code size is 16 bits. The decoder assumes two\n special code word to be present in the stream:","sig":null,"attributes":[{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4508,"byte_end":4512,"line_start":112,"line_end":112,"column_start":1,"column_end":5}},{"value":"/ The maximum supported code size is 16 bits. The decoder assumes two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4513,"byte_end":4585,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ special code word to be present in the stream:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4586,"byte_end":4636,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4637,"byte_end":4640,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/  * `CLEAR_CODE == 1 << min_code_size`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4641,"byte_end":4682,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/  * `END_CODE   == CLEAR_CODE + 1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4683,"byte_end":4720,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4721,"byte_end":4724,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/Furthermore the decoder expects the stream to start with a `CLEAR_CODE`. This","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4725,"byte_end":4805,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/ corresponds to the implementation needed for en- and decoding GIF and TIFF files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":4806,"byte_end":4891,"line_start":120,"line_end":120,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":11132,"byte_end":11138,"line_start":322,"line_end":322,"column_start":8,"column_end":14},"name":"encode","qualname":"::lzw::encode","value":"pub fn encode<R, W>(R, W, u8) -> io::Result<()> where R: Read, W: BitWriter","parent":null,"children":[],"decl_id":null,"docs":" Convenience function that reads and compresses all bytes from `R`.\n","sig":null,"attributes":[{"value":"/ Convenience function that reads and compresses all bytes from `R`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":11054,"byte_end":11124,"line_start":321,"line_end":321,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12610,"byte_end":12617,"line_start":365,"line_end":365,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::lzw::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" LZW encoder using the algorithm of GIF files.\n","sig":null,"attributes":[{"value":"/ LZW encoder using the algorithm of GIF files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12549,"byte_end":12598,"line_start":364,"line_end":364,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12984,"byte_end":12987,"line_start":378,"line_end":378,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W, u8) -> io::Result<Encoder<W>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new LZW encoder.","sig":null,"attributes":[{"value":"/ Creates a new LZW encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12769,"byte_end":12799,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12804,"byte_end":12807,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ **Note**: If `min_code_size < 8` then `Self::encode_bytes` might panic when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12812,"byte_end":12893,"line_start":376,"line_end":376,"column_start":5,"column_end":84}},{"value":"/ the supplied data containts values that exceed `1 << min_code_size`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12898,"byte_end":12972,"line_start":377,"line_end":377,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13741,"byte_end":13753,"line_start":399,"line_end":399,"column_start":12,"column_end":24},"name":"encode_bytes","qualname":"<Encoder<W>>::encode_bytes","value":"pub fn encode_bytes(&mut Self, &[u8]) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Compresses `bytes` and writes the result into the writer.","sig":null,"attributes":[{"value":"/ Compresses `bytes` and writes the result into the writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13490,"byte_end":13551,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13556,"byte_end":13559,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13564,"byte_end":13577,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13582,"byte_end":13585,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function might panic if any of the input bytes exceeds `1 << min_code_size`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13590,"byte_end":13677,"line_start":397,"line_end":397,"column_start":5,"column_end":90}},{"value":"/ This cannot happen if `min_code_size >= 8`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":13682,"byte_end":13729,"line_start":398,"line_end":398,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16638,"byte_end":16642,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Some","qualname":"::bitstream::Bits::Some","value":"Bits::Some(usize, u16)","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Consumed bytes, reconstructed bits\n","sig":null,"attributes":[{"value":"/ Consumed bytes, reconstructed bits","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16595,"byte_end":16633,"line_start":8,"line_end":8,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16683,"byte_end":16687,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"None","qualname":"::bitstream::Bits::None","value":"Bits::None(usize)","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Consumed bytes\n","sig":null,"attributes":[{"value":"/ Consumed bytes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16660,"byte_end":16678,"line_start":10,"line_end":10,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16584,"byte_end":16588,"line_start":7,"line_end":7,"column_start":10,"column_end":14},"name":"Bits","qualname":"::bitstream::Bits","value":"pub enum Bits { Some(usize, u16), None(usize), }","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" Containes either the consumed bytes and reconstructed bits or\n only the consumed bytes if the supplied buffer was not bit enough\n","sig":null,"attributes":[{"value":"/ Containes either the consumed bytes and reconstructed bits or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16439,"byte_end":16504,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/ only the consumed bytes if the supplied buffer was not bit enough","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16505,"byte_end":16574,"line_start":6,"line_end":6,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16727,"byte_end":16736,"line_start":15,"line_end":15,"column_start":11,"column_end":20},"name":"BitReader","qualname":"::bitstream::BitReader","value":"BitReader","parent":null,"children":[{"krate":0,"index":89}],"decl_id":null,"docs":" A bit reader.\n","sig":null,"attributes":[{"value":"/ A bit reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16699,"byte_end":16716,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16781,"byte_end":16790,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"read_bits","qualname":"::bitstream::BitReader::read_bits","value":"pub fn read_bits(&mut Self, &[u8], u8) -> Bits","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Returns the next `n` bits.\n","sig":null,"attributes":[{"value":"/ Returns the next `n` bits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16743,"byte_end":16773,"line_start":16,"line_end":16,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16861,"byte_end":16870,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"BitWriter","qualname":"::bitstream::BitWriter","value":"BitWriter: Write","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":" A bit writer.\n","sig":null,"attributes":[{"value":"/ A bit writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16833,"byte_end":16850,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16921,"byte_end":16931,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"write_bits","qualname":"::bitstream::BitWriter::write_bits","value":"pub fn write_bits(&mut Self, u16, u8) -> io::Result<()>","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Writes the next `n` bits.\n","sig":null,"attributes":[{"value":"/ Writes the next `n` bits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16884,"byte_end":16913,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":17401,"byte_end":17410,"line_start":59,"line_end":59,"column_start":5,"column_end":14},"name":"LsbReader","qualname":"::bitstream::LsbReader","value":"LsbReader {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"decl_id":null,"docs":"Reads bits from a byte stream, LSB first.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":17470,"byte_end":17479,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"MsbReader","qualname":"::bitstream::MsbReader","value":"MsbReader {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":"Reads bits from a byte stream, MSB first.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20282,"byte_end":20291,"line_start":175,"line_end":175,"column_start":5,"column_end":14},"name":"LsbWriter","qualname":"::bitstream::LsbWriter","value":"LsbWriter {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":"Writes bits to a byte stream, LSB first.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":19389,"byte_end":19408,"line_start":128,"line_end":128,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20350,"byte_end":20359,"line_start":176,"line_end":176,"column_start":5,"column_end":14},"name":"MsbWriter","qualname":"::bitstream::MsbWriter","value":"MsbWriter {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":"Writes bits to a byte stream, MSB first.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":19389,"byte_end":19408,"line_start":128,"line_end":128,"column_start":1,"column_end":20}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":1898,"byte_end":1910,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8630,"byte_end":8634,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8931,"byte_end":8943,"line_start":245,"line_end":245,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12752,"byte_end":12759,"line_start":373,"line_end":373,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":14906,"byte_end":14913,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":17557,"byte_end":17566,"line_start":63,"line_end":63,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":18415,"byte_end":18424,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20446,"byte_end":20455,"line_start":179,"line_end":179,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20801,"byte_end":20810,"line_start":195,"line_end":195,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":1898,"byte_end":1910,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8630,"byte_end":8634,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":8931,"byte_end":8943,"line_start":245,"line_end":245,"column_start":6,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":12752,"byte_end":12759,"line_start":373,"line_end":373,"column_start":20,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\lzw.rs","byte_start":14906,"byte_end":14913,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":16872,"byte_end":16877,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":4780},"to":{"krate":0,"index":90}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":17557,"byte_end":17566,"line_start":63,"line_end":63,"column_start":20,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":187},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":18415,"byte_end":18424,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":88}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20446,"byte_end":20455,"line_start":179,"line_end":179,"column_start":30,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":90}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lzw-0.10.0\\src\\bitstream.rs","byte_start":20801,"byte_end":20810,"line_start":195,"line_end":195,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":90}}]}