{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","xml","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=08b21d4e2e0d8287","-C","extra-filename=-08b21d4e2e0d8287","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","bitflags=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libbitflags-af632af1c4fe8fff.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libxml-08b21d4e2e0d8287.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[10838306354219358327,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","num":16,"id":{"name":"bitflags","disambiguator":[15656775862444914106,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":240,"byte_end":251,"line_start":11,"line_end":11,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":269,"byte_end":281,"line_start":12,"line_end":12,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":299,"byte_end":310,"line_start":13,"line_end":13,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":328,"byte_end":341,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38014,"byte_end":38026,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":284}},{"kind":"Use","ref_id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38050,"byte_end":38058,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":284}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38173,"byte_end":38178,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":284}},{"kind":"Use","ref_id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38180,"byte_end":38189,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":284}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140656,"byte_end":140662,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140687,"byte_end":140699,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140732,"byte_end":140745,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140769,"byte_end":140777,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":969}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":82},{"krate":0,"index":109},{"krate":0,"index":134},{"krate":0,"index":168},{"krate":0,"index":284},{"krate":0,"index":969},{"krate":0,"index":1203}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/ This crate currently provides an almost XML 1.0/1.1-compliant pull parser.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":107,"byte_end":185,"line_start":6,"line_end":6,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":487,"byte_end":500,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/ Contains several macros used in this crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":502,"byte_end":549,"line_start":3,"line_end":3,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":1228},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":49},{"krate":0,"index":54},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":75},{"krate":0,"index":78}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[{"value":"/ Contains XML qualified names manipulation types and functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1362,"byte_end":1428,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1429,"byte_end":1432,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3383,"byte_end":3387,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[{"value":"/ Represents a qualified XML name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1502,"byte_end":1538,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1539,"byte_end":1542,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A qualified name always consists at least of a local name. It can optionally contain","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1543,"byte_end":1631,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ a prefix; when reading an XML document, if it contains a prefix, it must also contain a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1632,"byte_end":1723,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ namespace URI, but this is not enforced statically; see below. The name can contain a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1724,"byte_end":1813,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ namespace without a prefix; in that case a default, empty prefix is assumed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1814,"byte_end":1894,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1895,"byte_end":1898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When writing XML documents, it is possible to omit the namespace URI, leaving only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1899,"byte_end":1985,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ the prefix. In this case the writer will check that the specifed prefix is bound to some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":1986,"byte_end":2078,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ URI in the current namespace context. If both prefix and namespace URI are specified,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2079,"byte_end":2168,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/ it is checked that the current namespace context contains this exact correspondence","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2169,"byte_end":2256,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/ between prefix and namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2257,"byte_end":2294,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2295,"byte_end":2298,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Prefixes and URIs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2299,"byte_end":2322,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2323,"byte_end":2326,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A qualified name with a prefix must always contain a proper namespace URI --- names with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2327,"byte_end":2419,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ a prefix but without a namespace associated with that prefix are meaningless. However,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2420,"byte_end":2510,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/ it is impossible to obtain proper namespace URI by a prefix without a context, and such","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2511,"byte_end":2602,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/ context is only available when parsing a document (or it can be constructed manually","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2603,"byte_end":2691,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ when writing a document). Tying a name to a context statically seems impractical. This","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2692,"byte_end":2782,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ may change in future, though.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2783,"byte_end":2816,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2817,"byte_end":2820,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Conversions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2821,"byte_end":2838,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2839,"byte_end":2842,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `Name` implements some `From` instances for conversion from strings and tuples. For example:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2843,"byte_end":2939,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2940,"byte_end":2943,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2944,"byte_end":2955,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use xml::name::Name;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2956,"byte_end":2982,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ let n1: Name = \"p:some-name\".into();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":2983,"byte_end":3023,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let n2: Name = (\"p\", \"some-name\").into();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3024,"byte_end":3069,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3070,"byte_end":3073,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(n1, n2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3074,"byte_end":3097,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(n1.local_name, \"some-name\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3098,"byte_end":3141,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(n1.prefix, Some(\"p\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3142,"byte_end":3179,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert!(n1.namespace.is_none());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3180,"byte_end":3216,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3217,"byte_end":3224,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3225,"byte_end":3228,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This is added to support easy specification of XML elements when writing XML documents.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3229,"byte_end":3320,"line_start":46,"line_end":46,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3455,"byte_end":3465,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3398,"byte_end":3446,"line_start":49,"line_end":49,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3548,"byte_end":3557,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3481,"byte_end":3539,"line_start":52,"line_end":52,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3636,"byte_end":3642,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3581,"byte_end":3627,"line_start":55,"line_end":55,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4613,"byte_end":4621,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"pub fn to_owned(&Self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[{"value":"/ Returns an owned variant of the qualified name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4550,"byte_end":4601,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4930,"byte_end":4935,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"pub fn local(&str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing plain local name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4840,"byte_end":4904,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4909,"byte_end":4918,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5187,"byte_end":5195,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"pub fn prefixed(&'a str, &'a str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance with the given local name and prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5090,"byte_end":5161,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5166,"byte_end":5175,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5530,"byte_end":5539,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"pub fn qualified(&'a str, &'a str, Option<&'a str>) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `Name` instance representing a qualified name with or without a prefix and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5382,"byte_end":5474,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ with a namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5479,"byte_end":5504,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5509,"byte_end":5518,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5988,"byte_end":5995,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"pub fn to_repr(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a correct XML representation of this local name and prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5760,"byte_end":5831,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5836,"byte_end":5839,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method is different from the autoimplemented `to_string()` because it does not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5844,"byte_end":5931,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ include namespace URI in the result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":5936,"byte_end":5976,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6328,"byte_end":6340,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"pub fn repr_display(&Self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"/ Returns a structure which can be displayed with `std::fmt` machinery to obtain this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6066,"byte_end":6153,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ local name and prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6158,"byte_end":6184,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6189,"byte_end":6192,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This method is needed for efficiency purposes in order not to create unnecessary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6197,"byte_end":6281,"line_start":142,"line_end":142,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6286,"byte_end":6302,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6307,"byte_end":6316,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6507,"byte_end":6518,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"pub fn prefix_repr(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"/ Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6402,"byte_end":6481,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6486,"byte_end":6495,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6726,"byte_end":6737,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[{"value":"/ A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6589,"byte_end":6680,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/ displayed in an XML document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6681,"byte_end":6714,"line_start":157,"line_end":157,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7213,"byte_end":7222,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[{"value":"/ An owned variant of `Name`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7058,"byte_end":7089,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7090,"byte_end":7093,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Everything about `Name` applies to this structure as well.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7094,"byte_end":7156,"line_start":171,"line_end":171,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7286,"byte_end":7296,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A local name, e.g. `string` in `xsi:string`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7229,"byte_end":7277,"line_start":174,"line_end":174,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7378,"byte_end":7387,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[{"value":"/ A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7311,"byte_end":7369,"line_start":177,"line_end":177,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7465,"byte_end":7471,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[{"value":"/ A name prefix, e.g. `xsi` in `xsi:string`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7410,"byte_end":7456,"line_start":180,"line_end":180,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7744,"byte_end":7750,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"pub fn borrow(&Self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[{"value":"/ Constructs a borrowed `Name` based on this owned name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7674,"byte_end":7732,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8062,"byte_end":8067,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"pub fn local<S>(S) -> OwnedName where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a plain local name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7965,"byte_end":8036,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8041,"byte_end":8050,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8415,"byte_end":8424,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"pub fn qualified<S1, S2, S3>(S1, S2, Option<S3>) -> OwnedName where\nS1: Into<String>, S2: Into<String>, S3: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"/ Returns a new `OwnedName` instance representing a qualified name with or without","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8262,"byte_end":8346,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ a prefix and with a namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8351,"byte_end":8389,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8394,"byte_end":8403,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8888,"byte_end":8898,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"pub fn prefix_ref(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional prefix by reference, equivalent to `self.borrow().prefix`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8750,"byte_end":8831,"line_start":224,"line_end":224,"column_start":5,"column_end":86}},{"value":"/ but avoids extra work.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8836,"byte_end":8862,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8867,"byte_end":8876,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9121,"byte_end":9134,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"pub fn namespace_ref(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"/ Returns an optional namespace by reference, equivalen to `self.borrow().namespace`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":8978,"byte_end":9064,"line_start":231,"line_end":231,"column_start":5,"column_end":91}},{"value":"/ but avoids extra work.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9069,"byte_end":9095,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9100,"byte_end":9109,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":1274},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1294},{"krate":0,"index":1298},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":103},{"krate":0,"index":107}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[{"value":"/ Contains XML attributes manipulation types and functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11304,"byte_end":11365,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11366,"byte_end":11369,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11631,"byte_end":11640,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[{"value":"/ A borrowed version of an XML attribute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11450,"byte_end":11493,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11494,"byte_end":11497,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Consists of a borrowed qualified name and a borrowed string value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11498,"byte_end":11568,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11679,"byte_end":11683,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11651,"byte_end":11670,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11729,"byte_end":11734,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11700,"byte_end":11720,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12044,"byte_end":12052,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"pub fn to_owned(&Self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"/ Creates an owned attribute out of this borrowed one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11962,"byte_end":12018,"line_start":28,"line_end":28,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12023,"byte_end":12032,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12319,"byte_end":12322,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"pub fn new(Name, &'a str) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"/ Creates a borrowed attribute using the provided borrowed name and a borrowed string value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12199,"byte_end":12293,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12298,"byte_end":12307,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12631,"byte_end":12645,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[{"value":"/ An owned version of an XML attribute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12462,"byte_end":12503,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12504,"byte_end":12507,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Consists of an owned qualified name and an owned string value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12508,"byte_end":12574,"line_start":49,"line_end":49,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12680,"byte_end":12684,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[{"value":"/ Attribute name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12652,"byte_end":12671,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12731,"byte_end":12736,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[{"value":"/ Attribute value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12702,"byte_end":12722,"line_start":55,"line_end":55,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12843,"byte_end":12849,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"pub fn borrow(&Self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[{"value":"/ Returns a borrowed `Attribute` out of this owned one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12774,"byte_end":12831,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":13099,"byte_end":13102,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"pub fn new<S: Into<String>>(OwnedName, S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"/ Creates a new owned attribute using the provided owned name and an owned string value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12983,"byte_end":13073,"line_start":68,"line_end":68,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":13078,"byte_end":13087,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":113},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[{"value":"/ Contains common types and functions used throughout the library.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":13914,"byte_end":13982,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14104,"byte_end":14116,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[{"value":"/ Represents a position inside some textual document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":13999,"byte_end":14054,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14156,"byte_end":14159,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[{"value":"/ Row, counting from 0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14123,"byte_end":14147,"line_start":8,"line_end":8,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14206,"byte_end":14212,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[{"value":"/ Column, counting from 0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14170,"byte_end":14197,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14343,"byte_end":14346,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"pub fn new() -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"/ Creates a new position initialized to the beginning of the document","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14246,"byte_end":14317,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14322,"byte_end":14331,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14482,"byte_end":14489,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"pub fn advance(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"/ Advances the position in a line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14421,"byte_end":14456,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14461,"byte_end":14470,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14648,"byte_end":14662,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"pub fn advance_to_tab(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"/ Advances the position in a line to the next tab position","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14562,"byte_end":14622,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14627,"byte_end":14636,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14868,"byte_end":14876,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"pub fn new_line(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"/ Advances the position to the beginning of the next line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14783,"byte_end":14842,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14847,"byte_end":14856,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15439,"byte_end":15447,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":123}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[{"value":"/ Get the position in the document corresponding to the object","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15299,"byte_end":15363,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15364,"byte_end":15367,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by parsers, lexers and errors.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15368,"byte_end":15428,"line_start":58,"line_end":58,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15537,"byte_end":15545,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"pub fn position(&Self) -> TextPosition","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[{"value":"/ Returns the current position or a position corresponding to the object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15454,"byte_end":15529,"line_start":60,"line_end":60,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15802,"byte_end":15811,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[{"value":"/ XML version 1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15777,"byte_end":15797,"line_start":74,"line_end":74,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15843,"byte_end":15852,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[{"value":"/ XML version 1.1.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15818,"byte_end":15838,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15760,"byte_end":15770,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"pub enum XmlVersion { Version10, Version11, }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1334}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[{"value":"/ XML version enumeration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15684,"byte_end":15712,"line_start":71,"line_end":71,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16451,"byte_end":16469,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"pub fn is_whitespace_char(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a white space character (`S`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16236,"byte_end":16307,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16308,"byte_end":16369,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16370,"byte_end":16373,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16374,"byte_end":16443,"line_start":99,"line_end":99,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16759,"byte_end":16776,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"is_whitespace_str","qualname":"::common::is_whitespace_str","value":"pub fn is_whitespace_str(&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given string is compound only by white space\n characters (`S`) using the previous is_whitespace_char to check\n all characters of this string\n","sig":null,"attributes":[{"value":"/ Checks whether the given string is compound only by white space","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16582,"byte_end":16649,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/ characters (`S`) using the previous is_whitespace_char to check","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16650,"byte_end":16717,"line_start":108,"line_end":108,"column_start":1,"column_end":68}},{"value":"/ all characters of this string","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16718,"byte_end":16751,"line_start":109,"line_end":109,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17063,"byte_end":17081,"line_start":118,"line_end":118,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"pub fn is_name_start_char(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name start character (`NameStartChar`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16837,"byte_end":16919,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16920,"byte_end":16981,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16982,"byte_end":16985,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16986,"byte_end":17055,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17757,"byte_end":17769,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"pub fn is_name_char(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[{"value":"/ Checks whether the given character is a name character (`NameChar`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17542,"byte_end":17613,"line_start":131,"line_end":131,"column_start":1,"column_end":72}},{"value":"/ as is defined by XML 1.1 specification, [section 2.3][1].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17614,"byte_end":17675,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17676,"byte_end":17679,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [1]: http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-common-syn","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":17680,"byte_end":17749,"line_start":134,"line_end":134,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[{"value":"/ Contains functions for performing XML special characters escaping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":17983,"byte_end":18053,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20542,"byte_end":20562,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"pub fn escape_str_attribute(&str) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside an attribute value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20044,"byte_end":20117,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20118,"byte_end":20121,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20122,"byte_end":20195,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20196,"byte_end":20219,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20220,"byte_end":20223,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20224,"byte_end":20244,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/ * `>` → `&gt;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20245,"byte_end":20265,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/ * `\"` → `&quot;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20266,"byte_end":20288,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/ * `'` → `&apos;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20289,"byte_end":20311,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20312,"byte_end":20333,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20334,"byte_end":20337,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside XML attribute values or in PCDATA sections.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20338,"byte_end":20428,"line_start":90,"line_end":90,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20429,"byte_end":20432,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20433,"byte_end":20524,"line_start":92,"line_end":92,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20525,"byte_end":20534,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":21062,"byte_end":21079,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"pub fn escape_str_pcdata(&str) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"/ Performs escaping of common XML characters inside PCDATA.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20638,"byte_end":20699,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20700,"byte_end":20703,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This function replaces several important markup characters with their","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20704,"byte_end":20777,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ entity equivalents:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20778,"byte_end":20801,"line_start":101,"line_end":101,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20802,"byte_end":20805,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ * `<` → `&lt;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20806,"byte_end":20826,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ * `&` → `&amp;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20827,"byte_end":20848,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20849,"byte_end":20852,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The resulting string is safe to use inside PCDATA sections but NOT inside attribute values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20853,"byte_end":20948,"line_start":106,"line_end":106,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20949,"byte_end":20952,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Does not perform allocations if the given string does not contain escapable characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":20953,"byte_end":21044,"line_start":108,"line_end":108,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":21045,"byte_end":21054,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":198},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":225},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":279}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[{"value":"/ Contains namespace manipulation types and functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21451,"byte_end":21507,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21884,"byte_end":21899,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[{"value":"/ Designates prefix for namespace definitions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21692,"byte_end":21740,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21741,"byte_end":21744,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [Namespaces in XML][namespace] spec for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21745,"byte_end":21810,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21811,"byte_end":21814,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/TR/xml-names/#ns-decl","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21815,"byte_end":21873,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22118,"byte_end":22130,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xmlns` prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21926,"byte_end":21977,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21978,"byte_end":21981,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [A Namespace Name for xmlns Attributes][1] for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":21982,"byte_end":22054,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22055,"byte_end":22058,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/   [namespace]: http://www.w3.org/2000/xmlns/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22059,"byte_end":22107,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22641,"byte_end":22654,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[{"value":"/ Designates prefix for a namespace containing several special predefined attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22184,"byte_end":22271,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22272,"byte_end":22275,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See [2.10 White Space handling][1],  [2.1 Language Identification][2],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22276,"byte_end":22350,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ [XML Base specification][3] and [xml:id specification][4] for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22351,"byte_end":22434,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22435,"byte_end":22438,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/   [1]: http://www.w3.org/TR/REC-xml/#sec-white-space","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22439,"byte_end":22495,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/   [2]: http://www.w3.org/TR/REC-xml/#sec-lang-tag","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22496,"byte_end":22549,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/   [3]: http://www.w3.org/TR/xmlbase/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22550,"byte_end":22590,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/   [4]: http://www.w3.org/TR/xml-id/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22591,"byte_end":22630,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22805,"byte_end":22815,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[{"value":"/ Designates the standard URI for `xml` prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22681,"byte_end":22730,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22731,"byte_end":22734,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See `NS_XML_PREFIX` documentation for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22735,"byte_end":22794,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23585,"byte_end":23597,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[{"value":"/ Designates the absence of prefix in a qualified name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22878,"byte_end":22935,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22936,"byte_end":22939,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This constant should be used to define or query default namespace which should be used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":22940,"byte_end":23030,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ for element or attribute names without prefix. For example, if a namespace mapping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23031,"byte_end":23117,"line_start":42,"line_end":42,"column_start":1,"column_end":87}},{"value":"/ at a particular point in the document contains correspondence like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23118,"byte_end":23188,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ ```none","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23189,"byte_end":23200,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/   NS_NO_PREFIX  -->  urn:some:namespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23201,"byte_end":23244,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23245,"byte_end":23252,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ then all names declared without an explicit prefix `urn:some:namespace` is assumed as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23253,"byte_end":23342,"line_start":47,"line_end":47,"column_start":1,"column_end":90}},{"value":"/ a namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23343,"byte_end":23363,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23364,"byte_end":23367,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ By default empty prefix corresponds to absence of namespace, but this can change either","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23368,"byte_end":23459,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/ when writing an XML document (manually) or when reading an XML document (based on namespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23460,"byte_end":23555,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ declarations).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23556,"byte_end":23574,"line_start":52,"line_end":52,"column_start":1,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24035,"byte_end":24047,"line_start":61,"line_end":61,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[{"value":"/ Designates an empty namespace URI, which is equivalent to absence of namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23622,"byte_end":23705,"line_start":55,"line_end":55,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23706,"byte_end":23709,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This constant should not usually be used directly; it is used to designate that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23710,"byte_end":23793,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ empty prefix corresponds to absent namespace in `NamespaceStack` instances created with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23794,"byte_end":23885,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ `NamespaceStack::default()`. Therefore, it can be used to restore `NS_NO_PREFIX` mapping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23886,"byte_end":23978,"line_start":59,"line_end":59,"column_start":1,"column_end":93}},{"value":"/ in a namespace back to its default value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":23979,"byte_end":24024,"line_start":60,"line_end":60,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24263,"byte_end":24272,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[{"value":"/ Namespace is a map from prefixes to namespace URIs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24072,"byte_end":24127,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24128,"byte_end":24131,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ No prefix (i.e. default namespace) is designated by `NS_NO_PREFIX` constant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24132,"byte_end":24212,"line_start":65,"line_end":65,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24273,"byte_end":24301,"line_start":67,"line_end":67,"column_start":22,"column_end":50},"name":"0","qualname":"::namespace::Namespace::0","value":"std::collections::BTreeMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24383,"byte_end":24388,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"pub fn empty() -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24326,"byte_end":24357,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24362,"byte_end":24371,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24509,"byte_end":24517,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24440,"byte_end":24483,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24488,"byte_end":24497,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24707,"byte_end":24727,"line_start":82,"line_end":82,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"pub fn is_essentially_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[{"value":"/ Checks whether this namespace is essentially empty, that is, it does not contain","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24572,"byte_end":24656,"line_start":80,"line_end":80,"column_start":5,"column_end":89}},{"value":"/ anything but default mappings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24661,"byte_end":24695,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25395,"byte_end":25403,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"pub fn contains<P: ?Sized + AsRef<str>>(&Self, &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"/ Checks whether this namespace mapping contains the given prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25120,"byte_end":25188,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25193,"byte_end":25196,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25201,"byte_end":25217,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/ * `prefix`  --- namespace prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25222,"byte_end":25259,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25264,"byte_end":25267,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25272,"byte_end":25290,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ `true` if this namespace contains the given prefix, `false` otherwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25295,"byte_end":25369,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25374,"byte_end":25383,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26017,"byte_end":26020,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"pub fn put<P, U>(&mut Self, P, U) -> bool where P: Into<String>,\nU: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25511,"byte_end":25550,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25555,"byte_end":25558,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method does not override any already existing mappings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25563,"byte_end":25627,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25632,"byte_end":25635,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the map already contained","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25640,"byte_end":25711,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ the given prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25716,"byte_end":25737,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25742,"byte_end":25745,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25750,"byte_end":25766,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25771,"byte_end":25807,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25812,"byte_end":25845,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25850,"byte_end":25853,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25858,"byte_end":25876,"line_start":117,"line_end":117,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25881,"byte_end":25959,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":25964,"byte_end":26005,"line_start":119,"line_end":119,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26868,"byte_end":26877,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"pub fn force_put<P, U>(&mut Self, P, U) -> Option<String> where\nP: Into<String>, U: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[{"value":"/ Puts a mapping into this namespace forcefully.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26333,"byte_end":26383,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26388,"byte_end":26391,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method, unlike `put()`, does replace an already existing mapping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26396,"byte_end":26470,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26475,"byte_end":26478,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Returns previous URI which was assigned to the given prefix, if it is present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26483,"byte_end":26565,"line_start":136,"line_end":136,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26570,"byte_end":26573,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26578,"byte_end":26594,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26599,"byte_end":26635,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26640,"byte_end":26673,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26678,"byte_end":26681,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26686,"byte_end":26704,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ `Some(uri)` with `uri` being a previous URI assigned to the `prefix`, or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26709,"byte_end":26785,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ `None` if such prefix was not present in the namespace before.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":26790,"byte_end":26856,"line_start":144,"line_end":144,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27280,"byte_end":27283,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"pub fn get<'a, P: ?Sized + AsRef<str>>(&'a Self, &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[{"value":"/ Queries the namespace for the given prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27045,"byte_end":27092,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27097,"byte_end":27100,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27105,"byte_end":27121,"line_start":153,"line_end":153,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27126,"byte_end":27162,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27167,"byte_end":27170,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27175,"byte_end":27193,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ Namespace URI corresponding to the given prefix, if it is present.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27198,"byte_end":27268,"line_start":157,"line_end":157,"column_start":5,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27501,"byte_end":27518,"line_start":164,"line_end":164,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries, for<'b> fn(: (&'b String, &'b String)) -> UriMapping>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[{"value":"/ An alias for iterator type for namespace mappings contained in a namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27412,"byte_end":27491,"line_start":163,"line_end":163,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28178,"byte_end":28192,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[{"value":"/ Namespace stack is a sequence of namespaces.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":27953,"byte_end":28001,"line_start":181,"line_end":181,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28002,"byte_end":28005,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ Namespace stack is used to represent cumulative namespace consisting of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28006,"byte_end":28081,"line_start":183,"line_end":183,"column_start":1,"column_end":76}},{"value":"/ combined namespaces from nested elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28082,"byte_end":28127,"line_start":184,"line_end":184,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28193,"byte_end":28211,"line_start":186,"line_end":186,"column_start":27,"column_end":45},"name":"0","qualname":"::namespace::NamespaceStack::0","value":"std::vec::Vec<namespace::Namespace>","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28304,"byte_end":28309,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"pub fn empty() -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an empty namespace stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28241,"byte_end":28278,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28283,"byte_end":28292,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28630,"byte_end":28637,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"pub fn default() -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"/ Returns a namespace stack with default items in it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28377,"byte_end":28432,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28437,"byte_end":28440,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Default items are the following:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28445,"byte_end":28481,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28486,"byte_end":28489,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ * `xml` → `http://www.w3.org/XML/1998/namespace`;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28494,"byte_end":28549,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/ * `xmlns` → `http://www.w3.org/2000/xmlns/`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28554,"byte_end":28604,"line_start":198,"line_end":198,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28609,"byte_end":28618,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29051,"byte_end":29061,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"pub fn push_empty(&mut Self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"/ Adds an empty namespace to the top of this stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28972,"byte_end":29025,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29030,"byte_end":29039,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29283,"byte_end":29286,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"pub fn pop(&mut Self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29163,"byte_end":29211,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29216,"byte_end":29219,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29224,"byte_end":29257,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29262,"byte_end":29271,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29519,"byte_end":29526,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"pub fn try_pop(&mut Self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Removes the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29354,"byte_end":29402,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29407,"byte_end":29410,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(namespace)` if this stack is not empty and `None` otherwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29415,"byte_end":29493,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29498,"byte_end":29507,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29733,"byte_end":29741,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"pub fn peek_mut(&mut Self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace mutably, leaving the stack intact.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29593,"byte_end":29661,"line_start":235,"line_end":235,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29666,"byte_end":29669,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29674,"byte_end":29707,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29712,"byte_end":29721,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29961,"byte_end":29965,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"pub fn peek(&Self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"/ Borrows the topmost namespace immutably, leaving the stack intact.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29819,"byte_end":29889,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29894,"byte_end":29897,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Panics if the stack is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29902,"byte_end":29935,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":29940,"byte_end":29949,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30685,"byte_end":30696,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"pub fn put_checked<P, U>(&mut Self, P, U) -> bool where P: Into<String> +\nAsRef<str>, U: Into<String> + AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace if this stack does not already contain one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30031,"byte_end":30120,"line_start":251,"line_end":251,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30125,"byte_end":30128,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30133,"byte_end":30220,"line_start":253,"line_end":253,"column_start":5,"column_end":92}},{"value":"/ Note that both key and value are matched and the mapping is inserted if either","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30225,"byte_end":30307,"line_start":254,"line_end":254,"column_start":5,"column_end":87}},{"value":"/ namespace prefix is not already mapped, or if it is mapped, but to a different URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30312,"byte_end":30399,"line_start":255,"line_end":255,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30404,"byte_end":30407,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30412,"byte_end":30428,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30433,"byte_end":30469,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30474,"byte_end":30507,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30512,"byte_end":30515,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30520,"byte_end":30538,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30543,"byte_end":30621,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":30626,"byte_end":30673,"line_start":263,"line_end":263,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31729,"byte_end":31732,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"pub fn put<P, U>(&mut Self, P, U) -> bool where P: Into<String>,\nU: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"/ Puts a mapping into the topmost namespace in this stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31017,"byte_end":31077,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31082,"byte_end":31085,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This method does not override a mapping in the topmost namespace if it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31090,"byte_end":31167,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/ already present, however, it does not depend on other namespaces in the stack,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31172,"byte_end":31254,"line_start":279,"line_end":279,"column_start":5,"column_end":87}},{"value":"/ so it is possible to put a mapping which is present in lower namespaces.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31259,"byte_end":31335,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31340,"byte_end":31343,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Returns a boolean flag indicating whether the insertion has completed successfully.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31348,"byte_end":31435,"line_start":282,"line_end":282,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31440,"byte_end":31443,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31448,"byte_end":31464,"line_start":284,"line_end":284,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31469,"byte_end":31505,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/ * `uri`    --- namespace URI.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31510,"byte_end":31543,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31548,"byte_end":31551,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31556,"byte_end":31574,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ `true` if `prefix` has been inserted successfully; `false` if the `prefix`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31579,"byte_end":31657,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ was already present in the namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31662,"byte_end":31703,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31708,"byte_end":31717,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32253,"byte_end":32256,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"pub fn get<'a, P: ?Sized + AsRef<str>>(&'a Self, &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"/ Performs a search for the given prefix in the whole stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31893,"byte_end":31955,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31960,"byte_end":31963,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This method walks the stack from top to bottom, querying each namespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":31968,"byte_end":32043,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ in order for the given prefix. If none of the namespaces contains the prefix,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32048,"byte_end":32129,"line_start":301,"line_end":301,"column_start":5,"column_end":86}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32134,"byte_end":32157,"line_start":302,"line_end":302,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32162,"byte_end":32165,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32170,"byte_end":32186,"line_start":304,"line_end":304,"column_start":5,"column_end":21}},{"value":"/ * `prefix` --- namespace prefix.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32191,"byte_end":32227,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32232,"byte_end":32241,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32764,"byte_end":32770,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"pub fn squash(&Self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[{"value":"/ Combines this stack of namespaces into a single namespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32546,"byte_end":32608,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32613,"byte_end":32616,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Namespaces are combined in left-to-right order, that is, rightmost namespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32621,"byte_end":32701,"line_start":320,"line_end":320,"column_start":5,"column_end":85}},{"value":"/ elements take priority over leftmost ones.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32706,"byte_end":32752,"line_start":321,"line_end":321,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33166,"byte_end":33180,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"pub fn checked_target(&mut Self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"/ Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":32993,"byte_end":33082,"line_start":330,"line_end":330,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33087,"byte_end":33090,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ See `CheckedTarget` for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33095,"byte_end":33140,"line_start":332,"line_end":332,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33145,"byte_end":33154,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33342,"byte_end":33346,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"pub fn iter(&Self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all mappings in this namespace stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33250,"byte_end":33316,"line_start":338,"line_end":338,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33321,"byte_end":33330,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33851,"byte_end":33873,"line_start":359,"line_end":359,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[{"value":"/ An iterator over mappings from prefixes to URIs in a namespace stack.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33416,"byte_end":33489,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33490,"byte_end":33493,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33494,"byte_end":33507,"line_start":347,"line_end":347,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33508,"byte_end":33515,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33516,"byte_end":33557,"line_start":349,"line_end":349,"column_start":1,"column_end":42}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33558,"byte_end":33600,"line_start":350,"line_end":350,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33601,"byte_end":33622,"line_start":351,"line_end":351,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33623,"byte_end":33649,"line_start":352,"line_end":352,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33650,"byte_end":33676,"line_start":353,"line_end":353,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33677,"byte_end":33698,"line_start":354,"line_end":354,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33699,"byte_end":33725,"line_start":355,"line_end":355,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33726,"byte_end":33729,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![(\"c\", \"urn:C\"), (\"a\", \"urn:A\"), (\"b\", \"urn:B\")], nst.iter().collect::<Vec<_>>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33730,"byte_end":33831,"line_start":357,"line_end":357,"column_start":1,"column_end":102}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":33832,"byte_end":33839,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":35842,"byte_end":35852,"line_start":419,"line_end":419,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[{"value":"/ A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":35746,"byte_end":35832,"line_start":418,"line_end":418,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37427,"byte_end":37440,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[{"value":"/ A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36341,"byte_end":36427,"line_start":437,"line_end":437,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36428,"byte_end":36431,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36432,"byte_end":36445,"line_start":439,"line_end":439,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36446,"byte_end":36449,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36450,"byte_end":36457,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36458,"byte_end":36499,"line_start":442,"line_end":442,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36500,"byte_end":36503,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36504,"byte_end":36546,"line_start":444,"line_end":444,"column_start":1,"column_end":43}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36547,"byte_end":36568,"line_start":445,"line_end":445,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36569,"byte_end":36595,"line_start":446,"line_end":446,"column_start":1,"column_end":27}},{"value":"/ nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36596,"byte_end":36622,"line_start":447,"line_end":447,"column_start":1,"column_end":27}},{"value":"/ nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36623,"byte_end":36644,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/ nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36645,"byte_end":36671,"line_start":449,"line_end":449,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36672,"byte_end":36675,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ nst.checked_target().extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36676,"byte_end":36778,"line_start":451,"line_end":451,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36779,"byte_end":36794,"line_start":452,"line_end":452,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\"), (\"b\", \"urn:B\")],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36795,"byte_end":36872,"line_start":453,"line_end":453,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36873,"byte_end":36911,"line_start":454,"line_end":454,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36912,"byte_end":36918,"line_start":455,"line_end":455,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36919,"byte_end":36926,"line_start":456,"line_end":456,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36927,"byte_end":36930,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Compare:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36931,"byte_end":36943,"line_start":458,"line_end":458,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36944,"byte_end":36947,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36948,"byte_end":36955,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/ # use xml::namespace::NamespaceStack;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36956,"byte_end":36997,"line_start":461,"line_end":461,"column_start":1,"column_end":42}},{"value":"/ # let mut nst = NamespaceStack::empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36998,"byte_end":37042,"line_start":462,"line_end":462,"column_start":1,"column_end":45}},{"value":"/ # nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37043,"byte_end":37066,"line_start":463,"line_end":463,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"a\", \"urn:A\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37067,"byte_end":37095,"line_start":464,"line_end":464,"column_start":1,"column_end":29}},{"value":"/ # nst.put(\"b\", \"urn:B\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37096,"byte_end":37124,"line_start":465,"line_end":465,"column_start":1,"column_end":29}},{"value":"/ # nst.push_empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37125,"byte_end":37148,"line_start":466,"line_end":466,"column_start":1,"column_end":24}},{"value":"/ # nst.put(\"c\", \"urn:C\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37149,"byte_end":37177,"line_start":467,"line_end":467,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37178,"byte_end":37181,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ nst.extend(vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:Y\"), (\"d\", \"urn:D\")]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37182,"byte_end":37267,"line_start":469,"line_end":469,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37268,"byte_end":37283,"line_start":470,"line_end":470,"column_start":1,"column_end":16}},{"value":"/     vec![(\"a\", \"urn:Z\"), (\"b\", \"urn:B\"), (\"c\", \"urn:C\"), (\"d\", \"urn:D\")],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37284,"byte_end":37361,"line_start":471,"line_end":471,"column_start":1,"column_end":78}},{"value":"/     nst.iter().collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37362,"byte_end":37400,"line_start":472,"line_end":472,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37401,"byte_end":37407,"line_start":473,"line_end":473,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37408,"byte_end":37415,"line_start":474,"line_end":474,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":453},{"krate":0,"index":825},{"krate":0,"index":844},{"krate":0,"index":870},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":937},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":962},{"krate":0,"index":966}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[{"value":"/ Contains high-level interface for a pull-based XML parser.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":37721,"byte_end":37783,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":37784,"byte_end":37787,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The most important type in this module is `EventReader`, which provides an iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":37788,"byte_end":37875,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ view for events in XML document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":37876,"byte_end":37912,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122402,"byte_end":122414,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters, extra_entities, ignore_end_of_stream }","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[{"value":"/ Parser configuration structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122213,"byte_end":122248,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122249,"byte_end":122252,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure contains various configuration options which affect","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122253,"byte_end":122323,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ behavior of the parser.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122324,"byte_end":122351,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123117,"byte_end":123132,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace in textual events be removed. Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122421,"byte_end":122505,"line_start":13,"line_end":13,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122510,"byte_end":122513,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ When true, all standalone whitespace will be removed (this means no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122518,"byte_end":122589,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ `Whitespace` events will ve emitted), and leading and trailing whitespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122594,"byte_end":122671,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ from `Character` events will be deleted. If after trimming `Characters`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122676,"byte_end":122751,"line_start":17,"line_end":17,"column_start":5,"column_end":80}},{"value":"/ event will be empty, it will also be omitted from output stream. This is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122756,"byte_end":122832,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ possible, however, only if `whitespace_to_characters` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122837,"byte_end":122897,"line_start":19,"line_end":19,"column_start":5,"column_end":65}},{"value":"/ `cdata_to_characters` options are set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122902,"byte_end":122944,"line_start":20,"line_end":20,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122949,"byte_end":122952,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This option does not affect CDATA events, unless `cdata_to_characters`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":122957,"byte_end":123031,"line_start":22,"line_end":22,"column_start":5,"column_end":79}},{"value":"/ option is also set. In that case CDATA content will also be trimmed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123036,"byte_end":123108,"line_start":23,"line_end":23,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123482,"byte_end":123506,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should whitespace be converted to characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123145,"byte_end":123209,"line_start":26,"line_end":26,"column_start":5,"column_end":69}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123214,"byte_end":123235,"line_start":27,"line_end":27,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123240,"byte_end":123243,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `Whitespace` events `Characters` events with the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123248,"byte_end":123320,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ same content will be emitted. If `trim_whitespace` is also true, these","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123325,"byte_end":123399,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ events will be trimmed to nothing and, consequently, not emitted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123404,"byte_end":123473,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123913,"byte_end":123932,"line_start":41,"line_end":41,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[{"value":"/ Whether or not should CDATA be converted to characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123519,"byte_end":123578,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/ Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123583,"byte_end":123604,"line_start":35,"line_end":35,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123609,"byte_end":123612,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If true, instead of `CData` events `Characters` events with the same","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123617,"byte_end":123689,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ content will be emitted. If `trim_whitespace` is also true, these events","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123694,"byte_end":123770,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ will be trimmed. If corresponding CDATA contained nothing but whitespace,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123775,"byte_end":123852,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ this event will be omitted from the stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123857,"byte_end":123904,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124087,"byte_end":124102,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should comments be omitted. Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":123945,"byte_end":124008,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124013,"byte_end":124016,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If true, `Comment` events will not be emitted at all.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124021,"byte_end":124078,"line_start":45,"line_end":45,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124588,"byte_end":124607,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not should sequential `Characters` events be merged.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124115,"byte_end":124182,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124187,"byte_end":124207,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124212,"byte_end":124215,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If true, multiple sequential `Characters` events will be merged into","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124220,"byte_end":124292,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ a single event, that is, their data will be concatenated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124297,"byte_end":124358,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124363,"byte_end":124366,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Multiple sequential `Characters` events are only possible if either","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124371,"byte_end":124442,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ `cdata_to_characters` or `ignore_comments` are set. Otherwise character","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124447,"byte_end":124522,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ events will always be separated by other events.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124527,"byte_end":124579,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125033,"byte_end":125047,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"extra_entities","qualname":"::reader::config::ParserConfig::extra_entities","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" A map of extra entities recognized by the parser. Default is an empty map.","sig":null,"attributes":[{"value":"/ A map of extra entities recognized by the parser. Default is an empty map.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124620,"byte_end":124698,"line_start":59,"line_end":59,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124703,"byte_end":124706,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ By default the XML parser recognizes the entities defined in the XML spec. Sometimes,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124711,"byte_end":124800,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/ however, it is convenient to make the parser recognize additional entities which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124805,"byte_end":124889,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/ are also not available through the DTD definitions (especially given that at the moment","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124894,"byte_end":124985,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ DTD parsing is not supported).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":124990,"byte_end":125024,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125806,"byte_end":125826,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"ignore_end_of_stream","qualname":"::reader::config::ParserConfig::ignore_end_of_stream","value":"bool","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Whether or not the parser should ignore the end of stream. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not the parser should ignore the end of stream. Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125079,"byte_end":125159,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125164,"byte_end":125167,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ By default the parser will either error out when it encounters a premature end of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125172,"byte_end":125257,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/ stream or complete normally if the end of stream was expected. If you want to continue","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125262,"byte_end":125352,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ reading from a stream whose input is supplied progressively, you can set this option to true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125357,"byte_end":125454,"line_start":71,"line_end":71,"column_start":5,"column_end":102}},{"value":"/ In this case the parser will allow you to invoke the next() method even if a supposed end","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125459,"byte_end":125552,"line_start":72,"line_end":72,"column_start":5,"column_end":98}},{"value":"/ of stream has happened.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125557,"byte_end":125584,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125589,"byte_end":125592,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that support for this functionality is incomplete; for example, the parser will fail if","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125597,"byte_end":125693,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ the premature end of stream happens inside PCDATA. Therefore, use this option at your own risk.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125698,"byte_end":125797,"line_start":76,"line_end":76,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126225,"byte_end":126228,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"pub fn new() -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[{"value":"/ Returns a new config with default values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125860,"byte_end":125905,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125910,"byte_end":125913,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ You can tweak default values using builder-like pattern:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125918,"byte_end":125978,"line_start":83,"line_end":83,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125983,"byte_end":125986,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125991,"byte_end":126002,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126007,"byte_end":126041,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126046,"byte_end":126049,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let config = ParserConfig::new()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126054,"byte_end":126090,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126095,"byte_end":126125,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126130,"byte_end":126160,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126165,"byte_end":126201,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126206,"byte_end":126213,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127206,"byte_end":127219,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"pub fn create_reader<R: Read>(Self, R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML reader with this configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126572,"byte_end":126622,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126627,"byte_end":126630,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a reader at the same time:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126635,"byte_end":126723,"line_start":107,"line_end":107,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126728,"byte_end":126731,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126736,"byte_end":126747,"line_start":109,"line_end":109,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126752,"byte_end":126786,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126791,"byte_end":126794,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let mut source: &[u8] = b\"...\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126799,"byte_end":126834,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126839,"byte_end":126842,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let reader = ParserConfig::new()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126847,"byte_end":126883,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/     .trim_whitespace(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126888,"byte_end":126918,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/     .ignore_comments(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126923,"byte_end":126953,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/     .coalesce_characters(false)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126958,"byte_end":126993,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/     .create_reader(&mut source);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":126998,"byte_end":127034,"line_start":118,"line_end":118,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127039,"byte_end":127046,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127051,"byte_end":127054,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventReader::new_with_config()` with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127059,"byte_end":127145,"line_start":121,"line_end":121,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127150,"byte_end":127180,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127185,"byte_end":127194,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127854,"byte_end":127864,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"add_entity","qualname":"<ParserConfig>::add_entity","value":"pub fn add_entity<S: Into<String>, T: Into<String>>(Self, S, T)\n-> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entity mapping and returns an updated config object.","sig":null,"attributes":[{"value":"/ Adds a new entity mapping and returns an updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127328,"byte_end":127395,"line_start":128,"line_end":128,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127400,"byte_end":127403,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for adding external entities mappings to the XML parser.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127408,"byte_end":127497,"line_start":130,"line_end":130,"column_start":5,"column_end":94}},{"value":"/ An example:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127502,"byte_end":127517,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127522,"byte_end":127525,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127530,"byte_end":127541,"line_start":133,"line_end":133,"column_start":5,"column_end":16}},{"value":"/ use xml::reader::ParserConfig;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127546,"byte_end":127580,"line_start":134,"line_end":134,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127585,"byte_end":127588,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let mut source: &[u8] = b\"...\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127593,"byte_end":127628,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127633,"byte_end":127636,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let reader = ParserConfig::new()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127641,"byte_end":127677,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/     .add_entity(\"nbsp\", \" \")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127682,"byte_end":127714,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/     .add_entity(\"copy\", \"©\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127719,"byte_end":127752,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/     .add_entity(\"reg\", \"®\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127757,"byte_end":127789,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/     .create_reader(&mut source);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127794,"byte_end":127830,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":127835,"byte_end":127842,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128186,"byte_end":128201,"line_start":158,"line_end":158,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"pub fn trim_whitespace(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128217,"byte_end":128241,"line_start":159,"line_end":159,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"pub fn whitespace_to_characters(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128257,"byte_end":128276,"line_start":160,"line_end":160,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"pub fn cdata_to_characters(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128292,"byte_end":128307,"line_start":161,"line_end":161,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"pub fn ignore_comments(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128323,"byte_end":128342,"line_start":162,"line_end":162,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"pub fn coalesce_characters(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128358,"byte_end":128378,"line_start":163,"line_end":163,"column_start":5,"column_end":25},"name":"ignore_end_of_stream","qualname":"<ParserConfig>::ignore_end_of_stream","value":"pub fn ignore_end_of_stream(Self, bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"StructVariant","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":129034,"byte_end":129047,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128831,"byte_end":128875,"line_start":17,"line_end":17,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128880,"byte_end":128883,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted before any other event. It is emitted","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128888,"byte_end":128958,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ even if the actual declaration is not present in the document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128963,"byte_end":129029,"line_start":20,"line_end":20,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130005,"byte_end":130016,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[{"value":"/ Denotes to the end of the document stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":129766,"byte_end":129812,"line_start":42,"line_end":42,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":129817,"byte_end":129820,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This event is always emitted after any other event (except `Error`). After it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":129825,"byte_end":129906,"line_start":44,"line_end":44,"column_start":5,"column_end":86}},{"value":"/ is emitted for the first time, it will always be emitted on next event pull attempts.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":129911,"byte_end":130000,"line_start":45,"line_end":45,"column_start":5,"column_end":94}}]},{"kind":"StructVariant","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130219,"byte_end":130240,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130023,"byte_end":130065,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130070,"byte_end":130073,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This event contains a processing instruction target (`name`) and opaque `data`. It","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130078,"byte_end":130164,"line_start":50,"line_end":50,"column_start":5,"column_end":91}},{"value":"/ is up to the application to process them.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130169,"byte_end":130214,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130605,"byte_end":130617,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130394,"byte_end":130436,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130441,"byte_end":130444,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing opening tags or after parsing bodiless tags. In the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130449,"byte_end":130540,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ latter case `EndElement` event immediately follows.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130545,"byte_end":130600,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131229,"byte_end":131239,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":130995,"byte_end":131032,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131037,"byte_end":131040,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This event is emitted after parsing closing tags or after parsing bodiless tags. In the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131045,"byte_end":131136,"line_start":79,"line_end":79,"column_start":5,"column_end":96}},{"value":"/ latter case it is emitted immediately after corresponding `StartElement` event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131141,"byte_end":131224,"line_start":80,"line_end":80,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131608,"byte_end":131613,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131321,"byte_end":131347,"line_start":86,"line_end":86,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131352,"byte_end":131355,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data. No unescaping will be performed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131360,"byte_end":131431,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131436,"byte_end":131439,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `CData`. See","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131444,"byte_end":131535,"line_start":90,"line_end":90,"column_start":5,"column_end":96}},{"value":"/ `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131540,"byte_end":131603,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131837,"byte_end":131844,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131628,"byte_end":131650,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131655,"byte_end":131658,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to ignore comments, so this event will never be emitted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131663,"byte_end":131760,"line_start":96,"line_end":96,"column_start":5,"column_end":102}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131765,"byte_end":131832,"line_start":97,"line_end":97,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132230,"byte_end":132240,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131859,"byte_end":131902,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131907,"byte_end":131910,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will always be unescaped, so no entities like `&lt;` or `&amp;` or `&#123;`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":131915,"byte_end":132017,"line_start":102,"line_end":102,"column_start":5,"column_end":107}},{"value":"/ will appear in it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132022,"byte_end":132044,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132049,"byte_end":132052,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to trim leading and trailing whitespace for this event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132057,"byte_end":132153,"line_start":105,"line_end":105,"column_start":5,"column_end":101}},{"value":"/ See `pull::ParserConfiguration` structure for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132158,"byte_end":132225,"line_start":106,"line_end":106,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132609,"byte_end":132619,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[{"value":"/ Denotes a chunk of whitespace outside of tags.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132255,"byte_end":132305,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132310,"byte_end":132313,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ It is possible to configure a parser to emit `Characters` event instead of `Whitespace`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132318,"byte_end":132410,"line_start":111,"line_end":111,"column_start":5,"column_end":97}},{"value":"/ See `pull::ParserConfiguration` structure for more information. When combined with whitespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132415,"byte_end":132512,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ trimming, it will eliminate standalone whitespace from the event stream completely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132517,"byte_end":132604,"line_start":113,"line_end":113,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128816,"byte_end":128824,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"pub enum XmlEvent {\n    StartDocument {\n            version: XmlVersion,\n            encoding: String,\n            standalone: Option<bool>,\n        },\n    EndDocument,\n    ProcessingInstruction {\n            name: String,\n            data: Option<String>,\n        },\n    StartElement {\n            name: OwnedName,\n            attributes: Vec<OwnedAttribute>,\n            namespace: Namespace,\n        },\n    EndElement {\n            name: OwnedName,\n        },\n    CData(String),\n    Comment(String),\n    Characters(String),\n    Whitespace(String),\n}","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[{"value":"/ An element of an XML input stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128613,"byte_end":128651,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128652,"byte_end":128655,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Items of this enum are emitted by `reader::EventReader`. They correspond to different","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128656,"byte_end":128745,"line_start":13,"line_end":13,"column_start":1,"column_end":90}},{"value":"/ elements of an XML document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":128746,"byte_end":128778,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135723,"byte_end":135738,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"pub fn as_writer_event<'a>(&'a Self) -> Option<::writer::events::XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[{"value":"/ Obtains a writer event from this reader event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134298,"byte_end":134348,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134353,"byte_end":134356,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method is useful for streaming processing of XML documents where the output","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134361,"byte_end":134445,"line_start":155,"line_end":155,"column_start":5,"column_end":89}},{"value":"/ is also an XML document. With this method it is possible to process some events","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134450,"byte_end":134533,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/ while passing other events through to the writer unchanged:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134538,"byte_end":134601,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134606,"byte_end":134609,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134614,"byte_end":134625,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ use std::str;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134630,"byte_end":134647,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134652,"byte_end":134655,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ use xml::{EventReader, EventWriter};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134660,"byte_end":134700,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/ use xml::reader::XmlEvent as ReaderEvent;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134705,"byte_end":134750,"line_start":163,"line_end":163,"column_start":5,"column_end":50}},{"value":"/ use xml::writer::XmlEvent as WriterEvent;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134755,"byte_end":134800,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134805,"byte_end":134808,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut input: &[u8] = b\"<hello>world</hello>\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134813,"byte_end":134864,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/ let mut output: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134869,"byte_end":134910,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134915,"byte_end":134918,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134923,"byte_end":134928,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/     let mut reader = EventReader::new(&mut input);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134933,"byte_end":134987,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/     let mut writer = EventWriter::new(&mut output);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134992,"byte_end":135047,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135052,"byte_end":135055,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     for e in reader {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135060,"byte_end":135085,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/         match e.unwrap() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135090,"byte_end":135120,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/             ReaderEvent::Characters(s) =>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135125,"byte_end":135170,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/                 writer.write(WriterEvent::characters(&s.to_uppercase())).unwrap(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135175,"byte_end":135261,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"/             e => if let Some(e) = e.as_writer_event() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135266,"byte_end":135325,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/                 writer.write(e).unwrap()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135330,"byte_end":135374,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135379,"byte_end":135396,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135401,"byte_end":135414,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135419,"byte_end":135428,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135433,"byte_end":135438,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135443,"byte_end":135446,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135451,"byte_end":135466,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     str::from_utf8(&output).unwrap(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135471,"byte_end":135512,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/     r#\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><hello>WORLD</hello>\"#","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135517,"byte_end":135588,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135593,"byte_end":135599,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135604,"byte_end":135611,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135616,"byte_end":135619,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this API may change or get additions in future to improve its ergonomics.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":135624,"byte_end":135711,"line_start":190,"line_end":190,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137433,"byte_end":137439,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137464,"byte_end":137466,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137483,"byte_end":137487,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137509,"byte_end":137522,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137417,"byte_end":137426,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"pub enum ErrorKind {\n    Syntax(Cow),\n    Io(io::Error),\n    Utf8(str::Utf8Error),\n    UnexpectedEof,\n}","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137695,"byte_end":137700,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[{"value":"/ An XML parsing error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137527,"byte_end":137552,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137553,"byte_end":137556,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Consists of a 2D position in a document and a textual message describing the error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137557,"byte_end":137644,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138109,"byte_end":138112,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a message which is contained inside this error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138009,"byte_end":138083,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138088,"byte_end":138097,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138429,"byte_end":138433,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38244,"byte_end":38250,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlReader`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38193,"byte_end":38234,"line_start":24,"line_end":24,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38382,"byte_end":38393,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38283,"byte_end":38370,"line_start":27,"line_end":27,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38560,"byte_end":38563,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"pub fn new(R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader, consuming the given stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38481,"byte_end":38534,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38539,"byte_end":38548,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38782,"byte_end":38797,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"pub fn new_with_config(R, ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"/ Creates a new reader with the provded configuration, consuming the given stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38672,"byte_end":38756,"line_start":40,"line_end":40,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38761,"byte_end":38770,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39168,"byte_end":39172,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"pub fn next(&mut Self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"/ Pulls and returns next XML event from the stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38934,"byte_end":38987,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38992,"byte_end":38995,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If returned event is `XmlEvent::Error` or `XmlEvent::EndDocument`, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39000,"byte_end":39075,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ further calls to this method will return this event again.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39080,"byte_end":39142,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39147,"byte_end":39156,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39267,"byte_end":39273,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"pub fn source(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39315,"byte_end":39325,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"pub fn source_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39683,"byte_end":39693,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `EventReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39373,"byte_end":39437,"line_start":58,"line_end":58,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39442,"byte_end":39445,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this operation is destructive; unwrapping the reader and wrapping it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39450,"byte_end":39532,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/ again with `EventReader::new()` will create a fresh reader which will attempt","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39537,"byte_end":39618,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/ to parse an XML document from the beginning.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39623,"byte_end":39671,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40415,"byte_end":40421,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[{"value":"/ An iterator over XML events created from some type implementing `Read`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40156,"byte_end":40231,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40232,"byte_end":40235,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ When the next event is `xml::event::Error` or `xml::event::EndDocument`, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40236,"byte_end":40317,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/ it will be returned by the iterator once, and then it will stop producing events.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40318,"byte_end":40403,"line_start":88,"line_end":88,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40602,"byte_end":40612,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"pub fn into_inner(Self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"/ Unwraps the iterator, returning the internal `EventReader`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40513,"byte_end":40576,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40581,"byte_end":40590,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40677,"byte_end":40683,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"source","qualname":"<Events<R>>::source","value":"pub fn source(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40732,"byte_end":40742,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<Events<R>>::source_mut","value":"pub fn source_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":41388,"byte_end":41396,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"pub fn from_str(&'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"/ A convenience method to create an `XmlReader` from a string slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":41292,"byte_end":41362,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":41367,"byte_end":41376,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":1116},{"krate":0,"index":1132},{"krate":0,"index":1191},{"krate":0,"index":1195}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[{"value":"/ Contains high-level interface for an events-based XML emitter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140437,"byte_end":140503,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140504,"byte_end":140507,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The most important type in this module is `EventWriter` which allows writing an XML document","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140508,"byte_end":140604,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ to some output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140605,"byte_end":140631,"line_start":4,"line_end":4,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144356,"byte_end":144358,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[{"value":"/ An I/O error occured in the underlying `Write` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144291,"byte_end":144351,"line_start":20,"line_end":20,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1703},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144452,"byte_end":144479,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[{"value":"/ Document declaration has already been written to the output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144376,"byte_end":144447,"line_start":23,"line_end":23,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144549,"byte_end":144576,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144486,"byte_end":144544,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144694,"byte_end":144740,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[{"value":"/ The name of the last opening element is not equal to the name of the provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144583,"byte_end":144664,"line_start":29,"line_end":29,"column_start":5,"column_end":86}},{"value":"/ closing element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144669,"byte_end":144689,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1709},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144885,"byte_end":144913,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[{"value":"/ End element name is not specified when it is needed, for example, when automatic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144747,"byte_end":144831,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/ closing is not enabled in configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144836,"byte_end":144880,"line_start":34,"line_end":34,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144272,"byte_end":144284,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"pub enum EmitterError {\n    Io(io::Error),\n    DocumentStartAlreadyEmitted,\n    LastElementNameNotAvailable,\n    EndElementNameIsNotEqualToLastStartElementName,\n    EndElementNameIsNotSpecified,\n}","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707},{"krate":0,"index":1709}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[{"value":"/ An error which may be returned by `XmlWriter` when writing XML events.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144171,"byte_end":144245,"line_start":17,"line_end":17,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":146160,"byte_end":146166,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[{"value":"/ A result type yielded by `XmlWriter`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":146109,"byte_end":146150,"line_start":75,"line_end":75,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158734,"byte_end":158747,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments }","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[{"value":"/ Emitter configuration structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158554,"byte_end":158590,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158591,"byte_end":158594,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure contains various options which control XML document emitter behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158595,"byte_end":158683,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158844,"byte_end":158858,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[{"value":"/ Line separator used to separate lines in formatted output. Default is `\"\\n\"`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158754,"byte_end":158835,"line_start":13,"line_end":13,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158999,"byte_end":159012,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[{"value":"/ A string which will be used for a single level of indentation. Default is `\"  \"`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158884,"byte_end":158968,"line_start":16,"line_end":16,"column_start":5,"column_end":89}},{"value":"/ (two spaces).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":158973,"byte_end":158990,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159610,"byte_end":159624,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not the emitted document should be indented. Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159038,"byte_end":159115,"line_start":20,"line_end":20,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159120,"byte_end":159123,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The emitter is capable to perform automatic indentation of the emitted XML document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159128,"byte_end":159216,"line_start":22,"line_end":22,"column_start":5,"column_end":93}},{"value":"/ It is done in stream-like fashion and does not require the knowledge of the whole","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159221,"byte_end":159306,"line_start":23,"line_end":23,"column_start":5,"column_end":90}},{"value":"/ document in advance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159311,"byte_end":159335,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159340,"byte_end":159343,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Sometimes, however, automatic indentation is undesirable, e.g. when you want to keep","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159348,"byte_end":159436,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ existing layout when processing an existing XML document. Also the indentiation algorithm","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159441,"byte_end":159534,"line_start":27,"line_end":27,"column_start":5,"column_end":98}},{"value":"/ is not thoroughly tested. Hence by default it is disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159539,"byte_end":159601,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160213,"byte_end":160229,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not characters in output events will be escaped. Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159637,"byte_end":159717,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159722,"byte_end":159725,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The emitter can automatically escape characters which can't appear in PCDATA sections","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159730,"byte_end":159819,"line_start":33,"line_end":33,"column_start":5,"column_end":94}},{"value":"/ or element attributes of an XML document, like `<` or `\"` (in attributes). This may","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159824,"byte_end":159911,"line_start":34,"line_end":34,"column_start":5,"column_end":92}},{"value":"/ introduce some overhead because then every corresponding piece of character data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":159916,"byte_end":160000,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ should be scanned for invalid characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160005,"byte_end":160050,"line_start":36,"line_end":36,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160055,"byte_end":160058,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If this option is disabled, the XML writer may produce non-well-formed documents, so","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160063,"byte_end":160151,"line_start":38,"line_end":38,"column_start":5,"column_end":93}},{"value":"/ use `false` value for this option with care.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160156,"byte_end":160204,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160549,"byte_end":160575,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to write XML document declaration at the beginning of a document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160242,"byte_end":160326,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160331,"byte_end":160351,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160356,"byte_end":160359,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This option controls whether the document declaration should be emitted automatically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160364,"byte_end":160453,"line_start":45,"line_end":45,"column_start":5,"column_end":94}},{"value":"/ before a root element is written if it was not emitted explicitly by the user.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160458,"byte_end":160540,"line_start":46,"line_end":46,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160830,"byte_end":160854,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to convert elements with empty content to empty elements. Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160588,"byte_end":160681,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160686,"byte_end":160689,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This option allows turning elements like `<a></a>` (an element with empty content)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160694,"byte_end":160780,"line_start":51,"line_end":51,"column_start":5,"column_end":91}},{"value":"/ into `<a />` (an empty element).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160785,"byte_end":160821,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161230,"byte_end":161249,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[{"value":"/ Whether or not to emit CDATA events as plain characters. Default is false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160867,"byte_end":160945,"line_start":55,"line_end":55,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160950,"byte_end":160953,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option forces the emitter to convert CDATA events into regular character events,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":160958,"byte_end":161047,"line_start":57,"line_end":57,"column_start":5,"column_end":94}},{"value":"/ performing all the necessary escaping beforehand. This may be occasionally useful","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161052,"byte_end":161137,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/ for feeding the document into incorrect parsers which do not support CDATA.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161142,"byte_end":161221,"line_start":59,"line_end":59,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161586,"byte_end":161610,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to keep element names to support `EndElement` events without explicit names.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161262,"byte_end":161357,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161362,"byte_end":161382,"line_start":63,"line_end":63,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161387,"byte_end":161390,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This option makes the emitter to keep names of written elements in order to allow","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161395,"byte_end":161480,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ omitting names when writing closing element tags. This could incur some memory overhead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161485,"byte_end":161577,"line_start":66,"line_end":66,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161987,"byte_end":162003,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[{"value":"/ Whether or not to automatically insert leading and trailing spaces in emitted comments,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161623,"byte_end":161714,"line_start":69,"line_end":69,"column_start":5,"column_end":96}},{"value":"/ if necessary. Default is true.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161719,"byte_end":161753,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161758,"byte_end":161761,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is a convenience option in order for the user not to append spaces before and after","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161766,"byte_end":161858,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ comments text in order to get more pretty comments: `<!-- something -->` instead of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161863,"byte_end":161950,"line_start":73,"line_end":73,"column_start":5,"column_end":92}},{"value":"/ `<!--something-->`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":161955,"byte_end":161978,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162437,"byte_end":162440,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"pub fn new() -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"/ Creates an emitter configuration with default values.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162039,"byte_end":162096,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162101,"byte_end":162104,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ You can tweak default options with builder-like pattern:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162109,"byte_end":162169,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162174,"byte_end":162177,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162182,"byte_end":162193,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162198,"byte_end":162233,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162238,"byte_end":162241,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let config = EmitterConfig::new()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162246,"byte_end":162283,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162288,"byte_end":162319,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162324,"byte_end":162353,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162358,"byte_end":162399,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162404,"byte_end":162411,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162416,"byte_end":162425,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163530,"byte_end":163543,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"pub fn create_writer<W: Write>(Self, W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"/ Creates an XML writer with this configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162883,"byte_end":162933,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162938,"byte_end":162941,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method for configuring and creating a writer at the same time:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162946,"byte_end":163034,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163039,"byte_end":163042,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163047,"byte_end":163058,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ use xml::writer::EmitterConfig;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163063,"byte_end":163098,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163103,"byte_end":163106,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut target: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163111,"byte_end":163152,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163157,"byte_end":163160,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let writer = EmitterConfig::new()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163165,"byte_end":163202,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/     .line_separator(\"\\r\\n\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163207,"byte_end":163238,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/     .perform_indent(true)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163243,"byte_end":163272,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/     .normalize_empty_elements(false)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163277,"byte_end":163317,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/     .create_writer(&mut target);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163322,"byte_end":163358,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163363,"byte_end":163370,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163375,"byte_end":163378,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This method is exactly equivalent to calling `EventWriter::new_with_config()` with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163383,"byte_end":163469,"line_start":122,"line_end":122,"column_start":5,"column_end":91}},{"value":"/ this configuration object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163474,"byte_end":163504,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163509,"byte_end":163518,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163800,"byte_end":163814,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"pub fn line_separator<T: Into<Cow>>(Self, T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":661,"byte_end":736,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163844,"byte_end":163857,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"pub fn indent_string<T: Into<Cow>>(Self, T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":661,"byte_end":736,"line_start":8,"line_end":8,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163887,"byte_end":163901,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"pub fn perform_indent(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163917,"byte_end":163943,"line_start":141,"line_end":141,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"pub fn write_document_declaration(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163959,"byte_end":163983,"line_start":142,"line_end":142,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"pub fn normalize_empty_elements(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163999,"byte_end":164018,"line_start":143,"line_end":143,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"pub fn cdata_to_characters(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":164034,"byte_end":164058,"line_start":144,"line_end":144,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"pub fn keep_element_names_stack(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":164074,"byte_end":164090,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"pub fn autopad_comments(Self, bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[{"value":"/ Sets the field to the provided value and returns updated config object.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\macros.rs","byte_start":988,"byte_end":1063,"line_start":17,"line_end":17,"column_start":13,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1851},{"krate":0,"index":1875},{"krate":0,"index":1152},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1179},{"krate":0,"index":1188}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[{"value":"/ Contains `XmlEvent` datatype, instances of which are consumed by the writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164105,"byte_end":164185,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"StructVariant","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164827,"byte_end":164840,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[{"value":"/ Corresponds to XML document declaration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164519,"byte_end":164563,"line_start":16,"line_end":16,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164568,"byte_end":164571,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This event should always be written before any other event. If it is not written","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164576,"byte_end":164660,"line_start":18,"line_end":18,"column_start":5,"column_end":89}},{"value":"/ at all, a default XML declaration will be outputted if the corresponding option","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164665,"byte_end":164748,"line_start":19,"line_end":19,"column_start":5,"column_end":88}},{"value":"/ is set in the configuration. Otherwise an error will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164753,"byte_end":164822,"line_start":20,"line_end":20,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":165259,"byte_end":165280,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[{"value":"/ Denotes an XML processing instruction.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":165212,"byte_end":165254,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":165483,"byte_end":165495,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes a beginning of an XML element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":165436,"byte_end":165478,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166334,"byte_end":166344,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[{"value":"/ Denotes an end of an XML element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166292,"byte_end":166329,"line_start":67,"line_end":67,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166830,"byte_end":166835,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[{"value":"/ Denotes CDATA content.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166668,"byte_end":166694,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166699,"byte_end":166702,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This event contains unparsed data, and no escaping will be performed when writing it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166707,"byte_end":166795,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ to the output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166800,"byte_end":166825,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167001,"byte_end":167008,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[{"value":"/ Denotes a comment.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166851,"byte_end":166873,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166878,"byte_end":166881,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The string will be checked for invalid sequences and error will be returned by the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166886,"byte_end":166972,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/ write operation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":166977,"byte_end":166996,"line_start":86,"line_end":86,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167255,"byte_end":167265,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[{"value":"/ Denotes character data outside of tags.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167024,"byte_end":167067,"line_start":89,"line_end":89,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167072,"byte_end":167075,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Contents of this event will be escaped if `perform_escaping` option is enabled,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167080,"byte_end":167163,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/ that is, every character invalid for PCDATA will appear as a character entity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167168,"byte_end":167250,"line_start":92,"line_end":92,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":1851},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164500,"byte_end":164508,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"pub enum XmlEvent<'a> {\n    StartDocument {\n            version: XmlVersion,\n            encoding: Option<&'a str>,\n            standalone: Option<bool>,\n        },\n    ProcessingInstruction {\n            name: &'a str,\n            data: Option<&'a str>,\n        },\n    StartElement {\n            name: Name,\n            attributes: Cow,\n            namespace: Cow,\n        },\n    EndElement {\n            name: Option<Name>,\n        },\n    CData(&'a str),\n    Comment(&'a str),\n    Characters(&'a str),\n}","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1872}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[{"value":"/ A part of an XML output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164319,"byte_end":164354,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164355,"byte_end":164358,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Objects of this enum are consumed by `EventWriter`. They correspond to different parts of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164359,"byte_end":164452,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ an XML document.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":164453,"byte_end":164473,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167389,"byte_end":167411,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"pub fn processing_instruction(&'a str, Option<&'a str>) -> XmlEvent","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"/ Returns an writer event for a processing instruction.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167306,"byte_end":167363,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167368,"byte_end":167377,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167731,"byte_end":167744,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"pub fn start_element<S>(S) -> StartElementBuilder where S: Into<Name>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"/ Returns a builder for a starting element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167546,"byte_end":167591,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167596,"byte_end":167599,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This builder can then be used to tweak attributes and namespace starting at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167604,"byte_end":167683,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/ this element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167688,"byte_end":167705,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167710,"byte_end":167719,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168329,"byte_end":168340,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"pub fn end_element() -> EndElementBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"/ Returns a builder for an closing element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167977,"byte_end":168022,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168027,"byte_end":168030,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method, unline `start_element()`, does not accept a name because by default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168035,"byte_end":168119,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ the writer is able to determine it automatically. However, when this functionality","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168124,"byte_end":168210,"line_start":119,"line_end":119,"column_start":5,"column_end":91}},{"value":"/ is disabled, it is possible to specify the name with `name()` method on the builder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168215,"byte_end":168303,"line_start":120,"line_end":120,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168308,"byte_end":168317,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168618,"byte_end":168623,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"pub fn cdata(&'a str) -> XmlEvent","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"/ Returns a CDATA event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168422,"byte_end":168448,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168453,"byte_end":168456,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Naturally, the provided string won't be escaped, except for closing CDATA token `]]>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168461,"byte_end":168550,"line_start":128,"line_end":128,"column_start":5,"column_end":94}},{"value":"/ (depending on the configuration).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168555,"byte_end":168592,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168597,"byte_end":168606,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168858,"byte_end":168868,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"pub fn characters(&'a str) -> XmlEvent","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"/ Returns a regular characters (PCDATA) event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168686,"byte_end":168734,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168739,"byte_end":168742,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ All offending symbols, in particular, `&` and `<`, will be escaped by the writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168747,"byte_end":168832,"line_start":135,"line_end":135,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168837,"byte_end":168846,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168990,"byte_end":168997,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"pub fn comment(&'a str) -> XmlEvent","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"/ Returns a comment event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168936,"byte_end":168964,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":168969,"byte_end":168978,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169198,"byte_end":169215,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":1166}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169737,"byte_end":169741,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"pub fn name<N>(Self, N) -> EndElementBuilder where N: Into<Name>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"/ Sets the name of this closing element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169332,"byte_end":169374,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169379,"byte_end":169382,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Usually the writer is able to determine closing element names automatically. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169387,"byte_end":169470,"line_start":157,"line_end":157,"column_start":5,"column_end":88}},{"value":"/ this functionality is enabled (by default it is), then this name is checked for correctness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169475,"byte_end":169571,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ It is possible, however, to disable such behavior; then the user must ensure that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169576,"byte_end":169661,"line_start":159,"line_end":159,"column_start":5,"column_end":90}},{"value":"/ closing element name is correct manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169666,"byte_end":169711,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169716,"byte_end":169725,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170098,"byte_end":170117,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[{"value":"/ A builder for a starting element event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170043,"byte_end":170086,"line_start":174,"line_end":174,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170879,"byte_end":170883,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"pub fn attr<N>(Self, N, &'a str) -> StartElementBuilder where N: Into<Name>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"/ Sets an attribute value of this element to the given string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170247,"byte_end":170311,"line_start":182,"line_end":182,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170316,"byte_end":170319,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This method can be used to add attributes to the starting element. Name is a qualified","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170324,"byte_end":170414,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/ name; its namespace is ignored, but its prefix is checked for correctness, that is,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170419,"byte_end":170506,"line_start":185,"line_end":185,"column_start":5,"column_end":92}},{"value":"/ it is checked that the prefix is bound to some namespace in the current context.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170511,"byte_end":170595,"line_start":186,"line_end":186,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170600,"byte_end":170603,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Currently attributes are not checked for duplicates. Note that duplicate attributes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170608,"byte_end":170695,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/ are a violation of XML document well-formedness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170700,"byte_end":170752,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170757,"byte_end":170760,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The writer checks that you don't specify reserved prefix names, for example `xmlns`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170765,"byte_end":170853,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170858,"byte_end":170867,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171782,"byte_end":171784,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"pub fn ns<S1, S2>(Self, S1, S2) -> StartElementBuilder where S1: Into<String>,\nS2: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a namespace to the current namespace context.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171077,"byte_end":171131,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171136,"byte_end":171139,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If no namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171144,"byte_end":171231,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ then the mapping from the prefix to the provided namespace URI will be written as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171236,"byte_end":171321,"line_start":203,"line_end":203,"column_start":5,"column_end":90}},{"value":"/ a part of this element attribute set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171326,"byte_end":171367,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171372,"byte_end":171375,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If the same namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171380,"byte_end":171473,"line_start":206,"line_end":206,"column_start":5,"column_end":98}},{"value":"/ then no namespace attributes will be emitted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171478,"byte_end":171527,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171532,"byte_end":171535,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If some other namespace URI was bound to the provided prefix at this point of the document,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171540,"byte_end":171635,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ then another binding will be added as a part of this element attribute set, shadowing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171640,"byte_end":171729,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/ the outer binding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171734,"byte_end":171756,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171761,"byte_end":171770,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172158,"byte_end":172168,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"pub fn default_ns<S>(Self, S) -> StartElementBuilder where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"/ Adds a default namespace mapping to the current namespace context.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":171971,"byte_end":172041,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172046,"byte_end":172049,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Same rules as for `ns()` are also valid for the default namespace mapping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172054,"byte_end":172132,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172137,"byte_end":172146,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140997,"byte_end":141008,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[{"value":"/ A wrapper around an `std::io::Write` instance which emits XML document according to provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140877,"byte_end":140973,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ events.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140974,"byte_end":140985,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141221,"byte_end":141224,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"pub fn new(W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141087,"byte_end":141172,"line_start":27,"line_end":27,"column_start":5,"column_end":90}},{"value":"/ configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141177,"byte_end":141195,"line_start":28,"line_end":28,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141200,"byte_end":141209,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141465,"byte_end":141480,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"pub fn new_with_config(W, EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new `EventWriter` out of an `std::io::Write` instance using the provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141330,"byte_end":141416,"line_start":34,"line_end":34,"column_start":5,"column_end":91}},{"value":"/ configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141421,"byte_end":141439,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141444,"byte_end":141453,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":142108,"byte_end":142113,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"pub fn write<'a, E>(&mut Self, E) -> Result<()> where E: Into<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[{"value":"/ Writes the next piece of XML document according to the provided event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141642,"byte_end":141716,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141721,"byte_end":141724,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that output data may not exactly correspond to the written event because","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141729,"byte_end":141810,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ of various configuration options. For example, `XmlEvent::EndElement` may","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141815,"byte_end":141892,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ correspond to a separate closing element or it may cause writing an empty element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141897,"byte_end":141983,"line_start":48,"line_end":48,"column_start":5,"column_end":91}},{"value":"/ Another example is that `XmlEvent::CData` may be represented as characters in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141988,"byte_end":142069,"line_start":49,"line_end":49,"column_start":5,"column_end":86}},{"value":"/ the output stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":142074,"byte_end":142096,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143729,"byte_end":143739,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Unwraps this `EventWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143400,"byte_end":143464,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143469,"byte_end":143472,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this is a destructive operation: unwrapping a writer and then wrapping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143477,"byte_end":143561,"line_start":77,"line_end":77,"column_start":5,"column_end":89}},{"value":"/ it again with `EventWriter::new()` will create a fresh writer whose state will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143566,"byte_end":143651,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/ blank; for example, accumulated namespaces will be reset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":143656,"byte_end":143717,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172729,"byte_end":172742,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172748,"byte_end":172752,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172774,"byte_end":172776,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172709,"byte_end":172722,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"pub enum CharReadError { UnexpectedEof, Utf8(str::Utf8Error), Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1884}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":18137,"byte_end":18142,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":18824,"byte_end":18831,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":19682,"byte_end":19689,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24310,"byte_end":24319,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28220,"byte_end":28234,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":34020,"byte_end":34042,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":34249,"byte_end":34271,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":35916,"byte_end":35925,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36144,"byte_end":36158,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37511,"byte_end":37524,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":42755,"byte_end":42760,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":44107,"byte_end":44112,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":48880,"byte_end":48885,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":49031,"byte_end":49036,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":429},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\outside_tag.rs","byte_start":92058,"byte_end":92068,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":97823,"byte_end":97833,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_declaration.rs","byte_start":102003,"byte_end":102013,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_doctype.rs","byte_start":109091,"byte_end":109101,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":109573,"byte_end":109583,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":115415,"byte_end":115425,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_comment.rs","byte_start":116990,"byte_end":117000,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_cdata.rs","byte_start":118005,"byte_end":118015,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_reference.rs","byte_start":118935,"byte_end":118945,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":73805,"byte_end":73815,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":74994,"byte_end":75004,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":76481,"byte_end":76491,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":77618,"byte_end":77628,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125841,"byte_end":125853,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128052,"byte_end":128064,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132651,"byte_end":132659,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134283,"byte_end":134291,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137772,"byte_end":137777,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137915,"byte_end":137920,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137997,"byte_end":138002,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138495,"byte_end":138500,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138605,"byte_end":138610,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138855,"byte_end":138860,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139257,"byte_end":139262,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139425,"byte_end":139434,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139806,"byte_end":139815,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":140355,"byte_end":140364,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38460,"byte_end":38471,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39763,"byte_end":39774,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39977,"byte_end":39988,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40497,"byte_end":40503,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40823,"byte_end":40829,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":41264,"byte_end":41275,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144942,"byte_end":144954,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":145064,"byte_end":145076,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":145435,"byte_end":145447,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":146588,"byte_end":146595,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":147703,"byte_end":147710,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162019,"byte_end":162032,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163664,"byte_end":163677,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167287,"byte_end":167295,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169087,"byte_end":169095,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169304,"byte_end":169321,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169917,"byte_end":169925,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170217,"byte_end":170236,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172365,"byte_end":172373,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141066,"byte_end":141077,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172821,"byte_end":172834,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172952,"byte_end":172965,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":173073,"byte_end":173086,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":352,"byte_end":358,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":368,"byte_end":372,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":382,"byte_end":391,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":82}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":401,"byte_end":407,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":417,"byte_end":423,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":134}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":433,"byte_end":442,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":168}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":452,"byte_end":458,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":284}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src/lib.rs","byte_start":468,"byte_end":474,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":969}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":140868,"byte_end":140874,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1132}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":49},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":18137,"byte_end":18142,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":18824,"byte_end":18831,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\escape.rs","byte_start":19682,"byte_end":19689,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":24310,"byte_end":24319,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":28220,"byte_end":28234,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":34020,"byte_end":34042,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":34249,"byte_end":34271,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":35916,"byte_end":35925,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":36144,"byte_end":36158,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\namespace.rs","byte_start":37511,"byte_end":37524,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":7799}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":42755,"byte_end":42760,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":44107,"byte_end":44112,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":48880,"byte_end":48885,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\lexer.rs","byte_start":49031,"byte_end":49036,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\outside_tag.rs","byte_start":92058,"byte_end":92068,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_processing_instruction.rs","byte_start":97823,"byte_end":97833,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_declaration.rs","byte_start":102003,"byte_end":102013,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_doctype.rs","byte_start":109091,"byte_end":109101,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_opening_tag.rs","byte_start":109573,"byte_end":109583,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_closing_tag_name.rs","byte_start":115415,"byte_end":115425,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_comment.rs","byte_start":116990,"byte_end":117000,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_cdata.rs","byte_start":118005,"byte_end":118015,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\inside_reference.rs","byte_start":118935,"byte_end":118945,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":73805,"byte_end":73815,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":74994,"byte_end":75004,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":768},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":76481,"byte_end":76491,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\parser\\mod.rs","byte_start":77618,"byte_end":77628,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":125841,"byte_end":125853,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\config.rs","byte_start":128052,"byte_end":128064,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":132651,"byte_end":132659,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1636},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\events.rs","byte_start":134283,"byte_end":134291,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137772,"byte_end":137777,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137915,"byte_end":137920,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1685},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":137997,"byte_end":138002,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138495,"byte_end":138500,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1685},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138605,"byte_end":138610,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":138855,"byte_end":138860,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139257,"byte_end":139262,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139425,"byte_end":139434,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1671},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":139806,"byte_end":139815,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1671},"to":{"krate":2,"index":2709}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\error.rs","byte_start":140355,"byte_end":140364,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1671},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":38460,"byte_end":38471,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39763,"byte_end":39774,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":39977,"byte_end":39988,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40497,"byte_end":40503,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":40823,"byte_end":40829,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\reader\\mod.rs","byte_start":41264,"byte_end":41275,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":144942,"byte_end":144954,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":145064,"byte_end":145076,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":145435,"byte_end":145447,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1699},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":146588,"byte_end":146595,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\emitter.rs","byte_start":147703,"byte_end":147710,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":162019,"byte_end":162032,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\config.rs","byte_start":163664,"byte_end":163677,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1812},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":167287,"byte_end":167295,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169087,"byte_end":169095,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169304,"byte_end":169321,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":169917,"byte_end":169925,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":170217,"byte_end":170236,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\events.rs","byte_start":172365,"byte_end":172373,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\writer\\mod.rs","byte_start":141066,"byte_end":141077,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172821,"byte_end":172834,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":172952,"byte_end":172965,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\xml-rs-0.7.0\\src\\util.rs","byte_start":173073,"byte_end":173086,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":9692}}]}