{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5f2ca269d074d78b","-C","extra-filename=-5f2ca269d074d78b","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","derivative=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\derivative-f1d8eed6bfa14f88.dll","--extern","draw_state=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libdraw_state-1e0037d7cfc5ab93.rmeta","--extern","gfx_core=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libgfx_core-2d96df5b719501c5.rmeta","--extern","log=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\liblog-dae99d0b4d408b19.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libgfx-5f2ca269d074d78b.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[8223336096900907259,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":16,"id":{"name":"log","disambiguator":[14879950083437421009,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":17,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":19,"id":{"name":"derivative","disambiguator":[9372645433822729828,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":20,"id":{"name":"draw_state","disambiguator":[15478435368675434975,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[3208001105886994626,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","num":22,"id":{"name":"gfx_core","disambiguator":[6660202268595539550,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":600,"byte_end":2754,"line_start":15,"line_end":75,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":22,"index":1282},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1006,"byte_end":1012,"line_start":31,"line_end":31,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":22,"index":428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1014,"byte_end":1021,"line_start":31,"line_end":31,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":22,"index":901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1050,"byte_end":1053,"line_start":32,"line_end":32,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1076,"byte_end":1086,"line_start":33,"line_end":33,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":20,"index":4},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1137,"byte_end":1143,"line_start":37,"line_end":37,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":38},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1145,"byte_end":1150,"line_start":37,"line_end":37,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1181,"byte_end":1182,"line_start":38,"line_end":38,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1282},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1221,"byte_end":1227,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5717},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1229,"byte_end":1238,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1240,"byte_end":1249,"line_start":41,"line_end":41,"column_start":35,"column_end":44},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5777},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1251,"byte_end":1266,"line_start":41,"line_end":41,"column_start":46,"column_end":61},"alias_span":null,"name":"SubmissionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1280},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1268,"byte_end":1284,"line_start":41,"line_end":41,"column_start":63,"column_end":79},"alias_span":null,"name":"SubmissionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1248},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1302,"byte_end":1313,"line_start":42,"line_end":42,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1249},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1315,"byte_end":1328,"line_start":42,"line_end":42,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5653},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1346,"byte_end":1355,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5528},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1357,"byte_end":1369,"line_start":43,"line_end":43,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1371,"byte_end":1381,"line_start":43,"line_end":43,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5578},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1383,"byte_end":1395,"line_start":43,"line_end":43,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5603},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1397,"byte_end":1411,"line_start":43,"line_end":43,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":5628},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1413,"byte_end":1424,"line_start":43,"line_end":43,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":33},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1442,"byte_end":1448,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":496},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1450,"byte_end":1456,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1458,"byte_end":1464,"line_start":44,"line_end":44,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1466,"byte_end":1473,"line_start":44,"line_end":44,"column_start":40,"column_end":47},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":773},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1475,"byte_end":1482,"line_start":44,"line_end":44,"column_start":49,"column_end":56},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1509,"byte_end":1516,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1548},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1518,"byte_end":1535,"line_start":45,"line_end":45,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1567},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1537,"byte_end":1552,"line_start":45,"line_end":45,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1591},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1554,"byte_end":1567,"line_start":45,"line_end":45,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":891},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1584,"byte_end":1590,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"alias_span":null,"name":"memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3803},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1599,"byte_end":1603,"line_start":46,"line_end":46,"column_start":30,"column_end":34},"alias_span":null,"name":"Bind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3801},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1605,"byte_end":1617,"line_start":46,"line_end":46,"column_start":36,"column_end":48},"alias_span":null,"name":"TRANSFER_SRC","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3802},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1619,"byte_end":1631,"line_start":46,"line_end":46,"column_start":50,"column_end":62},"alias_span":null,"name":"TRANSFER_DST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3797},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1633,"byte_end":1646,"line_start":46,"line_end":46,"column_start":64,"column_end":77},"alias_span":null,"name":"RENDER_TARGET","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3798},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1671,"byte_end":1684,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"alias_span":null,"name":"DEPTH_STENCIL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3799},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1686,"byte_end":1701,"line_start":47,"line_end":47,"column_start":39,"column_end":54},"alias_span":null,"name":"SHADER_RESOURCE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3800},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1703,"byte_end":1719,"line_start":47,"line_end":47,"column_start":56,"column_end":72},"alias_span":null,"name":"UNORDERED_ACCESS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1746,"byte_end":1752,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1771,"byte_end":1785,"line_start":48,"line_end":48,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":4906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1810,"byte_end":1821,"line_start":49,"line_end":49,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":4557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1823,"byte_end":1835,"line_start":49,"line_end":49,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1857,"byte_end":1873,"line_start":51,"line_end":51,"column_start":19,"column_end":35},"alias_span":null,"name":"CopyBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1875,"byte_end":1898,"line_start":51,"line_end":51,"column_start":37,"column_end":60},"alias_span":null,"name":"CopyBufferTextureResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1900,"byte_end":1909,"line_start":51,"line_end":51,"column_start":62,"column_end":71},"alias_span":null,"name":"CopyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1929,"byte_end":1952,"line_start":52,"line_end":52,"column_start":19,"column_end":42},"alias_span":null,"name":"CopyTextureBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1954,"byte_end":1961,"line_start":52,"line_end":52,"column_start":44,"column_end":51},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1963,"byte_end":1974,"line_start":52,"line_end":52,"column_start":53,"column_end":64},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":1994,"byte_end":2012,"line_start":53,"line_end":53,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2030,"byte_end":2035,"line_start":54,"line_end":54,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2037,"byte_end":2052,"line_start":54,"line_end":54,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2054,"byte_end":2065,"line_start":54,"line_end":54,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2082,"byte_end":2095,"line_start":55,"line_end":55,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2120,"byte_end":2132,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2134,"byte_end":2148,"line_start":56,"line_end":56,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2150,"byte_end":2165,"line_start":56,"line_end":56,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2189,"byte_end":2203,"line_start":57,"line_end":57,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2205,"byte_end":2222,"line_start":57,"line_end":57,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2224,"byte_end":2230,"line_start":57,"line_end":57,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2232,"byte_end":2241,"line_start":57,"line_end":57,"column_start":66,"column_end":75},"alias_span":null,"name":"RawGlobal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2268,"byte_end":2282,"line_start":58,"line_end":58,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2284,"byte_end":2301,"line_start":58,"line_end":58,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2303,"byte_end":2318,"line_start":58,"line_end":58,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2344,"byte_end":2351,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2353,"byte_end":2367,"line_start":59,"line_end":59,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2392,"byte_end":2410,"line_start":60,"line_end":60,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2412,"byte_end":2423,"line_start":60,"line_end":60,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2425,"byte_end":2438,"line_start":60,"line_end":60,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2462,"byte_end":2474,"line_start":61,"line_end":61,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2476,"byte_end":2491,"line_start":61,"line_end":61,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2493,"byte_end":2504,"line_start":61,"line_end":61,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2506,"byte_end":2514,"line_start":61,"line_end":61,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2506,"byte_end":2514,"line_start":61,"line_end":61,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2516,"byte_end":2523,"line_start":61,"line_end":61,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2548,"byte_end":2554,"line_start":62,"line_end":62,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":989},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58385,"byte_end":58396,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":560}},{"kind":"Use","ref_id":{"krate":22,"index":4067},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58398,"byte_end":58405,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":560}},{"kind":"Use","ref_id":{"krate":22,"index":990},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58407,"byte_end":58417,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":560}},{"kind":"Use","ref_id":{"krate":22,"index":991},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58419,"byte_end":58429,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":560}},{"kind":"Use","ref_id":{"krate":22,"index":992},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58431,"byte_end":58443,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":560}},{"kind":"Use","ref_id":{"krate":22,"index":4112},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44908,"byte_end":44918,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":559}},{"kind":"Use","ref_id":{"krate":22,"index":1457},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44943,"byte_end":44953,"line_start":52,"line_end":52,"column_start":24,"column_end":34},"alias_span":null,"name":"AccessInfo","value":"","parent":{"krate":0,"index":559}},{"kind":"Use","ref_id":{"krate":22,"index":1025},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89566,"byte_end":89571,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":1094}},{"kind":"Use","ref_id":{"krate":22,"index":1070},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89588,"byte_end":89599,"line_start":22,"line_end":22,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":1094}},{"kind":"Use","ref_id":{"krate":22,"index":1073},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89601,"byte_end":89610,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":1094}},{"kind":"Use","ref_id":{"krate":22,"index":4669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89612,"byte_end":89617,"line_start":22,"line_end":22,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":1094}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":600,"byte_end":2754,"line_start":15,"line_end":75,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":380},{"krate":0,"index":501},{"krate":0,"index":559},{"krate":0,"index":1094},{"krate":0,"index":1122}],"decl_id":null,"docs":" An efficient, low-level, bindless graphics API for Rust. See [the\n blog](http://gfx-rs.github.io/) for explanations and annotated examples.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ An efficient, low-level, bindless graphics API for Rust. See [the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":624,"byte_end":693,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ blog](http://gfx-rs.github.io/) for explanations and annotated examples.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":694,"byte_end":770,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":978,"byte_end":984,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[{"value":"/ public re-exported traits","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":940,"byte_end":969,"line_start":29,"line_end":29,"column_start":1,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3844,"byte_end":3858,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3910,"byte_end":3924,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3976,"byte_end":3983,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4072,"byte_end":4085,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4091,"byte_end":4104,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":1136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3822,"byte_end":3831,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"pub enum CopyError<S, D> {\n    OutOfSrcBounds {\n            size: S,\n            copy_end: S,\n        },\n    OutOfDstBounds {\n            size: D,\n            copy_end: D,\n        },\n    Overlap {\n            src_offset: usize,\n            dst_offset: usize,\n            size: usize,\n        },\n    NoSrcBindFlag,\n    NoDstBindFlag,\n}","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1149},{"krate":0,"index":1151}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"/ An error occuring in memory copies.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3715,"byte_end":3754,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":3755,"byte_end":3777,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4186,"byte_end":4202,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"name":"CopyBufferResult","qualname":"::encoder::CopyBufferResult","value":"Result<(), CopyError<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying a buffer into another buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying a buffer into another buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4109,"byte_end":4176,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4318,"byte_end":4341,"line_start":55,"line_end":55,"column_start":10,"column_end":33},"name":"CopyBufferTextureResult","qualname":"::encoder::CopyBufferTextureResult","value":"Result<(), CopyError<usize, [texture::Size; ]>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying buffer data into a texture.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying buffer data into a texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4243,"byte_end":4308,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4470,"byte_end":4493,"line_start":58,"line_end":58,"column_start":10,"column_end":33},"name":"CopyTextureBufferResult","qualname":"::encoder::CopyTextureBufferResult","value":"Result<(), CopyError<[texture::Size; ], usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying texture data into a buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying texture data into a buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4395,"byte_end":4460,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6106,"byte_end":6117,"line_start":99,"line_end":99,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6169,"byte_end":6186,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6245,"byte_end":6257,"line_start":107,"line_end":107,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6085,"byte_end":6096,"line_start":98,"line_end":98,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"pub enum UpdateError<T> {\n    OutOfBounds {\n            target: T,\n            source: T,\n        },\n    UnitCountMismatch {\n            target: usize,\n            slice: usize,\n        },\n    InvalidUsage(Usage),\n}","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"/ An error occuring in buffer/texture updates.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":5969,"byte_end":6017,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6018,"byte_end":6040,"line_start":96,"line_end":96,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8176,"byte_end":8183,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[{"value":"/ Graphics Command Encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7440,"byte_end":7468,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7469,"byte_end":7472,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7473,"byte_end":7487,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/ The `Encoder` is a wrapper structure around a `CommandBuffer`. It is responsible for sending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7488,"byte_end":7584,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/ commands to the `CommandBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7585,"byte_end":7621,"line_start":145,"line_end":145,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7622,"byte_end":7625,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7626,"byte_end":7655,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/ The `Encoder` implements `From<CommandBuffer>`, which is how it is constructed. There is no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7656,"byte_end":7751,"line_start":148,"line_end":148,"column_start":1,"column_end":96}},{"value":"/ cross-API way to create a `CommandBuffer`, however, an API back-end should expose a function to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7752,"byte_end":7851,"line_start":149,"line_end":149,"column_start":1,"column_end":100}},{"value":"/ create one in its `Factory` type. See the specific back-end for details on how to construct a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7852,"byte_end":7949,"line_start":150,"line_end":150,"column_start":1,"column_end":98}},{"value":"/ `CommandBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7950,"byte_end":7970,"line_start":151,"line_end":151,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7971,"byte_end":7974,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The encoder exposes multiple functions that add commands to its internal `CommandBuffer`. To","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7975,"byte_end":8071,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ submit these commands to the GPU so they can be rendered, call `flush`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8072,"byte_end":8147,"line_start":154,"line_end":154,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9228,"byte_end":9233,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"pub fn flush<D>(&mut Self, &mut D) where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed.","sig":null,"attributes":[{"value":"/ Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8716,"byte_end":8809,"line_start":175,"line_end":175,"column_start":5,"column_end":98}},{"value":"/ be executed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8814,"byte_end":8830,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8835,"byte_end":8838,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Calling `flush` before swapping buffers is critical as without it the commands of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8843,"byte_end":8932,"line_start":178,"line_end":178,"column_start":5,"column_end":94}},{"value":"/ internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8937,"byte_end":9029,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/ processed. Calling flush too often however will result in a performance hit. It is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9034,"byte_end":9120,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ generally recommended to call flush once per frame, when all draw calls have been made.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9125,"byte_end":9216,"line_start":181,"line_end":181,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9463,"byte_end":9477,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"flush_no_reset","qualname":"<Encoder<R, C>>::flush_no_reset","value":"pub fn flush_no_reset<D>(&mut Self, &mut D) -> SubmissionResult<()> where\nD: Device<Resources = R, CommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush` but keeps the encoded commands.\n","sig":null,"attributes":[{"value":"/ Like `flush` but keeps the encoded commands.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9403,"byte_end":9451,"line_start":189,"line_end":189,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9782,"byte_end":9803,"line_start":198,"line_end":198,"column_start":12,"column_end":33},"name":"fenced_flush_no_reset","qualname":"<Encoder<R, C>>::fenced_flush_no_reset","value":"pub fn fenced_flush_no_reset<D>(&mut Self, &mut D, Option<handle::Fence<R>>)\n-> SubmissionResult<handle::Fence<R>> where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush_no_reset` but places a fence.\n","sig":null,"attributes":[{"value":"/ Like `flush_no_reset` but places a fence.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":9725,"byte_end":9770,"line_start":197,"line_end":197,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":10264,"byte_end":10269,"line_start":209,"line_end":209,"column_start":12,"column_end":17},"name":"reset","qualname":"<Encoder<R, C>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoded commands.\n","sig":null,"attributes":[{"value":"/ Resets the encoded commands.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":10220,"byte_end":10252,"line_start":208,"line_end":208,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":10443,"byte_end":10454,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"pub fn copy_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>,\n&handle::Buffer<R, T>, usize, usize, usize) -> CopyBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":10395,"byte_end":10431,"line_start":215,"line_end":215,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":12310,"byte_end":12336,"line_start":263,"line_end":263,"column_start":12,"column_end":38},"name":"copy_buffer_to_texture_raw","qualname":"<Encoder<R, C>>::copy_buffer_to_texture_raw","value":"pub fn copy_buffer_to_texture_raw(&mut Self, &handle::RawBuffer<R>, usize,\n&handle::RawTexture<R>, Option<texture::CubeFace>, texture::RawImageInfo)\n-> CopyBufferTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to a texture\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to a texture","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":12260,"byte_end":12298,"line_start":262,"line_end":262,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":13853,"byte_end":13879,"line_start":305,"line_end":305,"column_start":12,"column_end":38},"name":"copy_texture_to_buffer_raw","qualname":"<Encoder<R, C>>::copy_texture_to_buffer_raw","value":"pub fn copy_texture_to_buffer_raw(&mut Self, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo, &handle::RawBuffer<R>,\nusize) -> CopyTextureBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to a buffer\n","sig":null,"attributes":[{"value":"/ Copy part of a texture to a buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":13803,"byte_end":13841,"line_start":304,"line_end":304,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":15408,"byte_end":15421,"line_start":348,"line_end":348,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"pub fn update_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>, &[T], usize)\n-> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a slice of data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":15355,"byte_end":15396,"line_start":347,"line_end":347,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":16321,"byte_end":16343,"line_start":372,"line_end":372,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"pub fn update_constant_buffer<T: Copy>(&mut Self, &handle::Buffer<R, T>, &T)","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a single structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":16265,"byte_end":16309,"line_start":371,"line_end":371,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":16800,"byte_end":16814,"line_start":385,"line_end":385,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"pub fn update_texture<S,\nT>(&mut Self, &handle::Texture<R, T::Surface>, Option<texture::CubeFace>,\ntexture::NewImageInfo, &[S::DataType])\n-> Result<(), UpdateError<[texture::Size; ]>> where S: format::SurfaceTyped,\nS::DataType: Copy, T: format::Formatted<Surface = S>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[{"value":"/ Update the contents of a texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":16751,"byte_end":16788,"line_start":384,"line_end":384,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":19325,"byte_end":19330,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"pub fn clear<T: format::RenderFormat>(&mut Self,\n&handle::RenderTargetView<R, T>, T::View) where\nT::View: Into<command::ClearColor>","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Clears the supplied `RenderTargetView` to the supplied `ClearColor`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":19241,"byte_end":19313,"line_start":444,"line_end":444,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":19679,"byte_end":19690,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"pub fn clear_depth<T: format::DepthFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Depth)","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a depth view with a specified value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":19621,"byte_end":19667,"line_start":451,"line_end":451,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":20013,"byte_end":20026,"line_start":459,"line_end":459,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"pub fn clear_stencil<T: format::StencilFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Stencil)","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a stencil view with a specified value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":19953,"byte_end":20001,"line_start":458,"line_end":458,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":20403,"byte_end":20407,"line_start":466,"line_end":466,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"pub fn draw<D: pso::PipelineData<R>>(&mut Self, &slice::Slice<R>,\n&pso::PipelineState<R, D::Meta>, &D)","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[{"value":"/ Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":20299,"byte_end":20391,"line_start":465,"line_end":465,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":21916,"byte_end":21931,"line_start":490,"line_end":490,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Encoder<R, C>>::generate_mipmap","value":"pub fn generate_mipmap<T>(&mut Self, &handle::ShaderResourceView<R, T>)","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap chain for the given resource view.\n","sig":null,"attributes":[{"value":"/ Generate a mipmap chain for the given resource view.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":21848,"byte_end":21904,"line_start":489,"line_end":489,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":22098,"byte_end":22117,"line_start":495,"line_end":495,"column_start":12,"column_end":31},"name":"generate_mipmap_raw","qualname":"<Encoder<R, C>>::generate_mipmap_raw","value":"pub fn generate_mipmap_raw(&mut Self, &handle::RawShaderResourceView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Untyped version of mipmap generation.\n","sig":null,"attributes":[{"value":"/ Untyped version of mipmap generation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":22045,"byte_end":22086,"line_start":494,"line_end":494,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23635,"byte_end":23642,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[{"value":"/ Shader program failed to link.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23596,"byte_end":23630,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23729,"byte_end":23743,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[{"value":"/ Unable to create PSO descriptor due to mismatched formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23662,"byte_end":23724,"line_start":37,"line_end":37,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23832,"byte_end":23844,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[{"value":"/ Device failed to create the handle give the descriptor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23768,"byte_end":23827,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23568,"byte_end":23586,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"pub enum PipelineStateError<S> {\n    Program(ProgramError),\n    DescriptorInit(pso::InitError<S>),\n    DeviceCreate(CreationError),\n}","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[{"value":"/ Error creating a PipelineState","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23489,"byte_end":23523,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26238,"byte_end":26248,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. \n","sig":null,"attributes":[{"value":"/ This trait is responsible for creating and managing graphics resources, much like the `Factory`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26042,"byte_end":26141,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26142,"byte_end":26227,"line_start":101,"line_end":101,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26411,"byte_end":26431,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"pub fn create_vertex_buffer<T>(&mut Self, &[T]) -> handle::Buffer<R, T> where\nT: Pod + pso::buffer::Structure<format::Format>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26281,"byte_end":26347,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/ A `Slice` will have to manually be constructed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26352,"byte_end":26403,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26927,"byte_end":26946,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"create_index_buffer","qualname":"::factory::FactoryExt::create_index_buffer","value":"pub fn create_index_buffer<T>(&mut Self, T) -> IndexBuffer<R> where\nT: IntoIndexBuffer<R>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates an immutable index buffer from the supplied vertices.","sig":null,"attributes":[{"value":"/ Creates an immutable index buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26775,"byte_end":26840,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26845,"byte_end":26848,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The paramater `indices` is typically a &[u16] or &[u32] slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26853,"byte_end":26919,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":27247,"byte_end":27278,"line_start":126,"line_end":126,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"pub fn create_vertex_buffer_with_slice<B, V>(&mut Self, &[V], B)\n-> (handle::Buffer<R, V>, Slice<R>) where V: Pod +\npso::buffer::Structure<format::Format>, B: IntoIndexBuffer<R>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":27114,"byte_end":27180,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ together with a `Slice` from the supplied indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":27185,"byte_end":27239,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28152,"byte_end":28174,"line_start":149,"line_end":149,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"pub fn create_constant_buffer<T>(&mut Self, usize) -> handle::Buffer<R, T>\nwhere T: Copy","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a constant buffer for `num` identical elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28073,"byte_end":28144,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28517,"byte_end":28537,"line_start":159,"line_end":159,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"pub fn create_upload_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates an upload buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28449,"byte_end":28509,"line_start":158,"line_end":158,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28917,"byte_end":28939,"line_start":169,"line_end":169,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"pub fn create_download_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a download buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":28848,"byte_end":28909,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":29342,"byte_end":29359,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"pub fn create_shader_set(&mut Self, &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":29254,"byte_end":29334,"line_start":178,"line_end":178,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":29955,"byte_end":29981,"line_start":194,"line_end":194,"column_start":8,"column_end":34},"name":"create_shader_set_geometry","qualname":"::factory::FactoryExt::create_shader_set_geometry","value":"pub fn create_shader_set_geometry(&mut Self, &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, geometry, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, geometry, and pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":29823,"byte_end":29894,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":29899,"byte_end":29947,"line_start":193,"line_end":193,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":30761,"byte_end":30791,"line_start":213,"line_end":213,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"pub fn create_shader_set_tessellation(&mut Self, &[u8], &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":30625,"byte_end":30700,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":30705,"byte_end":30753,"line_start":212,"line_end":212,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":31706,"byte_end":31718,"line_start":238,"line_end":238,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"pub fn link_program(&mut Self, &[u8], &[u8])\n-> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a basic shader `Program` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":31607,"byte_end":31698,"line_start":237,"line_end":237,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":32101,"byte_end":32122,"line_start":247,"line_end":247,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"pub fn create_pipeline_state<I: pso::PipelineInit>(&mut Self, &ShaderSet<R>,\nPrimitive, state::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.  \n","sig":null,"attributes":[{"value":"/ Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":31975,"byte_end":32065,"line_start":245,"line_end":245,"column_start":5,"column_end":95}},{"value":"/ shader `Program`.  ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":32070,"byte_end":32093,"line_start":246,"line_end":246,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":32976,"byte_end":33004,"line_start":264,"line_end":264,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"pub fn create_pipeline_from_program<'a,\nI: pso::PipelineInit>(&mut Self, &'a handle::Program<R>, Primitive,\nstate::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":32832,"byte_end":32925,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ primitive type and a `Rasterizer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":32930,"byte_end":32968,"line_start":263,"line_end":263,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":33833,"byte_end":33855,"line_start":278,"line_end":278,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"pub fn create_pipeline_simple<I: pso::PipelineInit>(&mut Self, &[u8], &[u8],\nI) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":33579,"byte_end":33674,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":33679,"byte_end":33772,"line_start":276,"line_end":276,"column_start":5,"column_end":98}},{"value":"/ of rendering triangle faces without culling.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":33777,"byte_end":33825,"line_start":277,"line_end":277,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":34291,"byte_end":34312,"line_start":287,"line_end":287,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"pub fn create_sampler_linear(&mut Self) -> handle::Sampler<R>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[{"value":"/ Create a linear sampler with clamping to border.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":34231,"byte_end":34283,"line_start":286,"line_end":286,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37378,"byte_end":37383,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[{"value":"/ A `Slice` dictates in which and in what order vertices get processed. It is required for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35450,"byte_end":35542,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/ processing a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35543,"byte_end":35564,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35565,"byte_end":35568,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35569,"byte_end":35583,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ A `Slice` object in essence dictates in what order the vertices in a `VertexBuffer` get","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35584,"byte_end":35675,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ processed. To do this, it contains an internal index-buffer. This `Buffer` is a list of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35676,"byte_end":35767,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"/ indices into this `VertexBuffer` (vertex-index). A vertex-index of 0 represents the first","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35768,"byte_end":35861,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ vertex in the `VertexBuffer`, a vertex-index of 1 represents the second, 2 represents the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35862,"byte_end":35955,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/ third, and so on. The vertex-indices in the index-buffer are read in order; every vertex-index","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":35956,"byte_end":36054,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ tells the pipeline which vertex to process next. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36055,"byte_end":36108,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36109,"byte_end":36112,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Because the same index can re-appear multiple times, duplicate-vertices can be avoided. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36113,"byte_end":36208,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ instance, if you want to draw a square, you need two triangles, and thus six vertices. Because","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36209,"byte_end":36307,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ the same index can reappear multiple times, this means we can instead use 4 vertices, and 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36308,"byte_end":36403,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ vertex-indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36404,"byte_end":36423,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36424,"byte_end":36427,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This index-buffer has a few variants. See the `IndexBuffer` documentation for a detailed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36428,"byte_end":36520,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ description.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36521,"byte_end":36537,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36538,"byte_end":36541,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The `start` and `end` fields say where in the index-buffer to start and stop reading.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36542,"byte_end":36631,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/ Setting `start` to 0, and `end` to the length of the index-buffer, will cause the entire","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36632,"byte_end":36724,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/ index-buffer to be processed. The `base_vertex` dictates the index of the first vertex","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36725,"byte_end":36815,"line_start":48,"line_end":48,"column_start":1,"column_end":91}},{"value":"/ in the `VertexBuffer`. This essentially moves the the start of the `VertexBuffer`, to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36816,"byte_end":36909,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/ vertex with this index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36910,"byte_end":36937,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36938,"byte_end":36941,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Constuction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36942,"byte_end":36970,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ The `Slice` structure can be constructed automatically when using a `Factory` to create a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":36971,"byte_end":37064,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/ vertex buffer. If needed, it can also be created manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37065,"byte_end":37127,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37128,"byte_end":37131,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `Slice` is required to process a PSO, as it contains the needed information on in what order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37132,"byte_end":37230,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ to draw which vertices. As such, every `draw` call on an `Encoder` requires a `Slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37231,"byte_end":37321,"line_start":57,"line_end":57,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37522,"byte_end":37527,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer. \n","sig":null,"attributes":[{"value":"/ The start index of the index-buffer. Processing will start at this location in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37404,"byte_end":37490,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"/ index-buffer. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37495,"byte_end":37513,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37672,"byte_end":37675,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[{"value":"/ The end index in the index-buffer. Processing will stop at this location (exclusive) in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37546,"byte_end":37637,"line_start":63,"line_end":63,"column_start":5,"column_end":96}},{"value":"/ the index buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37642,"byte_end":37663,"line_start":64,"line_end":64,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37916,"byte_end":37927,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[{"value":"/ This is the index of the first vertex in the `VertexBuffer`. This value will be added to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37694,"byte_end":37786,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37791,"byte_end":37886,"line_start":67,"line_end":67,"column_start":5,"column_end":100}},{"value":"/ base-vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37891,"byte_end":37907,"line_start":68,"line_end":68,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37984,"byte_end":37993,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[{"value":"/ Instancing configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":37946,"byte_end":37975,"line_start":70,"line_end":70,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38078,"byte_end":38084,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used. \n","sig":null,"attributes":[{"value":"/ Represents the type of index-buffer used. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38023,"byte_end":38069,"line_start":72,"line_end":72,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38242,"byte_end":38265,"line_start":78,"line_end":78,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"pub fn new_match_vertex_buffer<V>(&handle::Buffer<R, V>) -> Self where\nV: pso::buffer::Structure<Format>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[{"value":"/ Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38139,"byte_end":38230,"line_start":77,"line_end":77,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38671,"byte_end":38685,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"pub fn get_prim_count(&Self, Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[{"value":"/ Calculates the number of primitives of the specified type in this `Slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38581,"byte_end":38659,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39510,"byte_end":39518,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"pub fn split_at(&Self, VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[{"value":"/ Divides one slice into two at an index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39272,"byte_end":39315,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39320,"byte_end":39323,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The first will contain the range in the index-buffer [self.start, mid) (excluding the index mid itself) and the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39328,"byte_end":39443,"line_start":109,"line_end":109,"column_start":5,"column_end":120}},{"value":"/ second will contain the range [mid, self.end).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39448,"byte_end":39498,"line_start":110,"line_end":110,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40987,"byte_end":40991,"line_start":143,"line_end":143,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[{"value":"/ Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40859,"byte_end":40950,"line_start":141,"line_end":141,"column_start":5,"column_end":96}},{"value":"/ get processed in order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40955,"byte_end":40982,"line_start":142,"line_end":142,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41051,"byte_end":41058,"line_start":145,"line_end":145,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 16 bit indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40997,"byte_end":41046,"line_start":144,"line_end":144,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41142,"byte_end":41149,"line_start":147,"line_end":147,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 32 bit indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41088,"byte_end":41137,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40827,"byte_end":40838,"line_start":140,"line_end":140,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"pub enum IndexBuffer<R: Resources> {\n    Auto,\n    Index16(handle::Buffer<R, u16>),\n    Index32(handle::Buffer<R, u32>),\n}","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1262}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[{"value":"/ Type of index-buffer used in a Slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39726,"byte_end":39767,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39768,"byte_end":39771,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The `Auto` variant represents a hypothetical index-buffer from 0 to infinity. In other words,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39772,"byte_end":39869,"line_start":123,"line_end":123,"column_start":1,"column_end":98}},{"value":"/ all vertices get processed in order. Do note that the `Slice`' `start` and `end` restrictions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39870,"byte_end":39967,"line_start":124,"line_end":124,"column_start":1,"column_end":98}},{"value":"/ still apply for this variant. To render every vertex in the `VertexBuffer`, you would set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":39968,"byte_end":40061,"line_start":125,"line_end":125,"column_start":1,"column_end":94}},{"value":"/ `start` to 0, and `end` to the `VertexBuffer`'s length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40062,"byte_end":40121,"line_start":126,"line_end":126,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40122,"byte_end":40125,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The `Index*` variants represent an actual `Buffer` with a list of vertex-indices. The numeric ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40126,"byte_end":40224,"line_start":128,"line_end":128,"column_start":1,"column_end":99}},{"value":"/ suffix specifies the amount of bits to use per index. Each of these also contains a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40225,"byte_end":40312,"line_start":129,"line_end":129,"column_start":1,"column_end":88}},{"value":"/ base-vertex. This is the index of the first vertex in the `VertexBuffer`. This value will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40313,"byte_end":40409,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40410,"byte_end":40509,"line_start":131,"line_end":131,"column_start":1,"column_end":100}},{"value":"/ this base-vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40510,"byte_end":40531,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40532,"byte_end":40535,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40536,"byte_end":40565,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/ A `IndexBuffer` can be constructed using the `IntoIndexBuffer` trait, from either a slice or a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40566,"byte_end":40664,"line_start":135,"line_end":135,"column_start":1,"column_end":99}},{"value":"/ `Buffer` of integers, using a factory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40665,"byte_end":40707,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40708,"byte_end":40711,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ An `IndexBuffer` is exclusively used to create `Slice`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":40712,"byte_end":40772,"line_start":138,"line_end":138,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41371,"byte_end":41386,"line_start":156,"line_end":156,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":548}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[{"value":"/ A helper trait to create `IndexBuffers` from different kinds of data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41287,"byte_end":41360,"line_start":155,"line_end":155,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41452,"byte_end":41469,"line_start":158,"line_end":158,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"pub fn into_index_buffer<F: Factory<R> + ?Sized>(Self, &mut F)\n-> IndexBuffer<R>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[{"value":"/ Turns self into an `IndexBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41407,"byte_end":41444,"line_start":157,"line_end":157,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":742},{"krate":0,"index":845},{"krate":0,"index":982},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1662},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1032},{"krate":0,"index":1685},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1710},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1046},{"krate":0,"index":1051},{"krate":0,"index":1055},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1752},{"krate":0,"index":1759},{"krate":0,"index":1763},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1774},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1068},{"krate":0,"index":1074},{"krate":0,"index":1090}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[{"value":"/ A typed high-level graphics pipeline interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43242,"byte_end":43293,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43294,"byte_end":43297,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43298,"byte_end":43312,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ A `PipelineState` holds all information needed to manage a graphics pipeline. It contains","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43313,"byte_end":43406,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ information about the shaders used, and on how to bind variables to these shaders. A ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43407,"byte_end":43496,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ `PipelineState` manifests itself in the form of a Pipeline State Object, or PSO in short.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43497,"byte_end":43590,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43591,"byte_end":43594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A Pipeline State Object exists out of different components. Every component represents","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43595,"byte_end":43685,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/ a resource handle: a shader input or output/target. The types of these components can be found","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43686,"byte_end":43784,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ in this module's submodules, grouped by category.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43785,"byte_end":43838,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43839,"byte_end":43842,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Before all, a Pipeline State Object must be defined. This is done using the `gfx_pipeline`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43843,"byte_end":43937,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/ macro. This macro creates three different structures:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43938,"byte_end":43995,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":43996,"byte_end":43999,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - The `Init` structure contains the location of every PSO component. During shader linking,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44000,"byte_end":44095,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/   this is used to construct the `Meta` structure. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44096,"byte_end":44150,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ - The `Meta` structure contains the layout of every PSO. Using the `Meta` structure, the right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44151,"byte_end":44249,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/   data is mapped to the right components.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44250,"byte_end":44295,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ - The `Data` structure contains the data of all components, to be sent to the GPU. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44296,"byte_end":44383,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44384,"byte_end":44387,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Construction and Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44388,"byte_end":44419,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ A Pipeline State Object is constructed by a factory, from its `Init` structure, a `Rasterizer`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44420,"byte_end":44519,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ a primitive type and a shader program.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44520,"byte_end":44562,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44563,"byte_end":44566,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ After construction an `Encoder` can use the PSO along with a `Data` structure matching that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44567,"byte_end":44662,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ PSO to process the shader pipeline, for instance, using the `draw` method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44663,"byte_end":44741,"line_start":40,"line_end":40,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":1324},{"krate":0,"index":1304},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1320},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":1330},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1363},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1360},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1400},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1397},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":651},{"krate":0,"index":662},{"krate":0,"index":675},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":692},{"krate":0,"index":696},{"krate":0,"index":704},{"krate":0,"index":709},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":727},{"krate":0,"index":732},{"krate":0,"index":738}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[{"value":"/ Buffer components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58049,"byte_end":58081,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58576,"byte_end":58585,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":631}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by any struct having the layout described","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58447,"byte_end":58518,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ in the graphics API, like a vertex buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58519,"byte_end":58565,"line_start":28,"line_end":28,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58644,"byte_end":58649,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"pub fn query(&str) -> Option<Element<F>>","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[{"value":"/ Get the layout of an element by name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58595,"byte_end":58636,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58887,"byte_end":58905,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[{"value":"/ Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58714,"byte_end":58804,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58827,"byte_end":58875,"line_start":38,"line_end":38,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59119,"byte_end":59133,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ToInstanceRate","qualname":"::pso::buffer::ToInstanceRate","value":"ToInstanceRate","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":" Helper trait for `VertexBufferCommon` to support variable instance rate.\n","sig":null,"attributes":[{"value":"/ Helper trait for `VertexBufferCommon` to support variable instance rate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59032,"byte_end":59108,"line_start":45,"line_end":45,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59197,"byte_end":59201,"line_start":48,"line_end":48,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::buffer::ToInstanceRate::Init","value":"type Init;","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" The associated init type for PSO component.\n","sig":null,"attributes":[{"value":"/ The associated init type for PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59140,"byte_end":59187,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59267,"byte_end":59275,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"get_rate","qualname":"::pso::buffer::ToInstanceRate::get_rate","value":"pub fn get_rate(&Self::Init) -> InstanceRate","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Get an actual instance rate value from the init.\n","sig":null,"attributes":[{"value":"/ Get an actual instance rate value from the init.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59207,"byte_end":59259,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59375,"byte_end":59387,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"NonInstanced","qualname":"::pso::buffer::NonInstanced","value":"pub enum NonInstanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-vertex attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-vertex attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59315,"byte_end":59365,"line_start":53,"line_end":53,"column_start":1,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59453,"byte_end":59462,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"Instanced","qualname":"::pso::buffer::Instanced","value":"pub enum Instanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-instance attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-instance attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59391,"byte_end":59443,"line_start":55,"line_end":55,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59931,"byte_end":59943,"line_start":75,"line_end":75,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, NonInstanced>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.","sig":null,"attributes":[{"value":"/ Vertex buffer component. Advanced per vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59827,"byte_end":59876,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59877,"byte_end":59880,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59881,"byte_end":59897,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59898,"byte_end":59921,"line_start":74,"line_end":74,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60080,"byte_end":60094,"line_start":78,"line_end":78,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, Instanced>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[{"value":"/ Instance buffer component. Same as the vertex buffer but advances per instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59987,"byte_end":60070,"line_start":77,"line_end":77,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60398,"byte_end":60413,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.","sig":null,"attributes":[{"value":"/ Raw vertex/instance buffer component. Can be used when the formats of vertex attributes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60135,"byte_end":60226,"line_start":80,"line_end":80,"column_start":1,"column_end":92}},{"value":"/ are not known at compile time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60227,"byte_end":60261,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60262,"byte_end":60265,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ - init: `(&[&str, element], stride, inst_rate)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60266,"byte_end":60317,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60318,"byte_end":60341,"line_start":84,"line_end":84,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60636,"byte_end":60650,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.","sig":null,"attributes":[{"value":"/ Constant buffer component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60455,"byte_end":60485,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60486,"byte_end":60489,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60490,"byte_end":60529,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60530,"byte_end":60553,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60576,"byte_end":60624,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60948,"byte_end":60965,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.","sig":null,"attributes":[{"value":"/ Raw constant buffer component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60789,"byte_end":60823,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60824,"byte_end":60827,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60828,"byte_end":60867,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60868,"byte_end":60891,"line_start":103,"line_end":103,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61306,"byte_end":61312,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed\n into the shader, which is not enclosed into any constant buffer.","sig":null,"attributes":[{"value":"/ Global (uniform) constant component. Describes a free-standing value passed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61005,"byte_end":61084,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ into the shader, which is not enclosed into any constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61085,"byte_end":61153,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61154,"byte_end":61157,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61158,"byte_end":61199,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ - data: `T` = value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61200,"byte_end":61223,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61246,"byte_end":61294,"line_start":113,"line_end":113,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61711,"byte_end":61720,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"RawGlobal","qualname":"::pso::buffer::RawGlobal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw global (uniform) constant component. Describes a free-standing value\n passed into the shader, which is not enclosed in any constant buffer.","sig":null,"attributes":[{"value":"/ Raw global (uniform) constant component. Describes a free-standing value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61423,"byte_end":61499,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ passed into the shader, which is not enclosed in any constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61500,"byte_end":61573,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61574,"byte_end":61577,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61578,"byte_end":61619,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ - data: `UniformValue` = value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61620,"byte_end":61654,"line_start":124,"line_end":124,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":1437},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1474},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1471},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1511},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1508},{"krate":0,"index":788},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":806},{"krate":0,"index":810},{"krate":0,"index":817},{"krate":0,"index":822},{"krate":0,"index":828},{"krate":0,"index":832},{"krate":0,"index":840}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[{"value":"/ Resource components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71027,"byte_end":71061,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71577,"byte_end":71591,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.","sig":null,"attributes":[{"value":"/ Shader resource component (SRV). Typically is a view into some texture,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71307,"byte_end":71382,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ but can also be a buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71383,"byte_end":71412,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71413,"byte_end":71416,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71417,"byte_end":71458,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ - data: `ShaderResourceView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71459,"byte_end":71494,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71517,"byte_end":71565,"line_start":30,"line_end":30,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71910,"byte_end":71927,"line_start":42,"line_end":42,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).","sig":null,"attributes":[{"value":"/ Raw (untyped) shader resource (SRV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71699,"byte_end":71739,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71740,"byte_end":71743,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource. This may change in the future.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71744,"byte_end":71817,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ - data: `RawShaderResourceView`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71818,"byte_end":71853,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72320,"byte_end":72335,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.","sig":null,"attributes":[{"value":"/ Unordered access component (UAV). A writable resource (texture/buffer)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71972,"byte_end":72046,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ with no defined access order across simultaneously executing shaders.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72047,"byte_end":72120,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ Supported on DX10 and higher.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72121,"byte_end":72154,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72155,"byte_end":72158,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72159,"byte_end":72200,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ - data: `UnorderedAccessView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72201,"byte_end":72237,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72260,"byte_end":72308,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72613,"byte_end":72620,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.","sig":null,"attributes":[{"value":"/ Sampler component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72467,"byte_end":72489,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72490,"byte_end":72493,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72494,"byte_end":72534,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ - data: `Sampler`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72535,"byte_end":72556,"line_start":61,"line_end":61,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73164,"byte_end":73178,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.","sig":null,"attributes":[{"value":"/ A convenience type for a texture paired with a sampler.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72660,"byte_end":72719,"line_start":65,"line_end":65,"column_start":1,"column_end":60}},{"value":"/ It only makes sense for DX9 class hardware, where every texture by default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72720,"byte_end":72798,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ is bundled with a sampler, hence they are represented by the same name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72799,"byte_end":72874,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ In DX10 and higher samplers are totally separated from the textures.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72875,"byte_end":72947,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72948,"byte_end":72951,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler/texture (assuming they match)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72952,"byte_end":73022,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ - data: (`ShaderResourceView<T>`, `Sampler`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73023,"byte_end":73071,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"derivative(Clone, Debug, Eq, Hash(bound = \"\"), PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73094,"byte_end":73152,"line_start":73,"line_end":73,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":1531},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1551},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1548},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1588},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1585},{"krate":0,"index":1607},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1604},{"krate":0,"index":1626},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1623},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":891},{"krate":0,"index":898},{"krate":0,"index":903},{"krate":0,"index":910},{"krate":0,"index":915},{"krate":0,"index":923},{"krate":0,"index":927},{"krate":0,"index":934},{"krate":0,"index":939},{"krate":0,"index":946},{"krate":0,"index":951},{"krate":0,"index":958},{"krate":0,"index":963},{"krate":0,"index":969},{"krate":0,"index":973},{"krate":0,"index":978}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[{"value":"/ Render target components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":78723,"byte_end":78762,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79223,"byte_end":79235,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.","sig":null,"attributes":[{"value":"/ Render target component. Typically points to a color-formatted texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":78987,"byte_end":79062,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79063,"byte_end":79066,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the target","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79067,"byte_end":79106,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79107,"byte_end":79140,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79163,"byte_end":79211,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79578,"byte_end":79589,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.","sig":null,"attributes":[{"value":"/ Render target component with active blending mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79343,"byte_end":79397,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79398,"byte_end":79401,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `ColorMask`, `Blend` = blending state)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79402,"byte_end":79461,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79462,"byte_end":79495,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79518,"byte_end":79566,"line_start":41,"line_end":41,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79916,"byte_end":79931,"line_start":53,"line_end":53,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.","sig":null,"attributes":[{"value":"/ Raw (untyped) render target component with optional blending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79695,"byte_end":79760,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79761,"byte_end":79764,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79765,"byte_end":79825,"line_start":50,"line_end":50,"column_start":1,"column_end":61}},{"value":"/ - data: `RawRenderTargetView`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79826,"byte_end":79859,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80135,"byte_end":80146,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.","sig":null,"attributes":[{"value":"/ Depth target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79953,"byte_end":79980,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79981,"byte_end":79984,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - init: `Depth` = depth state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79985,"byte_end":80018,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ - data: `DepthStencilView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80019,"byte_end":80052,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80075,"byte_end":80123,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80465,"byte_end":80478,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.","sig":null,"attributes":[{"value":"/ Stencil target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80231,"byte_end":80260,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80261,"byte_end":80264,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - init: `Stencil` = stencil state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80265,"byte_end":80302,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80303,"byte_end":80382,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80405,"byte_end":80453,"line_start":71,"line_end":71,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80830,"byte_end":80848,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.","sig":null,"attributes":[{"value":"/ Depth + stencil target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80563,"byte_end":80600,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80601,"byte_end":80604,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ - init: (`Depth` = depth state, `Stencil` = stencil state)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80605,"byte_end":80667,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80668,"byte_end":80747,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80770,"byte_end":80818,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81106,"byte_end":81113,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.","sig":null,"attributes":[{"value":"/ Scissor component. Sets up the scissor test for rendering.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80933,"byte_end":80995,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80996,"byte_end":80999,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81000,"byte_end":81016,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/ - data: `Rect` = target area","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81017,"byte_end":81049,"line_start":91,"line_end":91,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81297,"byte_end":81305,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.","sig":null,"attributes":[{"value":"/ Blend reference component. Sets up the reference color for blending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81122,"byte_end":81194,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81195,"byte_end":81198,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81199,"byte_end":81215,"line_start":97,"line_end":97,"column_start":1,"column_end":17}},{"value":"/ - data: `ColorValue`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81216,"byte_end":81240,"line_start":98,"line_end":98,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1008}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[{"value":"/ Combine slice data with pipeline state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":87836,"byte_end":87879,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":87880,"byte_end":87883,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Suitable for use when PSO is always used with the same one slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":87884,"byte_end":87953,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88079,"byte_end":88085,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[{"value":"/ Slice-PSO bundle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88046,"byte_end":88067,"line_start":8,"line_end":8,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88147,"byte_end":88152,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[{"value":"/ Slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88129,"byte_end":88138,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88195,"byte_end":88198,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[{"value":"/ Pipeline state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88168,"byte_end":88186,"line_start":12,"line_end":12,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88260,"byte_end":88264,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":1002},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[{"value":"/ Pipeline data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88234,"byte_end":88251,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88372,"byte_end":88375,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"pub fn new(Slice<R>, PipelineState<R, Data::Meta>, Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[{"value":"/ Create new Bundle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88339,"byte_end":88360,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88606,"byte_end":88612,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"pub fn encode<C>(&Self, &mut Encoder<R, C>) where C: CommandBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[{"value":"/ Draw bundle using encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88564,"byte_end":88594,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45350,"byte_end":45360,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"/ A complete set of raw data that needs to be specified at run-time","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44956,"byte_end":45025,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ whenever we draw something with a PSO. This is what \"data\" struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45026,"byte_end":45095,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ gets transformed into when we call `encoder.draw(...)` with it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45096,"byte_end":45163,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ It doesn't have any typing information, since PSO knows what","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45164,"byte_end":45228,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ format and layout to expect from each resource.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45229,"byte_end":45280,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45281,"byte_end":45303,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45387,"byte_end":45401,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45439,"byte_end":45455,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45502,"byte_end":45518,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45579,"byte_end":45593,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45638,"byte_end":45653,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45699,"byte_end":45707,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45747,"byte_end":45760,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45797,"byte_end":45807,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45838,"byte_end":45845,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45950,"byte_end":45953,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"pub fn new() -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[{"value":"/ Create an empty data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45909,"byte_end":45938,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":46476,"byte_end":46481,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[{"value":"/ Clear all contained data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":46435,"byte_end":46464,"line_start":88,"line_end":88,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47067,"byte_end":47075,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[{"value":"/ Element not found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47040,"byte_end":47062,"line_start":105,"line_end":105,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47117,"byte_end":47123,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset { name, shader_offset, code_offset }","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[{"value":"/ Element offset mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47084,"byte_end":47112,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47430,"byte_end":47436,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format { name, shader_format, code_format }","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[{"value":"/ Element format mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47397,"byte_end":47425,"line_start":116,"line_end":116,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47018,"byte_end":47030,"line_start":104,"line_end":104,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"pub enum ElementError<S> {\n    NotFound(S),\n    Offset {\n            name: S,\n            shader_offset: c::pso::ElemOffset,\n            code_offset: c::pso::ElemOffset,\n        },\n    Format {\n            name: S,\n            shader_format: c::shade::ConstFormat,\n            code_format: c::shade::ConstFormat,\n        },\n}","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1694}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[{"value":"/ Error matching an element inside the constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":46916,"byte_end":46973,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49525,"byte_end":49537,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[{"value":"/ Vertex attribute mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49490,"byte_end":49520,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49607,"byte_end":49621,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[{"value":"/ Constant buffer mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49573,"byte_end":49602,"line_start":173,"line_end":173,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49689,"byte_end":49703,"line_start":176,"line_end":176,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<c::shade::CompatibilityError>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[{"value":"/ Global constant mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49655,"byte_end":49684,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49789,"byte_end":49801,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[{"value":"/ Shader resource view mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49750,"byte_end":49784,"line_start":177,"line_end":177,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49862,"byte_end":49875,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[{"value":"/ Unordered access view mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49822,"byte_end":49857,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49922,"byte_end":49929,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[{"value":"/ Sampler mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49896,"byte_end":49917,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49981,"byte_end":49992,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1710},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[{"value":"/ Pixel target mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49950,"byte_end":49976,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49471,"byte_end":49480,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"pub enum InitError<S> {\n    VertexImport(S, Option<c::format::Format>),\n    ConstantBuffer(S, Option<ElementError<S>>),\n    GlobalConstant(S, Option<c::shade::CompatibilityError>),\n    ResourceView(S, Option<()>),\n    UnorderedView(S, Option<()>),\n    Sampler(S, Option<()>),\n    PixelExport(S, Option<c::format::Format>),\n}","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1736}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[{"value":"/ Failure to initilize the link between the shader and the data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":49360,"byte_end":49426,"line_start":168,"line_end":168,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":52893,"byte_end":52905,"line_start":250,"line_end":250,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ A service trait implemented by the \"init\" structure of PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":52819,"byte_end":52882,"line_start":249,"line_end":249,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":52955,"byte_end":52959,"line_start":252,"line_end":252,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":52912,"byte_end":52945,"line_start":251,"line_end":251,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53146,"byte_end":53153,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"pub fn link_to<'s>(&Self, &mut Descriptor, &'s c::shade::ProgramInfo)\n-> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[{"value":"/ Attempt to map a PSO descriptor to a give shader program,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":52965,"byte_end":53026,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ represented by `ProgramInfo`. Returns an instance of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53031,"byte_end":53091,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ \"meta\" struct upon successful mapping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53096,"byte_end":53138,"line_start":255,"line_end":255,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53341,"byte_end":53353,"line_start":261,"line_end":261,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ a service trait implemented the \"data\" structure of PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53270,"byte_end":53330,"line_start":260,"line_end":260,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53420,"byte_end":53424,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53377,"byte_end":53410,"line_start":262,"line_end":262,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53550,"byte_end":53557,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"pub fn bake_to(&Self, &mut RawDataSet<R>, &Self::Meta,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[{"value":"/ Dump all the contained data into the raw data set,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53430,"byte_end":53484,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/ given the mapping (\"meta\"), and a handle manager.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53489,"byte_end":53542,"line_start":265,"line_end":265,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53862,"byte_end":53875,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"/ A strongly typed Pipleline State Object. See the module documentation for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":53710,"byte_end":53805,"line_start":273,"line_end":273,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54118,"byte_end":54121,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"pub fn new(c::handle::RawPipelineState<R>, c::Primitive, M)\n-> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[{"value":"/ Create a new PSO from a raw handle and the \"meta\" instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54043,"byte_end":54106,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54320,"byte_end":54330,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"pub fn get_handle(&Self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[{"value":"/ Get a raw handle reference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54277,"byte_end":54308,"line_start":284,"line_end":284,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54535,"byte_end":54543,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"pub fn get_meta(&Self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[{"value":"/ Get a \"meta\" struct reference. Can be used by the user to check","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54401,"byte_end":54468,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ what resources are actually used and what not.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54473,"byte_end":54523,"line_start":289,"line_end":289,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54689,"byte_end":54697,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[{"value":"/ The \"link\" logic portion of a PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54584,"byte_end":54632,"line_start":295,"line_end":295,"column_start":1,"column_end":49}},{"value":"/ Defines the input data for the component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54633,"byte_end":54678,"line_start":296,"line_end":296,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54792,"byte_end":54796,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[{"value":"/ The assotiated \"init\" type - a member of the PSO \"init\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54715,"byte_end":54782,"line_start":298,"line_end":298,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54847,"byte_end":54850,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[{"value":"/ Create a new empty data link.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54806,"byte_end":54839,"line_start":300,"line_end":300,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54928,"byte_end":54937,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"pub fn is_active(&Self) -> bool","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[{"value":"/ Check if this link is actually used by the shader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54866,"byte_end":54920,"line_start":302,"line_end":302,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55038,"byte_end":55056,"line_start":305,"line_end":305,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"pub fn link_vertex_buffer(&mut Self, c::pso::BufferIndex, &Self::Init)\n-> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex buffer containing multiple attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54958,"byte_end":55030,"line_start":304,"line_end":304,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55235,"byte_end":55245,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"pub fn link_input(&mut Self, &c::shade::AttributeVar, &Self::Init)\n-> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex attribute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55183,"byte_end":55227,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55443,"byte_end":55463,"line_start":311,"line_end":311,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"pub fn link_constant_buffer<'b>(&mut Self, &'b c::shade::ConstantBufferVar,\n&Self::Init)\n-> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55392,"byte_end":55435,"line_start":310,"line_end":310,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55692,"byte_end":55712,"line_start":314,"line_end":314,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"pub fn link_global_constant(&mut Self, &c::shade::ConstVar, &Self::Init)\n-> Option<Result<(), c::shade::CompatibilityError>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a global constant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55641,"byte_end":55684,"line_start":313,"line_end":313,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55920,"byte_end":55931,"line_start":317,"line_end":317,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"pub fn link_output(&mut Self, &c::shade::OutputVar, &Self::Init)\n-> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an output render target (RTV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":55857,"byte_end":55912,"line_start":316,"line_end":316,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56140,"byte_end":56158,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"pub fn link_depth_stencil(&mut Self, &Self::Init)\n-> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a depth-stencil target (DSV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56078,"byte_end":56132,"line_start":319,"line_end":319,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56318,"byte_end":56336,"line_start":323,"line_end":323,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"pub fn link_resource_view(&mut Self, &c::shade::TextureVar, &Self::Init)\n-> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a shader resource (SRV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56261,"byte_end":56310,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56551,"byte_end":56570,"line_start":326,"line_end":326,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"pub fn link_unordered_view(&mut Self, &c::shade::UnorderedVar, &Self::Init)\n-> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an unordered access (UAV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56492,"byte_end":56543,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56773,"byte_end":56785,"line_start":329,"line_end":329,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"pub fn link_sampler(&mut Self, &c::shade::SamplerVar, &Self::Init)\n-> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a sampler.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56730,"byte_end":56765,"line_start":328,"line_end":328,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56946,"byte_end":56958,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"pub fn link_scissor(&mut Self) -> bool","parent":{"krate":0,"index":1074},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[{"value":"/ Attempt to enable scissor test.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56903,"byte_end":56938,"line_start":331,"line_end":331,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57116,"byte_end":57124,"line_start":337,"line_end":337,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[{"value":"/ The \"bind\" logic portion of the PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":56991,"byte_end":57041,"line_start":335,"line_end":335,"column_start":1,"column_end":51}},{"value":"/ Defines how the user data translates into the raw data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57042,"byte_end":57105,"line_start":336,"line_end":336,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57225,"byte_end":57229,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"data\" type - a member of the PSO \"data\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57148,"byte_end":57215,"line_start":338,"line_end":338,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57289,"byte_end":57296,"line_start":341,"line_end":341,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"pub fn bind_to(&Self, &mut RawDataSet<R>, &Self::Data,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1090},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[{"value":"/ Dump the given data into the raw data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":57235,"byte_end":57281,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":1817},{"krate":0,"index":1821},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1117},{"krate":0,"index":1119}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[{"value":"/ Shaders","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2689,"byte_end":2700,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ Shader parameter handling.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89355,"byte_end":89385,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89654,"byte_end":89663,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":1115}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89621,"byte_end":89643,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89679,"byte_end":89686,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"pub fn convert(Self) -> core::UniformValue","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91071,"byte_end":91077,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the vertex shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91027,"byte_end":91066,"line_start":84,"line_end":84,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91150,"byte_end":91154,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to compile the hull shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the hull shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91108,"byte_end":91145,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91229,"byte_end":91235,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to compile the domain shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the domain shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91185,"byte_end":91224,"line_start":88,"line_end":88,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91312,"byte_end":91320,"line_start":91,"line_end":91,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::shade::ProgramError::Geometry","value":"ProgramError::Geometry(core::CreateShaderError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to compile the geometry shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the geometry shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91266,"byte_end":91307,"line_start":90,"line_end":90,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91394,"byte_end":91399,"line_start":93,"line_end":93,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the pixel shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91351,"byte_end":91389,"line_start":92,"line_end":92,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91453,"byte_end":91457,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[{"value":"/ Unable to link","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91430,"byte_end":91448,"line_start":94,"line_end":94,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91008,"byte_end":91020,"line_start":83,"line_end":83,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"pub enum ProgramError {\n    Vertex(core::CreateShaderError),\n    Hull(core::CreateShaderError),\n    Domain(core::CreateShaderError),\n    Geometry(core::CreateShaderError),\n    Pixel(core::CreateShaderError),\n    Link(core::CreateProgramError),\n}","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[{"value":"/ Program linking error","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":90938,"byte_end":90963,"line_start":81,"line_end":81,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1127},{"krate":0,"index":1134},{"krate":0,"index":1135}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[{"value":"/ Convenience macros","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2716,"byte_end":2738,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ Various helper macros.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\macros\\mod.rs","byte_start":93682,"byte_end":93708,"line_start":15,"line_end":15,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4575,"byte_end":4584,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":5414,"byte_end":5423,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6514,"byte_end":6525,"line_start":118,"line_end":118,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7105,"byte_end":7116,"line_start":131,"line_end":131,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8375,"byte_end":8382,"line_start":163,"line_end":163,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8696,"byte_end":8703,"line_start":174,"line_end":174,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23911,"byte_end":23929,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":24374,"byte_end":24392,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":24837,"byte_end":24855,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25623,"byte_end":25641,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25770,"byte_end":25788,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25925,"byte_end":25943,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":34559,"byte_end":34560,"line_start":295,"line_end":295,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38124,"byte_end":38129,"line_start":76,"line_end":76,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41209,"byte_end":41220,"line_start":150,"line_end":150,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41581,"byte_end":41592,"line_start":161,"line_end":161,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58887,"byte_end":58905,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59491,"byte_end":59503,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59623,"byte_end":59632,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59735,"byte_end":59747,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60636,"byte_end":60650,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61306,"byte_end":61312,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":63120,"byte_end":63138,"line_start":164,"line_end":164,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":63973,"byte_end":63991,"line_start":190,"line_end":190,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":64291,"byte_end":64306,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":64656,"byte_end":64671,"line_start":213,"line_end":213,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":65427,"byte_end":65442,"line_start":236,"line_end":236,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":66012,"byte_end":66026,"line_start":255,"line_end":255,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":67283,"byte_end":67297,"line_start":287,"line_end":287,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":67615,"byte_end":67632,"line_start":298,"line_end":298,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":68184,"byte_end":68201,"line_start":317,"line_end":317,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":68715,"byte_end":68721,"line_start":332,"line_end":332,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":69248,"byte_end":69254,"line_start":347,"line_end":347,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":69582,"byte_end":69591,"line_start":359,"line_end":359,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":70091,"byte_end":70100,"line_start":378,"line_end":378,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71577,"byte_end":71591,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72320,"byte_end":72335,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73164,"byte_end":73178,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73241,"byte_end":73255,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73693,"byte_end":73707,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":74037,"byte_end":74054,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":74587,"byte_end":74604,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":75114,"byte_end":75129,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":75684,"byte_end":75699,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":76219,"byte_end":76226,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":76691,"byte_end":76698,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":77131,"byte_end":77145,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":77734,"byte_end":77748,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79223,"byte_end":79235,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79578,"byte_end":79589,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80135,"byte_end":80146,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80465,"byte_end":80478,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80830,"byte_end":80848,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81359,"byte_end":81371,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81954,"byte_end":81966,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":82409,"byte_end":82420,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":82909,"byte_end":82920,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":83248,"byte_end":83263,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84014,"byte_end":84029,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84457,"byte_end":84468,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84781,"byte_end":84792,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":85216,"byte_end":85229,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":85546,"byte_end":85559,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86069,"byte_end":86087,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86425,"byte_end":86443,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86922,"byte_end":86929,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87136,"byte_end":87143,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87419,"byte_end":87427,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87563,"byte_end":87571,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88317,"byte_end":88323,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45889,"byte_end":45899,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47758,"byte_end":47770,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":48394,"byte_end":48406,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":48726,"byte_end":48738,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":50065,"byte_end":50074,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":50743,"byte_end":50752,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":51612,"byte_end":51621,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54017,"byte_end":54030,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91510,"byte_end":91522,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":92159,"byte_end":92171,"line_start":111,"line_end":111,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2684,"byte_end":2687,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":559}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44751,"byte_end":44757,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":560}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44767,"byte_end":44775,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":742}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44785,"byte_end":44791,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":845}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":44801,"byte_end":44807,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":982}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2709,"byte_end":2714,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1094}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src/lib.rs","byte_start":2747,"byte_end":2753,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1122}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":4575,"byte_end":4584,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":5414,"byte_end":5423,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1136},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":6514,"byte_end":6525,"line_start":118,"line_end":118,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":7105,"byte_end":7116,"line_start":131,"line_end":131,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8375,"byte_end":8382,"line_start":163,"line_end":163,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\encoder.rs","byte_start":8696,"byte_end":8703,"line_start":174,"line_end":174,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":23911,"byte_end":23929,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":24374,"byte_end":24392,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":24837,"byte_end":24855,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1203},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25623,"byte_end":25641,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25770,"byte_end":25788,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":25925,"byte_end":25943,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":26264,"byte_end":26271,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":22,"index":428},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\factory.rs","byte_start":34559,"byte_end":34560,"line_start":295,"line_end":295,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":500},"to":{"krate":0,"index":468}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":38124,"byte_end":38129,"line_start":76,"line_end":76,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41209,"byte_end":41220,"line_start":150,"line_end":150,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1255},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\slice.rs","byte_start":41581,"byte_end":41592,"line_start":161,"line_end":161,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1255},"to":{"krate":0,"index":546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":58887,"byte_end":58905,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59491,"byte_end":59503,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":22,"index":992},"to":{"krate":0,"index":633}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59623,"byte_end":59632,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":633}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":59735,"byte_end":59747,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":636},"to":{"krate":0,"index":633}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":60636,"byte_end":60650,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":61306,"byte_end":61312,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":63120,"byte_end":63138,"line_start":164,"line_end":164,"column_start":20,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":63973,"byte_end":63991,"line_start":190,"line_end":190,"column_start":42,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":64291,"byte_end":64306,"line_start":201,"line_end":201,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":64656,"byte_end":64671,"line_start":213,"line_end":213,"column_start":27,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":65427,"byte_end":65442,"line_start":236,"line_end":236,"column_start":36,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":66012,"byte_end":66026,"line_start":255,"line_end":255,"column_start":18,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1363},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":67283,"byte_end":67297,"line_start":287,"line_end":287,"column_start":17,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1363},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":67615,"byte_end":67632,"line_start":298,"line_end":298,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":68184,"byte_end":68201,"line_start":317,"line_end":317,"column_start":36,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":68715,"byte_end":68721,"line_start":332,"line_end":332,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":69248,"byte_end":69254,"line_start":347,"line_end":347,"column_start":50,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":69582,"byte_end":69591,"line_start":359,"line_end":359,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\buffer.rs","byte_start":70091,"byte_end":70100,"line_start":378,"line_end":378,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1405},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":71577,"byte_end":71591,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1437},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":72320,"byte_end":72335,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73164,"byte_end":73178,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1511},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73241,"byte_end":73255,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1437},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":73693,"byte_end":73707,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1437},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":74037,"byte_end":74054,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1442},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":74587,"byte_end":74604,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1442},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":75114,"byte_end":75129,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":75684,"byte_end":75699,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":76219,"byte_end":76226,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1479},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":76691,"byte_end":76698,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1479},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":77131,"byte_end":77145,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1511},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\resource.rs","byte_start":77734,"byte_end":77748,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1511},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79223,"byte_end":79235,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1531},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":79578,"byte_end":79589,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1551},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80135,"byte_end":80146,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80465,"byte_end":80478,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":80830,"byte_end":80848,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81359,"byte_end":81371,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1531},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":81954,"byte_end":81966,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1531},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":82409,"byte_end":82420,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1551},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":82909,"byte_end":82920,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1551},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":83248,"byte_end":83263,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1556},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84014,"byte_end":84029,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1556},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84457,"byte_end":84468,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":84781,"byte_end":84792,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":85216,"byte_end":85229,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1607},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":85546,"byte_end":85559,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1607},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86069,"byte_end":86087,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1626},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86425,"byte_end":86443,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1626},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":86922,"byte_end":86929,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1630},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87136,"byte_end":87143,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1630},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87419,"byte_end":87427,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\target.rs","byte_start":87563,"byte_end":87571,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1090}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\bundle.rs","byte_start":88317,"byte_end":88323,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":45889,"byte_end":45899,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":47758,"byte_end":47770,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":48394,"byte_end":48406,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1685},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":48726,"byte_end":48738,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":50065,"byte_end":50074,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":50743,"byte_end":50752,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":51612,"byte_end":51621,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1710},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54017,"byte_end":54030,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\pso\\mod.rs","byte_start":54703,"byte_end":54708,"line_start":297,"line_end":297,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1074}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":89665,"byte_end":89669,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":1114}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":91510,"byte_end":91522,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.16.3\\src\\shade.rs","byte_start":92159,"byte_end":92171,"line_start":111,"line_end":111,"column_start":16,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1821},"to":{"krate":1,"index":2546}}]}