{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","line_wrap","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c54378e1a0fd6a80","-C","extra-filename=-c54378e1a0fd6a80","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","safemem=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libsafemem-344a4b5251abef51.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libline_wrap-c54378e1a0fd6a80.rmeta"},"prelude":{"crate_id":{"name":"line_wrap","disambiguator":[11391568317379883503,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","num":16,"id":{"name":"safemem","disambiguator":[8036298311138745999,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":11041,"line_start":1,"line_end":351,"column_start":1,"column_end":11}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":11041,"line_start":1,"line_end":351,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":36}],"decl_id":null,"docs":" Efficiently insert line endings.","sig":null,"attributes":[{"value":"/ Efficiently insert line endings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":36,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":37,"byte_end":40,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If you have a buffer full of data and want to insert any sort of regularly-spaced separator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":41,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ this will do it with a minimum of data copying. Commonly, this is to insert `\\n` (see `lf()`) or `\\r\\n` (`crlf()`), but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":138,"byte_end":261,"line_start":4,"line_end":4,"column_start":1,"column_end":124}},{"value":"/ any byte sequence can be used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":262,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":297,"byte_end":300,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ 1. Pick a line ending. For single byte separators, see `ByteLineEnding`, or for two bytes, `TwoByteLineEnding`. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":301,"byte_end":420,"line_start":7,"line_end":7,"column_start":1,"column_end":120}},{"value":"/ arbitrary byte slices, use `SliceLineEnding`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":421,"byte_end":470,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/ 2. Call `line_wrap`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":471,"byte_end":495,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/ 3. Your data has been rearranged in place with the specified line ending inserted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":496,"byte_end":582,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":583,"byte_end":586,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":587,"byte_end":601,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":602,"byte_end":605,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":606,"byte_end":613,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use line_wrap::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":614,"byte_end":635,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/ // suppose we have 80 bytes of data in a buffer and we want to wrap as per MIME.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":636,"byte_end":720,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ // Buffer is large enough to hold line endings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":721,"byte_end":772,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ let mut data = vec![0; 82];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":773,"byte_end":804,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":805,"byte_end":808,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, line_wrap(&mut data, 80, 76, &crlf()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":809,"byte_end":866,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":867,"byte_end":870,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // first line of zeroes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":871,"byte_end":898,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ let mut expected_data = vec![0; 76];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":899,"byte_end":939,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ // line ending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":940,"byte_end":958,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ expected_data.extend_from_slice(b\"\\r\\n\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":959,"byte_end":1004,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ // next line","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1005,"byte_end":1021,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/ expected_data.extend_from_slice(&[0, 0, 0, 0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1022,"byte_end":1073,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(expected_data, data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1074,"byte_end":1110,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1111,"byte_end":1118,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1119,"byte_end":1122,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1123,"byte_end":1140,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1141,"byte_end":1144,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ On an i7 6850k:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1145,"byte_end":1164,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1165,"byte_end":1168,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - 10 byte input, 1 byte line length takes ~60ns (~160MiB/s)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1169,"byte_end":1232,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/ - 100 byte input, 10 byte lines takes ~60ns (~1.6GiB/s)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1233,"byte_end":1292,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/     - Startup costs dominate at these small lengths","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1293,"byte_end":1348,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ - 1,000 byte input, 100 byte lines takes ~65ns (~15GiB/s)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1349,"byte_end":1410,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ - 10,000 byte input, 100 byte lines takes ~550ns (~17GiB/s)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1411,"byte_end":1474,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/ - In general, `SliceLineEncoding` is about 75% the speed of the fixed-length impls.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1475,"byte_end":1562,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1563,"byte_end":1566,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Naturally, try `cargo +nightly bench` on your hardware to get more representative data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1567,"byte_end":1658,"line_start":42,"line_end":42,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1717,"byte_end":1719,"line_start":46,"line_end":46,"column_start":8,"column_end":10},"name":"lf","qualname":"::lf","value":"pub fn lf() -> ByteLineEnding","parent":null,"children":[],"decl_id":null,"docs":" Unix-style line ending.\n","sig":null,"attributes":[{"value":"/ Unix-style line ending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1682,"byte_end":1709,"line_start":45,"line_end":45,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1810,"byte_end":1814,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"crlf","qualname":"::crlf","value":"pub fn crlf() -> TwoByteLineEnding","parent":null,"children":[],"decl_id":null,"docs":" Windows-style line ending.\n","sig":null,"attributes":[{"value":"/ Windows-style line ending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1772,"byte_end":1802,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2083,"byte_end":2093,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"LineEnding","qualname":"::LineEnding","value":"LineEnding","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" Writes line endings.","sig":null,"attributes":[{"value":"/ Writes line endings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1880,"byte_end":1904,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1905,"byte_end":1908,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The trait allows specialization for the common single and double byte cases, netting nice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":1909,"byte_end":2002,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/ throughput improvements over simply using a slice for everything.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2003,"byte_end":2072,"line_start":54,"line_end":54,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2233,"byte_end":2245,"line_start":57,"line_end":57,"column_start":8,"column_end":20},"name":"write_ending","qualname":"::LineEnding::write_ending","value":"pub fn write_ending(&Self, &mut [u8])","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Write the line ending into the slice, which starts at the point where the ending should be written and is len() in length\n","sig":null,"attributes":[{"value":"/ Write the line ending into the slice, which starts at the point where the ending should be written and is len() in length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2100,"byte_end":2225,"line_start":56,"line_end":56,"column_start":5,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2356,"byte_end":2359,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"len","qualname":"::LineEnding::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" The length of this particular line ending (must be constant and > 0)\n","sig":null,"attributes":[{"value":"/ The length of this particular line ending (must be constant and > 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2276,"byte_end":2348,"line_start":58,"line_end":58,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2737,"byte_end":2751,"line_start":79,"line_end":79,"column_start":12,"column_end":26},"name":"ByteLineEnding","qualname":"::ByteLineEnding","value":"ByteLineEnding {  }","parent":null,"children":[{"krate":0,"index":10}],"decl_id":null,"docs":" A single byte line ending.","sig":null,"attributes":[{"value":"/ A single byte line ending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2380,"byte_end":2410,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2411,"byte_end":2414,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See `lf()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2415,"byte_end":2430,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2431,"byte_end":2434,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2435,"byte_end":2449,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2450,"byte_end":2453,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2454,"byte_end":2461,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use line_wrap::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2462,"byte_end":2483,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2484,"byte_end":2487,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let ending = ByteLineEnding::new(b'\\n');","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2488,"byte_end":2532,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2533,"byte_end":2536,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut data = vec![1, 2, 3, 4, 5, 6, 255, 255];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2537,"byte_end":2589,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2590,"byte_end":2593,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, line_wrap(&mut data[..], 6, 2, &ending));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2594,"byte_end":2653,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2654,"byte_end":2657,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![1, 2, b'\\n', 3, 4, b'\\n', 5, 6], data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2658,"byte_end":2717,"line_start":77,"line_end":77,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2718,"byte_end":2725,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2803,"byte_end":2806,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteLineEnding>::new","value":"pub fn new(u8) -> ByteLineEnding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3488,"byte_end":3505,"line_start":120,"line_end":120,"column_start":12,"column_end":29},"name":"TwoByteLineEnding","qualname":"::TwoByteLineEnding","value":"TwoByteLineEnding {  }","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" A double byte line ending.","sig":null,"attributes":[{"value":"/ A double byte line ending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3095,"byte_end":3125,"line_start":103,"line_end":103,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3126,"byte_end":3129,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ See `crlf()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3130,"byte_end":3147,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3148,"byte_end":3151,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3152,"byte_end":3166,"line_start":107,"line_end":107,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3167,"byte_end":3170,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3171,"byte_end":3178,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ use line_wrap::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3179,"byte_end":3200,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3201,"byte_end":3204,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let ending = TwoByteLineEnding::new(b'\\r', b'\\n');","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3205,"byte_end":3259,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3260,"byte_end":3263,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let mut data = vec![1, 2, 3, 4, 5, 6, 255, 255, 255, 255];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3264,"byte_end":3326,"line_start":114,"line_end":114,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3327,"byte_end":3330,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(4, line_wrap(&mut data[..], 6, 2, &ending));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3331,"byte_end":3390,"line_start":116,"line_end":116,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3391,"byte_end":3394,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![1, 2, b'\\r', b'\\n', 3, 4, b'\\r', b'\\n', 5, 6], data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3395,"byte_end":3468,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3469,"byte_end":3476,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3577,"byte_end":3580,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<TwoByteLineEnding>::new","value":"pub fn new(u8, u8) -> TwoByteLineEnding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4441,"byte_end":4456,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"SliceLineEnding","qualname":"::SliceLineEnding","value":"SliceLineEnding {  }","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" A byte slice line ending.","sig":null,"attributes":[{"value":"/ A byte slice line ending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3943,"byte_end":3972,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3973,"byte_end":3976,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Gives up some throughput compared to the specialized single/double byte impls, but works with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3977,"byte_end":4074,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ any length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4075,"byte_end":4090,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4091,"byte_end":4094,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4095,"byte_end":4109,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4110,"byte_end":4113,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4114,"byte_end":4121,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use line_wrap::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4122,"byte_end":4143,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4144,"byte_end":4147,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let ending = SliceLineEnding::new(b\"xyz\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4148,"byte_end":4194,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4195,"byte_end":4198,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let mut data = vec![1, 2, 3, 4, 5, 6, 255, 255, 255, 255, 255, 255];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4199,"byte_end":4271,"line_start":159,"line_end":159,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4272,"byte_end":4275,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(6, line_wrap(&mut data[..], 6, 2, &ending));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4276,"byte_end":4335,"line_start":161,"line_end":161,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4336,"byte_end":4339,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![1, 2, b'x', b'y', b'z', 3, 4, b'x', b'y', b'z', 5, 6], data);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4340,"byte_end":4421,"line_start":163,"line_end":163,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4422,"byte_end":4429,"line_start":164,"line_end":164,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4528,"byte_end":4531,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceLineEnding>::new","value":"pub fn new(&[u8]) -> SliceLineEnding","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5547,"byte_end":5556,"line_start":205,"line_end":205,"column_start":8,"column_end":17},"name":"line_wrap","qualname":"::line_wrap","value":"pub fn line_wrap<L: LineEnding>(&mut [u8], usize, usize, &L) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Insert line endings into the input.","sig":null,"attributes":[{"value":"/ Insert line endings into the input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4864,"byte_end":4903,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4904,"byte_end":4907,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Endings are inserted after each complete line, except the last line, even if the last line takes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4908,"byte_end":5008,"line_start":191,"line_end":191,"column_start":1,"column_end":101}},{"value":"/ up the full line width.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5009,"byte_end":5036,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5037,"byte_end":5040,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ - `buf` must be large enough to handle the increased size after endings are inserted. In other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5041,"byte_end":5139,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"/ words, `buf.len() >= input_len / line_len * line_ending.len()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5140,"byte_end":5207,"line_start":195,"line_end":195,"column_start":1,"column_end":68}},{"value":"/ - `input_len` is the length of the unwrapped  in `buf`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5208,"byte_end":5267,"line_start":196,"line_end":196,"column_start":1,"column_end":60}},{"value":"/ - `line_len` is the desired line width without line ending characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5268,"byte_end":5342,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5343,"byte_end":5346,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Returns the number of line ending bytes added.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5347,"byte_end":5397,"line_start":199,"line_end":199,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5398,"byte_end":5401,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5402,"byte_end":5414,"line_start":201,"line_end":201,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5415,"byte_end":5418,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ - When `line_ending.len() == 0`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5419,"byte_end":5454,"line_start":203,"line_end":203,"column_start":1,"column_end":36}},{"value":"/ - When `buf` is too small to contain the original input and its new line endings","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":5455,"byte_end":5539,"line_start":204,"line_end":204,"column_start":1,"column_end":85}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2775,"byte_end":2789,"line_start":83,"line_end":83,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2918,"byte_end":2932,"line_start":91,"line_end":91,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3546,"byte_end":3563,"line_start":125,"line_end":125,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3731,"byte_end":3748,"line_start":134,"line_end":134,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4495,"byte_end":4510,"line_start":169,"line_end":169,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4654,"byte_end":4669,"line_start":177,"line_end":177,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2775,"byte_end":2789,"line_start":83,"line_end":83,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":2918,"byte_end":2932,"line_start":91,"line_end":91,"column_start":21,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":9},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3546,"byte_end":3563,"line_start":125,"line_end":125,"column_start":6,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":3731,"byte_end":3748,"line_start":134,"line_end":134,"column_start":21,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":16},"to":{"krate":0,"index":6}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4495,"byte_end":4510,"line_start":169,"line_end":169,"column_start":10,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\line-wrap-0.1.1\\src\\lib.rs","byte_start":4654,"byte_end":4669,"line_start":177,"line_end":177,"column_start":25,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":6}}]}