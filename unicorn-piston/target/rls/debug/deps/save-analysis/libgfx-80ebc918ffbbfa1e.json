{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=80ebc918ffbbfa1e","-C","extra-filename=-80ebc918ffbbfa1e","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","derivative=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\derivative-f1d8eed6bfa14f88.dll","--extern","draw_state=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libdraw_state-e540f2006a4ccbca.rmeta","--extern","gfx_core=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libgfx_core-11cd54281fbd764a.rmeta","--extern","log=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\liblog-426e82032e1efc24.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libgfx-80ebc918ffbbfa1e.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[13701809869593900509,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":16,"id":{"name":"log","disambiguator":[500290388089087630,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":18,"id":{"name":"derivative","disambiguator":[9372645433822729828,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":19,"id":{"name":"draw_state","disambiguator":[16169372982615771170,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":20,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","num":21,"id":{"name":"gfx_core","disambiguator":[1473727203274723053,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":600,"byte_end":5316,"line_start":15,"line_end":144,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":1284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3712,"byte_end":3718,"line_start":102,"line_end":102,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":21,"index":417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3720,"byte_end":3727,"line_start":102,"line_end":102,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":21,"index":893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3756,"byte_end":3759,"line_start":103,"line_end":103,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3782,"byte_end":3792,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":19,"index":4},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3843,"byte_end":3849,"line_start":108,"line_end":108,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":39},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3851,"byte_end":3856,"line_start":108,"line_end":108,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3887,"byte_end":3888,"line_start":109,"line_end":109,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3927,"byte_end":3933,"line_start":112,"line_end":112,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5780},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3935,"byte_end":3944,"line_start":112,"line_end":112,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1263},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3946,"byte_end":3955,"line_start":112,"line_end":112,"column_start":35,"column_end":44},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3957,"byte_end":3972,"line_start":112,"line_end":112,"column_start":46,"column_end":61},"alias_span":null,"name":"SubmissionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1282},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3974,"byte_end":3990,"line_start":112,"line_end":112,"column_start":63,"column_end":79},"alias_span":null,"name":"SubmissionResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1247},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4008,"byte_end":4019,"line_start":113,"line_end":113,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1248},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4021,"byte_end":4034,"line_start":113,"line_end":113,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5716},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4052,"byte_end":4061,"line_start":114,"line_end":114,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5591},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4063,"byte_end":4075,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5616},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4077,"byte_end":4087,"line_start":114,"line_end":114,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5641},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4089,"byte_end":4101,"line_start":114,"line_end":114,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4103,"byte_end":4117,"line_start":114,"line_end":114,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5691},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4119,"byte_end":4130,"line_start":114,"line_end":114,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":33},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4148,"byte_end":4154,"line_start":115,"line_end":115,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":485},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4156,"byte_end":4162,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":558},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4164,"byte_end":4170,"line_start":115,"line_end":115,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":762},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4172,"byte_end":4179,"line_start":115,"line_end":115,"column_start":40,"column_end":47},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4181,"byte_end":4187,"line_start":115,"line_end":115,"column_start":49,"column_end":55},"alias_span":null,"name":"memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1106},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4189,"byte_end":4196,"line_start":115,"line_end":115,"column_start":57,"column_end":64},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4223,"byte_end":4230,"line_start":116,"line_end":116,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1550},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4232,"byte_end":4249,"line_start":116,"line_end":116,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4251,"byte_end":4266,"line_start":116,"line_end":116,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1593},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4268,"byte_end":4281,"line_start":116,"line_end":116,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4308,"byte_end":4314,"line_start":117,"line_end":117,"column_start":25,"column_end":31},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4333,"byte_end":4347,"line_start":117,"line_end":117,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":4908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4372,"byte_end":4383,"line_start":118,"line_end":118,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":4559},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4385,"byte_end":4397,"line_start":118,"line_end":118,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4419,"byte_end":4435,"line_start":120,"line_end":120,"column_start":19,"column_end":35},"alias_span":null,"name":"CopyBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4437,"byte_end":4460,"line_start":120,"line_end":120,"column_start":37,"column_end":60},"alias_span":null,"name":"CopyBufferTextureResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4462,"byte_end":4471,"line_start":120,"line_end":120,"column_start":62,"column_end":71},"alias_span":null,"name":"CopyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4491,"byte_end":4514,"line_start":121,"line_end":121,"column_start":19,"column_end":42},"alias_span":null,"name":"CopyTextureBufferResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4516,"byte_end":4523,"line_start":121,"line_end":121,"column_start":44,"column_end":51},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4525,"byte_end":4536,"line_start":121,"line_end":121,"column_start":53,"column_end":64},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4556,"byte_end":4574,"line_start":122,"line_end":122,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4592,"byte_end":4597,"line_start":123,"line_end":123,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4599,"byte_end":4614,"line_start":123,"line_end":123,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4616,"byte_end":4627,"line_start":123,"line_end":123,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4644,"byte_end":4657,"line_start":124,"line_end":124,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4682,"byte_end":4694,"line_start":125,"line_end":125,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4696,"byte_end":4710,"line_start":125,"line_end":125,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4712,"byte_end":4727,"line_start":125,"line_end":125,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4751,"byte_end":4765,"line_start":126,"line_end":126,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4767,"byte_end":4784,"line_start":126,"line_end":126,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4786,"byte_end":4792,"line_start":126,"line_end":126,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4794,"byte_end":4803,"line_start":126,"line_end":126,"column_start":66,"column_end":75},"alias_span":null,"name":"RawGlobal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4830,"byte_end":4844,"line_start":127,"line_end":127,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4846,"byte_end":4863,"line_start":127,"line_end":127,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4865,"byte_end":4880,"line_start":127,"line_end":127,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4906,"byte_end":4913,"line_start":128,"line_end":128,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4915,"byte_end":4929,"line_start":128,"line_end":128,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4954,"byte_end":4972,"line_start":129,"line_end":129,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4974,"byte_end":4985,"line_start":129,"line_end":129,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":4987,"byte_end":5000,"line_start":129,"line_end":129,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5024,"byte_end":5036,"line_start":130,"line_end":130,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5038,"byte_end":5053,"line_start":130,"line_end":130,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5055,"byte_end":5066,"line_start":130,"line_end":130,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5068,"byte_end":5076,"line_start":130,"line_end":130,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5068,"byte_end":5076,"line_start":130,"line_end":130,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5078,"byte_end":5085,"line_start":130,"line_end":130,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5110,"byte_end":5116,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":981},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63486,"byte_end":63497,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":21,"index":4069},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63499,"byte_end":63506,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":21,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63508,"byte_end":63518,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":21,"index":983},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63520,"byte_end":63530,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":21,"index":984},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63532,"byte_end":63544,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":542}},{"kind":"Use","ref_id":{"krate":21,"index":4114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50009,"byte_end":50019,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":541}},{"kind":"Use","ref_id":{"krate":21,"index":1459},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50044,"byte_end":50054,"line_start":52,"line_end":52,"column_start":24,"column_end":34},"alias_span":null,"name":"AccessInfo","value":"","parent":{"krate":0,"index":541}},{"kind":"Use","ref_id":{"krate":21,"index":1017},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94631,"byte_end":94636,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":1076}},{"kind":"Use","ref_id":{"krate":21,"index":1062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94653,"byte_end":94664,"line_start":22,"line_end":22,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":1076}},{"kind":"Use","ref_id":{"krate":21,"index":1065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94666,"byte_end":94675,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":1076}},{"kind":"Use","ref_id":{"krate":21,"index":4666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94677,"byte_end":94682,"line_start":22,"line_end":22,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":1076}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":600,"byte_end":5316,"line_start":15,"line_end":144,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":362},{"krate":0,"index":483},{"krate":0,"index":541},{"krate":0,"index":1076},{"krate":0,"index":1104}],"decl_id":null,"docs":" # gfx","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ # gfx","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":624,"byte_end":633,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":634,"byte_end":637,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ An efficient, low-level, bindless graphics API for Rust.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":638,"byte_end":698,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":699,"byte_end":702,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":703,"byte_end":717,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":718,"byte_end":721,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Command buffers and encoders","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":722,"byte_end":757,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":758,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A command buffer is a serialized list of drawing and compute commands.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":762,"byte_end":836,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ Unlike with vulkan, command buffers are not what you use to create commands, but only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":837,"byte_end":926,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/ the result of creating these commands. Gfx, borrowing metal's terminology, uses","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":927,"byte_end":1010,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ encoders to build command buffers. This means that, in general, users of the gfx crate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1011,"byte_end":1101,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ don't manipulate command buffers directly much and interact mostly with encoders.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1102,"byte_end":1187,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Manipulating an `Encoder` in gfx corresponds to interacting with:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1192,"byte_end":1261,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1262,"byte_end":1265,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - a `VkCommandBuffer` in vulkan,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1266,"byte_end":1302,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ - a `MTLCommandEncoder` in metal,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1303,"byte_end":1340,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ - an `ID3D12GraphicsCommandList` in D3D12.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1341,"byte_end":1387,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ OpenGL and earlier versions of D3D don't have an explicit notion of command buffers","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1392,"byte_end":1479,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ or encoders (with the exception of draw indirect commands in late versions of OpenGL,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1480,"byte_end":1569,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/ which can be seen as a GPU-side command buffer). They are managed implicitly by the driver.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1570,"byte_end":1665,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1666,"byte_end":1669,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1670,"byte_end":1678,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1679,"byte_end":1682,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - The [`Encoder` struct documentation](struct.Encoder.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1683,"byte_end":1747,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ - The [`Command buffer` trait documentation](trait.CommandBuffer.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1748,"byte_end":1823,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1824,"byte_end":1827,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Factory","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1828,"byte_end":1842,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The factory is what lets you allocate GPU resources such as buffers and textures.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1847,"byte_end":1932,"line_start":48,"line_end":48,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1933,"byte_end":1936,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Each gfx backend provides its own factory type which implements both:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":1937,"byte_end":2010,"line_start":50,"line_end":50,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The [`Factory` trait](traits/trait.Factory.html#overview).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2015,"byte_end":2079,"line_start":52,"line_end":52,"column_start":1,"column_end":65}},{"value":"/ - The [`FactoryExt` trait](traits/trait.FactoryExt.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2080,"byte_end":2141,"line_start":53,"line_end":53,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2142,"byte_end":2145,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ `gfx::Factory` is roughly equivalent to:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2146,"byte_end":2190,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - `VkDevice` in vulkan,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2195,"byte_end":2222,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ - `ID3D11Device` in D3D11,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2223,"byte_end":2253,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ - `MTLDevice` in metal.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2254,"byte_end":2281,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ OpenGL does not have a notion of factory (resources are created directly off of the global","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2286,"byte_end":2380,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ context). D3D11 has a DXGI factory but it is only used to interface with other processes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2381,"byte_end":2473,"line_start":62,"line_end":62,"column_start":1,"column_end":93}},{"value":"/ and the window manager, resources like textures are usually created using the device.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2474,"byte_end":2563,"line_start":63,"line_end":63,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2564,"byte_end":2567,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Device","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2568,"byte_end":2581,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2582,"byte_end":2585,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See [the `gfx::Device` trait](trait.Device.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2586,"byte_end":2639,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2640,"byte_end":2643,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Pipeline state (PSO)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2644,"byte_end":2671,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2672,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See [the documentation of the gfx::pso module](pso/index.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2676,"byte_end":2743,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2744,"byte_end":2747,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Memory management","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2748,"byte_end":2772,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2773,"byte_end":2776,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Handles internally use atomically reference counted pointers to deal with memory management.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2777,"byte_end":2873,"line_start":75,"line_end":75,"column_start":1,"column_end":97}},{"value":"/ GPU resources are not destroyed right away when all references to them are gone. Instead they","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2874,"byte_end":2971,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ are destroyed the next time [Device::cleanup](trait.Device.html#tymethod.cleanup) is called.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":2972,"byte_end":3068,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3069,"byte_end":3072,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3073,"byte_end":3087,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ See [the examples in the repository](https://github.com/gfx-rs/gfx/tree/master/examples).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3092,"byte_end":3185,"line_start":81,"line_end":81,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3186,"byte_end":3189,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Useful resources","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3190,"byte_end":3212,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3213,"byte_end":3216,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/  - [Documentation for some of the technical terms](doc/terminology/index.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3217,"byte_end":3299,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ used in the API.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3300,"byte_end":3320,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/  - [Learning gfx](https://wiki.alopex.li/LearningGfx) tutorial.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3321,"byte_end":3388,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/  - See [the blog](http://gfx-rs.github.io/) for more explanations and annotated examples.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3389,"byte_end":3482,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3483,"byte_end":3486,"line_start":89,"line_end":89,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3684,"byte_end":3690,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[{"value":"/ public re-exported traits","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":3646,"byte_end":3675,"line_start":100,"line_end":100,"column_start":1,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6406,"byte_end":6420,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6472,"byte_end":6486,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6538,"byte_end":6545,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6634,"byte_end":6647,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6653,"byte_end":6666,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6384,"byte_end":6393,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"pub enum CopyError<S, D> {\n    OutOfSrcBounds {\n            size: S,\n            copy_end: S,\n        },\n    OutOfDstBounds {\n            size: D,\n            copy_end: D,\n        },\n    Overlap {\n            src_offset: usize,\n            dst_offset: usize,\n            size: usize,\n        },\n    NoSrcBindFlag,\n    NoDstBindFlag,\n}","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1131},{"krate":0,"index":1133}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"/ An error occuring in memory copies.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6277,"byte_end":6316,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6317,"byte_end":6339,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6748,"byte_end":6764,"line_start":52,"line_end":52,"column_start":10,"column_end":26},"name":"CopyBufferResult","qualname":"::encoder::CopyBufferResult","value":"Result<(), CopyError<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying a buffer into another buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying a buffer into another buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6671,"byte_end":6738,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6880,"byte_end":6903,"line_start":55,"line_end":55,"column_start":10,"column_end":33},"name":"CopyBufferTextureResult","qualname":"::encoder::CopyBufferTextureResult","value":"Result<(), CopyError<usize, [texture::Size; ]>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying buffer data into a texture.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying buffer data into a texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6805,"byte_end":6870,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":7032,"byte_end":7055,"line_start":58,"line_end":58,"column_start":10,"column_end":33},"name":"CopyTextureBufferResult","qualname":"::encoder::CopyTextureBufferResult","value":"Result<(), CopyError<[texture::Size; ], usize>>","parent":null,"children":[],"decl_id":null,"docs":" Result type returned when copying texture data into a buffer.\n","sig":null,"attributes":[{"value":"/ Result type returned when copying texture data into a buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":6957,"byte_end":7022,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8803,"byte_end":8814,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8866,"byte_end":8883,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8942,"byte_end":8954,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8782,"byte_end":8793,"line_start":101,"line_end":101,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"pub enum UpdateError<T> {\n    OutOfBounds {\n            target: T,\n            source: T,\n        },\n    UnitCountMismatch {\n            target: usize,\n            slice: usize,\n        },\n    InvalidUsage(Usage),\n}","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"/ An error occuring in buffer/texture updates.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8666,"byte_end":8714,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8715,"byte_end":8737,"line_start":99,"line_end":99,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10873,"byte_end":10880,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[{"value":"/ Graphics Command Encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10137,"byte_end":10165,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10166,"byte_end":10169,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10170,"byte_end":10184,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/ The `Encoder` is a wrapper structure around a `CommandBuffer`. It is responsible for sending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10185,"byte_end":10281,"line_start":147,"line_end":147,"column_start":1,"column_end":97}},{"value":"/ commands to the `CommandBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10282,"byte_end":10318,"line_start":148,"line_end":148,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10319,"byte_end":10322,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10323,"byte_end":10352,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ The `Encoder` implements `From<CommandBuffer>`, which is how it is constructed. There is no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10353,"byte_end":10448,"line_start":151,"line_end":151,"column_start":1,"column_end":96}},{"value":"/ cross-API way to create a `CommandBuffer`, however, an API back-end should expose a function to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10449,"byte_end":10548,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ create one in its `Factory` type. See the specific back-end for details on how to construct a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10549,"byte_end":10646,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ `CommandBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10647,"byte_end":10667,"line_start":154,"line_end":154,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10668,"byte_end":10671,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The encoder exposes multiple functions that add commands to its internal `CommandBuffer`. To","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10672,"byte_end":10768,"line_start":156,"line_end":156,"column_start":1,"column_end":97}},{"value":"/ submit these commands to the GPU so they can be rendered, call `flush`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":10769,"byte_end":10844,"line_start":157,"line_end":157,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11925,"byte_end":11930,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"pub fn flush<D>(&mut Self, &mut D) where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed.","sig":null,"attributes":[{"value":"/ Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11413,"byte_end":11506,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ be executed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11511,"byte_end":11527,"line_start":179,"line_end":179,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11532,"byte_end":11535,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling `flush` before swapping buffers is critical as without it the commands of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11540,"byte_end":11629,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/ internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11634,"byte_end":11726,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/ processed. Calling flush too often however will result in a performance hit. It is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11731,"byte_end":11817,"line_start":183,"line_end":183,"column_start":5,"column_end":91}},{"value":"/ generally recommended to call flush once per frame, when all draw calls have been made.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11822,"byte_end":11913,"line_start":184,"line_end":184,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12160,"byte_end":12174,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"flush_no_reset","qualname":"<Encoder<R, C>>::flush_no_reset","value":"pub fn flush_no_reset<D>(&mut Self, &mut D) -> SubmissionResult<()> where\nD: Device<Resources = R, CommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush` but keeps the encoded commands.\n","sig":null,"attributes":[{"value":"/ Like `flush` but keeps the encoded commands.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12100,"byte_end":12148,"line_start":192,"line_end":192,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12479,"byte_end":12500,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"fenced_flush_no_reset","qualname":"<Encoder<R, C>>::fenced_flush_no_reset","value":"pub fn fenced_flush_no_reset<D>(&mut Self, &mut D, Option<handle::Fence<R>>)\n-> SubmissionResult<handle::Fence<R>> where D: Device<Resources = R,\nCommandBuffer = R>","parent":null,"children":[],"decl_id":null,"docs":" Like `flush_no_reset` but places a fence.\n","sig":null,"attributes":[{"value":"/ Like `flush_no_reset` but places a fence.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12422,"byte_end":12467,"line_start":200,"line_end":200,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12961,"byte_end":12966,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"reset","qualname":"<Encoder<R, C>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoded commands.\n","sig":null,"attributes":[{"value":"/ Resets the encoded commands.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":12917,"byte_end":12949,"line_start":211,"line_end":211,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":13140,"byte_end":13151,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"pub fn copy_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>,\n&handle::Buffer<R, T>, usize, usize, usize) -> CopyBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":13092,"byte_end":13128,"line_start":218,"line_end":218,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":15003,"byte_end":15029,"line_start":266,"line_end":266,"column_start":12,"column_end":38},"name":"copy_buffer_to_texture_raw","qualname":"<Encoder<R, C>>::copy_buffer_to_texture_raw","value":"pub fn copy_buffer_to_texture_raw(&mut Self, &handle::RawBuffer<R>, usize,\n&handle::RawTexture<R>, Option<texture::CubeFace>, texture::RawImageInfo)\n-> CopyBufferTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to a texture\n","sig":null,"attributes":[{"value":"/ Copy part of a buffer to a texture","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":14953,"byte_end":14991,"line_start":265,"line_end":265,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":16666,"byte_end":16692,"line_start":313,"line_end":313,"column_start":12,"column_end":38},"name":"copy_texture_to_buffer_raw","qualname":"<Encoder<R, C>>::copy_texture_to_buffer_raw","value":"pub fn copy_texture_to_buffer_raw(&mut Self, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo, &handle::RawBuffer<R>,\nusize) -> CopyTextureBufferResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to a buffer\n","sig":null,"attributes":[{"value":"/ Copy part of a texture to a buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":16616,"byte_end":16654,"line_start":312,"line_end":312,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":18332,"byte_end":18359,"line_start":360,"line_end":360,"column_start":12,"column_end":39},"name":"copy_texture_to_texture_raw","qualname":"<Encoder<R, C>>::copy_texture_to_texture_raw","value":"pub fn copy_texture_to_texture_raw(&mut Self, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo, &handle::RawTexture<R>,\nOption<texture::CubeFace>, texture::RawImageInfo) -> CopyTextureResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a texture to another texture\n","sig":null,"attributes":[{"value":"/ Copy part of a texture to another texture","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":18275,"byte_end":18320,"line_start":359,"line_end":359,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":20324,"byte_end":20337,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"pub fn update_buffer<T: Pod>(&mut Self, &handle::Buffer<R, T>, &[T], usize)\n-> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a slice of data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":20271,"byte_end":20312,"line_start":409,"line_end":409,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":21237,"byte_end":21259,"line_start":434,"line_end":434,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"pub fn update_constant_buffer<T: Copy>(&mut Self, &handle::Buffer<R, T>, &T)","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a single structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":21181,"byte_end":21225,"line_start":433,"line_end":433,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":21716,"byte_end":21730,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"pub fn update_texture<S,\nT>(&mut Self, &handle::Texture<R, T::Surface>, Option<texture::CubeFace>,\ntexture::NewImageInfo, &[S::DataType])\n-> Result<(), UpdateError<[texture::Size; ]>> where S: format::SurfaceTyped,\nS::DataType: Copy, T: format::Formatted<Surface = S>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[{"value":"/ Update the contents of a texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":21667,"byte_end":21704,"line_start":446,"line_end":446,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":24346,"byte_end":24351,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"pub fn clear<T: format::RenderFormat>(&mut Self,\n&handle::RenderTargetView<R, T>, T::View) where\nT::View: Into<command::ClearColor>","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Clears the supplied `RenderTargetView` to the supplied `ClearColor`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":24262,"byte_end":24334,"line_start":509,"line_end":509,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":24700,"byte_end":24711,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"pub fn clear_depth<T: format::DepthFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Depth)","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a depth view with a specified value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":24642,"byte_end":24688,"line_start":516,"line_end":516,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":25034,"byte_end":25047,"line_start":524,"line_end":524,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"pub fn clear_stencil<T: format::StencilFormat>(&mut Self,\n&handle::DepthStencilView<R, T>, Stencil)","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a stencil view with a specified value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":24974,"byte_end":25022,"line_start":523,"line_end":523,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":25424,"byte_end":25428,"line_start":531,"line_end":531,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"pub fn draw<D: pso::PipelineData<R>>(&mut Self, &slice::Slice<R>,\n&pso::PipelineState<R, D::Meta>, &D)","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[{"value":"/ Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":25320,"byte_end":25412,"line_start":530,"line_end":530,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":26937,"byte_end":26952,"line_start":555,"line_end":555,"column_start":12,"column_end":27},"name":"generate_mipmap","qualname":"<Encoder<R, C>>::generate_mipmap","value":"pub fn generate_mipmap<T: format::BlendFormat>(&mut Self,\n&handle::ShaderResourceView<R, T>)","parent":null,"children":[],"decl_id":null,"docs":" Generate a mipmap chain for the given resource view.\n","sig":null,"attributes":[{"value":"/ Generate a mipmap chain for the given resource view.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":26869,"byte_end":26925,"line_start":554,"line_end":554,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":27140,"byte_end":27159,"line_start":560,"line_end":560,"column_start":12,"column_end":31},"name":"generate_mipmap_raw","qualname":"<Encoder<R, C>>::generate_mipmap_raw","value":"pub fn generate_mipmap_raw(&mut Self, &handle::RawShaderResourceView<R>)","parent":null,"children":[],"decl_id":null,"docs":" Untyped version of mipmap generation.\n","sig":null,"attributes":[{"value":"/ Untyped version of mipmap generation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":27087,"byte_end":27128,"line_start":559,"line_end":559,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28678,"byte_end":28685,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":1185},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[{"value":"/ Shader program failed to link.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28639,"byte_end":28673,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28772,"byte_end":28786,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":1185},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[{"value":"/ Unable to create PSO descriptor due to mismatched formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28705,"byte_end":28767,"line_start":37,"line_end":37,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28875,"byte_end":28887,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":1185},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[{"value":"/ Device failed to create the handle give the descriptor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28811,"byte_end":28870,"line_start":39,"line_end":39,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28611,"byte_end":28629,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"pub enum PipelineStateError<S> {\n    Program(ProgramError),\n    DescriptorInit(pso::InitError<S>),\n    DeviceCreate(CreationError),\n}","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[{"value":"/ Error creating a PipelineState","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28532,"byte_end":28566,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31280,"byte_end":31290,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":479}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.\n","sig":null,"attributes":[{"value":"/ This trait is responsible for creating and managing graphics resources, much like the `Factory`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31085,"byte_end":31184,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31185,"byte_end":31269,"line_start":101,"line_end":101,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31453,"byte_end":31473,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"pub fn create_vertex_buffer<T>(&mut Self, &[T]) -> handle::Buffer<R, T> where\nT: Pod + pso::buffer::Structure<format::Format>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31323,"byte_end":31389,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/ A `Slice` will have to manually be constructed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31394,"byte_end":31445,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31969,"byte_end":31988,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"create_index_buffer","qualname":"::factory::FactoryExt::create_index_buffer","value":"pub fn create_index_buffer<T>(&mut Self, T) -> IndexBuffer<R> where\nT: IntoIndexBuffer<R>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates an immutable index buffer from the supplied vertices.","sig":null,"attributes":[{"value":"/ Creates an immutable index buffer from the supplied vertices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31817,"byte_end":31882,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31887,"byte_end":31890,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The paramater `indices` is typically a &[u16] or &[u32] slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31895,"byte_end":31961,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":32289,"byte_end":32320,"line_start":126,"line_end":126,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"pub fn create_vertex_buffer_with_slice<B, V>(&mut Self, &[V], B)\n-> (handle::Buffer<R, V>, Slice<R>) where V: Pod +\npso::buffer::Structure<format::Format>, B: IntoIndexBuffer<R>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[{"value":"/ Creates an immutable vertex buffer from the supplied vertices,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":32156,"byte_end":32222,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ together with a `Slice` from the supplied indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":32227,"byte_end":32281,"line_start":125,"line_end":125,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33186,"byte_end":33208,"line_start":149,"line_end":149,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"pub fn create_constant_buffer<T>(&mut Self, usize) -> handle::Buffer<R, T>\nwhere T: Copy","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a constant buffer for `num` identical elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33107,"byte_end":33178,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33543,"byte_end":33563,"line_start":159,"line_end":159,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"pub fn create_upload_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates an upload buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33475,"byte_end":33535,"line_start":158,"line_end":158,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33933,"byte_end":33955,"line_start":169,"line_end":169,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"pub fn create_download_buffer<T>(&mut Self, usize)\n-> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Creates a download buffer for `num` elements of type `T`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":33864,"byte_end":33925,"line_start":168,"line_end":168,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":34348,"byte_end":34365,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"pub fn create_shader_set(&mut Self, &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":34260,"byte_end":34340,"line_start":178,"line_end":178,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":34961,"byte_end":34987,"line_start":194,"line_end":194,"column_start":8,"column_end":34},"name":"create_shader_set_geometry","qualname":"::factory::FactoryExt::create_shader_set_geometry","value":"pub fn create_shader_set_geometry(&mut Self, &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, geometry, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, geometry, and pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":34829,"byte_end":34900,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":34905,"byte_end":34953,"line_start":193,"line_end":193,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":35767,"byte_end":35797,"line_start":213,"line_end":213,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"pub fn create_shader_set_tessellation(&mut Self, &[u8], &[u8], &[u8], &[u8])\n-> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel\n shader source code. Mainly used for testing.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex, hull, domain, and pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":35631,"byte_end":35706,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ shader source code. Mainly used for testing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":35711,"byte_end":35759,"line_start":212,"line_end":212,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":36712,"byte_end":36724,"line_start":238,"line_end":238,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"pub fn link_program(&mut Self, &[u8], &[u8])\n-> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a basic shader `Program` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":36613,"byte_end":36704,"line_start":237,"line_end":237,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":37105,"byte_end":37126,"line_start":247,"line_end":247,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"pub fn create_pipeline_state<I: pso::PipelineInit>(&mut Self, &ShaderSet<R>,\nPrimitive, state::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.\n","sig":null,"attributes":[{"value":"/ Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":36981,"byte_end":37071,"line_start":245,"line_end":245,"column_start":5,"column_end":95}},{"value":"/ shader `Program`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":37076,"byte_end":37097,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":37980,"byte_end":38008,"line_start":264,"line_end":264,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"pub fn create_pipeline_from_program<'a,\nI: pso::PipelineInit>(&mut Self, &'a handle::Program<R>, Primitive,\nstate::Rasterizer, I)\n-> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":37836,"byte_end":37929,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ primitive type and a `Rasterizer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":37934,"byte_end":37972,"line_start":263,"line_end":263,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":38837,"byte_end":38859,"line_start":278,"line_end":278,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"pub fn create_pipeline_simple<I: pso::PipelineInit>(&mut Self, &[u8], &[u8],\nI) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":38583,"byte_end":38678,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":38683,"byte_end":38776,"line_start":276,"line_end":276,"column_start":5,"column_end":98}},{"value":"/ of rendering triangle faces without culling.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":38781,"byte_end":38829,"line_start":277,"line_end":277,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":39295,"byte_end":39316,"line_start":287,"line_end":287,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"pub fn create_sampler_linear(&mut Self) -> handle::Sampler<R>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[{"value":"/ Create a linear sampler with clamping to border.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":39235,"byte_end":39287,"line_start":286,"line_end":286,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42493,"byte_end":42498,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[{"value":"/ A `Slice` dictates in which and in what order vertices get processed. It is required for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40454,"byte_end":40546,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/ processing a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40547,"byte_end":40568,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40569,"byte_end":40572,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40573,"byte_end":40587,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ A `Slice` in gfx has a different meaning from the term slice as employed more broadly in rust (`&[T]`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40588,"byte_end":40695,"line_start":31,"line_end":31,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40696,"byte_end":40699,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A `Slice` object in essence dictates in what order the vertices in a `VertexBuffer` get","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40700,"byte_end":40791,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ processed. To do this, it contains an internal index-buffer. This `Buffer` is a list of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40792,"byte_end":40883,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ indices into this `VertexBuffer` (vertex-index). A vertex-index of 0 represents the first","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40884,"byte_end":40977,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ vertex in the `VertexBuffer`, a vertex-index of 1 represents the second, 2 represents the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":40978,"byte_end":41071,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ third, and so on. The vertex-indices in the index-buffer are read in order; every vertex-index","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41072,"byte_end":41170,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ tells the pipeline which vertex to process next.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41171,"byte_end":41223,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41224,"byte_end":41227,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Because the same index can re-appear multiple times, duplicate-vertices can be avoided. For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41228,"byte_end":41323,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ instance, if you want to draw a square, you need two triangles, and thus six vertices. Because","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41324,"byte_end":41422,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ the same index can reappear multiple times, this means we can instead use 4 vertices, and 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41423,"byte_end":41518,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/ vertex-indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41519,"byte_end":41538,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41539,"byte_end":41542,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This index-buffer has a few variants. See the `IndexBuffer` documentation for a detailed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41543,"byte_end":41635,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ description.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41636,"byte_end":41652,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41653,"byte_end":41656,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The `start` and `end` fields say where in the index-buffer to start and stop reading.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41657,"byte_end":41746,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/ Setting `start` to 0, and `end` to the length of the index-buffer, will cause the entire","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41747,"byte_end":41839,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ index-buffer to be processed. The `base_vertex` dictates the index of the first vertex","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41840,"byte_end":41930,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"/ in the `VertexBuffer`. This essentially moves the the start of the `VertexBuffer`, to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":41931,"byte_end":42024,"line_start":51,"line_end":51,"column_start":1,"column_end":94}},{"value":"/ vertex with this index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42025,"byte_end":42052,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42053,"byte_end":42056,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Constuction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42057,"byte_end":42085,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ The `Slice` structure can be constructed automatically when using a `Factory` to create a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42086,"byte_end":42179,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ vertex buffer. If needed, it can also be created manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42180,"byte_end":42242,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42243,"byte_end":42246,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A `Slice` is required to process a PSO, as it contains the needed information on in what order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42247,"byte_end":42345,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ to draw which vertices. As such, every `draw` call on an `Encoder` requires a `Slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42346,"byte_end":42436,"line_start":59,"line_end":59,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42636,"byte_end":42641,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer.\n","sig":null,"attributes":[{"value":"/ The start index of the index-buffer. Processing will start at this location in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42519,"byte_end":42605,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ index-buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42610,"byte_end":42627,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42786,"byte_end":42789,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[{"value":"/ The end index in the index-buffer. Processing will stop at this location (exclusive) in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42660,"byte_end":42751,"line_start":65,"line_end":65,"column_start":5,"column_end":96}},{"value":"/ the index buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42756,"byte_end":42777,"line_start":66,"line_end":66,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43030,"byte_end":43041,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[{"value":"/ This is the index of the first vertex in the `VertexBuffer`. This value will be added to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42808,"byte_end":42900,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":42905,"byte_end":43000,"line_start":69,"line_end":69,"column_start":5,"column_end":100}},{"value":"/ base-vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43005,"byte_end":43021,"line_start":70,"line_end":70,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43098,"byte_end":43107,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[{"value":"/ Instancing configuration.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43060,"byte_end":43089,"line_start":72,"line_end":72,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43191,"byte_end":43197,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used.\n","sig":null,"attributes":[{"value":"/ Represents the type of index-buffer used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43137,"byte_end":43182,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43355,"byte_end":43378,"line_start":80,"line_end":80,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"pub fn new_match_vertex_buffer<V>(&handle::Buffer<R, V>) -> Self where\nV: pso::buffer::Structure<Format>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[{"value":"/ Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43252,"byte_end":43343,"line_start":79,"line_end":79,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43780,"byte_end":43794,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"pub fn get_prim_count(&Self, Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[{"value":"/ Calculates the number of primitives of the specified type in this `Slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43690,"byte_end":43768,"line_start":91,"line_end":91,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44619,"byte_end":44627,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"pub fn split_at(&Self, VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[{"value":"/ Divides one slice into two at an index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44381,"byte_end":44424,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44429,"byte_end":44432,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The first will contain the range in the index-buffer [self.start, mid) (excluding the index mid itself) and the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44437,"byte_end":44552,"line_start":111,"line_end":111,"column_start":5,"column_end":120}},{"value":"/ second will contain the range [mid, self.end).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44557,"byte_end":44607,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46096,"byte_end":46100,"line_start":145,"line_end":145,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[{"value":"/ Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45968,"byte_end":46059,"line_start":143,"line_end":143,"column_start":5,"column_end":96}},{"value":"/ get processed in order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46064,"byte_end":46091,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46160,"byte_end":46167,"line_start":147,"line_end":147,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 16 bit indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46106,"byte_end":46155,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46251,"byte_end":46258,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 32 bit indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46197,"byte_end":46246,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45936,"byte_end":45947,"line_start":142,"line_end":142,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"pub enum IndexBuffer<R: Resources> {\n    Auto,\n    Index16(handle::Buffer<R, u16>),\n    Index32(handle::Buffer<R, u32>),\n}","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1244}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[{"value":"/ Type of index-buffer used in a Slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44835,"byte_end":44876,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44877,"byte_end":44880,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The `Auto` variant represents a hypothetical index-buffer from 0 to infinity. In other words,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44881,"byte_end":44978,"line_start":125,"line_end":125,"column_start":1,"column_end":98}},{"value":"/ all vertices get processed in order. Do note that the `Slice`'s `start` and `end` restrictions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":44979,"byte_end":45077,"line_start":126,"line_end":126,"column_start":1,"column_end":99}},{"value":"/ still apply for this variant. To render every vertex in the `VertexBuffer`, you would set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45078,"byte_end":45171,"line_start":127,"line_end":127,"column_start":1,"column_end":94}},{"value":"/ `start` to 0, and `end` to the `VertexBuffer`'s length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45172,"byte_end":45231,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45232,"byte_end":45235,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The `Index*` variants represent an actual `Buffer` with a list of vertex-indices. The numeric","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45236,"byte_end":45333,"line_start":130,"line_end":130,"column_start":1,"column_end":98}},{"value":"/ suffix specifies the amount of bits to use per index. Each of these also contains a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45334,"byte_end":45421,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ base-vertex. This is the index of the first vertex in the `VertexBuffer`. This value will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45422,"byte_end":45518,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/ added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45519,"byte_end":45618,"line_start":133,"line_end":133,"column_start":1,"column_end":100}},{"value":"/ this base-vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45619,"byte_end":45640,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45641,"byte_end":45644,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45645,"byte_end":45674,"line_start":136,"line_end":136,"column_start":1,"column_end":30}},{"value":"/ A `IndexBuffer` can be constructed using the `IntoIndexBuffer` trait, from either a slice or a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45675,"byte_end":45773,"line_start":137,"line_end":137,"column_start":1,"column_end":99}},{"value":"/ `Buffer` of integers, using a factory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45774,"byte_end":45816,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45817,"byte_end":45820,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ An `IndexBuffer` is exclusively used to create `Slice`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":45821,"byte_end":45881,"line_start":140,"line_end":140,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46480,"byte_end":46495,"line_start":158,"line_end":158,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":530}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[{"value":"/ A helper trait to create `IndexBuffers` from different kinds of data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46396,"byte_end":46469,"line_start":157,"line_end":157,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46561,"byte_end":46578,"line_start":160,"line_end":160,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"pub fn into_index_buffer<F: Factory<R> + ?Sized>(Self, &mut F)\n-> IndexBuffer<R>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[{"value":"/ Turns self into an `IndexBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46516,"byte_end":46553,"line_start":159,"line_end":159,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":724},{"krate":0,"index":827},{"krate":0,"index":964},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1644},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1014},{"krate":0,"index":1667},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1692},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1028},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1042},{"krate":0,"index":1046},{"krate":0,"index":1734},{"krate":0,"index":1741},{"krate":0,"index":1745},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1756},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1050},{"krate":0,"index":1056},{"krate":0,"index":1072}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[{"value":"/ A typed high-level graphics pipeline interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48343,"byte_end":48394,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48395,"byte_end":48398,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48399,"byte_end":48413,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ A `PipelineState` holds all information needed to manage a graphics pipeline. It contains","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48414,"byte_end":48507,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ information about the shaders used, and on how to bind variables to these shaders. A ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48508,"byte_end":48597,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ `PipelineState` manifests itself in the form of a Pipeline State Object, or PSO in short.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48598,"byte_end":48691,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48692,"byte_end":48695,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A Pipeline State Object exists out of different components. Every component represents","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48696,"byte_end":48786,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/ a resource handle: a shader input or output/target. The types of these components can be found","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48787,"byte_end":48885,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ in this module's submodules, grouped by category.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48886,"byte_end":48939,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48940,"byte_end":48943,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Before all, a Pipeline State Object must be defined. This is done using the `gfx_pipeline`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":48944,"byte_end":49038,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/ macro. This macro creates three different structures:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49039,"byte_end":49096,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49097,"byte_end":49100,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - The `Init` structure contains the location of every PSO component. During shader linking,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49101,"byte_end":49196,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/   this is used to construct the `Meta` structure. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49197,"byte_end":49251,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ - The `Meta` structure contains the layout of every PSO. Using the `Meta` structure, the right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49252,"byte_end":49350,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/   data is mapped to the right components.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49351,"byte_end":49396,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ - The `Data` structure contains the data of all components, to be sent to the GPU. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49397,"byte_end":49484,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49485,"byte_end":49488,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Construction and Handling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49489,"byte_end":49520,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ A Pipeline State Object is constructed by a factory, from its `Init` structure, a `Rasterizer`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49521,"byte_end":49620,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ a primitive type and a shader program.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49621,"byte_end":49663,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49664,"byte_end":49667,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ After construction an `Encoder` can use the PSO along with a `Data` structure matching that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49668,"byte_end":49763,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ PSO to process the shader pipeline, for instance, using the `draw` method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49764,"byte_end":49842,"line_start":40,"line_end":40,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":1306},{"krate":0,"index":1286},{"krate":0,"index":1290},{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1302},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":1312},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1345},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1342},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1382},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1379},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":633},{"krate":0,"index":644},{"krate":0,"index":657},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":674},{"krate":0,"index":678},{"krate":0,"index":686},{"krate":0,"index":691},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":709},{"krate":0,"index":714},{"krate":0,"index":720}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[{"value":"/ Buffer components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63150,"byte_end":63182,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63677,"byte_end":63686,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":613}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by any struct having the layout described","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63548,"byte_end":63619,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ in the graphics API, like a vertex buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63620,"byte_end":63666,"line_start":28,"line_end":28,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63745,"byte_end":63750,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"pub fn query(&str) -> Option<Element<F>>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[{"value":"/ Get the layout of an element by name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63696,"byte_end":63737,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63988,"byte_end":64006,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[{"value":"/ Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63815,"byte_end":63905,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63928,"byte_end":63976,"line_start":38,"line_end":38,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64220,"byte_end":64234,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ToInstanceRate","qualname":"::pso::buffer::ToInstanceRate","value":"ToInstanceRate","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" Helper trait for `VertexBufferCommon` to support variable instance rate.\n","sig":null,"attributes":[{"value":"/ Helper trait for `VertexBufferCommon` to support variable instance rate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64133,"byte_end":64209,"line_start":45,"line_end":45,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64298,"byte_end":64302,"line_start":48,"line_end":48,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::buffer::ToInstanceRate::Init","value":"type Init;","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":" The associated init type for PSO component.\n","sig":null,"attributes":[{"value":"/ The associated init type for PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64241,"byte_end":64288,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64368,"byte_end":64376,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"get_rate","qualname":"::pso::buffer::ToInstanceRate::get_rate","value":"pub fn get_rate(&Self::Init) -> InstanceRate","parent":{"krate":0,"index":615},"children":[],"decl_id":null,"docs":" Get an actual instance rate value from the init.\n","sig":null,"attributes":[{"value":"/ Get an actual instance rate value from the init.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64308,"byte_end":64360,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64476,"byte_end":64488,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"NonInstanced","qualname":"::pso::buffer::NonInstanced","value":"pub enum NonInstanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-vertex attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-vertex attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64416,"byte_end":64466,"line_start":53,"line_end":53,"column_start":1,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64554,"byte_end":64563,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"Instanced","qualname":"::pso::buffer::Instanced","value":"pub enum Instanced { }","parent":null,"children":[],"decl_id":null,"docs":" Helper phantom type for per-instance attributes.\n","sig":null,"attributes":[{"value":"/ Helper phantom type for per-instance attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64492,"byte_end":64544,"line_start":55,"line_end":55,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65032,"byte_end":65044,"line_start":75,"line_end":75,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, NonInstanced>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.","sig":null,"attributes":[{"value":"/ Vertex buffer component. Advanced per vertex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64928,"byte_end":64977,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64978,"byte_end":64981,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64982,"byte_end":64998,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64999,"byte_end":65022,"line_start":74,"line_end":74,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65181,"byte_end":65195,"line_start":78,"line_end":78,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, Instanced>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[{"value":"/ Instance buffer component. Same as the vertex buffer but advances per instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65088,"byte_end":65171,"line_start":77,"line_end":77,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65499,"byte_end":65514,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.","sig":null,"attributes":[{"value":"/ Raw vertex/instance buffer component. Can be used when the formats of vertex attributes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65236,"byte_end":65327,"line_start":80,"line_end":80,"column_start":1,"column_end":92}},{"value":"/ are not known at compile time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65328,"byte_end":65362,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65363,"byte_end":65366,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ - init: `(&[&str, element], stride, inst_rate)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65367,"byte_end":65418,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65419,"byte_end":65442,"line_start":84,"line_end":84,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65751,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.","sig":null,"attributes":[{"value":"/ Constant buffer component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65556,"byte_end":65586,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65587,"byte_end":65590,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65591,"byte_end":65630,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65631,"byte_end":65654,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65677,"byte_end":65725,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66049,"byte_end":66066,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.","sig":null,"attributes":[{"value":"/ Raw constant buffer component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65890,"byte_end":65924,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65925,"byte_end":65928,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65929,"byte_end":65968,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65969,"byte_end":65992,"line_start":103,"line_end":103,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66407,"byte_end":66413,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed\n into the shader, which is not enclosed into any constant buffer.","sig":null,"attributes":[{"value":"/ Global (uniform) constant component. Describes a free-standing value passed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66106,"byte_end":66185,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ into the shader, which is not enclosed into any constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66186,"byte_end":66254,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66255,"byte_end":66258,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66259,"byte_end":66300,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ - data: `T` = value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66301,"byte_end":66324,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66347,"byte_end":66395,"line_start":113,"line_end":113,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66812,"byte_end":66821,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"RawGlobal","qualname":"::pso::buffer::RawGlobal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw global (uniform) constant component. Describes a free-standing value\n passed into the shader, which is not enclosed in any constant buffer.","sig":null,"attributes":[{"value":"/ Raw global (uniform) constant component. Describes a free-standing value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66524,"byte_end":66600,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ passed into the shader, which is not enclosed in any constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66601,"byte_end":66674,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66675,"byte_end":66678,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66679,"byte_end":66720,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ - data: `UniformValue` = value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66721,"byte_end":66755,"line_start":124,"line_end":124,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":1419},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1416},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1456},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1493},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":770},{"krate":0,"index":777},{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":792},{"krate":0,"index":799},{"krate":0,"index":804},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":822}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[{"value":"/ Resource components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76176,"byte_end":76210,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76726,"byte_end":76740,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.","sig":null,"attributes":[{"value":"/ Shader resource component (SRV). Typically is a view into some texture,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76456,"byte_end":76531,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ but can also be a buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76532,"byte_end":76561,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76562,"byte_end":76565,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76566,"byte_end":76607,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ - data: `ShaderResourceView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76608,"byte_end":76643,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76666,"byte_end":76714,"line_start":30,"line_end":30,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77059,"byte_end":77076,"line_start":42,"line_end":42,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).","sig":null,"attributes":[{"value":"/ Raw (untyped) shader resource (SRV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76848,"byte_end":76888,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76889,"byte_end":76892,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource. This may change in the future.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76893,"byte_end":76966,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ - data: `RawShaderResourceView`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76967,"byte_end":77002,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77469,"byte_end":77484,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.","sig":null,"attributes":[{"value":"/ Unordered access component (UAV). A writable resource (texture/buffer)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77121,"byte_end":77195,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ with no defined access order across simultaneously executing shaders.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77196,"byte_end":77269,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ Supported on DX10 and higher.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77270,"byte_end":77303,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77304,"byte_end":77307,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77308,"byte_end":77349,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ - data: `UnorderedAccessView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77350,"byte_end":77386,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77409,"byte_end":77457,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77762,"byte_end":77769,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.","sig":null,"attributes":[{"value":"/ Sampler component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77616,"byte_end":77638,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77639,"byte_end":77642,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77643,"byte_end":77683,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ - data: `Sampler`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77684,"byte_end":77705,"line_start":61,"line_end":61,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78313,"byte_end":78327,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.","sig":null,"attributes":[{"value":"/ A convenience type for a texture paired with a sampler.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77809,"byte_end":77868,"line_start":65,"line_end":65,"column_start":1,"column_end":60}},{"value":"/ It only makes sense for DX9 class hardware, where every texture by default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77869,"byte_end":77947,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ is bundled with a sampler, hence they are represented by the same name.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77948,"byte_end":78023,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ In DX10 and higher samplers are totally separated from the textures.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78024,"byte_end":78096,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78097,"byte_end":78100,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the sampler/texture (assuming they match)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78101,"byte_end":78171,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ - data: (`ShaderResourceView<T>`, `Sampler`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78172,"byte_end":78220,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"derivative(Clone, Debug, Eq, Hash(bound = \"\"), PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78243,"byte_end":78301,"line_start":73,"line_end":73,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":1513},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1510},{"krate":0,"index":1533},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1570},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1567},{"krate":0,"index":1589},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1586},{"krate":0,"index":1608},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":873},{"krate":0,"index":880},{"krate":0,"index":885},{"krate":0,"index":892},{"krate":0,"index":897},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":916},{"krate":0,"index":921},{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":940},{"krate":0,"index":945},{"krate":0,"index":951},{"krate":0,"index":955},{"krate":0,"index":960}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[{"value":"/ Render target components for a PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":83872,"byte_end":83911,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84372,"byte_end":84384,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.","sig":null,"attributes":[{"value":"/ Render target component. Typically points to a color-formatted texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84136,"byte_end":84211,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84212,"byte_end":84215,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - init: `&str` = name of the target","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84216,"byte_end":84255,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84256,"byte_end":84289,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84312,"byte_end":84360,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84727,"byte_end":84738,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.","sig":null,"attributes":[{"value":"/ Render target component with active blending mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84492,"byte_end":84546,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84547,"byte_end":84550,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `ColorMask`, `Blend` = blending state)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84551,"byte_end":84610,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84611,"byte_end":84644,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84667,"byte_end":84715,"line_start":41,"line_end":41,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85065,"byte_end":85080,"line_start":53,"line_end":53,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.","sig":null,"attributes":[{"value":"/ Raw (untyped) render target component with optional blending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84844,"byte_end":84909,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84910,"byte_end":84913,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84914,"byte_end":84974,"line_start":50,"line_end":50,"column_start":1,"column_end":61}},{"value":"/ - data: `RawRenderTargetView`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84975,"byte_end":85008,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85284,"byte_end":85295,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.","sig":null,"attributes":[{"value":"/ Depth target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85102,"byte_end":85129,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85130,"byte_end":85133,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - init: `Depth` = depth state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85134,"byte_end":85167,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ - data: `DepthStencilView<T>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85168,"byte_end":85201,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85224,"byte_end":85272,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85614,"byte_end":85627,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.","sig":null,"attributes":[{"value":"/ Stencil target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85380,"byte_end":85409,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85410,"byte_end":85413,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - init: `Stencil` = stencil state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85414,"byte_end":85451,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85452,"byte_end":85531,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85554,"byte_end":85602,"line_start":71,"line_end":71,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85979,"byte_end":85997,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.","sig":null,"attributes":[{"value":"/ Depth + stencil target component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85712,"byte_end":85749,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85750,"byte_end":85753,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ - init: (`Depth` = depth state, `Stencil` = stencil state)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85754,"byte_end":85816,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85817,"byte_end":85896,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"derivative(Clone, Debug, Eq, Hash, PartialEq)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85919,"byte_end":85967,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86255,"byte_end":86262,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.","sig":null,"attributes":[{"value":"/ Scissor component. Sets up the scissor test for rendering.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86082,"byte_end":86144,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86145,"byte_end":86148,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86149,"byte_end":86165,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/ - data: `Rect` = target area","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86166,"byte_end":86198,"line_start":91,"line_end":91,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86446,"byte_end":86454,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.","sig":null,"attributes":[{"value":"/ Blend reference component. Sets up the reference color for blending.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86271,"byte_end":86343,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86344,"byte_end":86347,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86348,"byte_end":86364,"line_start":97,"line_end":97,"column_start":1,"column_end":17}},{"value":"/ - data: `ColorValue`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86365,"byte_end":86389,"line_start":98,"line_end":98,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":990}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[{"value":"/ Combine slice data with pipeline state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":92993,"byte_end":93036,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93037,"byte_end":93040,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Suitable for use when PSO is always used with the same one slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93041,"byte_end":93110,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93236,"byte_end":93242,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[{"value":"/ Slice-PSO bundle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93203,"byte_end":93224,"line_start":8,"line_end":8,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93304,"byte_end":93309,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[{"value":"/ Slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93286,"byte_end":93295,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93352,"byte_end":93355,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[{"value":"/ Pipeline state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93325,"byte_end":93343,"line_start":12,"line_end":12,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93417,"byte_end":93421,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[{"value":"/ Pipeline data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93391,"byte_end":93408,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93529,"byte_end":93532,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"pub fn new(Slice<R>, PipelineState<R, Data::Meta>, Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[{"value":"/ Create new Bundle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93496,"byte_end":93517,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93763,"byte_end":93769,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"pub fn encode<C>(&Self, &mut Encoder<R, C>) where C: CommandBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[{"value":"/ Draw bundle using encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93721,"byte_end":93751,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1644},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50451,"byte_end":50461,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"/ A complete set of raw data that needs to be specified at run-time","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50057,"byte_end":50126,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ whenever we draw something with a PSO. This is what \"data\" struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50127,"byte_end":50196,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ gets transformed into when we call `encoder.draw(...)` with it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50197,"byte_end":50264,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ It doesn't have any typing information, since PSO knows what","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50265,"byte_end":50329,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ format and layout to expect from each resource.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50330,"byte_end":50381,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50382,"byte_end":50404,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50488,"byte_end":50502,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50540,"byte_end":50556,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50603,"byte_end":50619,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50680,"byte_end":50694,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50739,"byte_end":50754,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50800,"byte_end":50808,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50848,"byte_end":50861,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50898,"byte_end":50908,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50939,"byte_end":50946,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":51051,"byte_end":51054,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"pub fn new() -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[{"value":"/ Create an empty data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":51010,"byte_end":51039,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":51577,"byte_end":51582,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[{"value":"/ Clear all contained data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":51536,"byte_end":51565,"line_start":88,"line_end":88,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52168,"byte_end":52176,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[{"value":"/ Element not found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52141,"byte_end":52163,"line_start":105,"line_end":105,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52218,"byte_end":52224,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset { name, shader_offset, code_offset }","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[{"value":"/ Element offset mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52185,"byte_end":52213,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52531,"byte_end":52537,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format { name, shader_format, code_format }","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[{"value":"/ Element format mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52498,"byte_end":52526,"line_start":116,"line_end":116,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52119,"byte_end":52131,"line_start":104,"line_end":104,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"pub enum ElementError<S> {\n    NotFound(S),\n    Offset {\n            name: S,\n            shader_offset: c::pso::ElemOffset,\n            code_offset: c::pso::ElemOffset,\n        },\n    Format {\n            name: S,\n            shader_format: c::shade::ConstFormat,\n            code_format: c::shade::ConstFormat,\n        },\n}","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1676}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[{"value":"/ Error matching an element inside the constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52017,"byte_end":52074,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54626,"byte_end":54638,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[{"value":"/ Vertex attribute mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54591,"byte_end":54621,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54708,"byte_end":54722,"line_start":174,"line_end":174,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[{"value":"/ Constant buffer mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54674,"byte_end":54703,"line_start":173,"line_end":173,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54790,"byte_end":54804,"line_start":176,"line_end":176,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<c::shade::CompatibilityError>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[{"value":"/ Global constant mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54756,"byte_end":54785,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54890,"byte_end":54902,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[{"value":"/ Shader resource view mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54851,"byte_end":54885,"line_start":177,"line_end":177,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54963,"byte_end":54976,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[{"value":"/ Unordered access view mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54923,"byte_end":54958,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55023,"byte_end":55030,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[{"value":"/ Sampler mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54997,"byte_end":55018,"line_start":181,"line_end":181,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55082,"byte_end":55093,"line_start":184,"line_end":184,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[{"value":"/ Pixel target mismatch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55051,"byte_end":55077,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54572,"byte_end":54581,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"pub enum InitError<S> {\n    VertexImport(S, Option<c::format::Format>),\n    ConstantBuffer(S, Option<ElementError<S>>),\n    GlobalConstant(S, Option<c::shade::CompatibilityError>),\n    ResourceView(S, Option<()>),\n    UnorderedView(S, Option<()>),\n    Sampler(S, Option<()>),\n    PixelExport(S, Option<c::format::Format>),\n}","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1710},{"krate":0,"index":1714},{"krate":0,"index":1718}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[{"value":"/ Failure to initilize the link between the shader and the data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":54461,"byte_end":54527,"line_start":168,"line_end":168,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":57994,"byte_end":58006,"line_start":250,"line_end":250,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ A service trait implemented by the \"init\" structure of PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":57920,"byte_end":57983,"line_start":249,"line_end":249,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58056,"byte_end":58060,"line_start":252,"line_end":252,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58013,"byte_end":58046,"line_start":251,"line_end":251,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58247,"byte_end":58254,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"pub fn link_to<'s>(&Self, &mut Descriptor, &'s c::shade::ProgramInfo)\n-> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[{"value":"/ Attempt to map a PSO descriptor to a give shader program,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58066,"byte_end":58127,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ represented by `ProgramInfo`. Returns an instance of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58132,"byte_end":58192,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ \"meta\" struct upon successful mapping.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58197,"byte_end":58239,"line_start":255,"line_end":255,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58442,"byte_end":58454,"line_start":261,"line_end":261,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ a service trait implemented the \"data\" structure of PSO.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58371,"byte_end":58431,"line_start":260,"line_end":260,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58521,"byte_end":58525,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58478,"byte_end":58511,"line_start":262,"line_end":262,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58651,"byte_end":58658,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"pub fn bake_to(&Self, &mut RawDataSet<R>, &Self::Meta,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[{"value":"/ Dump all the contained data into the raw data set,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58531,"byte_end":58585,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/ given the mapping (\"meta\"), and a handle manager.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58590,"byte_end":58643,"line_start":265,"line_end":265,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58963,"byte_end":58976,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"/ A strongly typed Pipleline State Object. See the module documentation for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":58811,"byte_end":58906,"line_start":273,"line_end":273,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59219,"byte_end":59222,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"pub fn new(c::handle::RawPipelineState<R>, c::Primitive, M)\n-> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[{"value":"/ Create a new PSO from a raw handle and the \"meta\" instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59144,"byte_end":59207,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59421,"byte_end":59431,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"pub fn get_handle(&Self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[{"value":"/ Get a raw handle reference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59378,"byte_end":59409,"line_start":284,"line_end":284,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59636,"byte_end":59644,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"pub fn get_meta(&Self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[{"value":"/ Get a \"meta\" struct reference. Can be used by the user to check","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59502,"byte_end":59569,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ what resources are actually used and what not.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59574,"byte_end":59624,"line_start":289,"line_end":289,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59790,"byte_end":59798,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[{"value":"/ The \"link\" logic portion of a PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59685,"byte_end":59733,"line_start":295,"line_end":295,"column_start":1,"column_end":49}},{"value":"/ Defines the input data for the component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59734,"byte_end":59779,"line_start":296,"line_end":296,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59893,"byte_end":59897,"line_start":299,"line_end":299,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[{"value":"/ The assotiated \"init\" type - a member of the PSO \"init\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59816,"byte_end":59883,"line_start":298,"line_end":298,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59948,"byte_end":59951,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[{"value":"/ Create a new empty data link.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59907,"byte_end":59940,"line_start":300,"line_end":300,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60029,"byte_end":60038,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"pub fn is_active(&Self) -> bool","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[{"value":"/ Check if this link is actually used by the shader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59967,"byte_end":60021,"line_start":302,"line_end":302,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60139,"byte_end":60157,"line_start":305,"line_end":305,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"pub fn link_vertex_buffer(&mut Self, c::pso::BufferIndex, &Self::Init)\n-> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex buffer containing multiple attributes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60059,"byte_end":60131,"line_start":304,"line_end":304,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60336,"byte_end":60346,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"pub fn link_input(&mut Self, &c::shade::AttributeVar, &Self::Init)\n-> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex attribute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60284,"byte_end":60328,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60544,"byte_end":60564,"line_start":311,"line_end":311,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"pub fn link_constant_buffer<'b>(&mut Self, &'b c::shade::ConstantBufferVar,\n&Self::Init)\n-> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a constant buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60493,"byte_end":60536,"line_start":310,"line_end":310,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60793,"byte_end":60813,"line_start":314,"line_end":314,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"pub fn link_global_constant(&mut Self, &c::shade::ConstVar, &Self::Init)\n-> Option<Result<(), c::shade::CompatibilityError>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a global constant.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60742,"byte_end":60785,"line_start":313,"line_end":313,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61021,"byte_end":61032,"line_start":317,"line_end":317,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"pub fn link_output(&mut Self, &c::shade::OutputVar, &Self::Init)\n-> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an output render target (RTV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":60958,"byte_end":61013,"line_start":316,"line_end":316,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61241,"byte_end":61259,"line_start":320,"line_end":320,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"pub fn link_depth_stencil(&mut Self, &Self::Init)\n-> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a depth-stencil target (DSV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61179,"byte_end":61233,"line_start":319,"line_end":319,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61419,"byte_end":61437,"line_start":323,"line_end":323,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"pub fn link_resource_view(&mut Self, &c::shade::TextureVar, &Self::Init)\n-> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a shader resource (SRV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61362,"byte_end":61411,"line_start":322,"line_end":322,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61652,"byte_end":61671,"line_start":326,"line_end":326,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"pub fn link_unordered_view(&mut Self, &c::shade::UnorderedVar, &Self::Init)\n-> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an unordered access (UAV).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61593,"byte_end":61644,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61874,"byte_end":61886,"line_start":329,"line_end":329,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"pub fn link_sampler(&mut Self, &c::shade::SamplerVar, &Self::Init)\n-> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a sampler.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":61831,"byte_end":61866,"line_start":328,"line_end":328,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62047,"byte_end":62059,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"pub fn link_scissor(&mut Self) -> bool","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[{"value":"/ Attempt to enable scissor test.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62004,"byte_end":62039,"line_start":331,"line_end":331,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62217,"byte_end":62225,"line_start":337,"line_end":337,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[{"value":"/ The \"bind\" logic portion of the PSO component.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62092,"byte_end":62142,"line_start":335,"line_end":335,"column_start":1,"column_end":51}},{"value":"/ Defines how the user data translates into the raw data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62143,"byte_end":62206,"line_start":336,"line_end":336,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62326,"byte_end":62330,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"data\" type - a member of the PSO \"data\" struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62249,"byte_end":62316,"line_start":338,"line_end":338,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62390,"byte_end":62397,"line_start":341,"line_end":341,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"pub fn bind_to(&Self, &mut RawDataSet<R>, &Self::Data,\n&mut c::handle::Manager<R>, &mut AccessInfo<R>)","parent":{"krate":0,"index":1072},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[{"value":"/ Dump the given data into the raw data set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":62336,"byte_end":62382,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1799},{"krate":0,"index":1803},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1099},{"krate":0,"index":1101}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[{"value":"/ Shaders","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5251,"byte_end":5262,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ Shader parameter handling.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94512,"byte_end":94542,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94719,"byte_end":94728,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94686,"byte_end":94708,"line_start":24,"line_end":24,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94744,"byte_end":94751,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"pub fn convert(Self) -> core::UniformValue","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95880,"byte_end":95886,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the vertex shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95836,"byte_end":95875,"line_start":70,"line_end":70,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95959,"byte_end":95963,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to compile the hull shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the hull shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95917,"byte_end":95954,"line_start":72,"line_end":72,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1810},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96038,"byte_end":96044,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to compile the domain shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the domain shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95994,"byte_end":96033,"line_start":74,"line_end":74,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96121,"byte_end":96129,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::shade::ProgramError::Geometry","value":"ProgramError::Geometry(core::CreateShaderError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to compile the geometry shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the geometry shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96075,"byte_end":96116,"line_start":76,"line_end":76,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96203,"byte_end":96208,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the pixel shader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96160,"byte_end":96198,"line_start":78,"line_end":78,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96262,"byte_end":96266,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1803},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[{"value":"/ Unable to link","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96239,"byte_end":96257,"line_start":80,"line_end":80,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95817,"byte_end":95829,"line_start":69,"line_end":69,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"pub enum ProgramError {\n    Vertex(core::CreateShaderError),\n    Hull(core::CreateShaderError),\n    Domain(core::CreateShaderError),\n    Geometry(core::CreateShaderError),\n    Pixel(core::CreateShaderError),\n    Link(core::CreateProgramError),\n}","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[{"value":"/ Program linking error","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":95747,"byte_end":95772,"line_start":67,"line_end":67,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1109},{"krate":0,"index":1116},{"krate":0,"index":1117}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[{"value":"/ Convenience macros","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5278,"byte_end":5300,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/ Various helper macros.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\macros\\mod.rs","byte_start":98491,"byte_end":98517,"line_start":15,"line_end":15,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":7272,"byte_end":7281,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8111,"byte_end":8120,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":9211,"byte_end":9222,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":9802,"byte_end":9813,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11072,"byte_end":11079,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11393,"byte_end":11400,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28954,"byte_end":28972,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":29417,"byte_end":29435,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":29880,"byte_end":29898,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30666,"byte_end":30684,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30813,"byte_end":30831,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30968,"byte_end":30986,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":39563,"byte_end":39564,"line_start":295,"line_end":295,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43237,"byte_end":43242,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46318,"byte_end":46329,"line_start":152,"line_end":152,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46690,"byte_end":46701,"line_start":163,"line_end":163,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63988,"byte_end":64006,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64592,"byte_end":64604,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64724,"byte_end":64733,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64836,"byte_end":64848,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65751,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66407,"byte_end":66413,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":68269,"byte_end":68287,"line_start":165,"line_end":165,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69122,"byte_end":69140,"line_start":191,"line_end":191,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69440,"byte_end":69455,"line_start":202,"line_end":202,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69805,"byte_end":69820,"line_start":214,"line_end":214,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":70576,"byte_end":70591,"line_start":237,"line_end":237,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":71161,"byte_end":71175,"line_start":256,"line_end":256,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":72432,"byte_end":72446,"line_start":288,"line_end":288,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":72764,"byte_end":72781,"line_start":299,"line_end":299,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":73333,"byte_end":73350,"line_start":318,"line_end":318,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":73864,"byte_end":73870,"line_start":333,"line_end":333,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":74397,"byte_end":74403,"line_start":348,"line_end":348,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":74731,"byte_end":74740,"line_start":360,"line_end":360,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":75240,"byte_end":75249,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76726,"byte_end":76740,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77469,"byte_end":77484,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78313,"byte_end":78327,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78390,"byte_end":78404,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78842,"byte_end":78856,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":79186,"byte_end":79203,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":79736,"byte_end":79753,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":80263,"byte_end":80278,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":80833,"byte_end":80848,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":81368,"byte_end":81375,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":81840,"byte_end":81847,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":82280,"byte_end":82294,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":82883,"byte_end":82897,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84372,"byte_end":84384,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84727,"byte_end":84738,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85284,"byte_end":85295,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85614,"byte_end":85627,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85979,"byte_end":85997,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86508,"byte_end":86520,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":87111,"byte_end":87123,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":87566,"byte_end":87577,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":88066,"byte_end":88077,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":88405,"byte_end":88420,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89171,"byte_end":89186,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89614,"byte_end":89625,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89938,"byte_end":89949,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":90373,"byte_end":90386,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":90703,"byte_end":90716,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":91226,"byte_end":91244,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":91582,"byte_end":91600,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92079,"byte_end":92086,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92293,"byte_end":92300,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92576,"byte_end":92584,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92720,"byte_end":92728,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93474,"byte_end":93480,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50990,"byte_end":51000,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52859,"byte_end":52871,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":53495,"byte_end":53507,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":53827,"byte_end":53839,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55166,"byte_end":55175,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55844,"byte_end":55853,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":56713,"byte_end":56722,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59118,"byte_end":59131,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96319,"byte_end":96331,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96968,"byte_end":96980,"line_start":97,"line_end":97,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5246,"byte_end":5249,"line_start":140,"line_end":140,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":541}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49852,"byte_end":49858,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":542}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49868,"byte_end":49876,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":724}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49886,"byte_end":49892,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":827}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":49902,"byte_end":49908,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":964}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5271,"byte_end":5276,"line_start":142,"line_end":142,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1076}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src/lib.rs","byte_start":5309,"byte_end":5315,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1104}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":7272,"byte_end":7281,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":8111,"byte_end":8120,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1118},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":9211,"byte_end":9222,"line_start":121,"line_end":121,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":9802,"byte_end":9813,"line_start":134,"line_end":134,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1151},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11072,"byte_end":11079,"line_start":166,"line_end":166,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\encoder.rs","byte_start":11393,"byte_end":11400,"line_start":177,"line_end":177,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":28954,"byte_end":28972,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":29417,"byte_end":29435,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":29880,"byte_end":29898,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1185},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30666,"byte_end":30684,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30813,"byte_end":30831,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":30968,"byte_end":30986,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":31306,"byte_end":31313,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":21,"index":417},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\factory.rs","byte_start":39563,"byte_end":39564,"line_start":295,"line_end":295,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":482},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":43237,"byte_end":43242,"line_start":78,"line_end":78,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46318,"byte_end":46329,"line_start":152,"line_end":152,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\slice.rs","byte_start":46690,"byte_end":46701,"line_start":163,"line_end":163,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1237},"to":{"krate":0,"index":528}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":63988,"byte_end":64006,"line_start":39,"line_end":39,"column_start":12,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1306},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64592,"byte_end":64604,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":21,"index":984},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64724,"byte_end":64733,"line_start":62,"line_end":62,"column_start":25,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":64836,"byte_end":64848,"line_start":66,"line_end":66,"column_start":25,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":615}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":65737,"byte_end":65751,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":66407,"byte_end":66413,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":68269,"byte_end":68287,"line_start":165,"line_end":165,"column_start":20,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69122,"byte_end":69140,"line_start":191,"line_end":191,"column_start":42,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69440,"byte_end":69455,"line_start":202,"line_end":202,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":69805,"byte_end":69820,"line_start":214,"line_end":214,"column_start":27,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1312},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":70576,"byte_end":70591,"line_start":237,"line_end":237,"column_start":36,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1312},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":71161,"byte_end":71175,"line_start":256,"line_end":256,"column_start":18,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1345},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":72432,"byte_end":72446,"line_start":288,"line_end":288,"column_start":17,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1345},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":72764,"byte_end":72781,"line_start":299,"line_end":299,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":73333,"byte_end":73350,"line_start":318,"line_end":318,"column_start":36,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":73864,"byte_end":73870,"line_start":333,"line_end":333,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1382},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":74397,"byte_end":74403,"line_start":348,"line_end":348,"column_start":50,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1382},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":74731,"byte_end":74740,"line_start":360,"line_end":360,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1387},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\buffer.rs","byte_start":75240,"byte_end":75249,"line_start":379,"line_end":379,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1387},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":76726,"byte_end":76740,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":77469,"byte_end":77484,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78313,"byte_end":78327,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78390,"byte_end":78404,"line_start":76,"line_end":76,"column_start":30,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1419},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":78842,"byte_end":78856,"line_start":90,"line_end":90,"column_start":39,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1419},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":79186,"byte_end":79203,"line_start":101,"line_end":101,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1424},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":79736,"byte_end":79753,"line_start":120,"line_end":120,"column_start":36,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1424},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":80263,"byte_end":80278,"line_start":135,"line_end":135,"column_start":30,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1456},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":80833,"byte_end":80848,"line_start":154,"line_end":154,"column_start":39,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1456},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":81368,"byte_end":81375,"line_start":169,"line_end":169,"column_start":27,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":81840,"byte_end":81847,"line_start":188,"line_end":188,"column_start":36,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":82280,"byte_end":82294,"line_start":202,"line_end":202,"column_start":30,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1493},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\resource.rs","byte_start":82883,"byte_end":82897,"line_start":219,"line_end":219,"column_start":39,"column_end":53},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1493},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84372,"byte_end":84384,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1513},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":84727,"byte_end":84738,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1533},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85284,"byte_end":85295,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85614,"byte_end":85627,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1589},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":85979,"byte_end":85997,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":86508,"byte_end":86520,"line_start":102,"line_end":102,"column_start":52,"column_end":64},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1513},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":87111,"byte_end":87123,"line_start":122,"line_end":122,"column_start":39,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1513},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":87566,"byte_end":87577,"line_start":136,"line_end":136,"column_start":51,"column_end":62},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1533},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":88066,"byte_end":88077,"line_start":150,"line_end":150,"column_start":39,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1533},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":88405,"byte_end":88420,"line_start":161,"line_end":161,"column_start":27,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1538},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89171,"byte_end":89186,"line_start":185,"line_end":185,"column_start":36,"column_end":51},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1538},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89614,"byte_end":89625,"line_start":199,"line_end":199,"column_start":51,"column_end":62},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1570},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":89938,"byte_end":89949,"line_start":208,"line_end":208,"column_start":39,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1570},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":90373,"byte_end":90386,"line_start":220,"line_end":220,"column_start":53,"column_end":66},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":90703,"byte_end":90716,"line_start":229,"line_end":229,"column_start":39,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":91226,"byte_end":91244,"line_start":242,"line_end":242,"column_start":58,"column_end":76},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1608},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":91582,"byte_end":91600,"line_start":251,"line_end":251,"column_start":39,"column_end":57},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1608},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92079,"byte_end":92086,"line_start":265,"line_end":265,"column_start":27,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1612},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92293,"byte_end":92300,"line_start":272,"line_end":272,"column_start":36,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1612},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92576,"byte_end":92584,"line_start":283,"line_end":283,"column_start":27,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1629},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\target.rs","byte_start":92720,"byte_end":92728,"line_start":289,"line_end":289,"column_start":36,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1629},"to":{"krate":0,"index":1072}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\bundle.rs","byte_start":93474,"byte_end":93480,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":50990,"byte_end":51000,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":52859,"byte_end":52871,"line_start":127,"line_end":127,"column_start":53,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":53495,"byte_end":53507,"line_start":139,"line_end":139,"column_start":46,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1667},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":53827,"byte_end":53839,"line_start":149,"line_end":149,"column_start":42,"column_end":54},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55166,"byte_end":55175,"line_start":187,"line_end":187,"column_start":39,"column_end":48},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1692},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":55844,"byte_end":55853,"line_start":202,"line_end":202,"column_start":53,"column_end":62},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1692},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":56713,"byte_end":56722,"line_start":218,"line_end":218,"column_start":46,"column_end":55},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1692},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59118,"byte_end":59131,"line_start":278,"line_end":278,"column_start":26,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\pso\\mod.rs","byte_start":59804,"byte_end":59809,"line_start":297,"line_end":297,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1056}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":94730,"byte_end":94734,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":1096}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96319,"byte_end":96331,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1803},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.17.1\\src\\shade.rs","byte_start":96968,"byte_end":96980,"line_start":97,"line_end":97,"column_start":16,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1803},"to":{"krate":1,"index":2546}}]}