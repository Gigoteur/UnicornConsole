{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rusttype","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=759bb0eed90d8121","-C","extra-filename=-759bb0eed90d8121","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","arrayvec=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libarrayvec-99bd032693cae3f7.rmeta","--extern","ordered_float=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libordered_float-d0697c04d7ba18a8.rmeta","--extern","stb_truetype=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libstb_truetype-248d61633bafff0d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\librusttype-759bb0eed90d8121.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[14216853576750950339,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":16,"id":{"name":"arrayvec","disambiguator":[15380054828325915991,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":17,"id":{"name":"nodrop","disambiguator":[303718488329170677,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":18,"id":{"name":"stb_truetype","disambiguator":[6582870245709060237,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":19,"id":{"name":"stb_truetype","disambiguator":[5334836707864170802,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":20,"id":{"name":"byteorder","disambiguator":[7485636545642705259,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":21,"id":{"name":"ordered_float","disambiguator":[15862414569971140278,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":22,"id":{"name":"num_traits","disambiguator":[18223906395058910274,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":23,"id":{"name":"num_traits","disambiguator":[2243077793919202242,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":24,"id":{"name":"unreachable","disambiguator":[792856834899429791,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","num":25,"id":{"name":"void","disambiguator":[4537518572324230509,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":34773,"line_start":1,"line_end":834,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5272,"byte_end":5276,"line_start":103,"line_end":103,"column_start":20,"column_end":24},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5278,"byte_end":5283,"line_start":103,"line_end":103,"column_start":26,"column_end":31},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5285,"byte_end":5290,"line_start":103,"line_end":103,"column_start":33,"column_end":38},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5292,"byte_end":5298,"line_start":103,"line_end":103,"column_start":40,"column_end":46},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5300,"byte_end":5306,"line_start":103,"line_end":103,"column_start":48,"column_end":54},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5308,"byte_end":5312,"line_start":103,"line_end":103,"column_start":56,"column_end":60},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5314,"byte_end":5319,"line_start":103,"line_end":103,"column_start":62,"column_end":67},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":34773,"line_start":1,"line_end":834,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":92},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":671},{"krate":0,"index":676},{"krate":0,"index":253},{"krate":0,"index":680},{"krate":0,"index":689},{"krate":0,"index":259},{"krate":0,"index":265},{"krate":0,"index":693},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":274},{"krate":0,"index":298}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"/ RustType is a pure Rust alternative to libraries like FreeType.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The current capabilities of RustType:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":72,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":114,"byte_end":117,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * Reading TrueType formatted fonts and font collections. This includes `*.ttf` as well as a subset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":118,"byte_end":220,"line_start":5,"line_end":5,"column_start":1,"column_end":103}},{"value":"/   of `*.otf` font files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":221,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/ * Retrieving glyph shapes and commonly used properties for a font and its glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":250,"byte_end":335,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ * Laying out glyphs horizontally using horizontal and vertical metrics, and glyph-pair-specific kerning.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":336,"byte_end":444,"line_start":8,"line_end":8,"column_start":1,"column_end":109}},{"value":"/ * Rasterising glyphs with sub-pixel positioning using an accurate analytical algorithm","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":445,"byte_end":535,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/   (not based on sampling).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":536,"byte_end":566,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ * Managing a font cache on the GPU with the `gpu_cache` module. This keeps recently used glyph renderings","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":567,"byte_end":676,"line_start":11,"line_end":11,"column_start":1,"column_end":110}},{"value":"/   in a dynamic cache in GPU memory to minimise texture uploads per-frame. It also allows you keep the draw","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":677,"byte_end":787,"line_start":12,"line_end":12,"column_start":1,"column_end":111}},{"value":"/   call count for text very low, as all glyphs are kept in one GPU texture.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":788,"byte_end":866,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":867,"byte_end":870,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Notable things that RustType does not support *yet*:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":871,"byte_end":927,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":928,"byte_end":931,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * OpenType formatted fonts that are not just TrueType fonts (OpenType is a superset of TrueType). Notably","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":932,"byte_end":1041,"line_start":17,"line_end":17,"column_start":1,"column_end":110}},{"value":"/   there is no support yet for cubic Bezier curves used in glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1042,"byte_end":1111,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ * Font hinting.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1112,"byte_end":1131,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ * Ligatures of any kind.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1132,"byte_end":1160,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ * Some less common TrueType sub-formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1161,"byte_end":1205,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ * Right-to-left and vertical text layout.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1206,"byte_end":1251,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1252,"byte_end":1255,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1256,"byte_end":1277,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1278,"byte_end":1281,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Add the following to your Cargo.toml:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1282,"byte_end":1323,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1328,"byte_end":1339,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1340,"byte_end":1358,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ rusttype = \"0.4.1\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1359,"byte_end":1381,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1382,"byte_end":1389,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1390,"byte_end":1393,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ To hit the ground running with RustType, look at the `simple.rs` example supplied with the crate. It","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1394,"byte_end":1498,"line_start":33,"line_end":33,"column_start":1,"column_end":105}},{"value":"/ demonstrates loading a font file, rasterising an arbitrary string, and displaying the result as ASCII art.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1499,"byte_end":1609,"line_start":34,"line_end":34,"column_start":1,"column_end":111}},{"value":"/ If you prefer to just look at the documentation, the entry point for loading fonts is `FontCollection`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1610,"byte_end":1717,"line_start":35,"line_end":35,"column_start":1,"column_end":108}},{"value":"/ from which you can access individual fonts, then their glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1718,"byte_end":1784,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1785,"byte_end":1788,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Glyphs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1789,"byte_end":1801,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1802,"byte_end":1805,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The glyph API uses wrapper structs to augment a glyph with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1806,"byte_end":1868,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ information such as scaling and positioning, making relevant methods that make use of this information","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1869,"byte_end":1975,"line_start":41,"line_end":41,"column_start":1,"column_end":107}},{"value":"/ available as appropriate. For example, given a `Glyph` `glyph` obtained directly from a `Font`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":1976,"byte_end":2075,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2076,"byte_end":2079,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2080,"byte_end":2093,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2094,"byte_end":2116,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ # let glyph: Glyph<'static> = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2117,"byte_end":2168,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ // One of the few things you can do with an unsized, positionless glyph is get its id.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2169,"byte_end":2259,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ let id = glyph.id();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2260,"byte_end":2284,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let glyph = glyph.scaled(Scale::uniform(10.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2285,"byte_end":2336,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ // Now glyph is a ScaledGlyph, you can do more with it, as well as what you can do with Glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2337,"byte_end":2435,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ // For example, you can access the correctly scaled horizontal metrics for the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2436,"byte_end":2525,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ let h_metrics = glyph.h_metrics();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2526,"byte_end":2564,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ let glyph = glyph.positioned(point(5.0, 3.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2565,"byte_end":2615,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ // Now glyph is a PositionedGlyph, and you can do even more with it, e.g. drawing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2616,"byte_end":2702,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/ glyph.draw(|x, y, v| {}); // In this case the pixel values are not used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2703,"byte_end":2779,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2780,"byte_end":2787,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2788,"byte_end":2791,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Unicode terminology","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2792,"byte_end":2817,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2818,"byte_end":2821,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate uses terminology for computerised typography as specified by the Unicode standard. If you are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2822,"byte_end":2930,"line_start":60,"line_end":60,"column_start":1,"column_end":109}},{"value":"/ not sure of the differences between a code point, a character, and a glyph, you may want to check the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":2931,"byte_end":3036,"line_start":61,"line_end":61,"column_start":1,"column_end":106}},{"value":"/ [official Unicode glossary](http://unicode.org/glossary/), or alternatively, here's my take on it from a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3037,"byte_end":3145,"line_start":62,"line_end":62,"column_start":1,"column_end":109}},{"value":"/ practical perspective:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3146,"byte_end":3172,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3173,"byte_end":3176,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * A character is what you would conventionally call a single symbol, independent of its appearance or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3177,"byte_end":3282,"line_start":65,"line_end":65,"column_start":1,"column_end":106}},{"value":"/   representation in a particular font. Examples include `a`, `A`, `ä`, `å`, `1`, `*`, `Ω`, etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3283,"byte_end":3385,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ * A Unicode code point is the particular number that the Unicode standard associates with a particular","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3386,"byte_end":3492,"line_start":67,"line_end":67,"column_start":1,"column_end":107}},{"value":"/   character.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3493,"byte_end":3509,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/   Note however that code points also exist for things not conventionally thought of as characters by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3510,"byte_end":3614,"line_start":69,"line_end":69,"column_start":1,"column_end":105}},{"value":"/   themselves, but can be combined to form characters, such as diacritics like accents. These","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3615,"byte_end":3711,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/   \"characters\" are known in Unicode as \"combining characters\".","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3712,"byte_end":3778,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/   E.g., a diaeresis (`¨`) has the code point U+0308. If this code point follows the code point U+0055","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3779,"byte_end":3885,"line_start":72,"line_end":72,"column_start":1,"column_end":106}},{"value":"/   (the letter `u`), this sequence represents the character `ü`. Note that there is also a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3886,"byte_end":3980,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/   single codepoint for `ü`, U+00FC. This means that what visually looks like the same string can have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":3981,"byte_end":4087,"line_start":74,"line_end":74,"column_start":1,"column_end":106}},{"value":"/   multiple different Unicode representations. Some fonts will have glyphs (see below) for one sequence of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4088,"byte_end":4197,"line_start":75,"line_end":75,"column_start":1,"column_end":110}},{"value":"/   codepoints, but not another that has the same meaning. To deal with this problem it is recommended to use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4198,"byte_end":4309,"line_start":76,"line_end":76,"column_start":1,"column_end":112}},{"value":"/   Unicode normalisation, as provided by, for example, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4310,"byte_end":4371,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/   [unicode-normalization](http://crates.io/crates/unicode-normalization) crate, to convert to code point","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4372,"byte_end":4480,"line_start":78,"line_end":78,"column_start":1,"column_end":109}},{"value":"/   sequences that work with the font in question. Typically a font is more likely to support a single code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4481,"byte_end":4590,"line_start":79,"line_end":79,"column_start":1,"column_end":110}},{"value":"/   point vs. a sequence with the same meaning, so the best normalisation to use is \"canonical recomposition\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4591,"byte_end":4703,"line_start":80,"line_end":80,"column_start":1,"column_end":113}},{"value":"/   known as NFC in the normalisation crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4704,"byte_end":4750,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"/ * A glyph is a particular font's shape to draw the character for a particular Unicode code point. This will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4751,"byte_end":4862,"line_start":82,"line_end":82,"column_start":1,"column_end":112}},{"value":"/   have its own identifying number unique to the font, its ID.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":4863,"byte_end":4928,"line_start":83,"line_end":83,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35466,"byte_end":35471,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A point in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":34790,"byte_end":34858,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":34859,"byte_end":34862,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Legal operations on points are addition and subtraction by vectors, and subtraction between points, to give","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":34863,"byte_end":34974,"line_start":5,"line_end":5,"column_start":1,"column_end":112}},{"value":"/ a vector representing the offset between the two points. Combined with the legal operations on vectors,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":34975,"byte_end":35082,"line_start":6,"line_end":6,"column_start":1,"column_end":108}},{"value":"/ meaningful manipulations of vectors and points can be performed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35083,"byte_end":35151,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35152,"byte_end":35155,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For example, to interpolate between two points by a factor `t`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35156,"byte_end":35223,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35224,"byte_end":35227,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35228,"byte_end":35235,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35236,"byte_end":35258,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/ # let t = 0.5; let p0 = point(0.0, 0.0); let p1 = point(0.0, 0.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35259,"byte_end":35329,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ let interpolated_point = p0 + (p1 - p0) * t;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35330,"byte_end":35378,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35379,"byte_end":35386,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35485,"byte_end":35486,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35499,"byte_end":35500,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35818,"byte_end":35824,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[{"value":"/ A vector in 2-dimensional space, with each dimension of type `N`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35507,"byte_end":35576,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35577,"byte_end":35580,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Legal operations on vectors are addition and subtraction by vectors, addition by points (to give points),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35581,"byte_end":35690,"line_start":24,"line_end":24,"column_start":1,"column_end":110}},{"value":"/ and multiplication and division by scalars.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35691,"byte_end":35738,"line_start":25,"line_end":25,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35838,"byte_end":35839,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35852,"byte_end":35853,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35918,"byte_end":35923,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"pub fn point<N>(N, N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Point`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35859,"byte_end":35910,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36040,"byte_end":36046,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"pub fn vector<N>(N, N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"/ A convenience function for generating `Vector`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":35980,"byte_end":36032,"line_start":35,"line_end":35,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38706,"byte_end":38710,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[{"value":"/ A straight line between two points, `p[0]` and `p[1]`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38584,"byte_end":38641,"line_start":138,"line_end":138,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38721,"byte_end":38722,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; 2]","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38901,"byte_end":38906,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":405}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.\n","sig":null,"attributes":[{"value":"/ A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38742,"byte_end":38836,"line_start":143,"line_end":143,"column_start":1,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38917,"byte_end":38918,"line_start":146,"line_end":146,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; 3]","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39099,"byte_end":39103,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.\n","sig":null,"attributes":[{"value":"/ A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38938,"byte_end":39019,"line_start":148,"line_end":148,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39117,"byte_end":39120,"line_start":151,"line_end":151,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39140,"byte_end":39143,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39212,"byte_end":39217,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"pub fn width(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39281,"byte_end":39287,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"pub fn height(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":44592,"byte_end":44600,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item=Self>;","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":44632,"byte_end":44635,"line_start":7,"line_end":7,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item=Self::PerSlice>;","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5545,"byte_end":5559,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the collection is not validated.\n This structure may or may not own the font data.\n","sig":null,"attributes":[{"value":"/ A collection of fonts read straight from a font file's data. The data in the collection is not validated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5347,"byte_end":5456,"line_start":106,"line_end":106,"column_start":1,"column_end":110}},{"value":"/ This structure may or may not own the font data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5457,"byte_end":5509,"line_start":107,"line_end":107,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5668,"byte_end":5672,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":498}],"decl_id":null,"docs":" A single font. This may or may not own the font data.\n","sig":null,"attributes":[{"value":"/ A single font. This may or may not own the font data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5582,"byte_end":5639,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6057,"byte_end":6062,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6078,"byte_end":6083,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6035,"byte_end":6046,"line_start":120,"line_end":120,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"pub enum SharedBytes<'a> { ByRef(&'a [u8]), ByArc(Arc<[u8]>), }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":507}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared\n reference to externally owned data, or managed by reference counting. `SharedBytes` can be\n conveniently used with `From` and `Into`, and dereferences to the contained bytes.\n","sig":null,"attributes":[{"value":"/ `SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5722,"byte_end":5819,"line_start":116,"line_end":116,"column_start":1,"column_end":98}},{"value":"/ reference to externally owned data, or managed by reference counting. `SharedBytes` can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5820,"byte_end":5914,"line_start":117,"line_end":117,"column_start":1,"column_end":95}},{"value":"/ conveniently used with `From` and `Into`, and dereferences to the contained bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":5915,"byte_end":6001,"line_start":118,"line_end":118,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7048,"byte_end":7057,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[{"value":"/ Represents a Unicode code point.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6932,"byte_end":6968,"line_start":155,"line_end":155,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7058,"byte_end":7065,"line_start":157,"line_end":157,"column_start":22,"column_end":29},"name":"0","qualname":"::Codepoint::0","value":"u32","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7438,"byte_end":7447,"line_start":165,"line_end":165,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::CodepointOrGlyphId::Codepoint","value":"CodepointOrGlyphId::Codepoint(Codepoint)","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7464,"byte_end":7471,"line_start":166,"line_end":166,"column_start":5,"column_end":12},"name":"GlyphId","qualname":"::CodepointOrGlyphId::GlyphId","value":"CodepointOrGlyphId::GlyphId(GlyphId)","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7413,"byte_end":7431,"line_start":164,"line_end":164,"column_start":10,"column_end":28},"name":"CodepointOrGlyphId","qualname":"::CodepointOrGlyphId","value":"pub enum CodepointOrGlyphId { Codepoint(Codepoint), GlyphId(GlyphId), }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":542}],"decl_id":null,"docs":" Represents either a Unicode code point, or a glyph identifier for a font.","sig":null,"attributes":[{"value":"/ Represents either a Unicode code point, or a glyph identifier for a font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7068,"byte_end":7145,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7146,"byte_end":7149,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This is used as input for functions that can accept code points or glyph identifiers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7150,"byte_end":7239,"line_start":160,"line_end":160,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7240,"byte_end":7243,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ You typically won't construct this type directly, instead relying on `From` and `Into`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7244,"byte_end":7335,"line_start":162,"line_end":162,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7748,"byte_end":7755,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to\n the correct glyph in a font other than the one that it was obtained from.\n","sig":null,"attributes":[{"value":"/ Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7483,"byte_end":7590,"line_start":168,"line_end":168,"column_start":1,"column_end":108}},{"value":"/ the correct glyph in a font other than the one that it was obtained from.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7591,"byte_end":7668,"line_start":169,"line_end":169,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7756,"byte_end":7763,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"name":"0","qualname":"::GlyphId::0","value":"u32","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8162,"byte_end":8167,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or\n it may be a standalone glyph that owns the data needed by it.","sig":null,"attributes":[{"value":"/ A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7766,"byte_end":7872,"line_start":172,"line_end":172,"column_start":1,"column_end":107}},{"value":"/ it may be a standalone glyph that owns the data needed by it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7873,"byte_end":7938,"line_start":173,"line_end":173,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7939,"byte_end":7942,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ A `Glyph` does not have an inherent scale or position associated with it. To augment a glyph with a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":7943,"byte_end":8046,"line_start":175,"line_end":175,"column_start":1,"column_end":104}},{"value":"/ size, give it a scale using `scaled`. You can then position it using `positioned`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8047,"byte_end":8133,"line_start":176,"line_end":176,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8332,"byte_end":8347,"line_start":189,"line_end":189,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8358,"byte_end":8360,"line_start":190,"line_end":190,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8375,"byte_end":8382,"line_start":191,"line_end":191,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8411,"byte_end":8428,"line_start":192,"line_end":192,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8443,"byte_end":8457,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8477,"byte_end":8482,"line_start":194,"line_end":194,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8756,"byte_end":8764,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph\n from the previous one in a string when laying a string out horizontally.\n","sig":null,"attributes":[{"value":"/ The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8510,"byte_end":8614,"line_start":196,"line_end":196,"column_start":1,"column_end":105}},{"value":"/ from the previous one in a string when laying a string out horizontally.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8615,"byte_end":8691,"line_start":197,"line_end":197,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8880,"byte_end":8893,"line_start":201,"line_end":201,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from the origin of this glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset that the origin of the next glyph should be from the origin of this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8771,"byte_end":8871,"line_start":200,"line_end":200,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9013,"byte_end":9030,"line_start":203,"line_end":203,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.\n","sig":null,"attributes":[{"value":"/ The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":8904,"byte_end":9004,"line_start":202,"line_end":202,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9314,"byte_end":9322,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of\n vertical space to give a line of text, and for computing the vertical offset between successive lines.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9091,"byte_end":9195,"line_start":206,"line_end":206,"column_start":1,"column_end":105}},{"value":"/ vertical space to give a line of text, and for computing the vertical offset between successive lines.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9196,"byte_end":9302,"line_start":207,"line_end":207,"column_start":1,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9437,"byte_end":9443,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the baseline. Typically positive.\n","sig":null,"attributes":[{"value":"/ The highest point that any glyph in the font extends to above the baseline. Typically positive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9329,"byte_end":9428,"line_start":209,"line_end":209,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9561,"byte_end":9568,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the baseline. Typically negative.\n","sig":null,"attributes":[{"value":"/ The lowest point that any glyph in the font extends to below the baseline. Typically negative.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9454,"byte_end":9552,"line_start":211,"line_end":211,"column_start":5,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9742,"byte_end":9750,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the next. This is of\n course only a guideline given by the font's designers.\n","sig":null,"attributes":[{"value":"/ The gap to leave between the descent of one line and the ascent of the next. This is of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9579,"byte_end":9670,"line_start":213,"line_end":213,"column_start":5,"column_end":96}},{"value":"/ course only a guideline given by the font's designers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9675,"byte_end":9733,"line_start":214,"line_end":214,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10419,"byte_end":10430,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for information that depends\n on the scale of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with scaling information. You can query such a glyph for information that depends","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10256,"byte_end":10359,"line_start":240,"line_end":240,"column_start":1,"column_end":104}},{"value":"/ on the scale of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10360,"byte_end":10390,"line_start":241,"line_end":241,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10694,"byte_end":10709,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query such a glyph for information\n that depends on the scale and position of the glyph.\n","sig":null,"attributes":[{"value":"/ A glyph augmented with positioning and scaling information. You can query such a glyph for information","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10502,"byte_end":10608,"line_start":248,"line_end":248,"column_start":1,"column_end":107}},{"value":"/ that depends on the scale and position of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10609,"byte_end":10665,"line_start":249,"line_end":249,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11266,"byte_end":11271,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical\n scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the\n face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor\n *f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.\n","sig":null,"attributes":[{"value":"/ Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10795,"byte_end":10896,"line_start":256,"line_end":256,"column_start":1,"column_end":102}},{"value":"/ scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10897,"byte_end":11004,"line_start":257,"line_end":257,"column_start":1,"column_end":108}},{"value":"/ face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11005,"byte_end":11114,"line_start":258,"line_end":258,"column_start":1,"column_end":110}},{"value":"/ *f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11115,"byte_end":11201,"line_start":259,"line_end":259,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11319,"byte_end":11320,"line_start":263,"line_end":263,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Horizontal scale, in pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11278,"byte_end":11310,"line_start":262,"line_end":262,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11370,"byte_end":11371,"line_start":265,"line_end":265,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[{"value":"/ Vertical scale, in pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11331,"byte_end":11361,"line_start":264,"line_end":264,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11467,"byte_end":11474,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"pub fn uniform(f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"/ Uniform scaling, equivalent to `Scale { x: s, y: s }`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11397,"byte_end":11455,"line_start":269,"line_end":269,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12359,"byte_end":12369,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"pub fn from_bytes<B: Into<SharedBytes>>(B) -> FontCollection","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded from a font file.\n This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`).\n As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.\n","sig":null,"attributes":[{"value":"/ Constructs a font collection from an array of bytes, typically loaded from a font file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12082,"byte_end":12173,"line_start":295,"line_end":295,"column_start":5,"column_end":96}},{"value":"/ This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12178,"byte_end":12246,"line_start":296,"line_end":296,"column_start":5,"column_end":73}},{"value":"/ As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12251,"byte_end":12347,"line_start":297,"line_end":297,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12756,"byte_end":12765,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"pub fn into_font(Self) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" In the common case that a font collection consists of only one font, this function\n consumes this font collection and turns it into a font. If this is not the case,\n or the font is not valid (read: not supported by this library), `None` is returned.\n","sig":null,"attributes":[{"value":"/ In the common case that a font collection consists of only one font, this function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12477,"byte_end":12563,"line_start":301,"line_end":301,"column_start":5,"column_end":91}},{"value":"/ consumes this font collection and turns it into a font. If this is not the case,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12568,"byte_end":12652,"line_start":302,"line_end":302,"column_start":5,"column_end":89}},{"value":"/ or the font is not valid (read: not supported by this library), `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12657,"byte_end":12744,"line_start":303,"line_end":303,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":13678,"byte_end":13685,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"pub fn font_at(&Self, usize) -> Option<Font>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is valid.\n The produced font borrows the font data that is either borrowed or owned by this font collection.\n","sig":null,"attributes":[{"value":"/ Gets the font at index `i` in the font collection, if it exists and is valid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":13479,"byte_end":13560,"line_start":320,"line_end":320,"column_start":5,"column_end":86}},{"value":"/ The produced font borrows the font data that is either borrowed or owned by this font collection.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":13565,"byte_end":13666,"line_start":321,"line_end":321,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14016,"byte_end":14026,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"pub fn into_fonts(Self) -> IntoFontsIter","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.\n","sig":null,"attributes":[{"value":"/ Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":13910,"byte_end":14004,"line_start":327,"line_end":327,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14166,"byte_end":14179,"line_start":335,"line_end":335,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14696,"byte_end":14705,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"pub fn v_metrics(&Self, Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs\n in the font.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14519,"byte_end":14623,"line_start":350,"line_end":350,"column_start":5,"column_end":109}},{"value":"/ in the font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14628,"byte_end":14644,"line_start":351,"line_end":351,"column_start":5,"column_end":21}},{"value":"/ See `VMetrics` for more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14649,"byte_end":14684,"line_start":352,"line_end":352,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15012,"byte_end":15030,"line_start":361,"line_end":361,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"pub fn v_metrics_unscaled(&Self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ Get the unscaled VMetrics for this font, shared by all glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14894,"byte_end":14960,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ See `VMetrics` for more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14965,"byte_end":15000,"line_start":360,"line_end":360,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15173,"byte_end":15185,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"pub fn units_per_em(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[{"value":"/ Returns the units per EM square of this font","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15113,"byte_end":15161,"line_start":365,"line_end":365,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15396,"byte_end":15407,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"pub fn glyph_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this font will always be in the range\n `0..self.glyph_count()`\n","sig":null,"attributes":[{"value":"/ The number of glyphs present in this font. Glyph identifiers for this font will always be in the range","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15246,"byte_end":15352,"line_start":370,"line_end":370,"column_start":5,"column_end":111}},{"value":"/ `0..self.glyph_count()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15357,"byte_end":15384,"line_start":371,"line_end":371,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15850,"byte_end":15855,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"pub fn glyph<C: Into<CodepointOrGlyphId>>(&Self, C) -> Option<Glyph>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id for this font.\n If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),\n otherwise `None` is returned.","sig":null,"attributes":[{"value":"/ Returns the corresponding glyph for a Unicode code point or a glyph id for this font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15481,"byte_end":15570,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15575,"byte_end":15685,"line_start":377,"line_end":377,"column_start":5,"column_end":115}},{"value":"/ otherwise `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15690,"byte_end":15723,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15728,"byte_end":15731,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Note that code points without corresponding glyphs in this font map to the \"undef\" glyph, glyph 0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":15736,"byte_end":15838,"line_start":380,"line_end":380,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16536,"byte_end":16546,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"pub fn glyphs_for<I: Iterator>(&Self, I) -> GlyphIter<, I> where\nI::Item: Into<CodepointOrGlyphId>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[{"value":"/ A convenience function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16254,"byte_end":16281,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16286,"byte_end":16289,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that produces the glyphs corresponding to the code points or glyph ids produced","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16294,"byte_end":16397,"line_start":391,"line_end":391,"column_start":5,"column_end":108}},{"value":"/ by the given iterator `itr`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16402,"byte_end":16434,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16439,"byte_end":16442,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This is equivalent in behaviour to `itr.map(|c| font.glyph(c).unwrap())`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16447,"byte_end":16524,"line_start":394,"line_end":394,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16783,"byte_end":16800,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"pub fn font_name_strings(&Self) -> tt::FontNameIter<, SharedBytes>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the names for this font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16718,"byte_end":16771,"line_start":401,"line_end":401,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18907,"byte_end":18913,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"pub fn layout<'b, 'c>(&'b Self, &'c str, Scale, Point<f32>) -> LayoutIter","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally. It does not take control\n characters like line breaks into account, as treatment of these is likely to depend on the application.","sig":null,"attributes":[{"value":"/ A convenience function for laying out glyphs for a string horizontally. It does not take control","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":16899,"byte_end":16999,"line_start":405,"line_end":405,"column_start":5,"column_end":105}},{"value":"/ characters like line breaks into account, as treatment of these is likely to depend on the application.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17004,"byte_end":17111,"line_start":406,"line_end":406,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17116,"byte_end":17119,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Note that this function does not perform Unicode normalisation. Composite characters (such as ö","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17124,"byte_end":17224,"line_start":408,"line_end":408,"column_start":5,"column_end":104}},{"value":"/ constructed from two code points, ¨ and o), will not be normalised to single code points. So if a font","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17229,"byte_end":17336,"line_start":409,"line_end":409,"column_start":5,"column_end":111}},{"value":"/ does not contain a glyph for each separate code point, but does contain one for the normalised single","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17341,"byte_end":17446,"line_start":410,"line_end":410,"column_start":5,"column_end":110}},{"value":"/ code point (which is common), the desired glyph will not be produced, despite being present in the font.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17451,"byte_end":17559,"line_start":411,"line_end":411,"column_start":5,"column_end":113}},{"value":"/ Deal with this by performing Unicode normalisation on the input string before passing it to `layout`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17564,"byte_end":17669,"line_start":412,"line_end":412,"column_start":5,"column_end":110}},{"value":"/ The crate [unicode-normalization](http://crates.io/crates/unicode-normalization) is perfect for this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17674,"byte_end":17778,"line_start":413,"line_end":413,"column_start":5,"column_end":109}},{"value":"/ purpose.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17783,"byte_end":17795,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17800,"byte_end":17803,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Calling this function is equivalent to a longer sequence of operations involving `glyphs_for`, e.g.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17808,"byte_end":17911,"line_start":416,"line_end":416,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17916,"byte_end":17919,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17924,"byte_end":17937,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17942,"byte_end":17964,"line_start":419,"line_end":419,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":17969,"byte_end":18035,"line_start":420,"line_end":420,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18040,"byte_end":18080,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/ font.layout(\"Hello World!\", scale, start)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18085,"byte_end":18130,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18135,"byte_end":18142,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18147,"byte_end":18154,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18159,"byte_end":18162,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ produces an iterator with behaviour equivalent to the following:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18167,"byte_end":18235,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18240,"byte_end":18243,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18248,"byte_end":18261,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ # use rusttype::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18266,"byte_end":18288,"line_start":429,"line_end":429,"column_start":5,"column_end":27}},{"value":"/ # let (scale, start) = (Scale::uniform(0.0), point(0.0, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18293,"byte_end":18359,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ # let font: Font = unimplemented!();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18364,"byte_end":18404,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/ font.glyphs_for(\"Hello World!\".chars())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18409,"byte_end":18452,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/     .scan((None, 0.0), |&mut (mut last, mut x), g| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18457,"byte_end":18513,"line_start":433,"line_end":433,"column_start":5,"column_end":61}},{"value":"/         let g = g.scaled(scale);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18518,"byte_end":18554,"line_start":434,"line_end":434,"column_start":5,"column_end":41}},{"value":"/         let w = g.h_metrics().advance_width","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18559,"byte_end":18606,"line_start":435,"line_end":435,"column_start":5,"column_end":52}},{"value":"/             + last.map(|last| font.pair_kerning(scale, last, g.id())).unwrap_or(0.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18611,"byte_end":18700,"line_start":436,"line_end":436,"column_start":5,"column_end":94}},{"value":"/         let next = g.positioned(start + vector(x, 0.0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18705,"byte_end":18765,"line_start":437,"line_end":437,"column_start":5,"column_end":65}},{"value":"/         last = Some(next.id());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18770,"byte_end":18805,"line_start":438,"line_end":438,"column_start":5,"column_end":40}},{"value":"/         x += w;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18810,"byte_end":18829,"line_start":439,"line_end":439,"column_start":5,"column_end":24}},{"value":"/         Some(next)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18834,"byte_end":18856,"line_start":440,"line_end":440,"column_start":5,"column_end":27}},{"value":"/     })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18861,"byte_end":18871,"line_start":441,"line_end":441,"column_start":5,"column_end":15}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18876,"byte_end":18883,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":18888,"byte_end":18895,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":19319,"byte_end":19331,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"pub fn pair_kerning<A, B>(&Self, Scale, A, B) -> f32 where\nA: Into<CodepointOrGlyphId>, B: Into<CodepointOrGlyphId>","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.\n","sig":null,"attributes":[{"value":"/ Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":19201,"byte_end":19307,"line_start":454,"line_end":454,"column_start":5,"column_end":111}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":19786,"byte_end":19795,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":20156,"byte_end":20166,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21290,"byte_end":21294,"line_start":506,"line_end":506,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21035,"byte_end":21136,"line_start":503,"line_end":503,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21141,"byte_end":21244,"line_start":504,"line_end":504,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21249,"byte_end":21278,"line_start":505,"line_end":505,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21518,"byte_end":21520,"line_start":513,"line_end":513,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21466,"byte_end":21506,"line_start":512,"line_end":512,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21836,"byte_end":21842,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"pub fn scaled(Self, Scale) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend on the scale of the glyph\n available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with scaling information, making methods that depend on the scale of the glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21703,"byte_end":21805,"line_start":519,"line_end":519,"column_start":5,"column_end":107}},{"value":"/ available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":21810,"byte_end":21824,"line_start":520,"line_end":520,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":22838,"byte_end":22848,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"pub fn standalone(&Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources,\n extracted from the font. This glyph can outlive the font that it comes from.","sig":null,"attributes":[{"value":"/ Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":22531,"byte_end":22626,"line_start":540,"line_end":540,"column_start":5,"column_end":100}},{"value":"/ extracted from the font. This glyph can outlive the font that it comes from.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":22631,"byte_end":22711,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":22716,"byte_end":22719,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Calling `standalone()` on a standalone glyph shares the resources, and is equivalent to `clone()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":22724,"byte_end":22826,"line_start":543,"line_end":543,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":23944,"byte_end":23952,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"pub fn get_data(&Self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[{"value":"/ Get the data from this glyph (such as width, extents, vertices, etc.).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":23804,"byte_end":23878,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ Only possible if the glyph is a shared glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":23883,"byte_end":23932,"line_start":566,"line_end":566,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24249,"byte_end":24253,"line_start":577,"line_end":577,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24265,"byte_end":24270,"line_start":578,"line_end":578,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24235,"byte_end":24242,"line_start":576,"line_end":576,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"pub enum Segment { Line(Line), Curve(Curve), }","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":697}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[{"value":"/ Part of a `Contour`, either a `Line` or a `Curve`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24141,"byte_end":24195,"line_start":574,"line_end":574,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24373,"byte_end":24380,"line_start":582,"line_end":582,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":706}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[{"value":"/ A closed loop consisting of a sequence of `Segment`s.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24280,"byte_end":24337,"line_start":580,"line_end":580,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24391,"byte_end":24399,"line_start":583,"line_end":583,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24499,"byte_end":24501,"line_start":587,"line_end":587,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24447,"byte_end":24487,"line_start":586,"line_end":586,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24807,"byte_end":24811,"line_start":593,"line_end":593,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24552,"byte_end":24653,"line_start":590,"line_end":590,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24658,"byte_end":24761,"line_start":591,"line_end":591,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24766,"byte_end":24795,"line_start":592,"line_end":592,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24935,"byte_end":24948,"line_start":597,"line_end":597,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"pub fn into_unscaled(Self) -> Glyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without the scaling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24874,"byte_end":24923,"line_start":596,"line_end":596,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":25046,"byte_end":25054,"line_start":601,"line_end":601,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"pub fn unscaled(&Self) -> &Glyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the scaling from this glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24995,"byte_end":25034,"line_start":600,"line_end":600,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":25244,"byte_end":25254,"line_start":606,"line_end":606,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"pub fn positioned(Self, Point<f32>) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that depend on the position of the\n glyph available.\n","sig":null,"attributes":[{"value":"/ Augments this glyph with positioning information, making methods that depend on the position of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":25104,"byte_end":25207,"line_start":604,"line_end":604,"column_start":5,"column_end":108}},{"value":"/ glyph available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":25212,"byte_end":25232,"line_start":605,"line_end":605,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":26368,"byte_end":26373,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":26522,"byte_end":26531,"line_start":636,"line_end":636,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"pub fn h_metrics(&Self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.\n","sig":null,"attributes":[{"value":"/ Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":26425,"byte_end":26510,"line_start":635,"line_end":635,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29291,"byte_end":29296,"line_start":700,"line_end":700,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"pub fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph. Each contour consists of\n a sequence of segments. Each segment is either a straight `Line` or a `Curve`.","sig":null,"attributes":[{"value":"/ Produces a list of the contours that make up the shape of this glyph. Each contour consists of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":28984,"byte_end":29082,"line_start":696,"line_end":696,"column_start":5,"column_end":103}},{"value":"/ a sequence of segments. Each segment is either a straight `Line` or a `Curve`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29087,"byte_end":29169,"line_start":697,"line_end":697,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29174,"byte_end":29177,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The winding of the produced contours is clockwise for closed shapes, anticlockwise for holes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29182,"byte_end":29279,"line_start":699,"line_end":699,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29600,"byte_end":29618,"line_start":705,"line_end":705,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"pub fn exact_bounding_box(&Self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the\n conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[{"value":"/ The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29388,"byte_end":29486,"line_start":703,"line_end":703,"column_start":5,"column_end":103}},{"value":"/ conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":29491,"byte_end":29588,"line_start":704,"line_end":704,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30447,"byte_end":30457,"line_start":721,"line_end":721,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"pub fn standalone(&Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30293,"byte_end":30395,"line_start":719,"line_end":719,"column_start":5,"column_end":107}},{"value":"/ that function for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30400,"byte_end":30435,"line_start":720,"line_end":720,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30724,"byte_end":30726,"line_start":732,"line_end":732,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"pub fn id(&Self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[{"value":"/ The glyph identifier for this glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30672,"byte_end":30712,"line_start":731,"line_end":731,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31033,"byte_end":31037,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"pub fn font(&Self) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[{"value":"/ The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30778,"byte_end":30879,"line_start":735,"line_end":735,"column_start":5,"column_end":106}},{"value":"/ it no longer has a reference to the font which it was created from (using `standalone()`). In which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30884,"byte_end":30987,"line_start":736,"line_end":736,"column_start":5,"column_end":108}},{"value":"/ case, `None` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30992,"byte_end":31021,"line_start":737,"line_end":737,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31162,"byte_end":31174,"line_start":742,"line_end":742,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"pub fn unpositioned(&Self) -> &ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[{"value":"/ A reference to this glyph without positioning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31101,"byte_end":31150,"line_start":741,"line_end":741,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31286,"byte_end":31303,"line_start":746,"line_end":746,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"pub fn into_unpositioned(Self) -> ScaledGlyph","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[{"value":"/ Removes the positioning from this glyph","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31231,"byte_end":31274,"line_start":745,"line_end":745,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31556,"byte_end":31574,"line_start":751,"line_end":751,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"pub fn pixel_bounding_box(&Self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle\n aligned to pixel boundaries that encloses the shape of this glyph at this position.\n","sig":null,"attributes":[{"value":"/ The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31357,"byte_end":31452,"line_start":749,"line_end":749,"column_start":5,"column_end":100}},{"value":"/ aligned to pixel boundaries that encloses the shape of this glyph at this position.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31457,"byte_end":31544,"line_start":750,"line_end":750,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31736,"byte_end":31741,"line_start":755,"line_end":755,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"pub fn shape(&Self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.\n","sig":null,"attributes":[{"value":"/ Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31631,"byte_end":31724,"line_start":754,"line_end":754,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31841,"byte_end":31846,"line_start":758,"line_end":758,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"pub fn scale(&Self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31908,"byte_end":31916,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"pub fn position(&Self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32680,"byte_end":32684,"line_start":782,"line_end":782,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"pub fn draw<O: FnMut(u32, u32, f32) -> ()>(&Self, O)","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[{"value":"/ Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":31972,"byte_end":32073,"line_start":764,"line_end":764,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32078,"byte_end":32081,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32086,"byte_end":32099,"line_start":766,"line_end":766,"column_start":5,"column_end":18}},{"value":"/ o(x, y, v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32104,"byte_end":32118,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32123,"byte_end":32130,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32135,"byte_end":32138,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ where `x` and `y` are the coordinates of the pixel relative to the `min` coordinates of the bounding box,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32143,"byte_end":32252,"line_start":770,"line_end":770,"column_start":5,"column_end":114}},{"value":"/ and `v` is the analytically calculated coverage of the pixel by the shape of the glyph.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32257,"byte_end":32348,"line_start":771,"line_end":771,"column_start":5,"column_end":96}},{"value":"/ Calls to `o` proceed in horizontal scanline order, similar to this pseudo-code:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32353,"byte_end":32436,"line_start":772,"line_end":772,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32441,"byte_end":32444,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32449,"byte_end":32462,"line_start":774,"line_end":774,"column_start":5,"column_end":18}},{"value":"/ let bb = glyph.pixel_bounding_box();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32467,"byte_end":32507,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ for y in 0..bb.height() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32512,"byte_end":32541,"line_start":776,"line_end":776,"column_start":5,"column_end":34}},{"value":"/     for x in 0..bb.width() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32546,"byte_end":32578,"line_start":777,"line_end":777,"column_start":5,"column_end":37}},{"value":"/         o(x, y, calc_coverage(&glyph, x, y));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32583,"byte_end":32632,"line_start":778,"line_end":778,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32637,"byte_end":32646,"line_start":779,"line_end":779,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32651,"byte_end":32656,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":32661,"byte_end":32668,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":34583,"byte_end":34593,"line_start":827,"line_end":827,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"pub fn standalone(&Self) -> PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[{"value":"/ Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":34429,"byte_end":34531,"line_start":825,"line_end":825,"column_start":5,"column_end":107}},{"value":"/ that function for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":34536,"byte_end":34571,"line_start":826,"line_end":826,"column_start":5,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36147,"byte_end":36152,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36331,"byte_end":36337,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36517,"byte_end":36523,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36685,"byte_end":36691,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37021,"byte_end":37027,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37357,"byte_end":37363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37693,"byte_end":37699,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38058,"byte_end":38063,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38251,"byte_end":38256,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38443,"byte_end":38449,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39191,"byte_end":39195,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39705,"byte_end":39709,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":40109,"byte_end":40114,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":41574,"byte_end":41579,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":42076,"byte_end":42080,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":42971,"byte_end":42992,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":44966,"byte_end":44979,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":46080,"byte_end":46084,"line_start":58,"line_end":58,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":46838,"byte_end":46852,"line_start":94,"line_end":94,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":49554,"byte_end":49559,"line_start":169,"line_end":169,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6130,"byte_end":6141,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6373,"byte_end":6384,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6508,"byte_end":6519,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6805,"byte_end":6816,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9787,"byte_end":9795,"line_start":218,"line_end":218,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10022,"byte_end":10030,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11385,"byte_end":11390,"line_start":268,"line_end":268,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11551,"byte_end":11560,"line_start":274,"line_end":274,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11660,"byte_end":11678,"line_start":279,"line_end":279,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11803,"byte_end":11821,"line_start":284,"line_end":284,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11939,"byte_end":11957,"line_start":289,"line_end":289,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12057,"byte_end":12071,"line_start":294,"line_end":294,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14269,"byte_end":14282,"line_start":339,"line_end":339,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14503,"byte_end":14507,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":19927,"byte_end":19936,"line_start":469,"line_end":469,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":20352,"byte_end":20362,"line_start":484,"line_end":484,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":20940,"byte_end":20945,"line_start":499,"line_end":499,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24425,"byte_end":24436,"line_start":585,"line_end":585,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30646,"byte_end":30661,"line_start":730,"line_end":730,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36147,"byte_end":36152,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36331,"byte_end":36337,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36517,"byte_end":36523,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":36685,"byte_end":36691,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37021,"byte_end":37027,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37357,"byte_end":37363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":37693,"byte_end":37699,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3140}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38058,"byte_end":38063,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38251,"byte_end":38256,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3130}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":38443,"byte_end":38449,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":3125}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39191,"byte_end":39195,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":39705,"byte_end":39709,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":66}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":40109,"byte_end":40114,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":404},"to":{"krate":0,"index":66}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":41364,"byte_end":41369,"line_start":233,"line_end":233,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":41574,"byte_end":41579,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":404},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":42076,"byte_end":42080,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\geometry.rs","byte_start":42971,"byte_end":42992,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":44575,"byte_end":44580,"line_start":5,"line_end":5,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":44966,"byte_end":44979,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":46080,"byte_end":46084,"line_start":58,"line_end":58,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":46838,"byte_end":46852,"line_start":94,"line_end":94,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\rasterizer.rs","byte_start":49554,"byte_end":49559,"line_start":169,"line_end":169,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":404},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6130,"byte_end":6141,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6373,"byte_end":6384,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6508,"byte_end":6519,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":6805,"byte_end":6816,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":9787,"byte_end":9795,"line_start":218,"line_end":218,"column_start":29,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":10022,"byte_end":10030,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":3135}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11385,"byte_end":11390,"line_start":268,"line_end":268,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11551,"byte_end":11560,"line_start":274,"line_end":274,"column_start":21,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11660,"byte_end":11678,"line_start":279,"line_end":279,"column_start":26,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11803,"byte_end":11821,"line_start":284,"line_end":284,"column_start":24,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":11939,"byte_end":11957,"line_start":289,"line_end":289,"column_start":21,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":12057,"byte_end":12071,"line_start":294,"line_end":294,"column_start":10,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14269,"byte_end":14282,"line_start":339,"line_end":339,"column_start":23,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":14503,"byte_end":14507,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":19927,"byte_end":19936,"line_start":469,"line_end":469,"column_start":36,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":20352,"byte_end":20362,"line_start":484,"line_end":484,"column_start":27,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":680},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":20940,"byte_end":20945,"line_start":499,"line_end":499,"column_start":10,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":24425,"byte_end":24436,"line_start":585,"line_end":585,"column_start":10,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.4.3\\src\\lib.rs","byte_start":30646,"byte_end":30661,"line_start":730,"line_end":730,"column_start":10,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":649},"to":{"krate":4294967295,"index":4294967295}}]}