{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"ppm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=e7a440dac3d93219","-C","extra-filename=-e7a440dac3d93219","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","byteorder=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libbyteorder-e57a114a97cdc5bd.rmeta","--extern","enum_primitive=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libenum_primitive-08af0380c34b1a46.rmeta","--extern","gif=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libgif-7752cd4209ad8af8.rmeta","--extern","jpeg_decoder=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libjpeg_decoder-e768be7340e77898.rmeta","--extern","num_iter=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libnum_iter-9f521e859b6307a6.rmeta","--extern","num_rational=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libnum_rational-a34f490dd58198f8.rmeta","--extern","num_traits=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libnum_traits-02733922343b6036.rmeta","--extern","png=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libpng-1ea13dcbfcc7569d.rmeta","--extern","scoped_threadpool=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libscoped_threadpool-e54c927128a91e56.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libimage-e7a440dac3d93219.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[1083902942767209077,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[7485636545642705259,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":17,"id":{"name":"num_iter","disambiguator":[14004088842996830490,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":18,"id":{"name":"num_integer","disambiguator":[17533411839584084118,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[2243077793919202242,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":20,"id":{"name":"num_rational","disambiguator":[5791074254592141826,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":21,"id":{"name":"num_traits","disambiguator":[18223906395058910274,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","num":22,"id":{"name":"enum_primitive","disambiguator":[3370720402702132215,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","num":23,"id":{"name":"png","disambiguator":[11768777672696227206,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","num":24,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","num":25,"id":{"name":"inflate","disambiguator":[10667599545606884776,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","num":26,"id":{"name":"adler32","disambiguator":[755946652197954418,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","num":27,"id":{"name":"deflate","disambiguator":[9437881576169297761,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"jpeg_decoder","disambiguator":[15758118826900808063,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"rayon","disambiguator":[6623402228181533820,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"either","disambiguator":[7464863777084611118,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"rayon_core","disambiguator":[16648258661140591635,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"crossbeam_channel","disambiguator":[10208144800051560213,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"crossbeam_utils","disambiguator":[13548143170511223058,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"lazy_static","disambiguator":[17608421772039054989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"crossbeam_deque","disambiguator":[7715213230057767423,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":37,"id":{"name":"crossbeam_epoch","disambiguator":[5736158919263291491,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":38,"id":{"name":"scopeguard","disambiguator":[14791793103096291185,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":39,"id":{"name":"memoffset","disambiguator":[5083723864139456129,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","num":40,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","num":41,"id":{"name":"gif","disambiguator":[3347679475655346251,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","num":42,"id":{"name":"lzw","disambiguator":[15116990504302203478,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","num":43,"id":{"name":"color_quant","disambiguator":[1166519531328614451,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","num":44,"id":{"name":"scoped_threadpool","disambiguator":[11224797199635509713,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":0,"byte_end":2402,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":529,"byte_end":538,"line_start":21,"line_end":21,"column_start":16,"column_end":25},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":556,"byte_end":560,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":556,"byte_end":560,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":566,"byte_end":569,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":566,"byte_end":569,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":575,"byte_end":582,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":575,"byte_end":582,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":588,"byte_end":593,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":588,"byte_end":593,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":599,"byte_end":603,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":599,"byte_end":603,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":629,"byte_end":633,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":629,"byte_end":633,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":639,"byte_end":644,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":639,"byte_end":644,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":650,"byte_end":653,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":650,"byte_end":653,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":659,"byte_end":663,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":659,"byte_end":663,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":689,"byte_end":701,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":707,"byte_end":717,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":723,"byte_end":734,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":740,"byte_end":754,"line_start":41,"line_end":41,"column_start":5,"column_end":19},"alias_span":null,"name":"DecodingResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":760,"byte_end":768,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":774,"byte_end":786,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":809,"byte_end":815,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":821,"byte_end":830,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":853,"byte_end":863,"line_start":49,"line_end":49,"column_start":19,"column_end":29},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":881,"byte_end":889,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":881,"byte_end":889,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":895,"byte_end":902,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":895,"byte_end":902,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":908,"byte_end":918,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":908,"byte_end":918,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":924,"byte_end":932,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":924,"byte_end":932,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":938,"byte_end":946,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":938,"byte_end":946,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":966,"byte_end":977,"line_start":58,"line_end":58,"column_start":16,"column_end":27},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":995,"byte_end":998,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":995,"byte_end":998,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1004,"byte_end":1008,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1004,"byte_end":1008,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3438},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1014,"byte_end":1017,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1023,"byte_end":1027,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1023,"byte_end":1027,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"alias_span":null,"name":"PPM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1042,"byte_end":1045,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1051,"byte_end":1054,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1081,"byte_end":1086,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1092,"byte_end":1105,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3852},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1130,"byte_end":1141,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1147,"byte_end":1155,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1161,"byte_end":1170,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1176,"byte_end":1185,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1191,"byte_end":1205,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1236,"byte_end":1245,"line_start":81,"line_end":81,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1302,"byte_end":1306,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1312,"byte_end":1316,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1322,"byte_end":1338,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1344,"byte_end":1372,"line_start":88,"line_end":88,"column_start":5,"column_end":33},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1378,"byte_end":1390,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1396,"byte_end":1407,"line_start":90,"line_end":90,"column_start":5,"column_end":16},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1430,"byte_end":1442,"line_start":93,"line_end":93,"column_start":19,"column_end":31},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1475,"byte_end":1485,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1475,"byte_end":1485,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1491,"byte_end":1501,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1491,"byte_end":1501,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1507,"byte_end":1518,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1507,"byte_end":1518,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1559,"byte_end":1565,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16392,"byte_end":16402,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16446,"byte_end":16454,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16446,"byte_end":16454,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16460,"byte_end":16467,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16460,"byte_end":16467,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16473,"byte_end":16483,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16473,"byte_end":16483,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16489,"byte_end":16497,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16489,"byte_end":16497,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16503,"byte_end":16511,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16503,"byte_end":16511,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16572,"byte_end":16580,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16586,"byte_end":16595,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16601,"byte_end":16610,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16616,"byte_end":16631,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16637,"byte_end":16650,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16704,"byte_end":16713,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16719,"byte_end":16725,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16731,"byte_end":16735,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16741,"byte_end":16750,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16808,"byte_end":16817,"line_start":40,"line_end":40,"column_start":5,"column_end":14},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16823,"byte_end":16829,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16835,"byte_end":16843,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16849,"byte_end":16857,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16863,"byte_end":16872,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16878,"byte_end":16886,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16892,"byte_end":16899,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16892,"byte_end":16899,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16905,"byte_end":16911,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16917,"byte_end":16929,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\mod.rs","byte_start":53441,"byte_end":53452,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebpDecoder","value":"","parent":{"krate":0,"index":486}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\mod.rs","byte_start":123548,"byte_end":123558,"line_start":3,"line_end":3,"column_start":24,"column_end":34},"alias_span":null,"name":"PPMEncoder","value":"","parent":{"krate":0,"index":730}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\mod.rs","byte_start":123597,"byte_end":123607,"line_start":4,"line_end":4,"column_start":24,"column_end":34},"alias_span":null,"name":"PPMDecoder","value":"","parent":{"krate":0,"index":730}},{"kind":"Use","ref_id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138423,"byte_end":138433,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":905}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138458,"byte_end":138468,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":905}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151238,"byte_end":151249,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":1035}},{"kind":"Use","ref_id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151274,"byte_end":151285,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1035}},{"kind":"Use","ref_id":{"krate":41,"index":466},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187399,"byte_end":187404,"line_start":12,"line_end":12,"column_start":20,"column_end":25},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":1230}},{"kind":"Use","ref_id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190803,"byte_end":190814,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"TIFFDecoder","value":"","parent":{"krate":0,"index":1299}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":218453,"byte_end":218463,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232956,"byte_end":232966,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":1620}},{"kind":"Use","ref_id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232991,"byte_end":233001,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":1620}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286680,"byte_end":286681,"line_start":15,"line_end":15,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"SIGNATURE, RGBE8Pixel, HDRAdapter, rgbe8","parent":{"krate":0,"index":1853}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286710,"byte_end":286711,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1853}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":0,"byte_end":2402,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":229},{"krate":0,"index":486},{"krate":0,"index":730},{"krate":0,"index":834},{"krate":0,"index":905},{"krate":0,"index":1035},{"krate":0,"index":1230},{"krate":0,"index":1299},{"krate":0,"index":1512},{"krate":0,"index":1620},{"krate":0,"index":1853},{"krate":0,"index":2090},{"krate":0,"index":2221},{"krate":0,"index":2321},{"krate":0,"index":2505},{"krate":0,"index":2602},{"krate":0,"index":2833},{"krate":0,"index":2857},{"krate":0,"index":2881}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"/ This crate provides native rust implementations of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/ image encoders and decoders and basic image manipulation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\mod.rs","byte_start":2404,"byte_end":2448,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"/ Shared mathematical utility functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2477,"byte_end":2519,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2764,"byte_end":2769,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2521,"byte_end":2559,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2560,"byte_end":2563,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2564,"byte_end":2571,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2572,"byte_end":2599,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2600,"byte_end":2603,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2604,"byte_end":2648,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2649,"byte_end":2693,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2694,"byte_end":2738,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2739,"byte_end":2746,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\utils.rs","byte_start":2747,"byte_end":2756,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":2882},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":213}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also  http://www.acm.org/~dekker/NEUQUANT.HTML\n","sig":null,"attributes":[{"value":"/ NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":2891,"byte_end":2962,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":2963,"byte_end":3028,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":3029,"byte_end":3102,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ for a discussion of the algorithm.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":3103,"byte_end":3141,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/ See also  http://www.acm.org/~dekker/NEUQUANT.HTML","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":3142,"byte_end":3196,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5046,"byte_end":5054,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5000,"byte_end":5034,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5358,"byte_end":5361,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neuronal network and trains it with the supplied data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5275,"byte_end":5346,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5922,"byte_end":5926,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neuronal network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neuronal network and trains it with the supplied data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5837,"byte_end":5910,"line_start":93,"line_end":93,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":6758,"byte_end":6767,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":6653,"byte_end":6724,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":6729,"byte_end":6746,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":7313,"byte_end":7321,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":7217,"byte_end":7279,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":7284,"byte_end":7301,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":340},{"krate":0,"index":421},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16254,"byte_end":16284,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":20744,"byte_end":20752,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":20624,"byte_end":20665,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":21329,"byte_end":21338,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":21208,"byte_end":21250,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":21927,"byte_end":21936,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":21806,"byte_end":21848,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":22500,"byte_end":22515,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":22391,"byte_end":22421,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":23077,"byte_end":23090,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\affine.rs","byte_start":22970,"byte_end":22998,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":386},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":418}],"decl_id":null,"docs":" Public only because of Rust bug:\n https://github.com/rust-lang/rust/issues/18241\n Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Public only because of Rust bug:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16947,"byte_end":16983,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ https://github.com/rust-lang/rust/issues/18241","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":16984,"byte_end":17034,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":26899,"byte_end":26963,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":27220,"byte_end":27229,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImage>(&I)\n->\n    ImageBuffer<Luma<<I::Pixel as Pixel>::Subpixel>,\n    Vec<<I::Pixel as Pixel>::Subpixel>> where\n<I::Pixel as Pixel>::Subpixel: 'static,\n<<I::Pixel as Pixel>::Subpixel as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":27169,"byte_end":27212,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":27838,"byte_end":27844,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":27745,"byte_end":27793,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":27794,"byte_end":27830,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":28307,"byte_end":28315,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":28108,"byte_end":28154,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":28155,"byte_end":28214,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":28215,"byte_end":28299,"line_start":47,"line_end":47,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":29299,"byte_end":29307,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":29125,"byte_end":29157,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":29158,"byte_end":29214,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":29215,"byte_end":29291,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":30238,"byte_end":30247,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":30022,"byte_end":30056,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":30057,"byte_end":30108,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":30109,"byte_end":30178,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":30179,"byte_end":30230,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32181,"byte_end":32189,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32155,"byte_end":32170,"line_start":172,"line_end":172,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32253,"byte_end":32258,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32196,"byte_end":32243,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32350,"byte_end":32358,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closed match of `color`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32264,"byte_end":32316,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32321,"byte_end":32342,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32464,"byte_end":32473,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32401,"byte_end":32456,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32569,"byte_end":32576,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32510,"byte_end":32534,"line_start":183,"line_end":183,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":34452,"byte_end":34458,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":34300,"byte_end":34381,"line_start":254,"line_end":254,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":34382,"byte_end":34444,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":35969,"byte_end":35981,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":35872,"byte_end":35961,"line_start":292,"line_end":292,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37203,"byte_end":37210,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37178,"byte_end":37198,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37239,"byte_end":37247,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37217,"byte_end":37234,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37275,"byte_end":37285,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37254,"byte_end":37270,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37316,"byte_end":37324,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37292,"byte_end":37311,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37361,"byte_end":37369,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2898},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37331,"byte_end":37356,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37161,"byte_end":37171,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[{"value":"/ Available Sampling Filters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":37098,"byte_end":37128,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":47061,"byte_end":47070,"line_start":319,"line_end":319,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":46868,"byte_end":46919,"line_start":316,"line_end":316,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":46920,"byte_end":46983,"line_start":317,"line_end":317,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":49513,"byte_end":49519,"line_start":393,"line_end":393,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImage + 'static>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":49270,"byte_end":49328,"line_start":389,"line_end":389,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":49329,"byte_end":49387,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":49388,"byte_end":49435,"line_start":391,"line_end":391,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":50755,"byte_end":50759,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImage + 'static>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":50573,"byte_end":50624,"line_start":426,"line_end":426,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":50625,"byte_end":50677,"line_start":427,"line_end":427,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51722,"byte_end":51731,"line_start":459,"line_end":459,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51393,"byte_end":51446,"line_start":453,"line_end":453,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51447,"byte_end":51498,"line_start":454,"line_end":454,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51499,"byte_end":51562,"line_start":455,"line_end":455,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51563,"byte_end":51566,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\sample.rs","byte_start":51567,"byte_end":51644,"line_start":457,"line_end":457,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":17182,"byte_end":17186,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImage + 'static>(&mut I, u32, u32, u32, u32)\n-> SubImage<, I> where I::Pixel: 'static,\n<I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":17066,"byte_end":17105,"line_start":57,"line_end":57,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":17762,"byte_end":17769,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":17705,"byte_end":17754,"line_start":76,"line_end":76,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":18635,"byte_end":18642,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":18562,"byte_end":18627,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":545},{"krate":0,"index":550}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1664,"byte_end":1688,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/ Decoding of Webp Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\mod.rs","byte_start":53389,"byte_end":53416,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53808,"byte_end":53819,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" A Representation of a Webp Image format decoder.\n","sig":null,"attributes":[{"value":"/ A Representation of a Webp Image format decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53744,"byte_end":53796,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":54054,"byte_end":54057,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"pub fn new(R) -> WebpDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebpDecoder from the Reader ```r```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53936,"byte_end":53989,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53994,"byte_end":54042,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":2912},{"krate":0,"index":2920},{"krate":0,"index":2924},{"krate":0,"index":655},{"krate":0,"index":2925},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":659},{"krate":0,"index":682},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"/ An implementation of the VP8 Video Codec","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59229,"byte_end":59273,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59274,"byte_end":59277,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a partial implementation of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59278,"byte_end":59334,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ VP8 video format as defined in RFC-6386.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59335,"byte_end":59379,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59380,"byte_end":59383,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59384,"byte_end":59434,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/ VP8 is the underpinning of the Webp image format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59435,"byte_end":59487,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59488,"byte_end":59491,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59492,"byte_end":59511,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59512,"byte_end":59605,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59606,"byte_end":59728,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"/ of the VP8 format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59729,"byte_end":59750,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":59751,"byte_end":59754,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87382,"byte_end":87387,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87285,"byte_end":87337,"line_start":751,"line_end":751,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87434,"byte_end":87439,"line_start":755,"line_end":755,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87394,"byte_end":87425,"line_start":754,"line_end":754,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87492,"byte_end":87498,"line_start":758,"line_end":758,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87451,"byte_end":87483,"line_start":757,"line_end":757,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87550,"byte_end":87554,"line_start":761,"line_end":761,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87510,"byte_end":87541,"line_start":760,"line_end":760,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87625,"byte_end":87633,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87570,"byte_end":87616,"line_start":763,"line_end":763,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2931},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87729,"byte_end":87740,"line_start":769,"line_end":769,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87664,"byte_end":87720,"line_start":768,"line_end":768,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87871,"byte_end":87881,"line_start":774,"line_end":774,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87772,"byte_end":87829,"line_start":772,"line_end":772,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87834,"byte_end":87862,"line_start":773,"line_end":773,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88258,"byte_end":88268,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88200,"byte_end":88215,"line_start":799,"line_end":799,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88216,"byte_end":88219,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88220,"byte_end":88246,"line_start":801,"line_end":801,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88932,"byte_end":88935,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"pub fn new(R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88828,"byte_end":88853,"line_start":835,"line_end":835,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88858,"byte_end":88920,"line_start":836,"line_end":836,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":107654,"byte_end":107666,"line_start":1394,"line_end":1394,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"pub fn decode_frame(&mut Self) -> io::Result<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":107583,"byte_end":107642,"line_start":1393,"line_end":1393,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ppm","qualname":"::ppm","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\mod.rs","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":776}],"decl_id":null,"docs":" Encoding of portable pixmap Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"ppm\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1703,"byte_end":1726,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/ Encoding of portable pixmap Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\mod.rs","byte_start":123485,"byte_end":123523,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":126865,"byte_end":126875,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"PPMEncoder","qualname":"::ppm::encoder::PPMEncoder","value":"PPMEncoder {  }","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" A representation of a PPM encoder.\n","sig":null,"attributes":[{"value":"/ A representation of a PPM encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":126815,"byte_end":126853,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127069,"byte_end":127072,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMEncoder>::new","value":"pub fn new(&mut W) -> PPMEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PPMEncoder from the Writer ```w```.\n This function takes ownership of the Writer.\n","sig":null,"attributes":[{"value":"/ Create a new PPMEncoder from the Writer ```w```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":126952,"byte_end":127004,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/ This function takes ownership of the Writer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127009,"byte_end":127057,"line_start":22,"line_end":22,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127317,"byte_end":127323,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<PPMEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode the buffer ```im``` as a PPM image.\n ```width``` and ```height``` are the dimensions of the buffer.\n ```color``` is the buffers ColorType.\n","sig":null,"attributes":[{"value":"/ Encode the buffer ```im``` as a PPM image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127142,"byte_end":127188,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/ ```width``` and ```height``` are the dimensions of the buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127193,"byte_end":127259,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ ```color``` is the buffers ColorType.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":127264,"byte_end":127305,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129354,"byte_end":129364,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"PPMDecoder","qualname":"::ppm::decoder::PPMDecoder","value":"PPMDecoder {  }","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" PPM decoder\n","sig":null,"attributes":[{"value":"/ PPM decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129327,"byte_end":129342,"line_start":10,"line_end":10,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129558,"byte_end":129561,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PPMDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PPMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129485,"byte_end":129546,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1740,"byte_end":1769,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133237,"byte_end":133276,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133277,"byte_end":133280,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133281,"byte_end":133371,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133372,"byte_end":133375,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133376,"byte_end":133395,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * http://www.w3.org/TR/PNG/ - The PNG Specification","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133396,"byte_end":133451,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133452,"byte_end":133455,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133709,"byte_end":133719,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":876}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133682,"byte_end":133697,"line_start":24,"line_end":24,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133901,"byte_end":133904,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"pub fn new(R) -> PNGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133827,"byte_end":133889,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135760,"byte_end":135770,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":890}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135733,"byte_end":135748,"line_start":89,"line_end":89,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135900,"byte_end":135903,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"pub fn new(W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135830,"byte_end":135888,"line_start":95,"line_end":95,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":136126,"byte_end":136132,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135988,"byte_end":136021,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":136026,"byte_end":136078,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":136083,"byte_end":136114,"line_start":104,"line_end":104,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":994}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1783,"byte_end":1806,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/  Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138136,"byte_end":138175,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138176,"byte_end":138179,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138180,"byte_end":138252,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138253,"byte_end":138256,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138257,"byte_end":138277,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * https://msdn.microsoft.com/en-us/library/ms997538.aspx","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138278,"byte_end":138339,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/  * https://en.wikipedia.org/wiki/ICO_%28file_format%29","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\mod.rs","byte_start":138340,"byte_end":138398,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":138968,"byte_end":138978,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":138938,"byte_end":138956,"line_start":15,"line_end":15,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":139476,"byte_end":139479,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"pub fn new(R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":139403,"byte_end":139464,"line_start":42,"line_end":42,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148305,"byte_end":148315,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1024}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148278,"byte_end":148293,"line_start":15,"line_end":15,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148446,"byte_end":148449,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"pub fn new(W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148375,"byte_end":148434,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148770,"byte_end":148776,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148534,"byte_end":148603,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148608,"byte_end":148682,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148687,"byte_end":148758,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1164},{"krate":0,"index":1211},{"krate":0,"index":1214}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1820,"byte_end":1844,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":150916,"byte_end":150956,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":150957,"byte_end":150960,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":150961,"byte_end":151056,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151057,"byte_end":151111,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151112,"byte_end":151115,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ #Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151116,"byte_end":151134,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/ * http://www.w3.org/Graphics/JPEG/itu-t81.pdf - The JPEG specification","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151135,"byte_end":151209,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\mod.rs","byte_start":151210,"byte_end":151213,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":159727,"byte_end":159738,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":159675,"byte_end":159715,"line_start":277,"line_end":277,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160094,"byte_end":160097,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"pub fn new(&mut W) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160024,"byte_end":160082,"line_start":291,"line_end":291,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160390,"byte_end":160406,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160185,"byte_end":160252,"line_start":296,"line_end":296,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160257,"byte_end":160328,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":160333,"byte_end":160378,"line_start":298,"line_end":298,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162374,"byte_end":162380,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162170,"byte_end":162203,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162208,"byte_end":162260,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162265,"byte_end":162296,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162301,"byte_end":162304,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":162309,"byte_end":162362,"line_start":348,"line_end":348,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174330,"byte_end":174341,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174302,"byte_end":174318,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174544,"byte_end":174547,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"pub fn new(R) -> JPEGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174471,"byte_end":174532,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1281},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1296}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1859,"byte_end":1888,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/  Decoding of GIF Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187099,"byte_end":187126,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187127,"byte_end":187130,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187131,"byte_end":187224,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187225,"byte_end":187228,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187229,"byte_end":187249,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * http://www.w3.org/Graphics/GIF/spec-gif89a.txt - The GIF Specification","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187250,"byte_end":187327,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187328,"byte_end":187331,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187607,"byte_end":187614,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1276}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187580,"byte_end":187595,"line_start":23,"line_end":23,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187793,"byte_end":187796,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187719,"byte_end":187781,"line_start":29,"line_end":29,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189676,"byte_end":189683,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1290}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189648,"byte_end":189664,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189783,"byte_end":189786,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189741,"byte_end":189771,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189896,"byte_end":189902,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"pub fn encode(Self, Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[{"value":"/ Encodes a frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189864,"byte_end":189884,"line_start":102,"line_end":102,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1303}],"decl_id":null,"docs":"  Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1902,"byte_end":1926,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/  Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190497,"byte_end":190538,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190539,"byte_end":190542,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190543,"byte_end":190621,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/  lossless and lossy compression.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190622,"byte_end":190658,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190659,"byte_end":190662,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190663,"byte_end":190683,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"/  * http://partners.adobe.com/public/developer/tiff/index.html - The TIFF specification","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190684,"byte_end":190774,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\mod.rs","byte_start":190775,"byte_end":190778,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215540,"byte_end":215552,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"LittleEndian","qualname":"::tiff::decoder::stream::ByteOrder::LittleEndian","value":"ByteOrder::LittleEndian","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" little endian byte order\n","sig":null,"attributes":[{"value":"/ little endian byte order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215507,"byte_end":215535,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215588,"byte_end":215597,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"BigEndian","qualname":"::tiff::decoder::stream::ByteOrder::BigEndian","value":"ByteOrder::BigEndian","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" big endian byte order\n","sig":null,"attributes":[{"value":"/ big endian byte order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215558,"byte_end":215583,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215491,"byte_end":215500,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ByteOrder","qualname":"::tiff::decoder::stream::ByteOrder","value":"pub enum ByteOrder { LittleEndian, BigEndian, }","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3113}],"decl_id":null,"docs":" Byte order of the TIFF file.\n","sig":null,"attributes":[{"value":"/ Byte order of the TIFF file.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215419,"byte_end":215451,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":192024,"byte_end":192035,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::decoder::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"decl_id":null,"docs":" The representation of a TIFF decoder","sig":null,"attributes":[{"value":"/ The representation of a TIFF decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":191890,"byte_end":191930,"line_start":72,"line_end":72,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":191931,"byte_end":191934,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Currently does not support decoding of interlaced images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":191935,"byte_end":191995,"line_start":74,"line_end":74,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":194107,"byte_end":194110,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":194034,"byte_end":194095,"line_start":142,"line_end":142,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195573,"byte_end":195577,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"init","qualname":"<TIFFDecoder<R>>::init","value":"pub fn init(Self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the decoder.\n","sig":null,"attributes":[{"value":"/ Initializes the decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195533,"byte_end":195561,"line_start":182,"line_end":182,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195868,"byte_end":195878,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"next_image","qualname":"<TIFFDecoder<R>>::next_image","value":"pub fn next_image(Self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads in the next image.\n If there is no further image in the TIFF file a format error is returned.\n To determine whether there are more images call `TIFFDecoder::more_images` instead.\n","sig":null,"attributes":[{"value":"/ Reads in the next image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195654,"byte_end":195682,"line_start":187,"line_end":187,"column_start":5,"column_end":33}},{"value":"/ If there is no further image in the TIFF file a format error is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195687,"byte_end":195764,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ To determine whether there are more images call `TIFFDecoder::more_images` instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":195769,"byte_end":195856,"line_start":189,"line_end":189,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":197769,"byte_end":197780,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"more_images","qualname":"<TIFFDecoder<R>>::more_images","value":"pub fn more_images(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is at least one more image available.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is at least one more image available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":197692,"byte_end":197757,"line_start":235,"line_end":235,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":197942,"byte_end":197952,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"byte_order","qualname":"<TIFFDecoder<R>>::byte_order","value":"pub fn byte_order(&Self) -> ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte_order\n","sig":null,"attributes":[{"value":"/ Returns the byte_order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":197904,"byte_end":197930,"line_start":243,"line_end":243,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198064,"byte_end":198074,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"read_short","qualname":"<TIFFDecoder<R>>::read_short","value":"pub fn read_short(&mut Self) -> Result<u16, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF short value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF short value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198010,"byte_end":198038,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198043,"byte_end":198052,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198209,"byte_end":198218,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"read_long","qualname":"<TIFFDecoder<R>>::read_long","value":"pub fn read_long(&mut Self) -> Result<u32, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF long value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF long value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198156,"byte_end":198183,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198188,"byte_end":198197,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198365,"byte_end":198376,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"read_offset","qualname":"<TIFFDecoder<R>>::read_offset","value":"pub fn read_offset(&mut Self) -> Result<[u8; ], io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF IFA offset/value field\n","sig":null,"attributes":[{"value":"/ Reads a TIFF IFA offset/value field","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198300,"byte_end":198339,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198344,"byte_end":198353,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198595,"byte_end":198606,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"goto_offset","qualname":"<TIFFDecoder<R>>::goto_offset","value":"pub fn goto_offset(&mut Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the specified offset\n","sig":null,"attributes":[{"value":"/ Moves the cursor to the specified offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198525,"byte_end":198569,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":198574,"byte_end":198583,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1516}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1941,"byte_end":1964,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/ Decoding of TGA Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":218180,"byte_end":218206,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":218207,"byte_end":218210,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":218211,"byte_end":218230,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/ http://googlesites.inequation.org/tgautilities","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\mod.rs","byte_start":218231,"byte_end":218281,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223133,"byte_end":223143,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223082,"byte_end":223121,"line_start":160,"line_end":160,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223478,"byte_end":223481,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"pub fn new(R) -> TGADecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223409,"byte_end":223466,"line_start":177,"line_end":177,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1659}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1978,"byte_end":2001,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232655,"byte_end":232695,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232696,"byte_end":232699,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232700,"byte_end":232758,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232759,"byte_end":232762,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232763,"byte_end":232783,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232784,"byte_end":232874,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/  * https://en.wikipedia.org/wiki/BMP_file_format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232875,"byte_end":232927,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\mod.rs","byte_start":232928,"byte_end":232931,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233170,"byte_end":233180,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":1648}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233118,"byte_end":233158,"line_start":6,"line_end":6,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233339,"byte_end":233342,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233268,"byte_end":233327,"line_start":12,"line_end":12,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233571,"byte_end":233577,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233432,"byte_end":233465,"line_start":19,"line_end":19,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233470,"byte_end":233522,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233527,"byte_end":233559,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":254558,"byte_end":254568,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":254529,"byte_end":254546,"line_start":369,"line_end":369,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257218,"byte_end":257221,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"pub fn new(R) -> BMPDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257145,"byte_end":257206,"line_start":460,"line_end":460,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257789,"byte_end":257795,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"reader","qualname":"<BMPDecoder<R>>::reader","value":"pub fn reader(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257735,"byte_end":257758,"line_start":483,"line_end":483,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":266465,"byte_end":266492,"line_start":696,"line_end":696,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"pub fn read_metadata_in_ico_format(&mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":266411,"byte_end":266434,"line_start":694,"line_end":694,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":2021},{"krate":0,"index":2088},{"krate":0,"index":2089}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":2015,"byte_end":2038,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"/  Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286361,"byte_end":286397,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286398,"byte_end":286401,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder for Radiance HDR images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286402,"byte_end":286440,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286441,"byte_end":286444,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286445,"byte_end":286465,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * http://radsite.lbl.gov/radiance/refer/filefmts.pdf","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286466,"byte_end":286523,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/  * http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286524,"byte_end":286579,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\mod.rs","byte_start":286580,"byte_end":286583,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287151,"byte_end":287161,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::hdr_decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3336}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287072,"byte_end":287122,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287304,"byte_end":287307,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"pub fn new(R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287273,"byte_end":287292,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287590,"byte_end":287603,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"pub fn new_nonstrict(R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287536,"byte_end":287578,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289144,"byte_end":289153,"line_start":89,"line_end":89,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::hdr_decoder::SIGNATURE","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289102,"byte_end":289133,"line_start":88,"line_end":88,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289279,"byte_end":289289,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::hdr_decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289223,"byte_end":289250,"line_start":92,"line_end":92,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289505,"byte_end":289515,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::hdr_decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3352}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289364,"byte_end":289437,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289438,"byte_end":289448,"line_start":102,"line_end":102,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289551,"byte_end":289552,"line_start":105,"line_end":105,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::hdr_decoder::RGBE8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289522,"byte_end":289542,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289588,"byte_end":289589,"line_start":107,"line_end":107,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::hdr_decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289567,"byte_end":289579,"line_start":106,"line_end":106,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289650,"byte_end":289655,"line_start":111,"line_end":111,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::hdr_decoder::rgbe8","value":"pub fn rgbe8(u8, u8, u8, u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289598,"byte_end":289642,"line_start":110,"line_end":110,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289847,"byte_end":289853,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"pub fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289763,"byte_end":289821,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289826,"byte_end":289835,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290447,"byte_end":290453,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"pub fn to_ldr<T: Primitive + Zero>(Self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290200,"byte_end":290274,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290279,"byte_end":290282,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)^gamma","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290285,"byte_end":290324,"line_start":130,"line_end":130,"column_start":3,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290329,"byte_end":290332,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290335,"byte_end":290346,"line_start":132,"line_end":132,"column_start":3,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290349,"byte_end":290352,"line_start":133,"line_end":133,"column_start":3,"column_end":6}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290355,"byte_end":290421,"line_start":134,"line_end":134,"column_start":3,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290426,"byte_end":290435,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290829,"byte_end":290847,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"pub fn to_ldr_scale_gamma<T: Primitive + Zero>(Self, f32, f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290546,"byte_end":290612,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290617,"byte_end":290620,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)^gamma","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290625,"byte_end":290664,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290669,"byte_end":290672,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290677,"byte_end":290688,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290693,"byte_end":290696,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290701,"byte_end":290761,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290766,"byte_end":290803,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":290808,"byte_end":290817,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291939,"byte_end":291942,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291790,"byte_end":291845,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HDRDecoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291850,"byte_end":291896,"line_start":173,"line_end":173,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291901,"byte_end":291927,"line_start":174,"line_end":174,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292350,"byte_end":292365,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"pub fn with_strictness(R, bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292047,"byte_end":292108,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HDRDecoder```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292113,"byte_end":292166,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292171,"byte_end":292174,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292179,"byte_end":292209,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292214,"byte_end":292217,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292222,"byte_end":292272,"line_start":184,"line_end":184,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":292277,"byte_end":292338,"line_start":185,"line_end":185,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":295010,"byte_end":295018,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"pub fn metadata(&Self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":294932,"byte_end":294998,"line_start":251,"line_end":251,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":295149,"byte_end":295166,"line_start":257,"line_end":257,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"pub fn read_image_native(Self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":295080,"byte_end":295137,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":296063,"byte_end":296083,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"pub fn read_image_transform<T: Send, F: Send + Sync + Fn(RGBE8Pixel) ->\nT>(Self, F) -> ImageResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of tranformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of tranformed pixels","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":295989,"byte_end":296051,"line_start":275,"line_end":275,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297768,"byte_end":297782,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"pub fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297665,"byte_end":297725,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297730,"byte_end":297756,"line_start":318,"line_end":318,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297965,"byte_end":297979,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"pub fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297884,"byte_end":297945,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":297950,"byte_end":297953,"line_start":324,"line_end":324,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1949},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":298930,"byte_end":298953,"line_start":356,"line_end":356,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::hdr_decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":298873,"byte_end":298918,"line_start":355,"line_end":355,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306555,"byte_end":306566,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::hdr_decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306484,"byte_end":306519,"line_start":565,"line_end":565,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306704,"byte_end":306709,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::hdr_decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306573,"byte_end":306636,"line_start":568,"line_end":568,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306641,"byte_end":306695,"line_start":569,"line_end":569,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306788,"byte_end":306794,"line_start":572,"line_end":572,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::hdr_decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306720,"byte_end":306779,"line_start":571,"line_end":571,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307069,"byte_end":307080,"line_start":576,"line_end":576,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::hdr_decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Orientation matrix. For standart orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standart orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306805,"byte_end":306905,"line_start":573,"line_end":573,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306910,"byte_end":306987,"line_start":574,"line_end":574,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":306992,"byte_end":307060,"line_start":575,"line_end":575,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307279,"byte_end":307287,"line_start":579,"line_end":579,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::hdr_decoder::HDRMetadata::exposure","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in watts/steradian/m^2\n Image may not contain physical data, even if this field is set.\n","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in watts/steradian/m^2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307108,"byte_end":307198,"line_start":577,"line_end":577,"column_start":5,"column_end":95}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307203,"byte_end":307270,"line_start":578,"line_end":578,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307504,"byte_end":307520,"line_start":582,"line_end":582,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::hdr_decoder::HDRMetadata::color_correction","value":"enum_primitive::Option<(f32, f32, f32)>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Divide color values by corresponing tuple member (r, g, b) to get to get physical radiance in watts/steradian/m^2\n Image may not contain physical data, even if this field is set.\n","sig":null,"attributes":[{"value":"/ Divide color values by corresponing tuple member (r, g, b) to get to get physical radiance in watts/steradian/m^2","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307306,"byte_end":307423,"line_start":580,"line_end":580,"column_start":5,"column_end":122}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307428,"byte_end":307495,"line_start":581,"line_end":581,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307597,"byte_end":307615,"line_start":584,"line_end":584,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::hdr_decoder::HDRMetadata::pixel_aspect_ratio","value":"enum_primitive::Option<f32>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307549,"byte_end":307588,"line_start":583,"line_end":583,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307844,"byte_end":307861,"line_start":588,"line_end":588,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::hdr_decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307634,"byte_end":307719,"line_start":585,"line_end":585,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307724,"byte_end":307794,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307799,"byte_end":307835,"line_start":587,"line_end":587,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":317151,"byte_end":317164,"line_start":808,"line_end":808,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::hdr_decoder::read_raw_file","value":"pub fn read_raw_file<P: AsRef<Path>>(P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":317087,"byte_end":317143,"line_start":807,"line_end":807,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":317953,"byte_end":317963,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::hdr_encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":2045}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":317917,"byte_end":317941,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318055,"byte_end":318058,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"pub fn new(W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318024,"byte_end":318043,"line_start":11,"line_end":11,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318245,"byte_end":318251,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"pub fn encode(Self, &[Rgb<f32>], usize, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318144,"byte_end":318176,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318181,"byte_end":318233,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":325666,"byte_end":325674,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::hdr_encoder::to_rgbe8","value":"pub fn to_rgbe8(Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":325609,"byte_end":325658,"line_start":218,"line_end":218,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333011,"byte_end":333022,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[{"value":"/ The Image is not formatted properly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":332967,"byte_end":333006,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333102,"byte_end":333116,"line_start":20,"line_end":20,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[{"value":"/ The Image's dimensions are either too small or too large","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333037,"byte_end":333097,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333178,"byte_end":333194,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this image format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333123,"byte_end":333173,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333262,"byte_end":333278,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this color type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333209,"byte_end":333257,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333376,"byte_end":333389,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[{"value":"/ Not enough data was provided to the Decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333296,"byte_end":333343,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ to decode the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333348,"byte_end":333371,"line_start":29,"line_end":29,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333451,"byte_end":333458,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[{"value":"/ An I/O Error occurred while decoding the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333396,"byte_end":333446,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333522,"byte_end":333530,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333476,"byte_end":333517,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":332950,"byte_end":332960,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"pub enum ImageError {\n    FormatError(String),\n    DimensionError,\n    UnsupportedError(String),\n    UnsupportedColor(ColorType),\n    NotEnoughData,\n    IoError(io::Error),\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3420}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[{"value":"/ An enumeration of Image errors","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":332889,"byte_end":332923,"line_start":13,"line_end":13,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335493,"byte_end":335504,"line_start":86,"line_end":86,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335435,"byte_end":335483,"line_start":85,"line_end":85,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335649,"byte_end":335651,"line_start":92,"line_end":92,"column_start":5,"column_end":7},"name":"U8","qualname":"::image::DecodingResult::U8","value":"DecodingResult::U8(Vec<u8>)","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" A vector of unsigned bytes\n","sig":null,"attributes":[{"value":"/ A vector of unsigned bytes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335614,"byte_end":335644,"line_start":91,"line_end":91,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335701,"byte_end":335704,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"U16","qualname":"::image::DecodingResult::U16","value":"DecodingResult::U16(Vec<u16>)","parent":{"krate":0,"index":3424},"children":[],"decl_id":null,"docs":" A vector of unsigned words\n","sig":null,"attributes":[{"value":"/ A vector of unsigned words","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335666,"byte_end":335696,"line_start":93,"line_end":93,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335593,"byte_end":335607,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"DecodingResult","qualname":"::image::DecodingResult","value":"pub enum DecodingResult { U8(Vec<u8>), U16(Vec<u16>), }","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3428}],"decl_id":null,"docs":" Result of a decoding process\n","sig":null,"attributes":[{"value":"/ Result of a decoding process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335534,"byte_end":335566,"line_start":88,"line_end":88,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336101,"byte_end":336104,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336070,"byte_end":336096,"line_start":109,"line_end":109,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336143,"byte_end":336147,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336111,"byte_end":336138,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336185,"byte_end":336188,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336154,"byte_end":336180,"line_start":115,"line_end":115,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336227,"byte_end":336231,"line_start":119,"line_end":119,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336195,"byte_end":336222,"line_start":118,"line_end":118,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336269,"byte_end":336272,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"PPM","qualname":"::image::ImageFormat::PPM","value":"ImageFormat::PPM","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in PPM Format\n","sig":null,"attributes":[{"value":"/ An Image in PPM Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336238,"byte_end":336264,"line_start":121,"line_end":121,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336311,"byte_end":336315,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336279,"byte_end":336306,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336353,"byte_end":336356,"line_start":128,"line_end":128,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336322,"byte_end":336348,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336394,"byte_end":336397,"line_start":131,"line_end":131,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336363,"byte_end":336389,"line_start":130,"line_end":130,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336435,"byte_end":336438,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336404,"byte_end":336430,"line_start":133,"line_end":133,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336485,"byte_end":336488,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336445,"byte_end":336480,"line_start":136,"line_end":136,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336052,"byte_end":336063,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat { PNG, JPEG, GIF, WEBP, PPM, TIFF, TGA, BMP, ICO, HDR, }","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335895,"byte_end":335941,"line_start":105,"line_end":105,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335942,"byte_end":335997,"line_start":106,"line_end":106,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336545,"byte_end":336557,"line_start":141,"line_end":141,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336493,"byte_end":336534,"line_start":140,"line_end":140,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336643,"byte_end":336653,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&mut Self) -> ImageResult<(u32, u32)>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336571,"byte_end":336635,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336768,"byte_end":336777,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"pub fn colortype(&mut Self) -> ImageResult<ColorType>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image e.g. RGB(8) (8bit RGB)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336698,"byte_end":336760,"line_start":145,"line_end":145,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336892,"byte_end":336899,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"row_len","qualname":"::image::ImageDecoder::row_len","value":"pub fn row_len(&mut Self) -> ImageResult<usize>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Returns the length in bytes of one decoded row of the image\n","sig":null,"attributes":[{"value":"/ Returns the length in bytes of one decoded row of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336821,"byte_end":336884,"line_start":148,"line_end":148,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337020,"byte_end":337033,"line_start":152,"line_end":152,"column_start":8,"column_end":21},"name":"read_scanline","qualname":"::image::ImageDecoder::read_scanline","value":"pub fn read_scanline(&mut Self, &mut [u8]) -> ImageResult<u32>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Reads one row from the image into ```buf``` and returns the row index\n","sig":null,"attributes":[{"value":"/ Reads one row from the image into ```buf``` and returns the row index","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336939,"byte_end":337012,"line_start":151,"line_end":151,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337149,"byte_end":337159,"line_start":155,"line_end":155,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(&mut Self) -> ImageResult<DecodingResult>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Decodes the entire image and return it as a Vector\n","sig":null,"attributes":[{"value":"/ Decodes the entire image and return it as a Vector","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337087,"byte_end":337141,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337257,"byte_end":337268,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"is_animated","qualname":"::image::ImageDecoder::is_animated","value":"pub fn is_animated(&mut Self) -> ImageResult<bool>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Returns true if the image is animated\n","sig":null,"attributes":[{"value":"/ Returns true if the image is animated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337208,"byte_end":337249,"line_start":157,"line_end":157,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337547,"byte_end":337558,"line_start":167,"line_end":167,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::ImageDecoder::into_frames","value":"pub fn into_frames(Self) -> ImageResult<Frames>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Returns the frames of the image","sig":null,"attributes":[{"value":"/ Returns the frames of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337433,"byte_end":337468,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337473,"byte_end":337476,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If the image is not animated it returns a single frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337481,"byte_end":337539,"line_start":166,"line_end":166,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337867,"byte_end":337876,"line_start":175,"line_end":175,"column_start":8,"column_end":17},"name":"load_rect","qualname":"::image::ImageDecoder::load_rect","value":"pub fn load_rect(&mut Self, u32, u32, u32, u32) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":" Decodes a specific region of the image, represented by the rectangle\n starting from ```x``` and ```y``` and having ```length``` and ```width```\n","sig":null,"attributes":[{"value":"/ Decodes a specific region of the image, represented by the rectangle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337705,"byte_end":337777,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ starting from ```x``` and ```y``` and having ```length``` and ```width```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":337782,"byte_end":337859,"line_start":174,"line_end":174,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":338921,"byte_end":338927,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":338881,"byte_end":338909,"line_start":216,"line_end":216,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339708,"byte_end":339717,"line_start":250,"line_end":250,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[{"value":"/ Mutable pixel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339518,"byte_end":339544,"line_start":247,"line_end":247,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339545,"byte_end":339548,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339549,"byte_end":339696,"line_start":249,"line_end":249,"column_start":1,"column_end":148}}]},{"kind":"Trait","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340761,"byte_end":340773,"line_start":291,"line_end":291,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: Sized","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2195}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340714,"byte_end":340750,"line_start":290,"line_end":290,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340819,"byte_end":340824,"line_start":293,"line_end":293,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImage::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340787,"byte_end":340809,"line_start":292,"line_end":292,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340885,"byte_end":340895,"line_start":296,"line_end":296,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImage::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340838,"byte_end":340877,"line_start":295,"line_end":295,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340959,"byte_end":340964,"line_start":299,"line_end":299,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImage::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340923,"byte_end":340951,"line_start":298,"line_end":298,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341079,"byte_end":341085,"line_start":305,"line_end":305,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImage::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341042,"byte_end":341071,"line_start":304,"line_end":304,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341212,"byte_end":341218,"line_start":311,"line_end":311,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImage::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341163,"byte_end":341204,"line_start":310,"line_end":310,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341335,"byte_end":341344,"line_start":314,"line_end":314,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImage::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341256,"byte_end":341327,"line_start":313,"line_end":313,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341769,"byte_end":341778,"line_start":332,"line_end":332,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImage::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341594,"byte_end":341633,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341638,"byte_end":341641,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341646,"byte_end":341658,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341663,"byte_end":341666,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341671,"byte_end":341711,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341716,"byte_end":341719,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341724,"byte_end":341761,"line_start":331,"line_end":331,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341944,"byte_end":341957,"line_start":339,"line_end":339,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341823,"byte_end":341858,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341863,"byte_end":341866,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341871,"byte_end":341883,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341888,"byte_end":341891,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":341896,"byte_end":341936,"line_start":338,"line_end":338,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342153,"byte_end":342169,"line_start":344,"line_end":344,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImage::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342011,"byte_end":342050,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342055,"byte_end":342058,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342063,"byte_end":342138,"line_start":343,"line_end":343,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342370,"byte_end":342379,"line_start":353,"line_end":353,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342250,"byte_end":342284,"line_start":348,"line_end":348,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342289,"byte_end":342292,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342297,"byte_end":342309,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342314,"byte_end":342317,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342322,"byte_end":342362,"line_start":352,"line_end":352,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342571,"byte_end":342587,"line_start":358,"line_end":358,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342433,"byte_end":342468,"line_start":355,"line_end":355,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342473,"byte_end":342476,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342481,"byte_end":342556,"line_start":357,"line_end":357,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342854,"byte_end":342865,"line_start":365,"line_end":365,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342685,"byte_end":342755,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342760,"byte_end":342763,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342768,"byte_end":342846,"line_start":364,"line_end":364,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343070,"byte_end":343076,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImage::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342919,"byte_end":342973,"line_start":367,"line_end":367,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":342978,"byte_end":343031,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343036,"byte_end":343062,"line_start":369,"line_end":369,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343598,"byte_end":343608,"line_start":387,"line_end":387,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> MutPixels<, Self>","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.","sig":null,"attributes":[{"value":"/ Returns an Iterator over mutable pixels of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343317,"byte_end":343375,"line_start":382,"line_end":382,"column_start":5,"column_end":63}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343380,"byte_end":343433,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343438,"byte_end":343481,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343486,"byte_end":343489,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This cannot be implemented safely in Rust. Please use the image buffer directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343494,"byte_end":343590,"line_start":386,"line_end":386,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344268,"byte_end":344277,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> bool where\nO: GenericImage<Pixel = Self::Pixel>","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343859,"byte_end":343923,"line_start":399,"line_end":399,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343928,"byte_end":343931,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":343936,"byte_end":343997,"line_start":401,"line_end":401,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344002,"byte_end":344035,"line_start":402,"line_end":402,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344040,"byte_end":344043,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a pice of the other image, use `sub_image`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344048,"byte_end":344117,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344122,"byte_end":344125,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344130,"byte_end":344143,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344148,"byte_end":344217,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344222,"byte_end":344260,"line_start":408,"line_end":408,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344999,"byte_end":345008,"line_start":431,"line_end":431,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<, Self> where\nSelf: 'static, <Self::Pixel as Pixel>::Subpixel: 'static, Self::Pixel: 'static","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is a view into this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":344937,"byte_end":344991,"line_start":430,"line_end":430,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345277,"byte_end":345285,"line_start":440,"line_end":440,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345236,"byte_end":345265,"line_start":439,"line_end":439,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345646,"byte_end":345649,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage>::new","value":"pub fn new(&mut I, u32, u32, u32, u32) -> SubImage<, I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345606,"byte_end":345634,"line_start":453,"line_end":453,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345961,"byte_end":345970,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345896,"byte_end":345949,"line_start":464,"line_end":464,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346088,"byte_end":346101,"line_start":470,"line_end":470,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346032,"byte_end":346076,"line_start":469,"line_end":469,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346335,"byte_end":346343,"line_start":478,"line_end":478,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage>::to_image","value":"pub fn to_image(&Self)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346280,"byte_end":346323,"line_start":477,"line_end":477,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365537,"byte_end":365547,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365490,"byte_end":365532,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365623,"byte_end":365634,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365565,"byte_end":365618,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365703,"byte_end":365712,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365657,"byte_end":365698,"line_start":52,"line_end":52,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365786,"byte_end":365796,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365729,"byte_end":365781,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365471,"byte_end":365483,"line_start":45,"line_end":45,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n}","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":365425,"byte_end":365444,"line_start":43,"line_end":43,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":367879,"byte_end":367888,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":367805,"byte_end":367867,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368091,"byte_end":368102,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":367991,"byte_end":368045,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368050,"byte_end":368079,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368279,"byte_end":368287,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368206,"byte_end":368267,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368463,"byte_end":368472,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368389,"byte_end":368451,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368636,"byte_end":368642,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368575,"byte_end":368624,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368811,"byte_end":368818,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368749,"byte_end":368799,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368987,"byte_end":368994,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":368926,"byte_end":368975,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369164,"byte_end":369177,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369102,"byte_end":369152,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369373,"byte_end":369377,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369290,"byte_end":369361,"line_start":147,"line_end":147,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369671,"byte_end":369678,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369616,"byte_end":369659,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369921,"byte_end":369932,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":369858,"byte_end":369909,"line_start":165,"line_end":165,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370184,"byte_end":370192,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370128,"byte_end":370172,"line_start":173,"line_end":173,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370440,"byte_end":370452,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370376,"byte_end":370428,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370712,"byte_end":370720,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370651,"byte_end":370700,"line_start":189,"line_end":189,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370974,"byte_end":370986,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":370905,"byte_end":370962,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371268,"byte_end":371282,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371185,"byte_end":371256,"line_start":205,"line_end":205,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371564,"byte_end":371582,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371473,"byte_end":371552,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371848,"byte_end":371858,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"pub fn raw_pixels(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371788,"byte_end":371836,"line_start":221,"line_end":221,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371966,"byte_end":371971,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":371919,"byte_end":371954,"line_start":226,"line_end":226,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":372381,"byte_end":372390,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":372324,"byte_end":372369,"line_start":236,"line_end":236,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":372920,"byte_end":372926,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":372834,"byte_end":372870,"line_start":246,"line_end":246,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":372875,"byte_end":372908,"line_start":247,"line_end":247,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373290,"byte_end":373296,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373013,"byte_end":373072,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373077,"byte_end":373140,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373145,"byte_end":373207,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373212,"byte_end":373278,"line_start":255,"line_end":255,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374114,"byte_end":374126,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373912,"byte_end":373971,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":373976,"byte_end":374032,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374037,"byte_end":374102,"line_start":280,"line_end":280,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374488,"byte_end":374492,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374376,"byte_end":374419,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374424,"byte_end":374476,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374868,"byte_end":374877,"line_start":300,"line_end":300,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374604,"byte_end":374649,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374654,"byte_end":374705,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374710,"byte_end":374766,"line_start":297,"line_end":297,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374771,"byte_end":374774,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ See https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":374779,"byte_end":374856,"line_start":299,"line_end":299,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375086,"byte_end":375095,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375021,"byte_end":375074,"line_start":304,"line_end":304,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375505,"byte_end":375520,"line_start":316,"line_end":316,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375302,"byte_end":375340,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375345,"byte_end":375404,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375409,"byte_end":375493,"line_start":315,"line_end":315,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375820,"byte_end":375828,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375628,"byte_end":375666,"line_start":320,"line_end":320,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375671,"byte_end":375727,"line_start":321,"line_end":321,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375732,"byte_end":375808,"line_start":322,"line_end":322,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376176,"byte_end":376185,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375944,"byte_end":375978,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":375983,"byte_end":376034,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376039,"byte_end":376108,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376113,"byte_end":376164,"line_start":330,"line_end":330,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376344,"byte_end":376349,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376302,"byte_end":376332,"line_start":335,"line_end":335,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376495,"byte_end":376500,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376451,"byte_end":376483,"line_start":340,"line_end":340,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376659,"byte_end":376667,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376604,"byte_end":376647,"line_start":345,"line_end":345,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376820,"byte_end":376829,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376764,"byte_end":376808,"line_start":350,"line_end":350,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376983,"byte_end":376992,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":376927,"byte_end":376971,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":377147,"byte_end":377151,"line_start":361,"line_end":361,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<W: Write>(&Self, &mut W, ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":377090,"byte_end":377135,"line_start":360,"line_end":360,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":383665,"byte_end":383669,"line_start":543,"line_end":543,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":383539,"byte_end":383588,"line_start":541,"line_end":541,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":383589,"byte_end":383657,"line_start":542,"line_end":542,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":385233,"byte_end":385244,"line_start":587,"line_end":587,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> io::Result<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":384879,"byte_end":384941,"line_start":580,"line_end":580,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":384942,"byte_end":384945,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":384946,"byte_end":385032,"line_start":582,"line_end":582,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":385033,"byte_end":385094,"line_start":583,"line_end":583,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":385096,"byte_end":385187,"line_start":585,"line_end":585,"column_start":1,"column_end":92}},{"value":"/ jpeg and png files are supported.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":385188,"byte_end":385225,"line_start":586,"line_end":586,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":386671,"byte_end":386675,"line_start":619,"line_end":619,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":386627,"byte_end":386663,"line_start":618,"line_end":618,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388684,"byte_end":388700,"line_start":663,"line_end":663,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388537,"byte_end":388577,"line_start":659,"line_end":659,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388578,"byte_end":388581,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388582,"byte_end":388633,"line_start":661,"line_end":661,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388634,"byte_end":388676,"line_start":662,"line_end":662,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388886,"byte_end":388914,"line_start":670,"line_end":670,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388820,"byte_end":388860,"line_start":668,"line_end":668,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":388861,"byte_end":388878,"line_start":669,"line_end":669,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389297,"byte_end":389309,"line_start":680,"line_end":680,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389036,"byte_end":389076,"line_start":675,"line_end":675,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389077,"byte_end":389080,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389081,"byte_end":389174,"line_start":677,"line_end":677,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389175,"byte_end":389217,"line_start":678,"line_end":678,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":389218,"byte_end":389289,"line_start":679,"line_end":679,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390361,"byte_end":390365,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390334,"byte_end":390356,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390419,"byte_end":390422,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains R, G and B channels","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390376,"byte_end":390414,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390480,"byte_end":390487,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[{"value":"/ Pixel is an index into a color palette","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390433,"byte_end":390475,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390547,"byte_end":390552,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390498,"byte_end":390542,"line_start":20,"line_end":20,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390606,"byte_end":390610,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is RGB with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390563,"byte_end":390601,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390318,"byte_end":390327,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType { Gray(u8), RGB(u8), Palette(u8), GrayA(u8), RGBA(u8), }","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3553}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and their bit depths","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":390197,"byte_end":390263,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395430,"byte_end":395433,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":3742}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391570,"byte_end":391580,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391581,"byte_end":391603,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395430,"byte_end":395433,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"pub fn Rgb<T: Primitive>([T; ]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391665,"byte_end":391703,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395480,"byte_end":395484,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":3770}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391570,"byte_end":391580,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391581,"byte_end":391603,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395480,"byte_end":395484,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"pub fn Luma<T: Primitive>([T; ]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391665,"byte_end":391703,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395536,"byte_end":395540,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":3798}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391570,"byte_end":391580,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391581,"byte_end":391603,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395536,"byte_end":395540,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"pub fn Rgba<T: Primitive>([T; ]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391665,"byte_end":391703,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395605,"byte_end":395610,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":3826}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391570,"byte_end":391580,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391581,"byte_end":391603,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395605,"byte_end":395610,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"pub fn LumaA<T: Primitive>([T; ]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":391665,"byte_end":391703,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395752,"byte_end":395761,"line_start":217,"line_end":217,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2534}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395680,"byte_end":395741,"line_start":216,"line_end":216,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395851,"byte_end":395861,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395775,"byte_end":395843,"line_start":218,"line_end":218,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404631,"byte_end":404636,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2693},{"krate":0,"index":2695},{"krate":0,"index":2696}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404506,"byte_end":404530,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404531,"byte_end":404534,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404535,"byte_end":404620,"line_start":16,"line_end":16,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404700,"byte_end":404708,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404657,"byte_end":404690,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404788,"byte_end":404801,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404726,"byte_end":404780,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404862,"byte_end":404870,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404816,"byte_end":404854,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404958,"byte_end":404970,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404905,"byte_end":404950,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405142,"byte_end":405153,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns a string that can help to interprete the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interprete the meaning each channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405013,"byte_end":405086,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405091,"byte_end":405134,"line_start":31,"line_end":31,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405233,"byte_end":405243,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405178,"byte_end":405225,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405449,"byte_end":405458,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405265,"byte_end":405330,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405335,"byte_end":405410,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405415,"byte_end":405418,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405423,"byte_end":405441,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405707,"byte_end":405720,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\nSelf::Subpixel) -> Self","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405540,"byte_end":405596,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405601,"byte_end":405668,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405673,"byte_end":405676,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405681,"byte_end":405699,"line_start":46,"line_end":46,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406035,"byte_end":406045,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405811,"byte_end":405843,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405848,"byte_end":405851,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405856,"byte_end":405940,"line_start":51,"line_end":51,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":405945,"byte_end":406027,"line_start":52,"line_end":52,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406325,"byte_end":406339,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406087,"byte_end":406133,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406138,"byte_end":406141,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406146,"byte_end":406230,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to precent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406235,"byte_end":406317,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406426,"byte_end":406432,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406389,"byte_end":406418,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406528,"byte_end":406535,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406469,"byte_end":406520,"line_start":64,"line_end":64,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406611,"byte_end":406618,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406573,"byte_end":406603,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406716,"byte_end":406729,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406656,"byte_end":406708,"line_start":70,"line_end":70,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406837,"byte_end":406840,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406768,"byte_end":406829,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406989,"byte_end":406994,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":406920,"byte_end":406981,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407207,"byte_end":407221,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407070,"byte_end":407142,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407147,"byte_end":407199,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407515,"byte_end":407531,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407362,"byte_end":407434,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407439,"byte_end":407507,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407770,"byte_end":407774,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407668,"byte_end":407732,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407737,"byte_end":407762,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408010,"byte_end":408016,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407892,"byte_end":407956,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":407961,"byte_end":408002,"line_start":95,"line_end":95,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408159,"byte_end":408165,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408130,"byte_end":408151,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408276,"byte_end":408281,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408183,"byte_end":408268,"line_start":102,"line_end":102,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408351,"byte_end":408357,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2700}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408311,"byte_end":408339,"line_start":106,"line_end":106,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409000,"byte_end":409009,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2715}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408952,"byte_end":408988,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409681,"byte_end":409696,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409632,"byte_end":409669,"line_start":157,"line_end":157,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":410349,"byte_end":410367,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":410300,"byte_end":410337,"line_start":183,"line_end":183,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3852},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411038,"byte_end":411049,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":410985,"byte_end":411009,"line_start":209,"line_end":209,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411533,"byte_end":411541,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411369,"byte_end":411416,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411421,"byte_end":411457,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411462,"byte_end":411465,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns None if the container is not big enough","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411470,"byte_end":411521,"line_start":227,"line_end":227,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412053,"byte_end":412061,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412004,"byte_end":412041,"line_start":245,"line_end":245,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412163,"byte_end":412173,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412112,"byte_end":412151,"line_start":250,"line_end":250,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412282,"byte_end":412287,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412242,"byte_end":412270,"line_start":255,"line_end":255,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412375,"byte_end":412381,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412334,"byte_end":412363,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412495,"byte_end":412501,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412429,"byte_end":412483,"line_start":265,"line_end":265,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412823,"byte_end":412839,"line_start":277,"line_end":277,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412669,"byte_end":412713,"line_start":274,"line_end":274,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412718,"byte_end":412771,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":412776,"byte_end":412811,"line_start":276,"line_end":276,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413185,"byte_end":413194,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413019,"byte_end":413073,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413078,"byte_end":413081,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413086,"byte_end":413098,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413103,"byte_end":413106,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413111,"byte_end":413173,"line_start":290,"line_end":290,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413806,"byte_end":413816,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413626,"byte_end":413688,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413693,"byte_end":413746,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413751,"byte_end":413794,"line_start":307,"line_end":307,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414054,"byte_end":414074,"line_start":317,"line_end":317,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413998,"byte_end":414042,"line_start":316,"line_end":316,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414469,"byte_end":414482,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414295,"byte_end":414357,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414362,"byte_end":414365,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414370,"byte_end":414382,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414387,"byte_end":414390,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414395,"byte_end":414457,"line_start":331,"line_end":331,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414919,"byte_end":414928,"line_start":345,"line_end":345,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414770,"byte_end":414807,"line_start":340,"line_end":340,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414812,"byte_end":414815,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414820,"byte_end":414832,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414837,"byte_end":414840,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":414845,"byte_end":414907,"line_start":344,"line_end":344,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415336,"byte_end":415340,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> io::Result<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415145,"byte_end":415198,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415203,"byte_end":415206,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415211,"byte_end":415267,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415272,"byte_end":415324,"line_start":356,"line_end":356,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":419558,"byte_end":419561,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.\n","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":419485,"byte_end":419546,"line_start":489,"line_end":489,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420029,"byte_end":420039,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":419966,"byte_end":420017,"line_start":503,"line_end":503,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420451,"byte_end":420458,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.\n The arguments to the function are the pixel's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420282,"byte_end":420364,"line_start":513,"line_end":513,"column_start":5,"column_end":87}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420369,"byte_end":420439,"line_start":514,"line_end":514,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420897,"byte_end":420905,"line_start":527,"line_end":527,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420777,"byte_end":420831,"line_start":525,"line_end":525,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":420836,"byte_end":420885,"line_start":526,"line_end":526,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421181,"byte_end":421189,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421081,"byte_end":421142,"line_start":532,"line_end":532,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421147,"byte_end":421169,"line_start":533,"line_end":533,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421317,"byte_end":421330,"line_start":540,"line_end":540,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2818}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421251,"byte_end":421306,"line_start":539,"line_end":539,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421516,"byte_end":421523,"line_start":545,"line_end":545,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":2816},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421340,"byte_end":421381,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421386,"byte_end":421389,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ A generic impementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421394,"byte_end":421479,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421484,"byte_end":421508,"line_start":544,"line_end":544,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421791,"byte_end":421805,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421601,"byte_end":421661,"line_start":550,"line_end":550,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421666,"byte_end":421734,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421739,"byte_end":421779,"line_start":552,"line_end":552,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423775,"byte_end":423783,"line_start":605,"line_end":605,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423736,"byte_end":423765,"line_start":604,"line_end":604,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423872,"byte_end":423881,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423817,"byte_end":423862,"line_start":606,"line_end":606,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423961,"byte_end":423970,"line_start":609,"line_end":609,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423916,"byte_end":423951,"line_start":608,"line_end":608,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":424066,"byte_end":424080,"line_start":611,"line_end":611,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":424005,"byte_end":424056,"line_start":610,"line_end":610,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425839,"byte_end":425848,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425793,"byte_end":425828,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426344,"byte_end":426350,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" Holds the frames of the animated image\n","sig":null,"attributes":[{"value":"/ Holds the frames of the animated image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426290,"byte_end":426332,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426470,"byte_end":426473,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Vec<Frame>) -> Frames","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame iterator\n","sig":null,"attributes":[{"value":"/ Contructs a new frame iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426424,"byte_end":426458,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426656,"byte_end":426661,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426599,"byte_end":426627,"line_start":21,"line_end":21,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426868,"byte_end":426871,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426831,"byte_end":426856,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427087,"byte_end":427097,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427050,"byte_end":427075,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427339,"byte_end":427344,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427304,"byte_end":427327,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427438,"byte_end":427444,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427398,"byte_end":427426,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427540,"byte_end":427551,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427500,"byte_end":427528,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427640,"byte_end":427644,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427604,"byte_end":427628,"line_start":69,"line_end":69,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427726,"byte_end":427729,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427690,"byte_end":427714,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5260,"byte_end":5268,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32597,"byte_end":32604,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":33054,"byte_end":33062,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53915,"byte_end":53926,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":55912,"byte_end":55923,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":84770,"byte_end":84780,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87043,"byte_end":87053,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88808,"byte_end":88818,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":126928,"byte_end":126938,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129465,"byte_end":129475,"line_start":18,"line_end":18,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":131556,"byte_end":131566,"line_start":82,"line_end":82,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":133130,"byte_end":133140,"line_start":132,"line_end":132,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133807,"byte_end":133817,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":134640,"byte_end":134650,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135810,"byte_end":135820,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":136528,"byte_end":136537,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":137529,"byte_end":137539,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":139383,"byte_end":139393,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":141812,"byte_end":141820,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":143151,"byte_end":143161,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148355,"byte_end":148365,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":156912,"byte_end":156921,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":159999,"byte_end":160010,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174450,"byte_end":174461,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":175371,"byte_end":175382,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":177080,"byte_end":177089,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":177406,"byte_end":177416,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187702,"byte_end":187709,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":188597,"byte_end":188604,"line_start":56,"line_end":56,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189724,"byte_end":189731,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":190162,"byte_end":190172,"line_start":111,"line_end":111,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":212032,"byte_end":212037,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":212879,"byte_end":212884,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":213156,"byte_end":213161,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":216559,"byte_end":216568,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217040,"byte_end":217049,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217189,"byte_end":217198,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217462,"byte_end":217473,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217722,"byte_end":217733,"line_start":93,"line_end":93,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217885,"byte_end":217896,"line_start":100,"line_end":100,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":218047,"byte_end":218058,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":194013,"byte_end":194024,"line_start":141,"line_end":141,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":204872,"byte_end":204883,"line_start":431,"line_end":431,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":218941,"byte_end":218950,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":220873,"byte_end":220879,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":222287,"byte_end":222295,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223389,"byte_end":223399,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":231947,"byte_end":231957,"line_start":405,"line_end":405,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233244,"byte_end":233254,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":244397,"byte_end":244408,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":252482,"byte_end":252490,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":253915,"byte_end":253924,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":255167,"byte_end":255182,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257125,"byte_end":257135,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":285013,"byte_end":285023,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287253,"byte_end":287263,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287883,"byte_end":287893,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289746,"byte_end":289756,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291769,"byte_end":291779,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":298115,"byte_end":298125,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":299269,"byte_end":299292,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":299586,"byte_end":299609,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":301317,"byte_end":301340,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307894,"byte_end":307905,"line_start":591,"line_end":591,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":314085,"byte_end":314091,"line_start":732,"line_end":732,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":314351,"byte_end":314357,"line_start":738,"line_end":738,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318004,"byte_end":318014,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":320897,"byte_end":320908,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321072,"byte_end":321083,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321662,"byte_end":321682,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321941,"byte_end":321961,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333556,"byte_end":333566,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":334649,"byte_end":334659,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335335,"byte_end":335345,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339069,"byte_end":339075,"line_start":225,"line_end":225,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2163},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339868,"byte_end":339877,"line_start":258,"line_end":258,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345505,"byte_end":345513,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346834,"byte_end":346842,"line_start":494,"line_end":494,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":351821,"byte_end":351830,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":352371,"byte_end":352380,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":354169,"byte_end":354178,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":354546,"byte_end":354555,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":356402,"byte_end":356414,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":360805,"byte_end":360809,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":361106,"byte_end":361118,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":367786,"byte_end":367798,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":379133,"byte_end":379145,"line_start":425,"line_end":425,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395941,"byte_end":395942,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396096,"byte_end":396100,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396522,"byte_end":396526,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396949,"byte_end":396953,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":397151,"byte_end":397156,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":397592,"byte_end":397597,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398036,"byte_end":398041,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398298,"byte_end":398302,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398606,"byte_end":398610,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2561}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398911,"byte_end":398915,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399238,"byte_end":399241,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399512,"byte_end":399515,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399779,"byte_end":399782,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":400150,"byte_end":400155,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":401038,"byte_end":401042,"line_start":394,"line_end":394,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":401152,"byte_end":401156,"line_start":400,"line_end":400,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403110,"byte_end":403113,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403324,"byte_end":403329,"line_start":447,"line_end":447,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403506,"byte_end":403510,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403708,"byte_end":403712,"line_start":468,"line_end":468,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403927,"byte_end":403930,"line_start":478,"line_end":478,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408477,"byte_end":408483,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408745,"byte_end":408751,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409132,"byte_end":409141,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409415,"byte_end":409424,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409868,"byte_end":409883,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":410542,"byte_end":410560,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411237,"byte_end":411248,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413483,"byte_end":413494,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415038,"byte_end":415049,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415656,"byte_end":415667,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415928,"byte_end":415939,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416202,"byte_end":416213,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416481,"byte_end":416492,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416751,"byte_end":416762,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":417113,"byte_end":417124,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":419418,"byte_end":419429,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421585,"byte_end":421594,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423202,"byte_end":423213,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426411,"byte_end":426417,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426819,"byte_end":426824,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427794,"byte_end":427800,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1592,"byte_end":1596,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":179}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\mod.rs","byte_start":2457,"byte_end":2462,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":180}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\mod.rs","byte_start":2472,"byte_end":2474,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":183}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1637,"byte_end":1645,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":229}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\mod.rs","byte_start":17043,"byte_end":17051,"line_start":54,"line_end":54,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":340}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1697,"byte_end":1701,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":486}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\mod.rs","byte_start":53507,"byte_end":53510,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":550}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":730}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1778,"byte_end":1781,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":834}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1815,"byte_end":1818,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":905}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1853,"byte_end":1857,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1035}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1897,"byte_end":1900,"line_start":124,"line_end":124,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1230}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1935,"byte_end":1939,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1299}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":1973,"byte_end":1976,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1512}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":2010,"byte_end":2013,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1620}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1853}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\math\\nq.rs","byte_start":5260,"byte_end":5268,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":32597,"byte_end":32604,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2893},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\imageops\\colorops.rs","byte_start":33054,"byte_end":33062,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":205},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":53915,"byte_end":53926,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\decoder.rs","byte_start":55912,"byte_end":55923,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":84770,"byte_end":84780,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":87043,"byte_end":87053,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\webp\\vp8.rs","byte_start":88808,"byte_end":88818,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\encoder.rs","byte_start":126928,"byte_end":126938,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":129465,"byte_end":129475,"line_start":18,"line_end":18,"column_start":15,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":131556,"byte_end":131566,"line_start":82,"line_end":82,"column_start":32,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ppm\\decoder.rs","byte_start":133130,"byte_end":133140,"line_start":132,"line_end":132,"column_start":15,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":133807,"byte_end":133817,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":134640,"byte_end":134650,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":874},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":135810,"byte_end":135820,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":136528,"byte_end":136537,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\png.rs","byte_start":137529,"byte_end":137539,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":139383,"byte_end":139393,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":141812,"byte_end":141820,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\decoder.rs","byte_start":143151,"byte_end":143161,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":955},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\ico\\encoder.rs","byte_start":148355,"byte_end":148365,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":156912,"byte_end":156921,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\encoder.rs","byte_start":159999,"byte_end":160010,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":174450,"byte_end":174461,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":175371,"byte_end":175382,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":177080,"byte_end":177089,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\jpeg\\decoder.rs","byte_start":177406,"byte_end":177416,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":187702,"byte_end":187709,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":188597,"byte_end":188604,"line_start":56,"line_end":56,"column_start":32,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":189724,"byte_end":189731,"line_start":95,"line_end":95,"column_start":16,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\gif.rs","byte_start":190162,"byte_end":190172,"line_start":111,"line_end":111,"column_start":35,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":212032,"byte_end":212037,"line_start":97,"line_end":97,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":212879,"byte_end":212884,"line_start":127,"line_end":127,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1402},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":213156,"byte_end":213161,"line_start":137,"line_end":137,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":215670,"byte_end":215674,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":4723},"to":{"krate":0,"index":1444}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":216559,"byte_end":216568,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217040,"byte_end":217049,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1448},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217189,"byte_end":217198,"line_start":69,"line_end":69,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":1444}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217462,"byte_end":217473,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217722,"byte_end":217733,"line_start":93,"line_end":93,"column_start":26,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3120},"to":{"krate":0,"index":1444}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":217885,"byte_end":217896,"line_start":100,"line_end":100,"column_start":31,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3120},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\stream.rs","byte_start":218047,"byte_end":218058,"line_start":107,"line_end":107,"column_start":31,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3120},"to":{"krate":1,"index":4798}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":194013,"byte_end":194024,"line_start":141,"line_end":141,"column_start":22,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tiff\\decoder\\mod.rs","byte_start":204872,"byte_end":204883,"line_start":431,"line_end":431,"column_start":39,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3223},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":218941,"byte_end":218950,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":220873,"byte_end":220879,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":222287,"byte_end":222295,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":223389,"byte_end":223399,"line_start":176,"line_end":176,"column_start":22,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\tga\\decoder.rs","byte_start":231947,"byte_end":231957,"line_start":405,"line_end":405,"column_start":39,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\encoder.rs","byte_start":233244,"byte_end":233254,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":244397,"byte_end":244408,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1741},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":252482,"byte_end":252490,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":253915,"byte_end":253924,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":255167,"byte_end":255182,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1807},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":257125,"byte_end":257135,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\bmp\\decoder.rs","byte_start":285013,"byte_end":285023,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1774},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287253,"byte_end":287263,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":287883,"byte_end":287893,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3333},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":289746,"byte_end":289756,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":291769,"byte_end":291779,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":298115,"byte_end":298125,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":299269,"byte_end":299292,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":299586,"byte_end":299609,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1949},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":301317,"byte_end":301340,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1949},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":307894,"byte_end":307905,"line_start":591,"line_end":591,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":314085,"byte_end":314091,"line_start":732,"line_end":732,"column_start":46,"column_end":52},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":1990}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_decoder.rs","byte_start":314351,"byte_end":314357,"line_start":738,"line_end":738,"column_start":46,"column_end":52},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":1990}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":318004,"byte_end":318014,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":320897,"byte_end":320908,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321072,"byte_end":321083,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2059},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321662,"byte_end":321682,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\hdr\\hdr_encoder.rs","byte_start":321941,"byte_end":321961,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":333556,"byte_end":333566,"line_start":39,"line_end":39,"column_start":23,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":334649,"byte_end":334659,"line_start":57,"line_end":57,"column_start":16,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3403},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":335335,"byte_end":335345,"line_start":78,"line_end":78,"column_start":26,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":336559,"byte_end":336564,"line_start":141,"line_end":141,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":2143}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339069,"byte_end":339075,"line_start":225,"line_end":225,"column_start":40,"column_end":46},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":339868,"byte_end":339877,"line_start":258,"line_end":258,"column_start":45,"column_end":54},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2165},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":340775,"byte_end":340780,"line_start":291,"line_end":291,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":2178}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":345505,"byte_end":345513,"line_start":449,"line_end":449,"column_start":37,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\image.rs","byte_start":346834,"byte_end":346842,"line_start":494,"line_end":494,"column_start":54,"column_end":62},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":2178}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":350379,"byte_end":350383,"line_start":8,"line_end":8,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":4723},"to":{"krate":0,"index":2236}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":350515,"byte_end":350520,"line_start":14,"line_end":14,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":4780},"to":{"krate":0,"index":2238}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":351821,"byte_end":351830,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3465},"to":{"krate":0,"index":2236}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":352371,"byte_end":352380,"line_start":99,"line_end":99,"column_start":23,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3477},"to":{"krate":0,"index":2236}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":354169,"byte_end":354178,"line_start":178,"line_end":178,"column_start":27,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3489},"to":{"krate":0,"index":2238}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\bitstream.rs","byte_start":354546,"byte_end":354555,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":2238}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":356402,"byte_end":356414,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":360805,"byte_end":360809,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\utils\\lzw.rs","byte_start":361106,"byte_end":361118,"line_start":193,"line_end":193,"column_start":6,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":367786,"byte_end":367798,"line_start":97,"line_end":97,"column_start":6,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\dynimage.rs","byte_start":379133,"byte_end":379145,"line_start":425,"line_end":425,"column_start":23,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3525},"to":{"krate":0,"index":2178}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":395941,"byte_end":395942,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396096,"byte_end":396100,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3768},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396522,"byte_end":396526,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3768},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":396949,"byte_end":396953,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3768},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":397151,"byte_end":397156,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":397592,"byte_end":397597,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398036,"byte_end":398041,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398298,"byte_end":398302,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398606,"byte_end":398610,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":398911,"byte_end":398915,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399238,"byte_end":399241,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399512,"byte_end":399515,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":399779,"byte_end":399782,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2532}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":400150,"byte_end":400155,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":2574}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":401038,"byte_end":401042,"line_start":394,"line_end":394,"column_start":30,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3768},"to":{"krate":0,"index":2574}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":401152,"byte_end":401156,"line_start":400,"line_end":400,"column_start":30,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":2574}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403110,"byte_end":403113,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2574}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403324,"byte_end":403329,"line_start":447,"line_end":447,"column_start":31,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":2588}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403506,"byte_end":403510,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3768},"to":{"krate":0,"index":2588}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403708,"byte_end":403712,"line_start":468,"line_end":468,"column_start":31,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":2588}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\color.rs","byte_start":403927,"byte_end":403930,"line_start":478,"line_end":478,"column_start":31,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":2588}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404638,"byte_end":404642,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":404645,"byte_end":404650,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":2666}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408477,"byte_end":408483,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":408745,"byte_end":408751,"line_start":122,"line_end":122,"column_start":49,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2697},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409132,"byte_end":409141,"line_start":137,"line_end":137,"column_start":38,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409415,"byte_end":409424,"line_start":148,"line_end":148,"column_start":49,"column_end":58},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":409868,"byte_end":409883,"line_start":165,"line_end":165,"column_start":38,"column_end":53},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":410542,"byte_end":410560,"line_start":191,"line_end":191,"column_start":38,"column_end":56},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2739},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":411237,"byte_end":411248,"line_start":219,"line_end":219,"column_start":20,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":413483,"byte_end":413494,"line_start":300,"line_end":300,"column_start":20,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415038,"byte_end":415049,"line_start":350,"line_end":350,"column_start":20,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415656,"byte_end":415667,"line_start":367,"line_end":367,"column_start":30,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3276}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":415928,"byte_end":415939,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3289}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416202,"byte_end":416213,"line_start":387,"line_end":387,"column_start":42,"column_end":53},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3361}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416481,"byte_end":416492,"line_start":398,"line_end":398,"column_start":45,"column_end":56},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":3365}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":416751,"byte_end":416762,"line_start":408,"line_end":408,"column_start":30,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3852},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":417113,"byte_end":417124,"line_start":422,"line_end":422,"column_start":37,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3852},"to":{"krate":0,"index":2178}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":419418,"byte_end":419429,"line_start":486,"line_end":486,"column_start":26,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":421585,"byte_end":421594,"line_start":549,"line_end":549,"column_start":6,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\buffer.rs","byte_start":423202,"byte_end":423213,"line_start":588,"line_end":588,"column_start":9,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3852},"to":{"krate":0,"index":2816}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425850,"byte_end":425854,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425857,"byte_end":425864,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":362},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425867,"byte_end":425870,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":19,"index":968},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425873,"byte_end":425883,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2755},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425892,"byte_end":425897,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\traits.rs","byte_start":425900,"byte_end":425907,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":19,"index":237},"to":{"krate":0,"index":2844}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426411,"byte_end":426417,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":426819,"byte_end":426824,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.17.0\\./src\\animation.rs","byte_start":427794,"byte_end":427800,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2864},"to":{"krate":2,"index":7985}}]}