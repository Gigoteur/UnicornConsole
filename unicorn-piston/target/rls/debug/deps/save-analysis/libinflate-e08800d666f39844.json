{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","inflate","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=e08800d666f39844","-C","extra-filename=-e08800d666f39844","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","adler32=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libadler32-2bda81e8c36936f2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libinflate-e08800d666f39844.rmeta"},"prelude":{"crate_id":{"name":"inflate","disambiguator":[10667599545606884776,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","num":16,"id":{"name":"adler32","disambiguator":[755946652197954418,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":432,"byte_end":42523,"line_start":10,"line_end":1058,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2928,"byte_end":2941,"line_start":79,"line_end":79,"column_start":24,"column_end":37},"alias_span":null,"name":"InflateWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2978,"byte_end":2991,"line_start":82,"line_end":82,"column_start":23,"column_end":36},"alias_span":null,"name":"inflate_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2993,"byte_end":3011,"line_start":82,"line_end":82,"column_start":38,"column_end":56},"alias_span":null,"name":"inflate_bytes_zlib","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":3013,"byte_end":3043,"line_start":82,"line_end":82,"column_start":58,"column_end":88},"alias_span":null,"name":"inflate_bytes_zlib_no_checksum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":3082,"byte_end":3096,"line_start":85,"line_end":85,"column_start":24,"column_end":38},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":3098,"byte_end":3115,"line_start":85,"line_end":85,"column_start":40,"column_end":57},"alias_span":null,"name":"DeflateDecoderBuf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":432,"byte_end":42523,"line_start":10,"line_end":1058,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":329},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":207},{"krate":0,"index":214},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":230},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":294}],"decl_id":null,"docs":" A [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html) decoder written in rust.","sig":null,"attributes":[{"value":"/ A [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html) decoder written in rust.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":432,"byte_end":515,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":516,"byte_end":519,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This library provides functionality to decompress data compressed with the DEFLATE algorithm,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":520,"byte_end":617,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ both with and without a [zlib](https://tools.ietf.org/html/rfc1950) header/trailer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":618,"byte_end":705,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":706,"byte_end":709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":710,"byte_end":724,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ The easiest way to get `std::Vec<u8>` containing the decompressed bytes is to use either","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":725,"byte_end":817,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ `inflate::inflate_bytes` or `inflate::inflate_bytes_zlib` (depending on whether","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":818,"byte_end":901,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/ the encoded data has zlib headers and trailers or not). The following example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":902,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ decodes the DEFLATE encoded string \"Hello, world\" and prints it:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":984,"byte_end":1052,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1057,"byte_end":1068,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use inflate::inflate_bytes;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1069,"byte_end":1100,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1101,"byte_end":1129,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1130,"byte_end":1133,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1134,"byte_end":1214,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ let decoded = inflate_bytes(&encoded).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1215,"byte_end":1266,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ println!(\"{}\", from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1267,"byte_end":1341,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1342,"byte_end":1349,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1350,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you need more flexibility, then the library also provides an implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1354,"byte_end":1436,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ of `std::io::Writer` in `inflate::writer`. Below is an example using an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1437,"byte_end":1512,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `inflate::writer::InflateWriter` to decode the DEFLATE encoded string \"Hello, world\":","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1513,"byte_end":1602,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1603,"byte_end":1606,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1607,"byte_end":1618,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use inflate::InflateWriter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1619,"byte_end":1650,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1651,"byte_end":1674,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1675,"byte_end":1703,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1704,"byte_end":1707,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1708,"byte_end":1788,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ let mut decoder = InflateWriter::new(Vec::new());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1789,"byte_end":1842,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/ decoder.write(&encoded).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1843,"byte_end":1880,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ let decoded = decoder.finish().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1881,"byte_end":1925,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ println!(\"{}\", from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":1926,"byte_end":2000,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2001,"byte_end":2008,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2009,"byte_end":2012,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Finally, if you need even more flexibility, or if you only want to depend on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2013,"byte_end":2093,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ `core`, you can use the `inflate::InflateStream` API. The below example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2094,"byte_end":2169,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ decodes an array of DEFLATE encoded bytes:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2170,"byte_end":2216,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2217,"byte_end":2220,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2221,"byte_end":2232,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use inflate::InflateStream;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2233,"byte_end":2264,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2265,"byte_end":2268,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let data = [0x73, 0x49, 0x4d, 0xcb, 0x49, 0x2c, 0x49, 0x55, 0x00, 0x11, 0x00];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2269,"byte_end":2351,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ let mut inflater = InflateStream::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2352,"byte_end":2396,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ let mut out = Vec::<u8>::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2397,"byte_end":2432,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ let mut n = 0;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2433,"byte_end":2451,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ while n < data.len() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2452,"byte_end":2478,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/     let res = inflater.update(&data[n..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2479,"byte_end":2525,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/     if let Ok((num_bytes_read, result)) = res {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2526,"byte_end":2577,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/         n += num_bytes_read;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2578,"byte_end":2610,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/         out.extend(result.iter().cloned());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2611,"byte_end":2658,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2659,"byte_end":2675,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/         res.unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2676,"byte_end":2701,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2702,"byte_end":2711,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2712,"byte_end":2717,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":2718,"byte_end":2725,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45309,"byte_end":45322,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"InflateWriter","qualname":"::writer::InflateWriter","value":"InflateWriter {  }","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A DEFLATE decoder.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44747,"byte_end":44769,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44770,"byte_end":44773,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A struct implementing the `std::io::Write` trait that decompresses DEFLATE","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44774,"byte_end":44852,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ encoded data into the given writer `w`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44853,"byte_end":44896,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44897,"byte_end":44900,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44901,"byte_end":44914,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44915,"byte_end":44918,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44919,"byte_end":44926,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use inflate::InflateWriter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44927,"byte_end":44958,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44959,"byte_end":44982,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44983,"byte_end":44986,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":44987,"byte_end":45067,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ let mut decoder = InflateWriter::new(Vec::new());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45068,"byte_end":45121,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/ decoder.write(&encoded).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45122,"byte_end":45159,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ let decoded = decoder.finish().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45160,"byte_end":45204,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/ println!(\"{}\", std::str::from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45205,"byte_end":45289,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45290,"byte_end":45297,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45426,"byte_end":45429,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateWriter<W>>::new","value":"pub fn new(W) -> InflateWriter<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45544,"byte_end":45553,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<InflateWriter<W>>::from_zlib","value":"pub fn from_zlib(W) -> InflateWriter<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45674,"byte_end":45680,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"finish","qualname":"<InflateWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48220,"byte_end":48233,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"inflate_bytes","qualname":"::utils::inflate_bytes","value":"pub fn inflate_bytes(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed data.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48082,"byte_end":48140,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48141,"byte_end":48144,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48145,"byte_end":48212,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48495,"byte_end":48513,"line_start":38,"line_end":38,"column_start":8,"column_end":26},"name":"inflate_bytes_zlib","qualname":"::utils::inflate_bytes_zlib","value":"pub fn inflate_bytes_zlib(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48324,"byte_end":48415,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48416,"byte_end":48419,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48420,"byte_end":48487,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48834,"byte_end":48864,"line_start":46,"line_end":46,"column_start":8,"column_end":38},"name":"inflate_bytes_zlib_no_checksum","qualname":"::utils::inflate_bytes_zlib_no_checksum","value":"pub fn inflate_bytes_zlib_no_checksum(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data,\n without calculating and validating the checksum.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48610,"byte_end":48701,"line_start":42,"line_end":42,"column_start":1,"column_end":92}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48702,"byte_end":48754,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48755,"byte_end":48758,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\utils.rs","byte_start":48759,"byte_end":48826,"line_start":45,"line_end":45,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51298,"byte_end":51315,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"DeflateDecoderBuf","qualname":"::reader::DeflateDecoderBuf","value":"DeflateDecoderBuf {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A DEFLATE decoder/decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder/decompressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50591,"byte_end":50626,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50627,"byte_end":50630,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50631,"byte_end":50698,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ of compressed data that implements the `BufRead` trait as input,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50699,"byte_end":50767,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ providing the decompressed data when read from.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50768,"byte_end":50819,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50820,"byte_end":50823,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50824,"byte_end":50837,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50838,"byte_end":50845,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50846,"byte_end":50868,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ use inflate::DeflateDecoderBuf;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50869,"byte_end":50904,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50905,"byte_end":50908,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ const TEST_STRING: &'static str = \"Hello, world\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50909,"byte_end":50962,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/ let encoded = vec![243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":50963,"byte_end":51047,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/ let mut decoder = DeflateDecoderBuf::new(&encoded[..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51048,"byte_end":51107,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ let mut output = Vec::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51108,"byte_end":51140,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ let status = decoder.read_to_end(&mut output);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51141,"byte_end":51191,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ # let _ = status;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51192,"byte_end":51213,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(String::from_utf8(output).unwrap(), TEST_STRING);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51214,"byte_end":51278,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51279,"byte_end":51286,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51836,"byte_end":51839,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoderBuf<R>>::new","value":"pub fn new(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Deflatedecoderbuf` to read from a raw deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `Deflatedecoderbuf` to read from a raw deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51753,"byte_end":51824,"line_start":46,"line_end":46,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52185,"byte_end":52194,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<DeflateDecoderBuf<R>>::from_zlib","value":"pub fn from_zlib(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52090,"byte_end":52173,"line_start":57,"line_end":57,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52603,"byte_end":52624,"line_start":70,"line_end":70,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<DeflateDecoderBuf<R>>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n without calculating and validating the checksum.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52451,"byte_end":52534,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52539,"byte_end":52591,"line_start":69,"line_end":69,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53171,"byte_end":53176,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.\n without doing any extra reallocations.","sig":null,"attributes":[{"value":"/ Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52926,"byte_end":53012,"line_start":82,"line_end":82,"column_start":5,"column_end":91}},{"value":"/ without doing any extra reallocations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53017,"byte_end":53059,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53064,"byte_end":53067,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53072,"byte_end":53145,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53150,"byte_end":53159,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53467,"byte_end":53477,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoderBuf<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the decoder, but continue to read from the same reader.","sig":null,"attributes":[{"value":"/ Resets the decoder, but continue to read from the same reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53289,"byte_end":53355,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53360,"byte_end":53363,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53368,"byte_end":53441,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53446,"byte_end":53455,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53623,"byte_end":53630,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying `BufRead` instance.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53536,"byte_end":53597,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53602,"byte_end":53611,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53903,"byte_end":53910,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying `BufRead` instance.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53678,"byte_end":53747,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53752,"byte_end":53755,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may cause surprising results if the decoder is going to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53760,"byte_end":53852,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ keep being used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53857,"byte_end":53877,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53882,"byte_end":53891,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54144,"byte_end":54154,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Drops the decoder and return the inner `BufRead` instance.","sig":null,"attributes":[{"value":"/ Drops the decoder and return the inner `BufRead` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":53970,"byte_end":54032,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54037,"byte_end":54040,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54045,"byte_end":54118,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54123,"byte_end":54132,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54297,"byte_end":54305,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total bytes read from the underlying `BufRead` instance.\n","sig":null,"attributes":[{"value":"/ Returns the total bytes read from the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54199,"byte_end":54271,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54276,"byte_end":54285,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54444,"byte_end":54453,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54355,"byte_end":54418,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54423,"byte_end":54432,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54679,"byte_end":54695,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<DeflateDecoderBuf<R>>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54504,"byte_end":54576,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54581,"byte_end":54584,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54589,"byte_end":54653,"line_start":137,"line_end":137,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54658,"byte_end":54667,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58415,"byte_end":58429,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::reader::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":155}],"decl_id":null,"docs":" A DEFLATE decoder/decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder/decompressor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57725,"byte_end":57760,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57761,"byte_end":57764,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream of compressed data that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57765,"byte_end":57856,"line_start":218,"line_end":218,"column_start":1,"column_end":92}},{"value":"/ implements the `Read` trait as input,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57857,"byte_end":57898,"line_start":219,"line_end":219,"column_start":1,"column_end":42}},{"value":"/ provoding the decompressed data when read from.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57899,"byte_end":57950,"line_start":220,"line_end":220,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57951,"byte_end":57964,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57965,"byte_end":57972,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57973,"byte_end":57995,"line_start":223,"line_end":223,"column_start":1,"column_end":23}},{"value":"/ use inflate::DeflateDecoder;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":57996,"byte_end":58028,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/ const TEST_STRING: &'static str = \"Hello, world\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58029,"byte_end":58082,"line_start":225,"line_end":225,"column_start":1,"column_end":54}},{"value":"/ let encoded = vec![243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58083,"byte_end":58167,"line_start":226,"line_end":226,"column_start":1,"column_end":85}},{"value":"/ let mut decoder = DeflateDecoder::new(&encoded[..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58168,"byte_end":58224,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ let mut output = Vec::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58225,"byte_end":58257,"line_start":228,"line_end":228,"column_start":1,"column_end":33}},{"value":"/ let status = decoder.read_to_end(&mut output);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58258,"byte_end":58308,"line_start":229,"line_end":229,"column_start":1,"column_end":51}},{"value":"/ # let _ = status;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58309,"byte_end":58330,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(String::from_utf8(output).unwrap(), TEST_STRING);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58331,"byte_end":58395,"line_start":231,"line_end":231,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58396,"byte_end":58403,"line_start":232,"line_end":232,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58668,"byte_end":58671,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Deflatedecoderbuf` to read from a raw deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `Deflatedecoderbuf` to read from a raw deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58585,"byte_end":58656,"line_start":239,"line_end":239,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58913,"byte_end":58922,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<DeflateDecoder<R>>::from_zlib","value":"pub fn from_zlib(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58818,"byte_end":58901,"line_start":246,"line_end":246,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59227,"byte_end":59248,"line_start":255,"line_end":255,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<DeflateDecoder<R>>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n without calculating and validating the checksum.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59075,"byte_end":59158,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59163,"byte_end":59215,"line_start":254,"line_end":254,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59658,"byte_end":59663,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.\n without doing any extra reallocations.","sig":null,"attributes":[{"value":"/ Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59413,"byte_end":59499,"line_start":261,"line_end":261,"column_start":5,"column_end":91}},{"value":"/ without doing any extra reallocations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59504,"byte_end":59546,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59551,"byte_end":59554,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59559,"byte_end":59632,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59637,"byte_end":59646,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59831,"byte_end":59838,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59756,"byte_end":59805,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59810,"byte_end":59819,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60117,"byte_end":60124,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59904,"byte_end":59961,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59966,"byte_end":59969,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may cause surprising results if the decoder is going to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":59974,"byte_end":60066,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ keep being used.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60071,"byte_end":60091,"line_start":279,"line_end":279,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60096,"byte_end":60105,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60287,"byte_end":60297,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60198,"byte_end":60261,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60266,"byte_end":60275,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60575,"byte_end":60585,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the decoder, but continue to read from the same reader.","sig":null,"attributes":[{"value":"/ Resets the decoder, but continue to read from the same reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60397,"byte_end":60463,"line_start":293,"line_end":293,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60468,"byte_end":60471,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60476,"byte_end":60549,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60554,"byte_end":60563,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60728,"byte_end":60736,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total bytes read from the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns the total bytes read from the underlying reader.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60642,"byte_end":60702,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60707,"byte_end":60716,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60881,"byte_end":60890,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60792,"byte_end":60855,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60860,"byte_end":60869,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61122,"byte_end":61138,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<DeflateDecoder<R>>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60947,"byte_end":61019,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61024,"byte_end":61027,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61032,"byte_end":61096,"line_start":315,"line_end":315,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61101,"byte_end":61110,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20095,"byte_end":20108,"line_start":570,"line_end":570,"column_start":12,"column_end":25},"name":"InflateStream","qualname":"::InflateStream","value":"InflateStream {  }","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20377,"byte_end":20380,"line_start":582,"line_end":582,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateStream>::new","value":"pub fn new() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding raw deflate encoded data.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20279,"byte_end":20298,"line_start":580,"line_end":580,"column_start":5,"column_end":24}},{"value":"/ Create a new stream for decoding raw deflate encoded data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20303,"byte_end":20365,"line_start":581,"line_end":581,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20706,"byte_end":20715,"line_start":589,"line_end":589,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<InflateStream>::from_zlib","value":"pub fn from_zlib() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding deflate encoded data with a zlib header and footer\n","sig":null,"attributes":[{"value":"/ Create a new stream for decoding deflate encoded data with a zlib header and footer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20607,"byte_end":20694,"line_start":588,"line_end":588,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":21094,"byte_end":21115,"line_start":597,"line_end":597,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<InflateStream>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding deflate encoded data with a zlib header and footer","sig":null,"attributes":[{"value":"/ Create a new stream for decoding deflate encoded data with a zlib header and footer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20843,"byte_end":20930,"line_start":593,"line_end":593,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20935,"byte_end":20938,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This version creates a decoder that does not checksum the data to validate it with the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20943,"byte_end":21033,"line_start":595,"line_end":595,"column_start":5,"column_end":95}},{"value":"/ checksum provided with the zlib wrapper.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":21038,"byte_end":21082,"line_start":596,"line_end":596,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":21250,"byte_end":21255,"line_start":601,"line_end":601,"column_start":12,"column_end":17},"name":"reset","qualname":"<InflateStream>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":21443,"byte_end":21456,"line_start":608,"line_end":608,"column_start":12,"column_end":25},"name":"reset_to_zlib","qualname":"<InflateStream>::reset_to_zlib","value":"pub fn reset_to_zlib(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41359,"byte_end":41365,"line_start":1025,"line_end":1025,"column_start":12,"column_end":18},"name":"update","qualname":"<InflateStream>::update","value":"pub fn update<'a>(&'a mut Self, &[u8]) -> Result<(usize, &'a [u8]), String>","parent":null,"children":[],"decl_id":null,"docs":" Try to uncompress/decode the data in `data`.","sig":null,"attributes":[{"value":"/ Try to uncompress/decode the data in `data`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40699,"byte_end":40747,"line_start":1013,"line_end":1013,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40752,"byte_end":40755,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ On success, returns how many bytes of the input data was decompressed, and a reference to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40760,"byte_end":40853,"line_start":1015,"line_end":1015,"column_start":5,"column_end":98}},{"value":"/ the buffer containing the decompressed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40858,"byte_end":40906,"line_start":1016,"line_end":1016,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40911,"byte_end":40914,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ This function may not uncompress all the provided data in one call, so it has to be called","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":40919,"byte_end":41013,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ repeatedly with the data that hasn't been decompressed yet as an input until the number of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41018,"byte_end":41112,"line_start":1019,"line_end":1019,"column_start":5,"column_end":99}},{"value":"/ bytes decoded returned is 0. (See the [top level crate documentation](index.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41117,"byte_end":41202,"line_start":1020,"line_end":1020,"column_start":5,"column_end":90}},{"value":"/ for an example.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41207,"byte_end":41227,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41232,"byte_end":41235,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41240,"byte_end":41252,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/ If invalid input data is encountered, a string describing what went wrong is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":41257,"byte_end":41347,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":42445,"byte_end":42461,"line_start":1055,"line_end":1055,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<InflateStream>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":42284,"byte_end":42356,"line_start":1052,"line_end":1052,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":42361,"byte_end":42364,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":42369,"byte_end":42433,"line_start":1054,"line_end":1054,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\checksum.rs","byte_start":43121,"byte_end":43129,"line_start":25,"line_end":25,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45396,"byte_end":45409,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":46023,"byte_end":46036,"line_start":48,"line_end":48,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51726,"byte_end":51743,"line_start":45,"line_end":45,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52899,"byte_end":52916,"line_start":81,"line_end":81,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54792,"byte_end":54809,"line_start":144,"line_end":144,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58561,"byte_end":58575,"line_start":238,"line_end":238,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60373,"byte_end":60387,"line_start":292,"line_end":292,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61225,"byte_end":61239,"line_start":322,"line_end":322,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":7301,"byte_end":7310,"line_start":200,"line_end":200,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":11510,"byte_end":11526,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":14635,"byte_end":14647,"line_start":431,"line_end":431,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20259,"byte_end":20272,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":315},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\checksum.rs","byte_start":43121,"byte_end":43129,"line_start":25,"line_end":25,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":45396,"byte_end":45409,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":56},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\writer.rs","byte_start":46023,"byte_end":46036,"line_start":48,"line_end":48,"column_start":26,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":56},"to":{"krate":1,"index":4780}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":51726,"byte_end":51743,"line_start":45,"line_end":45,"column_start":18,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":52899,"byte_end":52916,"line_start":81,"line_end":81,"column_start":9,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":54792,"byte_end":54809,"line_start":144,"line_end":144,"column_start":27,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":128},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":58561,"byte_end":58575,"line_start":238,"line_end":238,"column_start":15,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":60373,"byte_end":60387,"line_start":292,"line_end":292,"column_start":9,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\reader.rs","byte_start":61225,"byte_end":61239,"line_start":322,"line_end":322,"column_start":24,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":4723}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":7301,"byte_end":7310,"line_start":200,"line_end":200,"column_start":10,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":11510,"byte_end":11526,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":14635,"byte_end":14647,"line_start":431,"line_end":431,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.3.4\\src\\lib.rs","byte_start":20259,"byte_end":20272,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}}]}