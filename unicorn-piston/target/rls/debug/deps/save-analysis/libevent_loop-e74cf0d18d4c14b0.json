{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","event_loop","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e74cf0d18d4c14b0","-C","extra-filename=-e74cf0d18d4c14b0","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","input=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libinput-a7473a99755e5045.rmeta","--extern","window=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libwindow-5a4366296a253b30.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libevent_loop-e74cf0d18d4c14b0.rmeta"},"prelude":{"crate_id":{"name":"event_loop","disambiguator":[15372672060983932565,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":16,"id":{"name":"window","disambiguator":[4413504439128684979,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":17,"id":{"name":"shader_version","disambiguator":[1047448790087108173,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":18,"id":{"name":"input","disambiguator":[188746153390660410,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":19,"id":{"name":"bitflags","disambiguator":[3297404274272602299,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[6440612655355929041,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":21,"id":{"name":"serde","disambiguator":[1860223236112487534,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":22,"id":{"name":"viewport","disambiguator":[10266843454454648158,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","num":23,"id":{"name":"float","disambiguator":[5673305526020509102,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":0,"byte_end":19558,"line_start":1,"line_end":501,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":0,"byte_end":19558,"line_start":1,"line_end":501,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":117},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":66},{"krate":0,"index":69}],"decl_id":null,"docs":" A Piston event loop for games and interactive applications\n","sig":null,"attributes":[{"value":"/ A Piston event loop for games and interactive applications","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":64,"byte_end":86,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":87,"byte_end":125,"line_start":4,"line_end":4,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":666,"byte_end":679,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"EventSettings","qualname":"::EventSettings","value":"EventSettings { max_fps, ups, ups_reset, swap_buffers, bench_mode, lazy }","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" Stores event loop settings.\n","sig":null,"attributes":[{"value":"/ Stores event loop settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":593,"byte_end":624,"line_start":31,"line_end":31,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":910,"byte_end":917,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"max_fps","qualname":"::EventSettings::max_fps","value":"u64","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[{"value":"/ The maximum number of frames per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":686,"byte_end":729,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":734,"byte_end":737,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The frame rate can be lower because the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":742,"byte_end":785,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"/ next frame is always scheduled from the previous frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":790,"byte_end":849,"line_start":37,"line_end":37,"column_start":5,"column_end":64}},{"value":"/ This causes the frames to \"slip\" over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":854,"byte_end":901,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"ups","qualname":"::EventSettings::ups","value":"u64","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[{"value":"/ The number of updates per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":928,"byte_end":964,"line_start":40,"line_end":40,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":969,"byte_end":972,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This is the fixed update rate on average over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":977,"byte_end":1032,"line_start":42,"line_end":42,"column_start":5,"column_end":60}},{"value":"/ If the event loop lags, it will try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1037,"byte_end":1089,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/ When set to `0`, update events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1094,"byte_end":1142,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1298,"byte_end":1307,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"ups_reset","qualname":"::EventSettings::ups_reset","value":"u64","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[{"value":"/ The number of delayed updates before skipping them to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1165,"byte_end":1232,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ When set to `0`, it will always try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1237,"byte_end":1289,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1379,"byte_end":1391,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"swap_buffers","qualname":"::EventSettings::swap_buffers","value":"bool","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[{"value":"/ Enable or disable automatic swapping of buffers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1318,"byte_end":1370,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1648,"byte_end":1658,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"name":"bench_mode","qualname":"::EventSettings::bench_mode","value":"bool","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[{"value":"/ Enable or disable benchmark mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1403,"byte_end":1440,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/ When enabled, it will render and update without sleep and ignore input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1445,"byte_end":1520,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ Used to test performance by playing through as fast as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1525,"byte_end":1593,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ Requires `lazy` to be set to `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1598,"byte_end":1639,"line_start":54,"line_end":54,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1796,"byte_end":1800,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"lazy","qualname":"::EventSettings::lazy","value":"bool","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update and idle events are disabled.\n","sig":null,"attributes":[{"value":"/ Enable or disable rendering only when receiving input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1670,"byte_end":1728,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/ When enabled, update and idle events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1733,"byte_end":1787,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<EventSettings>::new","value":"pub fn new() -> EventSettings","parent":null,"children":[],"decl_id":null,"docs":" Creates new with default settings.\n","sig":null,"attributes":[{"value":"/ Creates new with default settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1836,"byte_end":1874,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2552,"byte_end":2558,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"Events","qualname":"::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" An event loop iterator","sig":null,"attributes":[{"value":"/ An event loop iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2259,"byte_end":2285,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2286,"byte_end":2289,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ *Warning: Because the iterator polls events from the window back-end,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2290,"byte_end":2363,"line_start":83,"line_end":83,"column_start":1,"column_end":74}},{"value":"/ it must be used on the same thread as the window back-end (usually main thread),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2364,"byte_end":2448,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/ unless the window back-end supports multi-thread event polling.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2449,"byte_end":2517,"line_start":85,"line_end":85,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3094,"byte_end":3105,"line_start":111,"line_end":111,"column_start":11,"column_end":22},"name":"DEFAULT_UPS","qualname":"::DEFAULT_UPS","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default updates per second.\n","sig":null,"attributes":[{"value":"/ The default updates per second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3048,"byte_end":3083,"line_start":110,"line_end":110,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3167,"byte_end":3184,"line_start":113,"line_end":113,"column_start":11,"column_end":28},"name":"DEFAULT_UPS_RESET","qualname":"::DEFAULT_UPS_RESET","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default delayed updates reset.\n","sig":null,"attributes":[{"value":"/ The default delayed updates reset.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3118,"byte_end":3156,"line_start":112,"line_end":112,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3248,"byte_end":3263,"line_start":115,"line_end":115,"column_start":11,"column_end":26},"name":"DEFAULT_MAX_FPS","qualname":"::DEFAULT_MAX_FPS","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default maximum frames per second.\n","sig":null,"attributes":[{"value":"/ The default maximum frames per second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3195,"byte_end":3237,"line_start":114,"line_end":114,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3373,"byte_end":3376,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Events>::new","value":"pub fn new(EventSettings) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Creates a new event iterator with default UPS and FPS settings.\n","sig":null,"attributes":[{"value":"/ Creates a new event iterator with default UPS and FPS settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3294,"byte_end":3361,"line_start":118,"line_end":118,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":4025,"byte_end":4029,"line_start":142,"line_end":142,"column_start":12,"column_end":16},"name":"next","qualname":"<Events>::next","value":"pub fn next<W>(&mut Self, &mut W) -> Option<Event> where W: Window","parent":null,"children":[],"decl_id":null,"docs":" Returns the next event.\n","sig":null,"attributes":[{"value":"/ Returns the next event.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3986,"byte_end":4013,"line_start":141,"line_end":141,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15065,"byte_end":15074,"line_start":377,"line_end":377,"column_start":11,"column_end":20},"name":"EventLoop","qualname":"::EventLoop","value":"EventLoop: Sized","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"decl_id":null,"docs":" Methods implemented for changing event loop settings.\n","sig":null,"attributes":[{"value":"/ Methods implemented for changing event loop settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":14997,"byte_end":15054,"line_start":376,"line_end":376,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15128,"byte_end":15146,"line_start":379,"line_end":379,"column_start":8,"column_end":26},"name":"get_event_settings","qualname":"::EventLoop::get_event_settings","value":"pub fn get_event_settings(&Self) -> EventSettings","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Returns event loop settings.\n","sig":null,"attributes":[{"value":"/ Returns event loop settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15088,"byte_end":15120,"line_start":378,"line_end":378,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15213,"byte_end":15231,"line_start":381,"line_end":381,"column_start":8,"column_end":26},"name":"set_event_settings","qualname":"::EventLoop::set_event_settings","value":"pub fn set_event_settings(&mut Self, EventSettings)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Sets event loop settings.\n","sig":null,"attributes":[{"value":"/ Sets event loop settings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15176,"byte_end":15205,"line_start":380,"line_end":380,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15496,"byte_end":15503,"line_start":388,"line_end":388,"column_start":8,"column_end":15},"name":"set_ups","qualname":"::EventLoop::set_ups","value":"pub fn set_ups(&mut Self, u64)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[{"value":"/ The number of updates per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15274,"byte_end":15310,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15315,"byte_end":15318,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This is the fixed update rate on average over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15323,"byte_end":15378,"line_start":385,"line_end":385,"column_start":5,"column_end":60}},{"value":"/ If the event loop lags, it will try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15383,"byte_end":15435,"line_start":386,"line_end":386,"column_start":5,"column_end":57}},{"value":"/ When set to `0`, update events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15440,"byte_end":15488,"line_start":387,"line_end":387,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15897,"byte_end":15900,"line_start":398,"line_end":398,"column_start":8,"column_end":11},"name":"ups","qualname":"::EventLoop::ups","value":"pub fn ups(Self, u64) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The number of updates per second","sig":null,"attributes":[{"value":"/ The number of updates per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15675,"byte_end":15711,"line_start":393,"line_end":393,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15716,"byte_end":15719,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This is the fixed update rate on average over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15724,"byte_end":15779,"line_start":395,"line_end":395,"column_start":5,"column_end":60}},{"value":"/ If the event loop lags, it will try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15784,"byte_end":15836,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/ When set to `0`, update events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15841,"byte_end":15889,"line_start":397,"line_end":397,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16120,"byte_end":16133,"line_start":405,"line_end":405,"column_start":8,"column_end":21},"name":"set_ups_reset","qualname":"::EventLoop::set_ups_reset","value":"pub fn set_ups_reset(&mut Self, u64)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[{"value":"/ The number of delayed updates before skipping them to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15988,"byte_end":16055,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ When set to `0`, it will always try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16060,"byte_end":16112,"line_start":404,"line_end":404,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16443,"byte_end":16452,"line_start":412,"line_end":412,"column_start":8,"column_end":17},"name":"ups_reset","qualname":"::EventLoop::ups_reset","value":"pub fn ups_reset(Self, u64) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The number of delayed updates before skipping them to catch up.\n When set to `0`, it will always try to catch up.\n","sig":null,"attributes":[{"value":"/ The number of delayed updates before skipping them to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16311,"byte_end":16378,"line_start":410,"line_end":410,"column_start":5,"column_end":72}},{"value":"/ When set to `0`, it will always try to catch up.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16383,"byte_end":16435,"line_start":411,"line_end":411,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16769,"byte_end":16780,"line_start":422,"line_end":422,"column_start":8,"column_end":19},"name":"set_max_fps","qualname":"::EventLoop::set_max_fps","value":"pub fn set_max_fps(&mut Self, u64)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[{"value":"/ The maximum number of frames per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16546,"byte_end":16589,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16594,"byte_end":16597,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The frame rate can be lower because the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16602,"byte_end":16645,"line_start":419,"line_end":419,"column_start":5,"column_end":48}},{"value":"/ next frame is always scheduled from the previous frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16650,"byte_end":16709,"line_start":420,"line_end":420,"column_start":5,"column_end":64}},{"value":"/ This causes the frames to \"slip\" over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16714,"byte_end":16761,"line_start":421,"line_end":421,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17178,"byte_end":17185,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"max_fps","qualname":"::EventLoop::max_fps","value":"pub fn max_fps(Self, u64) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" The maximum number of frames per second","sig":null,"attributes":[{"value":"/ The maximum number of frames per second","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":16955,"byte_end":16998,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17003,"byte_end":17006,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The frame rate can be lower because the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17011,"byte_end":17054,"line_start":429,"line_end":429,"column_start":5,"column_end":48}},{"value":"/ next frame is always scheduled from the previous frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17059,"byte_end":17118,"line_start":430,"line_end":430,"column_start":5,"column_end":64}},{"value":"/ This causes the frames to \"slip\" over time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17123,"byte_end":17170,"line_start":431,"line_end":431,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17337,"byte_end":17353,"line_start":438,"line_end":438,"column_start":8,"column_end":24},"name":"set_swap_buffers","qualname":"::EventLoop::set_swap_buffers","value":"pub fn set_swap_buffers(&mut Self, bool)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[{"value":"/ Enable or disable automatic swapping of buffers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17277,"byte_end":17329,"line_start":437,"line_end":437,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17594,"byte_end":17606,"line_start":444,"line_end":444,"column_start":8,"column_end":20},"name":"swap_buffers","qualname":"::EventLoop::swap_buffers","value":"pub fn swap_buffers(Self, bool) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable automatic swapping of buffers.\n","sig":null,"attributes":[{"value":"/ Enable or disable automatic swapping of buffers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17534,"byte_end":17586,"line_start":443,"line_end":443,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17948,"byte_end":17962,"line_start":453,"line_end":453,"column_start":8,"column_end":22},"name":"set_bench_mode","qualname":"::EventLoop::set_bench_mode","value":"pub fn set_bench_mode(&mut Self, bool)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[{"value":"/ Enable or disable benchmark mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17704,"byte_end":17741,"line_start":449,"line_end":449,"column_start":5,"column_end":42}},{"value":"/ When enabled, it will render and update without sleep and ignore input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17746,"byte_end":17821,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ Used to test performance by playing through as fast as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17826,"byte_end":17894,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/ Requires `lazy` to be set to `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":17899,"byte_end":17940,"line_start":452,"line_end":452,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18385,"byte_end":18395,"line_start":462,"line_end":462,"column_start":8,"column_end":18},"name":"bench_mode","qualname":"::EventLoop::bench_mode","value":"pub fn bench_mode(Self, bool) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable benchmark mode.\n When enabled, it will render and update without sleep and ignore input.\n Used to test performance by playing through as fast as possible.\n Requires `lazy` to be set to `false`.\n","sig":null,"attributes":[{"value":"/ Enable or disable benchmark mode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18141,"byte_end":18178,"line_start":458,"line_end":458,"column_start":5,"column_end":42}},{"value":"/ When enabled, it will render and update without sleep and ignore input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18183,"byte_end":18258,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ Used to test performance by playing through as fast as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18263,"byte_end":18331,"line_start":460,"line_end":460,"column_start":5,"column_end":73}},{"value":"/ Requires `lazy` to be set to `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18336,"byte_end":18377,"line_start":461,"line_end":461,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18662,"byte_end":18670,"line_start":470,"line_end":470,"column_start":8,"column_end":16},"name":"set_lazy","qualname":"::EventLoop::set_lazy","value":"pub fn set_lazy(&mut Self, bool)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update events are disabled.\n Idle events are emitted while receiving input.\n","sig":null,"attributes":[{"value":"/ Enable or disable rendering only when receiving input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18491,"byte_end":18549,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/ When enabled, update events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18554,"byte_end":18599,"line_start":468,"line_end":468,"column_start":5,"column_end":50}},{"value":"/ Idle events are emitted while receiving input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18604,"byte_end":18654,"line_start":469,"line_end":469,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":19014,"byte_end":19018,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"lazy","qualname":"::EventLoop::lazy","value":"pub fn lazy(Self, bool) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Enable or disable rendering only when receiving input.\n When enabled, update events are disabled.\n Idle events are emitted while receiving input.\n","sig":null,"attributes":[{"value":"/ Enable or disable rendering only when receiving input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18843,"byte_end":18901,"line_start":475,"line_end":475,"column_start":5,"column_end":63}},{"value":"/ When enabled, update events are disabled.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18906,"byte_end":18951,"line_start":476,"line_end":476,"column_start":5,"column_end":50}},{"value":"/ Idle events are emitted while receiving input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":18956,"byte_end":19006,"line_start":477,"line_end":477,"column_start":5,"column_end":55}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1816,"byte_end":1829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2169,"byte_end":2182,"line_start":75,"line_end":75,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3281,"byte_end":3287,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":19125,"byte_end":19138,"line_start":484,"line_end":484,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":19313,"byte_end":19319,"line_start":493,"line_end":493,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":1816,"byte_end":1829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":2169,"byte_end":2182,"line_start":75,"line_end":75,"column_start":18,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":105},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":3281,"byte_end":3287,"line_start":117,"line_end":117,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":15076,"byte_end":15081,"line_start":377,"line_end":377,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":19125,"byte_end":19138,"line_start":484,"line_end":484,"column_start":20,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":105},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pistoncore-event_loop-0.36.0\\src/lib.rs","byte_start":19313,"byte_end":19319,"line_start":493,"line_end":493,"column_start":20,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":117},"to":{"krate":0,"index":51}}]}