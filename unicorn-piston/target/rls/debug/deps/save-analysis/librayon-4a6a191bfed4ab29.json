{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rayon","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=4a6a191bfed4ab29","-C","extra-filename=-4a6a191bfed4ab29","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps","--extern","crossbeam_deque=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libcrossbeam_deque-8c23c8381fce2768.rmeta","--extern","either=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\libeither-274319ace039e0ac.rmeta","--extern","rayon_core=d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\librayon_core-942ff2c0768fb674.rmeta","--cap-lints","allow","--cfg","has_step_by_rev","--cfg","has_min_const_generics","--cfg","has_control_flow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-piston\\target\\rls\\debug\\deps\\librayon-4a6a191bfed4ab29.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[6623402228181533820,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","num":16,"id":{"name":"either","disambiguator":[7464863777084611118,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":17,"id":{"name":"rayon_core","disambiguator":[16648258661140591635,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":18,"id":{"name":"crossbeam_channel","disambiguator":[10208144800051560213,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":19,"id":{"name":"cfg_if","disambiguator":[17941200006019888196,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[13548143170511223058,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":21,"id":{"name":"lazy_static","disambiguator":[17608421772039054989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","num":22,"id":{"name":"crossbeam_deque","disambiguator":[7715213230057767423,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":23,"id":{"name":"crossbeam_epoch","disambiguator":[5736158919263291491,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":24,"id":{"name":"scopeguard","disambiguator":[14791793103096291185,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":25,"id":{"name":"memoffset","disambiguator":[5083723864139456129,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","num":26,"id":{"name":"num_cpus","disambiguator":[9680463424726089930,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":0,"byte_end":5684,"line_start":1,"line_end":147,"column_start":1,"column_end":31}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37620,"byte_end":37626,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7052},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39030,"byte_end":39035,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39049,"byte_end":39055,"line_start":156,"line_end":156,"column_start":13,"column_end":19},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7075},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39069,"byte_end":39075,"line_start":157,"line_end":157,"column_start":13,"column_end":19},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7084},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39089,"byte_end":39095,"line_start":158,"line_end":158,"column_start":13,"column_end":19},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39109,"byte_end":39114,"line_start":159,"line_end":159,"column_start":13,"column_end":18},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39116,"byte_end":39121,"line_start":159,"line_end":159,"column_start":20,"column_end":25},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7093},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39139,"byte_end":39148,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39162,"byte_end":39168,"line_start":161,"line_end":161,"column_start":13,"column_end":19},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39186,"byte_end":39195,"line_start":162,"line_end":162,"column_start":17,"column_end":26},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39211,"byte_end":39218,"line_start":163,"line_end":163,"column_start":15,"column_end":22},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39239,"byte_end":39250,"line_start":164,"line_end":164,"column_start":20,"column_end":31},"alias_span":null,"name":"FlatMapIter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7146},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39265,"byte_end":39272,"line_start":165,"line_end":165,"column_start":14,"column_end":21},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39292,"byte_end":39303,"line_start":166,"line_end":166,"column_start":19,"column_end":30},"alias_span":null,"name":"FlattenIter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39316,"byte_end":39320,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7176},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39322,"byte_end":39330,"line_start":167,"line_end":167,"column_start":18,"column_end":26},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39346,"byte_end":39353,"line_start":168,"line_end":168,"column_start":14,"column_end":21},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39371,"byte_end":39381,"line_start":169,"line_end":169,"column_start":17,"column_end":27},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7210},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39408,"byte_end":39426,"line_start":170,"line_end":170,"column_start":26,"column_end":44},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39445,"byte_end":39456,"line_start":171,"line_end":171,"column_start":18,"column_end":29},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7242},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39468,"byte_end":39474,"line_start":172,"line_end":172,"column_start":11,"column_end":17},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39476,"byte_end":39482,"line_start":172,"line_end":172,"column_start":19,"column_end":25},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7252},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39494,"byte_end":39497,"line_start":173,"line_end":173,"column_start":10,"column_end":13},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7273},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39514,"byte_end":39521,"line_start":174,"line_end":174,"column_start":16,"column_end":23},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39523,"byte_end":39530,"line_start":174,"line_end":174,"column_start":25,"column_end":32},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39547,"byte_end":39555,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"alias_span":null,"name":"MultiZip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39568,"byte_end":39572,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39574,"byte_end":39578,"line_start":176,"line_end":176,"column_start":18,"column_end":22},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39597,"byte_end":39606,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39625,"byte_end":39635,"line_start":178,"line_end":178,"column_start":18,"column_end":28},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39637,"byte_end":39651,"line_start":178,"line_end":178,"column_start":30,"column_end":44},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39669,"byte_end":39678,"line_start":179,"line_end":179,"column_start":16,"column_end":25},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39693,"byte_end":39699,"line_start":180,"line_end":180,"column_start":14,"column_end":20},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39701,"byte_end":39708,"line_start":180,"line_end":180,"column_start":22,"column_end":29},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39710,"byte_end":39716,"line_start":180,"line_end":180,"column_start":31,"column_end":37},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39718,"byte_end":39725,"line_start":180,"line_end":180,"column_start":39,"column_end":46},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39737,"byte_end":39740,"line_start":181,"line_end":181,"column_start":10,"column_end":13},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8235},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39752,"byte_end":39756,"line_start":182,"line_end":182,"column_start":11,"column_end":15},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39773,"byte_end":39778,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39780,"byte_end":39785,"line_start":183,"line_end":183,"column_start":23,"column_end":28},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39798,"byte_end":39802,"line_start":184,"line_end":184,"column_start":11,"column_end":15},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39819,"byte_end":39826,"line_start":185,"line_end":185,"column_start":16,"column_end":23},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8279},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39828,"byte_end":39839,"line_start":185,"line_end":185,"column_start":25,"column_end":36},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8291},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39854,"byte_end":39860,"line_start":186,"line_end":186,"column_start":13,"column_end":19},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8313},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39878,"byte_end":39887,"line_start":187,"line_end":187,"column_start":17,"column_end":26},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39898,"byte_end":39901,"line_start":188,"line_end":188,"column_start":10,"column_end":13},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8335},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39915,"byte_end":39920,"line_start":189,"line_end":189,"column_start":13,"column_end":18},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8347},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39986,"byte_end":39992,"line_start":194,"line_end":194,"column_start":24,"column_end":30},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":437956,"byte_end":437976,"line_start":5,"line_end":5,"column_start":22,"column_end":42},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":437999,"byte_end":438022,"line_start":6,"line_end":6,"column_start":22,"column_end":45},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438045,"byte_end":438065,"line_start":7,"line_end":7,"column_start":22,"column_end":42},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438088,"byte_end":438111,"line_start":8,"line_end":8,"column_start":22,"column_end":45},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438134,"byte_end":438160,"line_start":9,"line_end":9,"column_start":22,"column_end":48},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438183,"byte_end":438197,"line_start":10,"line_end":10,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438220,"byte_end":438237,"line_start":11,"line_end":11,"column_start":22,"column_end":39},"alias_span":null,"name":"ParallelDrainFull","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438260,"byte_end":438278,"line_start":12,"line_end":12,"column_start":22,"column_end":40},"alias_span":null,"name":"ParallelDrainRange","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438301,"byte_end":438315,"line_start":13,"line_end":13,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438338,"byte_end":438354,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":5819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438378,"byte_end":438391,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438415,"byte_end":438431,"line_start":16,"line_end":16,"column_start":23,"column_end":39},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":438453,"byte_end":438467,"line_start":17,"line_end":17,"column_start":21,"column_end":35},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":5089}},{"kind":"Use","ref_id":{"krate":0,"index":8804},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467329,"byte_end":467335,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467337,"byte_end":467348,"line_start":25,"line_end":25,"column_start":32,"column_end":43},"alias_span":null,"name":"ChunksExact","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467350,"byte_end":467364,"line_start":25,"line_end":25,"column_start":45,"column_end":59},"alias_span":null,"name":"ChunksExactMut","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467366,"byte_end":467375,"line_start":25,"line_end":25,"column_start":61,"column_end":70},"alias_span":null,"name":"ChunksMut","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467402,"byte_end":467409,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"RChunks","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8873},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467411,"byte_end":467423,"line_start":26,"line_end":26,"column_start":34,"column_end":46},"alias_span":null,"name":"RChunksExact","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467425,"byte_end":467440,"line_start":26,"line_end":26,"column_start":48,"column_end":63},"alias_span":null,"name":"RChunksExactMut","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":0,"index":8883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467442,"byte_end":467452,"line_start":26,"line_end":26,"column_start":65,"column_end":75},"alias_span":null,"name":"RChunksMut","value":"","parent":{"krate":0,"index":5314}},{"kind":"Use","ref_id":{"krate":17,"index":1369},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4239,"byte_end":4248,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4270,"byte_end":4283,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4305,"byte_end":4315,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4337,"byte_end":4357,"line_start":115,"line_end":115,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4379,"byte_end":4396,"line_start":116,"line_end":116,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1061},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4419,"byte_end":4438,"line_start":117,"line_end":117,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":971},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4440,"byte_end":4460,"line_start":117,"line_end":117,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":1060},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4462,"byte_end":4477,"line_start":117,"line_end":117,"column_start":65,"column_end":80},"alias_span":null,"name":"max_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":663},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4501,"byte_end":4515,"line_start":118,"line_end":118,"column_start":22,"column_end":36},"alias_span":null,"name":"in_place_scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":651},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4517,"byte_end":4522,"line_start":118,"line_end":118,"column_start":38,"column_end":43},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4524,"byte_end":4529,"line_start":118,"line_end":118,"column_start":45,"column_end":50},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":672},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4553,"byte_end":4572,"line_start":119,"line_end":119,"column_start":22,"column_end":41},"alias_span":null,"name":"in_place_scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":657},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4574,"byte_end":4584,"line_start":119,"line_end":119,"column_start":43,"column_end":53},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":634},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4586,"byte_end":4595,"line_start":119,"line_end":119,"column_start":55,"column_end":64},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4619,"byte_end":4623,"line_start":120,"line_end":120,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4625,"byte_end":4637,"line_start":120,"line_end":120,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":858},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4661,"byte_end":4666,"line_start":121,"line_end":121,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":865},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4668,"byte_end":4678,"line_start":121,"line_end":121,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":0,"byte_end":5684,"line_start":1,"line_end":147,"column_start":1,"column_end":31},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11},{"krate":0,"index":50},{"krate":0,"index":104},{"krate":0,"index":357},{"krate":0,"index":5027},{"krate":0,"index":5089},{"krate":0,"index":5129},{"krate":0,"index":5206},{"krate":0,"index":5270},{"krate":0,"index":5314},{"krate":0,"index":6026},{"krate":0,"index":6240},{"krate":0,"index":6267},{"krate":0,"index":6400},{"krate":0,"index":6414},{"krate":0,"index":6445},{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":6468},{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6475},{"krate":0,"index":6478},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6485},{"krate":0,"index":6488},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6495},{"krate":0,"index":6498},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6505},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6512},{"krate":0,"index":6515},{"krate":0,"index":6519},{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6526}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":142,"byte_end":168,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":170,"byte_end":239,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":240,"byte_end":270,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":271,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":275,"byte_end":356,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":357,"byte_end":429,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":430,"byte_end":491,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":496,"byte_end":518,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":519,"byte_end":522,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":523,"byte_end":559,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":560,"byte_end":563,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":564,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":648,"byte_end":683,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":684,"byte_end":774,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":775,"byte_end":803,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/     - The [`ParallelIterator`] trait defines general methods for all parallel iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":804,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/     - The [`IndexedParallelIterator`] trait adds methods for iterators that support random","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":897,"byte_end":991,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/       access.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":992,"byte_end":1009,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1010,"byte_end":1091,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1092,"byte_end":1178,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1179,"byte_end":1210,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1211,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1289,"byte_end":1350,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1351,"byte_end":1442,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1443,"byte_end":1529,"line_start":31,"line_end":31,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1530,"byte_end":1553,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1554,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1558,"byte_end":1592,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1593,"byte_end":1619,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1620,"byte_end":1648,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1649,"byte_end":1716,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1717,"byte_end":1787,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1788,"byte_end":1844,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1845,"byte_end":1848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1849,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1893,"byte_end":1954,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1955,"byte_end":1958,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":1959,"byte_end":2027,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2028,"byte_end":2096,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2097,"byte_end":2165,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2166,"byte_end":2234,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2235,"byte_end":2286,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2287,"byte_end":2290,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2291,"byte_end":2363,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2364,"byte_end":2437,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2438,"byte_end":2489,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2494,"byte_end":2536,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2537,"byte_end":2593,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2594,"byte_end":2660,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2661,"byte_end":2723,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2724,"byte_end":2782,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2783,"byte_end":2844,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: iter/trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2845,"byte_end":2903,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/ [`IndexedParallelIterator`]: iter/trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2904,"byte_end":2976,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2977,"byte_end":2980,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":2981,"byte_end":2999,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3000,"byte_end":3003,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3004,"byte_end":3074,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3075,"byte_end":3140,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3141,"byte_end":3206,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3207,"byte_end":3276,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3277,"byte_end":3336,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3337,"byte_end":3405,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3406,"byte_end":3472,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3473,"byte_end":3532,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3533,"byte_end":3548,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3549,"byte_end":3552,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3553,"byte_end":3636,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3637,"byte_end":3725,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3726,"byte_end":3769,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3770,"byte_end":3773,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3774,"byte_end":3796,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3797,"byte_end":3800,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3801,"byte_end":3830,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3831,"byte_end":3834,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3835,"byte_end":3898,"line_start":84,"line_end":84,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\private.rs","byte_start":9117,"byte_end":9130,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\private.rs","byte_start":8945,"byte_end":9010,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\private.rs","byte_start":9011,"byte_end":9065,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\private.rs","byte_start":9066,"byte_end":9105,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"array","qualname":"::array","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":82},{"krate":0,"index":6528},{"krate":0,"index":6533},{"krate":0,"index":6538},{"krate":0,"index":89},{"krate":0,"index":96}],"decl_id":null,"docs":" Parallel iterator types for [arrays] (`[T; N]`)","sig":null,"attributes":[{"value":"cfg(has_min_const_generics)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13682,"byte_end":13713,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/ Parallel iterator types for [arrays] (`[T; N]`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13714,"byte_end":13765,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13766,"byte_end":13769,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13770,"byte_end":13848,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13849,"byte_end":13887,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13888,"byte_end":13891,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Everything in this module requires const generics, stabilized in Rust 1.51.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13892,"byte_end":13971,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13972,"byte_end":13975,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [arrays]: https://doc.rust-lang.org/std/primitive.array.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":13976,"byte_end":14040,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6528},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15176,"byte_end":15184,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::array::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6531}],"decl_id":null,"docs":" Parallel iterator that moves out of an array.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of an array.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15091,"byte_end":15140,"line_start":47,"line_end":47,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":149},{"krate":0,"index":163},{"krate":0,"index":176},{"krate":0,"index":208},{"krate":0,"index":238},{"krate":0,"index":251},{"krate":0,"index":320},{"krate":0,"index":323}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16159,"byte_end":16231,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16232,"byte_end":16235,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16236,"byte_end":16314,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16315,"byte_end":16353,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16354,"byte_end":16357,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":16358,"byte_end":16431,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":6544},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":115},{"krate":0,"index":6560},{"krate":0,"index":6553},{"krate":0,"index":6566},{"krate":0,"index":6570},{"krate":0,"index":120},{"krate":0,"index":6574},{"krate":0,"index":6591},{"krate":0,"index":6583},{"krate":0,"index":6598},{"krate":0,"index":6602},{"krate":0,"index":124},{"krate":0,"index":130},{"krate":0,"index":137},{"krate":0,"index":145}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":18854,"byte_end":18916,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":18917,"byte_end":18989,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":18990,"byte_end":19049,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19230,"byte_end":19238,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6546}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19154,"byte_end":19194,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19704,"byte_end":19708,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6569}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19609,"byte_end":19675,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6598},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20270,"byte_end":20275,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::binary_heap::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6601}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a binary heap,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a binary heap,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20144,"byte_end":20207,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20208,"byte_end":20241,"line_start":61,"line_end":61,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":6606},{"krate":0,"index":6610},{"krate":0,"index":6614},{"krate":0,"index":6623},{"krate":0,"index":6630},{"krate":0,"index":6635},{"krate":0,"index":158},{"krate":0,"index":6640},{"krate":0,"index":6650},{"krate":0,"index":6658},{"krate":0,"index":6663},{"krate":0,"index":6668},{"krate":0,"index":6678}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":21582,"byte_end":21650,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":21651,"byte_end":21724,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":21725,"byte_end":21784,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6606},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":21976,"byte_end":21984,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6609}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":21887,"byte_end":21926,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22319,"byte_end":22323,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6634}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22225,"byte_end":22290,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6658},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22860,"byte_end":22867,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6662}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22769,"byte_end":22831,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":6686},{"krate":0,"index":6689},{"krate":0,"index":6692},{"krate":0,"index":6700},{"krate":0,"index":6706},{"krate":0,"index":6710},{"krate":0,"index":172},{"krate":0,"index":6714},{"krate":0,"index":6723}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23168,"byte_end":23236,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23237,"byte_end":23307,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23308,"byte_end":23367,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23559,"byte_end":23567,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6688}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23470,"byte_end":23509,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23856,"byte_end":23860,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6709}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23762,"byte_end":23827,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":6730},{"krate":0,"index":6734},{"krate":0,"index":6738},{"krate":0,"index":6748},{"krate":0,"index":6755},{"krate":0,"index":6760},{"krate":0,"index":195},{"krate":0,"index":6765},{"krate":0,"index":6776},{"krate":0,"index":6784},{"krate":0,"index":6789},{"krate":0,"index":6794},{"krate":0,"index":6805},{"krate":0,"index":6813},{"krate":0,"index":6819},{"krate":0,"index":200},{"krate":0,"index":6824}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":24289,"byte_end":24355,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":24356,"byte_end":24428,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":24429,"byte_end":24488,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6730},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":24743,"byte_end":24751,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6733}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":24656,"byte_end":24693,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25120,"byte_end":25124,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6759}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25028,"byte_end":25091,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6784},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25701,"byte_end":25708,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25612,"byte_end":25672,"line_start":54,"line_end":54,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":26168,"byte_end":26173,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6817},{"krate":0,"index":6818}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash map,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash map,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":26045,"byte_end":26105,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":26106,"byte_end":26139,"line_start":71,"line_end":71,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":6837},{"krate":0,"index":6846},{"krate":0,"index":6852},{"krate":0,"index":6856},{"krate":0,"index":227},{"krate":0,"index":6860},{"krate":0,"index":6870},{"krate":0,"index":6877},{"krate":0,"index":6882},{"krate":0,"index":231},{"krate":0,"index":6886}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":26752,"byte_end":26818,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":26819,"byte_end":26888,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":26889,"byte_end":26948,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27203,"byte_end":27211,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6833}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27116,"byte_end":27153,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6852},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27534,"byte_end":27538,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6855}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27442,"byte_end":27505,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6877},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":28126,"byte_end":28131,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6880},{"krate":0,"index":6881}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash set,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash set,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":28003,"byte_end":28063,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":28064,"byte_end":28097,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":6892},{"krate":0,"index":6895},{"krate":0,"index":6898},{"krate":0,"index":6901},{"krate":0,"index":6909},{"krate":0,"index":6915},{"krate":0,"index":6919},{"krate":0,"index":247},{"krate":0,"index":6923},{"krate":0,"index":6932},{"krate":0,"index":6939},{"krate":0,"index":6943},{"krate":0,"index":6947},{"krate":0,"index":6956}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":28652,"byte_end":28721,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":28722,"byte_end":28794,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":28795,"byte_end":28854,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29035,"byte_end":29043,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6894}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":28959,"byte_end":28999,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29317,"byte_end":29321,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6918}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29222,"byte_end":29288,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29766,"byte_end":29773,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6942}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29674,"byte_end":29737,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":273},{"krate":0,"index":6979},{"krate":0,"index":6972},{"krate":0,"index":6985},{"krate":0,"index":6989},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":7001},{"krate":0,"index":6993},{"krate":0,"index":7008},{"krate":0,"index":7012},{"krate":0,"index":288},{"krate":0,"index":7024},{"krate":0,"index":7016},{"krate":0,"index":7031},{"krate":0,"index":7037},{"krate":0,"index":294},{"krate":0,"index":301},{"krate":0,"index":308},{"krate":0,"index":316}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":29999,"byte_end":30075,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30076,"byte_end":30146,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30147,"byte_end":30206,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6963},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30479,"byte_end":30487,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6965}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30396,"byte_end":30443,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6985},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":31019,"byte_end":31023,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6988}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30917,"byte_end":30990,"line_start":37,"line_end":37,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7008},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":31706,"byte_end":31713,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":7011}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":31607,"byte_end":31677,"line_start":68,"line_end":68,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":7031},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":32324,"byte_end":32329,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::vec_deque::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a double-ended queue,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a double-ended queue,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":32183,"byte_end":32261,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":32262,"byte_end":32295,"line_start":92,"line_end":92,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":476},{"krate":0,"index":577},{"krate":0,"index":642},{"krate":0,"index":728},{"krate":0,"index":835},{"krate":0,"index":921},{"krate":0,"index":966},{"krate":0,"index":1015},{"krate":0,"index":1282},{"krate":0,"index":1350},{"krate":0,"index":1422},{"krate":0,"index":1486},{"krate":0,"index":1557},{"krate":0,"index":1631},{"krate":0,"index":1705},{"krate":0,"index":1748},{"krate":0,"index":1791},{"krate":0,"index":1921},{"krate":0,"index":1961},{"krate":0,"index":2077},{"krate":0,"index":2189},{"krate":0,"index":2287},{"krate":0,"index":2309},{"krate":0,"index":2426},{"krate":0,"index":2512},{"krate":0,"index":2631},{"krate":0,"index":2912},{"krate":0,"index":2919},{"krate":0,"index":2947},{"krate":0,"index":2965},{"krate":0,"index":3095},{"krate":0,"index":3173},{"krate":0,"index":3235},{"krate":0,"index":3292},{"krate":0,"index":3357},{"krate":0,"index":3427},{"krate":0,"index":3471},{"krate":0,"index":3508},{"krate":0,"index":3546},{"krate":0,"index":3603},{"krate":0,"index":3635},{"krate":0,"index":3778},{"krate":0,"index":3863},{"krate":0,"index":3940},{"krate":0,"index":4163},{"krate":0,"index":4295},{"krate":0,"index":4354},{"krate":0,"index":4420},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4446},{"krate":0,"index":4449},{"krate":0,"index":4452},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":4529},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4536},{"krate":0,"index":4539},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4549},{"krate":0,"index":4552},{"krate":0,"index":4555},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4565},{"krate":0,"index":4568},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4575},{"krate":0,"index":4578},{"krate":0,"index":4581},{"krate":0,"index":4584},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":4645},{"krate":0,"index":4648},{"krate":0,"index":4652},{"krate":0,"index":4657},{"krate":0,"index":4663},{"krate":0,"index":4668},{"krate":0,"index":4674},{"krate":0,"index":4877},{"krate":0,"index":4882},{"krate":0,"index":4947},{"krate":0,"index":4951},{"krate":0,"index":4955},{"krate":0,"index":4959},{"krate":0,"index":4965}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34005,"byte_end":34079,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34080,"byte_end":34083,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34084,"byte_end":34162,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34163,"byte_end":34206,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34207,"byte_end":34210,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34211,"byte_end":34281,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34282,"byte_end":34350,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34351,"byte_end":34420,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34421,"byte_end":34488,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34489,"byte_end":34552,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34553,"byte_end":34583,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34584,"byte_end":34587,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34588,"byte_end":34599,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34600,"byte_end":34626,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34627,"byte_end":34672,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34673,"byte_end":34697,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34698,"byte_end":34726,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34727,"byte_end":34746,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34747,"byte_end":34752,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34753,"byte_end":34760,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34761,"byte_end":34764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34765,"byte_end":34831,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34832,"byte_end":34835,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34836,"byte_end":34847,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34848,"byte_end":34874,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34875,"byte_end":34916,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34917,"byte_end":34945,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34946,"byte_end":34982,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34983,"byte_end":34988,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34989,"byte_end":34996,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":34997,"byte_end":35000,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35001,"byte_end":35065,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35066,"byte_end":35132,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35133,"byte_end":35202,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35203,"byte_end":35263,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35264,"byte_end":35327,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35328,"byte_end":35345,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35346,"byte_end":35349,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35350,"byte_end":35417,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35418,"byte_end":35469,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35470,"byte_end":35473,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35474,"byte_end":35542,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35543,"byte_end":35599,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35600,"byte_end":35668,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35669,"byte_end":35739,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35740,"byte_end":35797,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35798,"byte_end":35859,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35860,"byte_end":35924,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35925,"byte_end":35994,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":35995,"byte_end":36019,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36020,"byte_end":36023,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36024,"byte_end":36090,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36091,"byte_end":36157,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36158,"byte_end":36203,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36204,"byte_end":36265,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36266,"byte_end":36269,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36270,"byte_end":36339,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36340,"byte_end":36410,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36411,"byte_end":36422,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36423,"byte_end":36426,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36427,"byte_end":36502,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36503,"byte_end":36581,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36582,"byte_end":36585,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36586,"byte_end":36664,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36665,"byte_end":36718,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36719,"byte_end":36786,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36787,"byte_end":36813,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36814,"byte_end":36849,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36850,"byte_end":36853,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36854,"byte_end":36933,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":36934,"byte_end":37013,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37014,"byte_end":37094,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37095,"byte_end":37172,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37173,"byte_end":37213,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37214,"byte_end":37217,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A note about object safety: It is currently _not_ possible to wrap","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37218,"byte_end":37288,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ a `ParallelIterator` (or any trait that depends on it) using a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37289,"byte_end":37355,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ `Box<dyn ParallelIterator>` or other kind of dynamic allocation,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37356,"byte_end":37424,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ because `ParallelIterator` is **not object-safe**.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37425,"byte_end":37479,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ (This keeps the implementation simpler and allows extra optimizations.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37480,"byte_end":37555,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":404},{"krate":0,"index":413},{"krate":0,"index":421},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":7041},{"krate":0,"index":7043},{"krate":0,"index":7045},{"krate":0,"index":441},{"krate":0,"index":7046},{"krate":0,"index":7049},{"krate":0,"index":7051},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":460},{"krate":0,"index":468},{"krate":0,"index":471}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a general overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":142899,"byte_end":142972,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":142973,"byte_end":143044,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a general overview.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143045,"byte_end":143133,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143134,"byte_end":143137,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143138,"byte_end":143220,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143677,"byte_end":143693,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143316,"byte_end":143378,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143379,"byte_end":143449,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143450,"byte_end":143495,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143496,"byte_end":143499,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143500,"byte_end":143600,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143601,"byte_end":143666,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143926,"byte_end":143932,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143703,"byte_end":143764,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143769,"byte_end":143816,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143821,"byte_end":143824,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143829,"byte_end":143916,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144150,"byte_end":144158,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":143939,"byte_end":144004,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144009,"byte_end":144072,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144077,"byte_end":144142,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145632,"byte_end":145640,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144241,"byte_end":144308,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144309,"byte_end":144378,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144379,"byte_end":144446,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144447,"byte_end":144514,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144515,"byte_end":144584,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144585,"byte_end":144653,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144654,"byte_end":144723,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144724,"byte_end":144794,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144795,"byte_end":144863,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144864,"byte_end":144927,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144928,"byte_end":144983,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144984,"byte_end":144987,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":144988,"byte_end":145053,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145054,"byte_end":145123,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145124,"byte_end":145165,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145166,"byte_end":145169,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145170,"byte_end":145234,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145235,"byte_end":145302,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145303,"byte_end":145362,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145363,"byte_end":145425,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145426,"byte_end":145474,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145475,"byte_end":145478,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145479,"byte_end":145561,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145562,"byte_end":145621,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145777,"byte_end":145781,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145661,"byte_end":145725,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145730,"byte_end":145767,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145838,"byte_end":145846,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145788,"byte_end":145828,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146029,"byte_end":146038,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145924,"byte_end":145999,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146004,"byte_end":146021,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146641,"byte_end":146648,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146069,"byte_end":146121,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146126,"byte_end":146189,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146194,"byte_end":146258,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146263,"byte_end":146324,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146329,"byte_end":146391,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146396,"byte_end":146459,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146464,"byte_end":146525,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146530,"byte_end":146541,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146546,"byte_end":146549,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146554,"byte_end":146633,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147213,"byte_end":147220,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146688,"byte_end":146740,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146745,"byte_end":146810,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146815,"byte_end":146869,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146874,"byte_end":146937,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":146942,"byte_end":147000,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147005,"byte_end":147065,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147070,"byte_end":147113,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147118,"byte_end":147121,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147126,"byte_end":147205,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147408,"byte_end":147416,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147269,"byte_end":147333,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147338,"byte_end":147400,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147683,"byte_end":147692,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147459,"byte_end":147522,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147527,"byte_end":147597,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147602,"byte_end":147605,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147610,"byte_end":147675,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148640,"byte_end":148648,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147820,"byte_end":147889,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147890,"byte_end":147955,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":147956,"byte_end":148017,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148018,"byte_end":148085,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148086,"byte_end":148154,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148155,"byte_end":148224,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148225,"byte_end":148295,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148296,"byte_end":148355,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148356,"byte_end":148391,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148392,"byte_end":148395,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148396,"byte_end":148478,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148479,"byte_end":148557,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148558,"byte_end":148591,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148592,"byte_end":148629,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148749,"byte_end":148755,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148675,"byte_end":148739,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148876,"byte_end":148883,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148799,"byte_end":148866,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148989,"byte_end":148995,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148913,"byte_end":148979,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149231,"byte_end":149239,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149008,"byte_end":149072,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149077,"byte_end":149137,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149142,"byte_end":149206,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149211,"byte_end":149223,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149425,"byte_end":149436,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149297,"byte_end":149358,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149363,"byte_end":149417,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149595,"byte_end":149599,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149465,"byte_end":149527,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149532,"byte_end":149587,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149962,"byte_end":149968,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149619,"byte_end":149673,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149674,"byte_end":149741,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149742,"byte_end":149812,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149813,"byte_end":149868,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149869,"byte_end":149872,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149873,"byte_end":149951,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150068,"byte_end":150074,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149988,"byte_end":150058,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150143,"byte_end":150150,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150081,"byte_end":150135,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150579,"byte_end":150591,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150183,"byte_end":150263,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150268,"byte_end":150271,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150276,"byte_end":150341,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150346,"byte_end":150410,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150415,"byte_end":150448,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150453,"byte_end":150456,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150461,"byte_end":150524,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150529,"byte_end":150571,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150899,"byte_end":150907,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150842,"byte_end":150891,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151064,"byte_end":151068,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":150936,"byte_end":150996,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151001,"byte_end":151056,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151498,"byte_end":151505,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":431}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151088,"byte_end":151157,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151158,"byte_end":151225,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151226,"byte_end":151296,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151297,"byte_end":151364,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151365,"byte_end":151400,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151401,"byte_end":151404,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151405,"byte_end":151487,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151606,"byte_end":151612,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151520,"byte_end":151583,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151588,"byte_end":151598,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151974,"byte_end":151991,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151662,"byte_end":151731,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151732,"byte_end":151788,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151789,"byte_end":151858,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151859,"byte_end":151926,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151927,"byte_end":151963,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152467,"byte_end":152481,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152014,"byte_end":152073,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152078,"byte_end":152144,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152149,"byte_end":152215,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152220,"byte_end":152282,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152287,"byte_end":152347,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152352,"byte_end":152418,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152423,"byte_end":152459,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152603,"byte_end":152613,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152503,"byte_end":152569,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152574,"byte_end":152595,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153090,"byte_end":153107,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152642,"byte_end":152709,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152710,"byte_end":152772,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152773,"byte_end":152841,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152842,"byte_end":152912,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152913,"byte_end":152916,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152917,"byte_end":152983,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":152984,"byte_end":153052,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153053,"byte_end":153079,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153185,"byte_end":153189,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153128,"byte_end":153175,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153278,"byte_end":153283,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153196,"byte_end":153270,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153466,"byte_end":153475,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153320,"byte_end":153383,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153388,"byte_end":153458,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157295,"byte_end":157301,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156716,"byte_end":156786,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156787,"byte_end":156853,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156854,"byte_end":156923,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156924,"byte_end":156964,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156965,"byte_end":156968,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":156969,"byte_end":157031,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157032,"byte_end":157088,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157089,"byte_end":157134,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157135,"byte_end":157138,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157139,"byte_end":157219,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157220,"byte_end":157287,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158547,"byte_end":158571,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157909,"byte_end":157971,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157972,"byte_end":158037,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158038,"byte_end":158106,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158107,"byte_end":158173,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158174,"byte_end":158185,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158186,"byte_end":158189,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158190,"byte_end":158252,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158253,"byte_end":158309,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158310,"byte_end":158355,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158356,"byte_end":158359,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158360,"byte_end":158390,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158391,"byte_end":158471,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":158472,"byte_end":158539,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":160347,"byte_end":160363,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":160178,"byte_end":160268,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":160269,"byte_end":160272,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":160273,"byte_end":160339,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7052},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162220,"byte_end":162225,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7055},{"krate":0,"index":7056}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":161838,"byte_end":161917,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":161918,"byte_end":161994,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":161995,"byte_end":161998,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":161999,"byte_end":162056,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162057,"byte_end":162110,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162111,"byte_end":162184,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169153,"byte_end":169159,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":7067},{"krate":0,"index":7068}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168740,"byte_end":168815,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168816,"byte_end":168819,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168820,"byte_end":168904,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168905,"byte_end":168908,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168909,"byte_end":168975,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":168976,"byte_end":169043,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169044,"byte_end":169117,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174143,"byte_end":174149,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":7077}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173754,"byte_end":173833,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173834,"byte_end":173837,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173838,"byte_end":173915,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173916,"byte_end":173919,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173920,"byte_end":173979,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":173980,"byte_end":174033,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174034,"byte_end":174107,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7084},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203014,"byte_end":203020,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":7086}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Copied` is an iterator that copies the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202625,"byte_end":202704,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202705,"byte_end":202708,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`copied()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202709,"byte_end":202786,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202787,"byte_end":202790,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copied()`]: trait.ParallelIterator.html#method.copied","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202791,"byte_end":202850,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202851,"byte_end":202904,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":202905,"byte_end":202978,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208022,"byte_end":208027,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207604,"byte_end":207658,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207659,"byte_end":207662,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207663,"byte_end":207740,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207741,"byte_end":207783,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207784,"byte_end":207787,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207788,"byte_end":207802,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207803,"byte_end":207806,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207807,"byte_end":207814,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207815,"byte_end":207841,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207842,"byte_end":207869,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207870,"byte_end":207873,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207874,"byte_end":207912,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207913,"byte_end":207936,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207937,"byte_end":207966,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207967,"byte_end":207970,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":207971,"byte_end":208006,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208007,"byte_end":208014,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208180,"byte_end":208185,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":934}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208103,"byte_end":208168,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7093},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210193,"byte_end":210202,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7095}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":209765,"byte_end":209850,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":209851,"byte_end":209938,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":209939,"byte_end":209942,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":209943,"byte_end":210015,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210016,"byte_end":210083,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210084,"byte_end":210157,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228256,"byte_end":228262,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7105},{"krate":0,"index":7106}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":227878,"byte_end":227957,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":227958,"byte_end":228035,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228036,"byte_end":228039,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228040,"byte_end":228099,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228100,"byte_end":228153,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228154,"byte_end":228227,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7111},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231795,"byte_end":231804,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7115}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231393,"byte_end":231483,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231484,"byte_end":231566,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231567,"byte_end":231570,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231571,"byte_end":231638,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231639,"byte_end":231692,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231693,"byte_end":231766,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245827,"byte_end":245834,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7131},{"krate":0,"index":7132}],"decl_id":null,"docs":" `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245427,"byte_end":245522,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245523,"byte_end":245602,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245603,"byte_end":245606,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245607,"byte_end":245670,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245671,"byte_end":245724,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245725,"byte_end":245798,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7137},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249797,"byte_end":249808,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"FlatMapIter","qualname":"::iter::flat_map_iter::FlatMapIter","value":"FlatMapIter {  }","parent":null,"children":[{"krate":0,"index":7140},{"krate":0,"index":7141}],"decl_id":null,"docs":" `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.\n This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249380,"byte_end":249477,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249478,"byte_end":249562,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249563,"byte_end":249566,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map_iter()`]: trait.ParallelIterator.html#method.flat_map_iter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249567,"byte_end":249640,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249641,"byte_end":249694,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249695,"byte_end":249768,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7146},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253510,"byte_end":253517,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7148}],"decl_id":null,"docs":" `Flatten` turns each element to a parallel iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to a parallel iterator, then flattens these iterators","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253104,"byte_end":253190,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253191,"byte_end":253280,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253281,"byte_end":253284,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253285,"byte_end":253346,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253347,"byte_end":253400,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253401,"byte_end":253474,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7155},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256870,"byte_end":256881,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"FlattenIter","qualname":"::iter::flatten_iter::FlattenIter","value":"FlattenIter {  }","parent":null,"children":[{"krate":0,"index":7157}],"decl_id":null,"docs":" `FlattenIter` turns each element to a serial iterator, then flattens these iterators\n together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FlattenIter` turns each element to a serial iterator, then flattens these iterators","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256447,"byte_end":256535,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/ together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256536,"byte_end":256630,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256631,"byte_end":256634,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten_iter()`]: trait.ParallelIterator.html#method.flatten_iter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256635,"byte_end":256706,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256707,"byte_end":256760,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256761,"byte_end":256834,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260308,"byte_end":260312,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7168},{"krate":0,"index":7169},{"krate":0,"index":7170}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":259923,"byte_end":260015,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260016,"byte_end":260091,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260092,"byte_end":260095,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260096,"byte_end":260151,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260152,"byte_end":260205,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260206,"byte_end":260279,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7176},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264427,"byte_end":264435,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":7180},{"krate":0,"index":7181},{"krate":0,"index":7182}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264023,"byte_end":264119,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264120,"byte_end":264200,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264201,"byte_end":264204,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264205,"byte_end":264270,"line_start":200,"line_end":200,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264271,"byte_end":264324,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264325,"byte_end":264398,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7188},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274676,"byte_end":274683,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7191},{"krate":0,"index":7192}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274263,"byte_end":274338,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274339,"byte_end":274370,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274371,"byte_end":274374,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274375,"byte_end":274453,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274454,"byte_end":274457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274458,"byte_end":274519,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274520,"byte_end":274573,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274574,"byte_end":274647,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7197},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280818,"byte_end":280828,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":7200},{"krate":0,"index":7201}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280358,"byte_end":280428,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280429,"byte_end":280498,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280499,"byte_end":280561,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280562,"byte_end":280565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280566,"byte_end":280640,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280641,"byte_end":280708,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280709,"byte_end":280782,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7210},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289829,"byte_end":289847,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":7213}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289285,"byte_end":289348,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289349,"byte_end":289417,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289418,"byte_end":289447,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289448,"byte_end":289451,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289452,"byte_end":289521,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289522,"byte_end":289554,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289555,"byte_end":289558,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289559,"byte_end":289651,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289652,"byte_end":289719,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":289720,"byte_end":289793,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292066,"byte_end":292077,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":7224},{"krate":0,"index":7225}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291634,"byte_end":291710,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291711,"byte_end":291775,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291776,"byte_end":291828,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291829,"byte_end":291832,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291833,"byte_end":291902,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291903,"byte_end":291956,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":291957,"byte_end":292030,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302298,"byte_end":302304,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":7234},{"krate":0,"index":7235}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`with_min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":301869,"byte_end":301946,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`with_min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":301947,"byte_end":302037,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302038,"byte_end":302041,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`with_min_len()`]: trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302042,"byte_end":302120,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302121,"byte_end":302188,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302189,"byte_end":302262,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7242},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305398,"byte_end":305404,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":7244},{"krate":0,"index":7245}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`with_max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":304969,"byte_end":305046,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`with_max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305047,"byte_end":305137,"line_start":140,"line_end":140,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305138,"byte_end":305141,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`with_max_len()`]: trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305142,"byte_end":305220,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305221,"byte_end":305288,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305289,"byte_end":305362,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7252},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308527,"byte_end":308530,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7255},{"krate":0,"index":7256}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308153,"byte_end":308233,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308234,"byte_end":308237,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308238,"byte_end":308312,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308313,"byte_end":308316,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308317,"byte_end":308370,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308371,"byte_end":308424,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308425,"byte_end":308498,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314505,"byte_end":314512,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":7265},{"krate":0,"index":7266},{"krate":0,"index":7267}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314112,"byte_end":314196,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314197,"byte_end":314200,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314201,"byte_end":314280,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314281,"byte_end":314284,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314285,"byte_end":314348,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314349,"byte_end":314402,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314403,"byte_end":314476,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7273},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322573,"byte_end":322580,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7279}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322180,"byte_end":322264,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322265,"byte_end":322268,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322269,"byte_end":322348,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322349,"byte_end":322352,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322353,"byte_end":322416,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322417,"byte_end":322470,"line_start":343,"line_end":343,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322471,"byte_end":322544,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330734,"byte_end":330742,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"MultiZip","qualname":"::iter::multizip::MultiZip","value":"MultiZip {  }","parent":null,"children":[{"krate":0,"index":7287}],"decl_id":null,"docs":" `MultiZip` is an iterator that zips up a tuple of parallel iterators to\n produce tuples of their items.","sig":null,"attributes":[{"value":"/ `MultiZip` is an iterator that zips up a tuple of parallel iterators to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328318,"byte_end":328393,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ produce tuples of their items.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328394,"byte_end":328428,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328429,"byte_end":328432,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is created by calling `into_par_iter()` on a tuple of types that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328433,"byte_end":328504,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ implement `IntoParallelIterator`, or `par_iter()`/`par_iter_mut()` with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328505,"byte_end":328580,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ types that are iterable by reference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328581,"byte_end":328622,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328623,"byte_end":328626,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The implementation currently support tuples up to length 12.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328627,"byte_end":328691,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328692,"byte_end":328695,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328696,"byte_end":328710,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328711,"byte_end":328714,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328715,"byte_end":328722,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328723,"byte_end":328749,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328750,"byte_end":328753,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // This will iterate `r` by mutable reference, like `par_iter_mut()`, while","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328754,"byte_end":328833,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ // ranges are all iterated by value like `into_par_iter()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328834,"byte_end":328897,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ // Note that the zipped iterator is only as long as the shortest input.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328898,"byte_end":328973,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ let mut r = vec![0; 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":328974,"byte_end":329001,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/ (&mut r, 1..10, 10..100, 100..1000).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329002,"byte_end":329057,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/     .for_each(|(r, x, y, z)| *r = x * y + z);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329058,"byte_end":329107,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329108,"byte_end":329111,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&r, &[1 * 10 + 100, 2 * 11 + 101, 3 * 12 + 102]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329112,"byte_end":329176,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329177,"byte_end":329184,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329185,"byte_end":329188,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For a group that should all be iterated by reference, you can use a tuple reference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329189,"byte_end":329277,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329278,"byte_end":329281,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329282,"byte_end":329289,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329290,"byte_end":329316,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329317,"byte_end":329320,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let xs: Vec<_> = (1..10).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329321,"byte_end":329360,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ let ys: Vec<_> = (10..100).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329361,"byte_end":329402,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let zs: Vec<_> = (100..1000).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329403,"byte_end":329446,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329447,"byte_end":329450,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Reference each input separately with `IntoParallelIterator`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329451,"byte_end":329518,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ let r1: Vec<_> = (&xs, &ys, &zs).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329519,"byte_end":329571,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329572,"byte_end":329607,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329608,"byte_end":329627,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329628,"byte_end":329631,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Reference them all together with `IntoParallelRefIterator`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329632,"byte_end":329698,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ let r2: Vec<_> = (xs, ys, zs).par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329699,"byte_end":329743,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329744,"byte_end":329779,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329780,"byte_end":329799,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329800,"byte_end":329803,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r1, r2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329804,"byte_end":329827,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329828,"byte_end":329835,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329836,"byte_end":329839,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Mutable references to a tuple will work similarly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329840,"byte_end":329894,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329895,"byte_end":329898,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329899,"byte_end":329906,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329907,"byte_end":329933,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329934,"byte_end":329937,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut xs: Vec<_> = (1..4).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329938,"byte_end":329980,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ let mut ys: Vec<_> = (-4..-1).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":329981,"byte_end":330025,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ let mut zs = vec![0; 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330026,"byte_end":330054,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330055,"byte_end":330058,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference each input separately with `IntoParallelIterator`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330059,"byte_end":330134,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ (&mut xs, &mut ys, &mut zs).into_par_iter().for_each(|(x, y, z)| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330135,"byte_end":330205,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/     *z += *x + *y;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330206,"byte_end":330228,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330229,"byte_end":330258,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330259,"byte_end":330266,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330267,"byte_end":330270,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(xs, (vec![-4, -3, -2]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330271,"byte_end":330310,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(ys, (vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330311,"byte_end":330347,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(zs, (vec![-3, -1, 1]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330348,"byte_end":330386,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330387,"byte_end":330390,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference them all together with `IntoParallelRefMutIterator`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330391,"byte_end":330468,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ let mut tuple = (xs, ys, zs);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330469,"byte_end":330502,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ tuple.par_iter_mut().for_each(|(x, y, z)| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330503,"byte_end":330550,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     *z += *x + *y;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330551,"byte_end":330573,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330574,"byte_end":330603,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330604,"byte_end":330611,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330612,"byte_end":330615,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple, (vec![1, 2, 3], vec![-4, -3, -2], vec![-6, -2, 2]));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330616,"byte_end":330690,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\multizip.rs","byte_start":330691,"byte_end":330698,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339003,"byte_end":339007,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338361,"byte_end":338431,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338432,"byte_end":338435,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338436,"byte_end":338514,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338515,"byte_end":338594,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338595,"byte_end":338642,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338643,"byte_end":338646,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338647,"byte_end":338661,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338662,"byte_end":338665,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338666,"byte_end":338673,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338674,"byte_end":338700,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338701,"byte_end":338727,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338728,"byte_end":338731,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338732,"byte_end":338770,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338771,"byte_end":338795,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338796,"byte_end":338825,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338826,"byte_end":338829,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338830,"byte_end":338873,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338874,"byte_end":338931,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338932,"byte_end":338987,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":338988,"byte_end":338995,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339159,"byte_end":339163,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8166}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339060,"byte_end":339123,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340523,"byte_end":340532,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":8175}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340073,"byte_end":340145,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340146,"byte_end":340201,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340202,"byte_end":340205,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340206,"byte_end":340287,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340288,"byte_end":340291,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340292,"byte_end":340359,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340360,"byte_end":340413,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340414,"byte_end":340487,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349274,"byte_end":349288,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":3146}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348010,"byte_end":348080,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348081,"byte_end":348084,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348085,"byte_end":348184,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348185,"byte_end":348281,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348282,"byte_end":348379,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348380,"byte_end":348471,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348472,"byte_end":348541,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348542,"byte_end":348545,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348546,"byte_end":348634,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348635,"byte_end":348638,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348639,"byte_end":348653,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348654,"byte_end":348657,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348658,"byte_end":348757,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348758,"byte_end":348804,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348805,"byte_end":348808,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348809,"byte_end":348816,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348817,"byte_end":348853,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348854,"byte_end":348895,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348896,"byte_end":348929,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348930,"byte_end":348933,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348934,"byte_end":348948,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348949,"byte_end":348982,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348983,"byte_end":348986,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":348987,"byte_end":349011,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349012,"byte_end":349036,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349037,"byte_end":349063,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349064,"byte_end":349067,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349068,"byte_end":349078,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349079,"byte_end":349085,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349086,"byte_end":349089,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349090,"byte_end":349168,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349169,"byte_end":349196,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349197,"byte_end":349200,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349201,"byte_end":349255,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349256,"byte_end":349263,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349370,"byte_end":349380,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":3145},"children":[],"decl_id":null,"docs":" Creates a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Creates a bridge from this type to a `ParallelIterator`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349302,"byte_end":349362,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":8189},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349879,"byte_end":349889,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":8191}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349573,"byte_end":349646,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349647,"byte_end":349650,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349651,"byte_end":349739,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349740,"byte_end":349789,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349790,"byte_end":349793,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349794,"byte_end":349843,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8198},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356000,"byte_end":356009,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"Positions","qualname":"::iter::positions::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202}],"decl_id":null,"docs":" `Positions` takes a predicate `predicate` and filters out elements that match,\n yielding their indices.","sig":null,"attributes":[{"value":"/ `Positions` takes a predicate `predicate` and filters out elements that match,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355550,"byte_end":355632,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ yielding their indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355633,"byte_end":355660,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355661,"byte_end":355664,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`positions()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355665,"byte_end":355752,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355753,"byte_end":355756,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`positions()`]: trait.IndexedParallelIterator.html#method.positions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355757,"byte_end":355829,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355830,"byte_end":355897,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":355898,"byte_end":355971,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8207},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363689,"byte_end":363695,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8209}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363586,"byte_end":363653,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364247,"byte_end":364253,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363734,"byte_end":363798,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363799,"byte_end":363865,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363866,"byte_end":363931,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363932,"byte_end":363974,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":363975,"byte_end":364031,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364032,"byte_end":364035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364036,"byte_end":364050,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364051,"byte_end":364054,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364055,"byte_end":364062,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364063,"byte_end":364089,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364090,"byte_end":364118,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364119,"byte_end":364179,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364180,"byte_end":364231,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364232,"byte_end":364239,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364651,"byte_end":364655,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Takes only `n` repeats of the element, similar to the general","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364376,"byte_end":364441,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364446,"byte_end":364509,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364514,"byte_end":364517,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364522,"byte_end":364591,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364596,"byte_end":364639,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364917,"byte_end":364920,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterates tuples, repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterates tuples, repeating the element with items from another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364732,"byte_end":364798,"line_start":43,"line_end":43,"column_start":5,"column_end":71}},{"value":"/ iterator, similar to the general","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364803,"byte_end":364839,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364844,"byte_end":364905,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":8216},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366189,"byte_end":366196,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":8218},{"krate":0,"index":8219}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366084,"byte_end":366153,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366561,"byte_end":366568,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366253,"byte_end":366319,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366320,"byte_end":366340,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366341,"byte_end":366344,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366345,"byte_end":366359,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366360,"byte_end":366363,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366364,"byte_end":366371,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366372,"byte_end":366398,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366399,"byte_end":366428,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366429,"byte_end":366493,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366494,"byte_end":366545,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366546,"byte_end":366553,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369508,"byte_end":369511,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":8228}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369118,"byte_end":369195,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369196,"byte_end":369265,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369266,"byte_end":369269,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369270,"byte_end":369330,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369331,"byte_end":369398,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369399,"byte_end":369472,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8235},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372353,"byte_end":372357,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8237},{"krate":0,"index":8238}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":371960,"byte_end":372025,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372026,"byte_end":372108,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372109,"byte_end":372112,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372113,"byte_end":372175,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372176,"byte_end":372243,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372244,"byte_end":372317,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378280,"byte_end":378285,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374396,"byte_end":374473,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374474,"byte_end":374529,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374530,"byte_end":374533,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374534,"byte_end":374548,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374549,"byte_end":374552,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374553,"byte_end":374623,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374624,"byte_end":374627,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374628,"byte_end":374635,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374636,"byte_end":374656,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374657,"byte_end":374683,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374684,"byte_end":374708,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374709,"byte_end":374712,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374713,"byte_end":374716,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374717,"byte_end":374763,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374764,"byte_end":374796,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374797,"byte_end":374800,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374801,"byte_end":374849,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374850,"byte_end":374913,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374914,"byte_end":374989,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":374990,"byte_end":375065,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375066,"byte_end":375119,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375120,"byte_end":375123,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375124,"byte_end":375194,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375195,"byte_end":375250,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375251,"byte_end":375301,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375302,"byte_end":375307,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375308,"byte_end":375311,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375312,"byte_end":375392,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375393,"byte_end":375460,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375461,"byte_end":375522,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375523,"byte_end":375600,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375601,"byte_end":375646,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375647,"byte_end":375716,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375717,"byte_end":375724,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375725,"byte_end":375732,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375733,"byte_end":375736,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375737,"byte_end":375809,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375810,"byte_end":375888,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375889,"byte_end":375915,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375916,"byte_end":375919,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375920,"byte_end":375927,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375928,"byte_end":375950,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375951,"byte_end":375979,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":375980,"byte_end":376006,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376007,"byte_end":376041,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376042,"byte_end":376107,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376108,"byte_end":376163,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376164,"byte_end":376221,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376222,"byte_end":376274,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376275,"byte_end":376282,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376283,"byte_end":376288,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376289,"byte_end":376362,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376363,"byte_end":376383,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376384,"byte_end":376422,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376423,"byte_end":376447,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376448,"byte_end":376451,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376452,"byte_end":376488,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376489,"byte_end":376513,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376514,"byte_end":376519,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376520,"byte_end":376523,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376524,"byte_end":376603,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376604,"byte_end":376677,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376678,"byte_end":376712,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376713,"byte_end":376777,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376778,"byte_end":376857,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376858,"byte_end":376902,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376903,"byte_end":376948,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376949,"byte_end":376977,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":376978,"byte_end":377046,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377047,"byte_end":377109,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377110,"byte_end":377142,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377143,"byte_end":377174,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377175,"byte_end":377206,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377207,"byte_end":377221,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377222,"byte_end":377285,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377286,"byte_end":377310,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377311,"byte_end":377327,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377328,"byte_end":377394,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377395,"byte_end":377457,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377458,"byte_end":377490,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377491,"byte_end":377522,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377523,"byte_end":377554,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377555,"byte_end":377569,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377570,"byte_end":377634,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377635,"byte_end":377659,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377660,"byte_end":377669,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377670,"byte_end":377675,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377676,"byte_end":377679,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377680,"byte_end":377741,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377742,"byte_end":377793,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377794,"byte_end":377853,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377854,"byte_end":377931,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":377932,"byte_end":378006,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378007,"byte_end":378068,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378069,"byte_end":378127,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378128,"byte_end":378187,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378188,"byte_end":378252,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378253,"byte_end":378260,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378261,"byte_end":378268,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378269,"byte_end":378272,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378622,"byte_end":378627,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8249}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378421,"byte_end":378502,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378503,"byte_end":378558,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378559,"byte_end":378562,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378563,"byte_end":378593,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382328,"byte_end":382332,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8257}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":381932,"byte_end":382000,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382001,"byte_end":382083,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382084,"byte_end":382087,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382088,"byte_end":382150,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382151,"byte_end":382218,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382219,"byte_end":382292,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384868,"byte_end":384875,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8271},{"krate":0,"index":8272}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384468,"byte_end":384563,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384564,"byte_end":384643,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384644,"byte_end":384647,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384648,"byte_end":384711,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384712,"byte_end":384765,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384766,"byte_end":384839,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8279},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388953,"byte_end":388964,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":8283},{"krate":0,"index":8284},{"krate":0,"index":8285}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388534,"byte_end":388633,"line_start":188,"line_end":188,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388634,"byte_end":388718,"line_start":189,"line_end":189,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388719,"byte_end":388722,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388723,"byte_end":388796,"line_start":191,"line_end":191,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388797,"byte_end":388850,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388851,"byte_end":388924,"line_start":193,"line_end":193,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398454,"byte_end":398458,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3943},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398393,"byte_end":398444,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398533,"byte_end":398538,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3943},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398471,"byte_end":398523,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":8291},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412178,"byte_end":412184,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":8294},{"krate":0,"index":8295}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411767,"byte_end":411826,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411827,"byte_end":411875,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411876,"byte_end":411879,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411880,"byte_end":411957,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411958,"byte_end":411961,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":411962,"byte_end":412021,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412022,"byte_end":412075,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412076,"byte_end":412149,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8313},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419901,"byte_end":419910,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":8315}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419454,"byte_end":419532,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419533,"byte_end":419579,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419580,"byte_end":419583,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419584,"byte_end":419665,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419666,"byte_end":419669,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419670,"byte_end":419737,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419738,"byte_end":419791,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419792,"byte_end":419865,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8322},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423606,"byte_end":423609,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8325},{"krate":0,"index":8326}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423195,"byte_end":423267,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423268,"byte_end":423331,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423332,"byte_end":423363,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423364,"byte_end":423367,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423368,"byte_end":423428,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423429,"byte_end":423496,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423497,"byte_end":423570,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8335},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427596,"byte_end":427601,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":8338}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427101,"byte_end":427186,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427187,"byte_end":427213,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427214,"byte_end":427217,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427218,"byte_end":427301,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427302,"byte_end":427349,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427350,"byte_end":427353,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427354,"byte_end":427418,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427419,"byte_end":427486,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427487,"byte_end":427560,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8347},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429398,"byte_end":429404,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"StepBy","qualname":"::iter::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":8349},{"krate":0,"index":8350}],"decl_id":null,"docs":" `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.\n This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":428961,"byte_end":429061,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"/ This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429062,"byte_end":429147,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429148,"byte_end":429151,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`step_by()`]: trait.IndexedParallelIterator.html#method.step_by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429152,"byte_end":429220,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429221,"byte_end":429288,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429289,"byte_end":429362,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":4648},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40443,"byte_end":40463,"line_start":204,"line_end":204,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":39995,"byte_end":40074,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40075,"byte_end":40078,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40079,"byte_end":40156,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40157,"byte_end":40233,"line_start":199,"line_end":199,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40234,"byte_end":40282,"line_start":200,"line_end":200,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40283,"byte_end":40286,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40287,"byte_end":40340,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40341,"byte_end":40432,"line_start":203,"line_end":203,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40532,"byte_end":40536,"line_start":206,"line_end":206,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4648},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40470,"byte_end":40522,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40651,"byte_end":40655,"line_start":209,"line_end":209,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4648},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40580,"byte_end":40641,"line_start":208,"line_end":208,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41306,"byte_end":41319,"line_start":233,"line_end":233,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":4648},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40668,"byte_end":40713,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40718,"byte_end":40721,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40726,"byte_end":40740,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40745,"byte_end":40748,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40753,"byte_end":40760,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40765,"byte_end":40791,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40796,"byte_end":40799,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40804,"byte_end":40842,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40847,"byte_end":40875,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40880,"byte_end":40921,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40926,"byte_end":40933,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40938,"byte_end":40941,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":40946,"byte_end":41022,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41027,"byte_end":41030,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41035,"byte_end":41042,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41047,"byte_end":41073,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41078,"byte_end":41081,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41086,"byte_end":41150,"line_start":228,"line_end":228,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41155,"byte_end":41215,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41220,"byte_end":41227,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41232,"byte_end":41235,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41240,"byte_end":41298,"line_start":232,"line_end":232,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41908,"byte_end":41931,"line_start":249,"line_end":249,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41344,"byte_end":41404,"line_start":236,"line_end":236,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41405,"byte_end":41471,"line_start":237,"line_end":237,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41472,"byte_end":41475,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41476,"byte_end":41529,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41530,"byte_end":41565,"line_start":240,"line_end":240,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41566,"byte_end":41569,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41570,"byte_end":41613,"line_start":242,"line_end":242,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41614,"byte_end":41678,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41679,"byte_end":41752,"line_start":244,"line_end":244,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41753,"byte_end":41777,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41778,"byte_end":41781,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41782,"byte_end":41835,"line_start":247,"line_end":247,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41836,"byte_end":41897,"line_start":248,"line_end":248,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4654},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42015,"byte_end":42019,"line_start":251,"line_end":251,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":41945,"byte_end":42005,"line_start":250,"line_end":250,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42195,"byte_end":42199,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42063,"byte_end":42124,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42129,"byte_end":42185,"line_start":254,"line_end":254,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42689,"byte_end":42697,"line_start":272,"line_end":272,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42220,"byte_end":42265,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42270,"byte_end":42273,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42278,"byte_end":42292,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42297,"byte_end":42300,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42305,"byte_end":42312,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42317,"byte_end":42343,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42348,"byte_end":42351,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42356,"byte_end":42395,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42400,"byte_end":42456,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42461,"byte_end":42464,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42469,"byte_end":42531,"line_start":267,"line_end":267,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42536,"byte_end":42579,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42584,"byte_end":42616,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42621,"byte_end":42669,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42674,"byte_end":42681,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43617,"byte_end":43643,"line_start":300,"line_end":300,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43041,"byte_end":43104,"line_start":287,"line_end":287,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43105,"byte_end":43172,"line_start":288,"line_end":288,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43173,"byte_end":43176,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43177,"byte_end":43234,"line_start":290,"line_end":290,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43235,"byte_end":43270,"line_start":291,"line_end":291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43271,"byte_end":43274,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43275,"byte_end":43318,"line_start":293,"line_end":293,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43319,"byte_end":43387,"line_start":294,"line_end":294,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43388,"byte_end":43461,"line_start":295,"line_end":295,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43462,"byte_end":43486,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43487,"byte_end":43490,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43491,"byte_end":43544,"line_start":298,"line_end":298,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43545,"byte_end":43606,"line_start":299,"line_end":299,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4665},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43713,"byte_end":43717,"line_start":302,"line_end":302,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4663},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43657,"byte_end":43703,"line_start":301,"line_end":301,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43869,"byte_end":43873,"line_start":306,"line_end":306,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4663},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43761,"byte_end":43825,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43830,"byte_end":43859,"line_start":305,"line_end":305,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44187,"byte_end":44199,"line_start":319,"line_end":319,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":4663},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43894,"byte_end":43940,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43945,"byte_end":43948,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43953,"byte_end":43967,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43972,"byte_end":43975,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43980,"byte_end":43987,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":43992,"byte_end":44018,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44023,"byte_end":44026,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44031,"byte_end":44063,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44068,"byte_end":44127,"line_start":316,"line_end":316,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44132,"byte_end":44167,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44172,"byte_end":44179,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45176,"byte_end":45192,"line_start":348,"line_end":348,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":4685},{"krate":0,"index":4690},{"krate":0,"index":4696},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4713},{"krate":0,"index":4718},{"krate":0,"index":4721},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4744},{"krate":0,"index":4756},{"krate":0,"index":4760},{"krate":0,"index":4763},{"krate":0,"index":4767},{"krate":0,"index":4770},{"krate":0,"index":4775},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4791},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4811},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4836},{"krate":0,"index":4841},{"krate":0,"index":4846},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4863},{"krate":0,"index":4867},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4876}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44570,"byte_end":44622,"line_start":334,"line_end":334,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44623,"byte_end":44626,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44627,"byte_end":44694,"line_start":336,"line_end":336,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44695,"byte_end":44749,"line_start":337,"line_end":337,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44750,"byte_end":44811,"line_start":338,"line_end":338,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44812,"byte_end":44877,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44878,"byte_end":44948,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44949,"byte_end":44973,"line_start":341,"line_end":341,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44974,"byte_end":44977,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44978,"byte_end":45044,"line_start":343,"line_end":343,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45045,"byte_end":45070,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45071,"byte_end":45074,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45075,"byte_end":45097,"line_start":346,"line_end":346,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45098,"byte_end":45165,"line_start":347,"line_end":347,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45458,"byte_end":45462,"line_start":354,"line_end":354,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45213,"byte_end":45271,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45276,"byte_end":45348,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45353,"byte_end":45401,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45406,"byte_end":45409,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45414,"byte_end":45448,"line_start":353,"line_end":353,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45718,"byte_end":45726,"line_start":365,"line_end":365,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45475,"byte_end":45544,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45549,"byte_end":45552,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45557,"byte_end":45571,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45576,"byte_end":45579,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45584,"byte_end":45591,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45596,"byte_end":45622,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45627,"byte_end":45630,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45635,"byte_end":45698,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45703,"byte_end":45710,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46561,"byte_end":46574,"line_start":395,"line_end":395,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45852,"byte_end":45922,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45927,"byte_end":45957,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45962,"byte_end":45965,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45970,"byte_end":46038,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46043,"byte_end":46114,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46119,"byte_end":46136,"line_start":377,"line_end":377,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46141,"byte_end":46144,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46149,"byte_end":46163,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46168,"byte_end":46171,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46176,"byte_end":46183,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46188,"byte_end":46221,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46226,"byte_end":46252,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46257,"byte_end":46260,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46265,"byte_end":46304,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46309,"byte_end":46312,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46317,"byte_end":46393,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46398,"byte_end":46401,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46406,"byte_end":46458,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46463,"byte_end":46466,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46471,"byte_end":46486,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46491,"byte_end":46494,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46499,"byte_end":46541,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46546,"byte_end":46553,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47542,"byte_end":47555,"line_start":429,"line_end":429,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46749,"byte_end":46823,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46828,"byte_end":46858,"line_start":404,"line_end":404,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46863,"byte_end":46866,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46871,"byte_end":46942,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":46947,"byte_end":47013,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47018,"byte_end":47062,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47067,"byte_end":47070,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47075,"byte_end":47089,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47094,"byte_end":47097,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47102,"byte_end":47109,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47114,"byte_end":47132,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47137,"byte_end":47163,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47168,"byte_end":47171,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47176,"byte_end":47213,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47218,"byte_end":47221,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47226,"byte_end":47252,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47257,"byte_end":47280,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47285,"byte_end":47319,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47324,"byte_end":47365,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47370,"byte_end":47380,"line_start":422,"line_end":422,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47385,"byte_end":47388,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47393,"byte_end":47446,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47451,"byte_end":47475,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47480,"byte_end":47512,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47517,"byte_end":47522,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47527,"byte_end":47534,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48658,"byte_end":48670,"line_start":457,"line_end":457,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Output = ()> + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47753,"byte_end":47833,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47838,"byte_end":47841,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47846,"byte_end":47921,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47926,"byte_end":47994,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":47999,"byte_end":48075,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48080,"byte_end":48153,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48158,"byte_end":48234,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48239,"byte_end":48242,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48247,"byte_end":48261,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48266,"byte_end":48269,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48274,"byte_end":48281,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48286,"byte_end":48312,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48317,"byte_end":48348,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48353,"byte_end":48356,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48361,"byte_end":48431,"line_start":451,"line_end":451,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48436,"byte_end":48491,"line_start":452,"line_end":452,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48496,"byte_end":48524,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48529,"byte_end":48589,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48594,"byte_end":48638,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48643,"byte_end":48650,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49791,"byte_end":49808,"line_start":496,"line_end":496,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Output\n= ()> + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":48956,"byte_end":49025,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49030,"byte_end":49072,"line_start":470,"line_end":470,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49077,"byte_end":49080,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49085,"byte_end":49154,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49159,"byte_end":49203,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49208,"byte_end":49211,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49216,"byte_end":49262,"line_start":475,"line_end":475,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49267,"byte_end":49311,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49316,"byte_end":49319,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49324,"byte_end":49338,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49343,"byte_end":49346,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49351,"byte_end":49358,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49363,"byte_end":49396,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49401,"byte_end":49427,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49432,"byte_end":49435,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49440,"byte_end":49479,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49484,"byte_end":49487,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49492,"byte_end":49518,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49523,"byte_end":49575,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49580,"byte_end":49623,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49628,"byte_end":49631,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49636,"byte_end":49688,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49693,"byte_end":49696,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49701,"byte_end":49716,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49721,"byte_end":49724,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49729,"byte_end":49771,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":49776,"byte_end":49783,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51044,"byte_end":51061,"line_start":538,"line_end":538,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Output = ()> + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50150,"byte_end":50223,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50228,"byte_end":50270,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50275,"byte_end":50278,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50283,"byte_end":50352,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50357,"byte_end":50401,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50406,"byte_end":50409,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50414,"byte_end":50460,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50465,"byte_end":50509,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50514,"byte_end":50517,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50522,"byte_end":50536,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50541,"byte_end":50544,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50549,"byte_end":50556,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50561,"byte_end":50579,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50584,"byte_end":50610,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50615,"byte_end":50618,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50623,"byte_end":50660,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50665,"byte_end":50668,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50673,"byte_end":50699,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50704,"byte_end":50731,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50736,"byte_end":50770,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50775,"byte_end":50820,"line_start":529,"line_end":529,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50825,"byte_end":50834,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50839,"byte_end":50882,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50887,"byte_end":50890,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50895,"byte_end":50948,"line_start":533,"line_end":533,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50953,"byte_end":50977,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":50982,"byte_end":51014,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51019,"byte_end":51024,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51029,"byte_end":51036,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51683,"byte_end":51688,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51426,"byte_end":51483,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51488,"byte_end":51491,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51496,"byte_end":51510,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51515,"byte_end":51518,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51523,"byte_end":51530,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51535,"byte_end":51561,"line_start":556,"line_end":556,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51566,"byte_end":51569,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51574,"byte_end":51623,"line_start":558,"line_end":558,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51628,"byte_end":51631,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51636,"byte_end":51663,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51668,"byte_end":51675,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52197,"byte_end":52200,"line_start":584,"line_end":584,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51805,"byte_end":51872,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51877,"byte_end":51907,"line_start":571,"line_end":571,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51912,"byte_end":51915,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51920,"byte_end":51934,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51939,"byte_end":51942,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51947,"byte_end":51954,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51959,"byte_end":51985,"line_start":576,"line_end":576,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51990,"byte_end":51993,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":51998,"byte_end":52059,"line_start":578,"line_end":578,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52064,"byte_end":52067,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52072,"byte_end":52117,"line_start":580,"line_end":580,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52122,"byte_end":52125,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52130,"byte_end":52177,"line_start":582,"line_end":582,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52182,"byte_end":52189,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53543,"byte_end":53551,"line_start":621,"line_end":621,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52361,"byte_end":52430,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52435,"byte_end":52491,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52496,"byte_end":52499,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52504,"byte_end":52572,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52577,"byte_end":52648,"line_start":596,"line_end":596,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52653,"byte_end":52670,"line_start":597,"line_end":597,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52675,"byte_end":52678,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52683,"byte_end":52697,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52702,"byte_end":52705,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52710,"byte_end":52717,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52722,"byte_end":52755,"line_start":602,"line_end":602,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52760,"byte_end":52786,"line_start":603,"line_end":603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52791,"byte_end":52794,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52799,"byte_end":52838,"line_start":605,"line_end":605,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52843,"byte_end":52846,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52851,"byte_end":52877,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52882,"byte_end":52951,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":52956,"byte_end":53002,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53007,"byte_end":53096,"line_start":610,"line_end":610,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53101,"byte_end":53165,"line_start":611,"line_end":611,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53170,"byte_end":53192,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53197,"byte_end":53292,"line_start":613,"line_end":613,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53297,"byte_end":53300,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53305,"byte_end":53396,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53401,"byte_end":53471,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53476,"byte_end":53489,"line_start":617,"line_end":617,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53494,"byte_end":53497,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53502,"byte_end":53523,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53528,"byte_end":53535,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54734,"byte_end":54742,"line_start":658,"line_end":658,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53774,"byte_end":53847,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53852,"byte_end":53908,"line_start":631,"line_end":631,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53913,"byte_end":53916,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53921,"byte_end":53992,"line_start":633,"line_end":633,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":53997,"byte_end":54063,"line_start":634,"line_end":634,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54068,"byte_end":54112,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54117,"byte_end":54120,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54125,"byte_end":54139,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54144,"byte_end":54147,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54152,"byte_end":54159,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54164,"byte_end":54182,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54187,"byte_end":54213,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54218,"byte_end":54221,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54226,"byte_end":54263,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54268,"byte_end":54292,"line_start":644,"line_end":644,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54297,"byte_end":54315,"line_start":645,"line_end":645,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54320,"byte_end":54383,"line_start":646,"line_end":646,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54388,"byte_end":54448,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54453,"byte_end":54471,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54476,"byte_end":54496,"line_start":649,"line_end":649,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54501,"byte_end":54518,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54523,"byte_end":54537,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54542,"byte_end":54562,"line_start":652,"line_end":652,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54567,"byte_end":54570,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54575,"byte_end":54628,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54633,"byte_end":54671,"line_start":655,"line_end":655,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54676,"byte_end":54714,"line_start":656,"line_end":656,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54719,"byte_end":54726,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55673,"byte_end":55679,"line_start":688,"line_end":688,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":54991,"byte_end":55061,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55066,"byte_end":55135,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ that type implements `Clone`. See also [`copied()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55140,"byte_end":55196,"line_start":669,"line_end":669,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55201,"byte_end":55204,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`copied()`]: #method.copied","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55209,"byte_end":55241,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55246,"byte_end":55249,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55254,"byte_end":55268,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55273,"byte_end":55276,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55281,"byte_end":55288,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55293,"byte_end":55319,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55324,"byte_end":55327,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55332,"byte_end":55354,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55359,"byte_end":55362,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55367,"byte_end":55426,"line_start":680,"line_end":680,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55431,"byte_end":55434,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55439,"byte_end":55494,"line_start":682,"line_end":682,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55499,"byte_end":55558,"line_start":683,"line_end":683,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55563,"byte_end":55566,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55571,"byte_end":55611,"line_start":685,"line_end":685,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55616,"byte_end":55653,"line_start":686,"line_end":686,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55658,"byte_end":55665,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56519,"byte_end":56525,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where T: 'a + Copy + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which copies all of its elements.  This may be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55838,"byte_end":55908,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55913,"byte_end":55982,"line_start":697,"line_end":697,"column_start":5,"column_end":74}},{"value":"/ that type implements `Copy`. See also [`cloned()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":55987,"byte_end":56042,"line_start":698,"line_end":698,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56047,"byte_end":56050,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ [`cloned()`]: #method.cloned","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56055,"byte_end":56087,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56092,"byte_end":56095,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56100,"byte_end":56114,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56119,"byte_end":56122,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56127,"byte_end":56134,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56139,"byte_end":56165,"line_start":705,"line_end":705,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56170,"byte_end":56173,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56178,"byte_end":56200,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56205,"byte_end":56208,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let v_copied: Vec<_> = a.par_iter().copied().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56213,"byte_end":56272,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56277,"byte_end":56280,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // copied is the same as .map(|&x| x), for integers","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56285,"byte_end":56340,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56345,"byte_end":56404,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56409,"byte_end":56412,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_copied, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56417,"byte_end":56457,"line_start":714,"line_end":714,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56462,"byte_end":56499,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56504,"byte_end":56511,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57719,"byte_end":57726,"line_start":754,"line_end":754,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56683,"byte_end":56753,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56758,"byte_end":56831,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56836,"byte_end":56910,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56915,"byte_end":56918,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56923,"byte_end":56937,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56942,"byte_end":56945,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56950,"byte_end":56957,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56962,"byte_end":56988,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":56993,"byte_end":56996,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57001,"byte_end":57026,"line_start":734,"line_end":734,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57031,"byte_end":57034,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57039,"byte_end":57080,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57085,"byte_end":57111,"line_start":737,"line_end":737,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57116,"byte_end":57141,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57146,"byte_end":57186,"line_start":739,"line_end":739,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57191,"byte_end":57239,"line_start":740,"line_end":740,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57244,"byte_end":57247,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57252,"byte_end":57276,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57281,"byte_end":57284,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57289,"byte_end":57358,"line_start":744,"line_end":744,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57363,"byte_end":57389,"line_start":745,"line_end":745,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57394,"byte_end":57419,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57424,"byte_end":57488,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57493,"byte_end":57533,"line_start":748,"line_end":748,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57538,"byte_end":57609,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57614,"byte_end":57662,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57667,"byte_end":57670,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57675,"byte_end":57699,"line_start":752,"line_end":752,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57704,"byte_end":57711,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58235,"byte_end":58241,"line_start":774,"line_end":774,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57883,"byte_end":57941,"line_start":761,"line_end":761,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57946,"byte_end":57949,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57954,"byte_end":57968,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57973,"byte_end":57976,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57981,"byte_end":57988,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":57993,"byte_end":58019,"line_start":766,"line_end":766,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58024,"byte_end":58027,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58032,"byte_end":58097,"line_start":768,"line_end":768,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58102,"byte_end":58105,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58110,"byte_end":58155,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58160,"byte_end":58163,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58168,"byte_end":58215,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58220,"byte_end":58227,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58836,"byte_end":58842,"line_start":795,"line_end":795,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58394,"byte_end":58464,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58469,"byte_end":58527,"line_start":782,"line_end":782,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58532,"byte_end":58535,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58540,"byte_end":58554,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58559,"byte_end":58562,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58567,"byte_end":58574,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58579,"byte_end":58605,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58610,"byte_end":58613,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58618,"byte_end":58688,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58693,"byte_end":58696,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58701,"byte_end":58751,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58756,"byte_end":58759,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58764,"byte_end":58816,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58821,"byte_end":58828,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59636,"byte_end":59646,"line_start":820,"line_end":820,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":58999,"byte_end":59072,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59077,"byte_end":59146,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59151,"byte_end":59154,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59159,"byte_end":59173,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59178,"byte_end":59181,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59186,"byte_end":59193,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59198,"byte_end":59224,"line_start":808,"line_end":808,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59229,"byte_end":59232,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59237,"byte_end":59283,"line_start":810,"line_end":810,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59288,"byte_end":59333,"line_start":811,"line_end":811,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59338,"byte_end":59399,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59404,"byte_end":59449,"line_start":813,"line_end":813,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59454,"byte_end":59485,"line_start":814,"line_end":814,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59490,"byte_end":59493,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59498,"byte_end":59548,"line_start":816,"line_end":816,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59553,"byte_end":59556,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59561,"byte_end":59616,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59621,"byte_end":59628,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4733},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60415,"byte_end":60423,"line_start":846,"line_end":846,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested parallel iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested parallel iterators,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59833,"byte_end":59917,"line_start":828,"line_end":828,"column_start":5,"column_end":89}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59922,"byte_end":59994,"line_start":829,"line_end":829,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":59999,"byte_end":60002,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ See also [`flat_map_iter`](#method.flat_map_iter).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60007,"byte_end":60061,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60066,"byte_end":60069,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60074,"byte_end":60088,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60093,"byte_end":60096,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60101,"byte_end":60108,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60113,"byte_end":60139,"line_start":836,"line_end":836,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60144,"byte_end":60147,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60152,"byte_end":60197,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60202,"byte_end":60205,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60210,"byte_end":60276,"line_start":840,"line_end":840,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60281,"byte_end":60284,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60289,"byte_end":60330,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60335,"byte_end":60338,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60343,"byte_end":60395,"line_start":844,"line_end":844,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60400,"byte_end":60407,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4736},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62434,"byte_end":62447,"line_start":892,"line_end":892,"column_start":8,"column_end":21},"name":"flat_map_iter","qualname":"::iter::ParallelIterator::flat_map_iter","value":"pub fn flat_map_iter<F, SI>(Self, F) -> FlatMapIter<Self, F> where\nF: Fn(Self::Item) -> SI + Sync + Send, SI: IntoIterator, SI::Item: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested serial iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested serial iterators,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60611,"byte_end":60693,"line_start":854,"line_end":854,"column_start":5,"column_end":87}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60698,"byte_end":60770,"line_start":855,"line_end":855,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60775,"byte_end":60778,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # `flat_map_iter` versus `flat_map`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60783,"byte_end":60822,"line_start":857,"line_end":857,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60827,"byte_end":60830,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ These two methods are similar but behave slightly differently. With [`flat_map`],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60835,"byte_end":60920,"line_start":859,"line_end":859,"column_start":5,"column_end":90}},{"value":"/ each of the nested iterators must be a parallel iterator, and they will be further","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":60925,"byte_end":61011,"line_start":860,"line_end":860,"column_start":5,"column_end":91}},{"value":"/ split up with nested parallelism. With `flat_map_iter`, each nested iterator is a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61016,"byte_end":61101,"line_start":861,"line_end":861,"column_start":5,"column_end":90}},{"value":"/ sequential `Iterator`, and we only parallelize _between_ them, while the items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61106,"byte_end":61188,"line_start":862,"line_end":862,"column_start":5,"column_end":87}},{"value":"/ produced by each nested iterator are processed sequentially.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61193,"byte_end":61257,"line_start":863,"line_end":863,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61262,"byte_end":61265,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ When choosing between these methods, consider whether nested parallelism suits the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61270,"byte_end":61356,"line_start":865,"line_end":865,"column_start":5,"column_end":91}},{"value":"/ potential iterators at hand. If there's little computation involved, or its length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61361,"byte_end":61447,"line_start":866,"line_end":866,"column_start":5,"column_end":91}},{"value":"/ is much less than the outer parallel iterator, then it may perform better to avoid","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61452,"byte_end":61538,"line_start":867,"line_end":867,"column_start":5,"column_end":91}},{"value":"/ the overhead of parallelism, just flattening sequentially with `flat_map_iter`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61543,"byte_end":61626,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/ If there is a lot of computation, potentially outweighing the outer parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61631,"byte_end":61711,"line_start":869,"line_end":869,"column_start":5,"column_end":85}},{"value":"/ iterator, then the nested parallelism of `flat_map` may be worthwhile.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61716,"byte_end":61790,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61795,"byte_end":61798,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`flat_map`]: #method.flat_map","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61803,"byte_end":61837,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61842,"byte_end":61845,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61850,"byte_end":61864,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61869,"byte_end":61872,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61877,"byte_end":61884,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61889,"byte_end":61915,"line_start":877,"line_end":877,"column_start":5,"column_end":31}},{"value":"/ use std::cell::RefCell;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61920,"byte_end":61947,"line_start":878,"line_end":878,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61952,"byte_end":61955,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":61960,"byte_end":62005,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62010,"byte_end":62013,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().flat_map_iter(|a| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62018,"byte_end":62069,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // The serial iterator doesn't have to be thread-safe, just its items.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62074,"byte_end":62152,"line_start":883,"line_end":883,"column_start":5,"column_end":83}},{"value":"/     let cell_iter = RefCell::new(a.iter().cloned());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62157,"byte_end":62213,"line_start":884,"line_end":884,"column_start":5,"column_end":61}},{"value":"/     std::iter::from_fn(move || cell_iter.borrow_mut().next())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62218,"byte_end":62283,"line_start":885,"line_end":885,"column_start":5,"column_end":70}},{"value":"/ });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62288,"byte_end":62295,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62300,"byte_end":62303,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62308,"byte_end":62349,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62354,"byte_end":62357,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62362,"byte_end":62414,"line_start":890,"line_end":890,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62419,"byte_end":62426,"line_start":891,"line_end":891,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63080,"byte_end":63087,"line_start":915,"line_end":915,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" An adaptor that flattens parallel-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens parallel-iterable `Item`s into one large iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62659,"byte_end":62738,"line_start":901,"line_end":901,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62743,"byte_end":62746,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten_iter`](#method.flatten_iter).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62751,"byte_end":62803,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62808,"byte_end":62811,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62816,"byte_end":62830,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62835,"byte_end":62838,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62843,"byte_end":62850,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62855,"byte_end":62881,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62886,"byte_end":62889,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62894,"byte_end":62948,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":62953,"byte_end":63011,"line_start":911,"line_end":911,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63016,"byte_end":63019,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63024,"byte_end":63060,"line_start":913,"line_end":913,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63065,"byte_end":63072,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63806,"byte_end":63818,"line_start":938,"line_end":938,"column_start":8,"column_end":20},"name":"flatten_iter","qualname":"::iter::ParallelIterator::flatten_iter","value":"pub fn flatten_iter(Self) -> FlattenIter<Self> where Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" An adaptor that flattens serial-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens serial-iterable `Item`s into one large iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63207,"byte_end":63284,"line_start":922,"line_end":922,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63289,"byte_end":63292,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten`](#method.flatten) and the analogous comparison of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63297,"byte_end":63370,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/ [`flat_map_iter` versus `flat_map`](#flat_map_iter-versus-flat_map).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63375,"byte_end":63447,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63452,"byte_end":63455,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63460,"byte_end":63474,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63479,"byte_end":63482,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63487,"byte_end":63494,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63499,"byte_end":63525,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63530,"byte_end":63533,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63538,"byte_end":63592,"line_start":932,"line_end":932,"column_start":5,"column_end":59}},{"value":"/ let iters: Vec<_> = x.into_iter().map(Vec::into_iter).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63597,"byte_end":63665,"line_start":933,"line_end":933,"column_start":5,"column_end":73}},{"value":"/ let y: Vec<_> = iters.into_par_iter().flatten_iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63670,"byte_end":63737,"line_start":934,"line_end":934,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63742,"byte_end":63745,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63750,"byte_end":63786,"line_start":936,"line_end":936,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63791,"byte_end":63798,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65553,"byte_end":65559,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":63988,"byte_end":64051,"line_start":946,"line_end":946,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64056,"byte_end":64120,"line_start":947,"line_end":947,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64125,"byte_end":64188,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64193,"byte_end":64259,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64264,"byte_end":64330,"line_start":950,"line_end":950,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64335,"byte_end":64398,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64403,"byte_end":64456,"line_start":952,"line_end":952,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64461,"byte_end":64464,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64469,"byte_end":64483,"line_start":954,"line_end":954,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64488,"byte_end":64491,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64496,"byte_end":64503,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64508,"byte_end":64573,"line_start":957,"line_end":957,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64578,"byte_end":64652,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64657,"byte_end":64718,"line_start":959,"line_end":959,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64723,"byte_end":64749,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64754,"byte_end":64802,"line_start":961,"line_end":961,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64807,"byte_end":64870,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64875,"byte_end":64937,"line_start":963,"line_end":963,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":64942,"byte_end":65014,"line_start":964,"line_end":964,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65019,"byte_end":65073,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65078,"byte_end":65132,"line_start":966,"line_end":966,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65137,"byte_end":65144,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65149,"byte_end":65152,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65157,"byte_end":65221,"line_start":969,"line_end":969,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65226,"byte_end":65290,"line_start":970,"line_end":970,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65295,"byte_end":65361,"line_start":971,"line_end":971,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65366,"byte_end":65430,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65435,"byte_end":65463,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65468,"byte_end":65471,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65476,"byte_end":65545,"line_start":975,"line_end":975,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4744},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66900,"byte_end":66911,"line_start":1010,"line_end":1010,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65794,"byte_end":65857,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65862,"byte_end":65922,"line_start":985,"line_end":985,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65927,"byte_end":65950,"line_start":986,"line_end":986,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65955,"byte_end":65958,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":65963,"byte_end":66019,"line_start":988,"line_end":988,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66024,"byte_end":66090,"line_start":989,"line_end":989,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66095,"byte_end":66128,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66133,"byte_end":66136,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66141,"byte_end":66155,"line_start":992,"line_end":992,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66160,"byte_end":66163,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66168,"byte_end":66175,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66180,"byte_end":66206,"line_start":995,"line_end":995,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66211,"byte_end":66259,"line_start":996,"line_end":996,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66264,"byte_end":66327,"line_start":997,"line_end":997,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66332,"byte_end":66394,"line_start":998,"line_end":998,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66399,"byte_end":66457,"line_start":999,"line_end":999,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66462,"byte_end":66487,"line_start":1000,"line_end":1000,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66492,"byte_end":66546,"line_start":1001,"line_end":1001,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66551,"byte_end":66558,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66563,"byte_end":66566,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66571,"byte_end":66635,"line_start":1004,"line_end":1004,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66640,"byte_end":66704,"line_start":1005,"line_end":1005,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66709,"byte_end":66775,"line_start":1006,"line_end":1006,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66780,"byte_end":66810,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66815,"byte_end":66818,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":66823,"byte_end":66892,"line_start":1009,"line_end":1009,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69095,"byte_end":69105,"line_start":1064,"line_end":1064,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Output\n= T>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67706,"byte_end":67780,"line_start":1033,"line_end":1033,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67785,"byte_end":67853,"line_start":1034,"line_end":1034,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67858,"byte_end":67861,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67866,"byte_end":67898,"line_start":1036,"line_end":1036,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67903,"byte_end":67906,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67911,"byte_end":67985,"line_start":1038,"line_end":1038,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":67990,"byte_end":68065,"line_start":1039,"line_end":1039,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68070,"byte_end":68146,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68151,"byte_end":68217,"line_start":1041,"line_end":1041,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68222,"byte_end":68297,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68302,"byte_end":68339,"line_start":1043,"line_end":1043,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68344,"byte_end":68347,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68352,"byte_end":68366,"line_start":1045,"line_end":1045,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68371,"byte_end":68374,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68379,"byte_end":68386,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68391,"byte_end":68417,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68422,"byte_end":68425,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68430,"byte_end":68494,"line_start":1050,"line_end":1050,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68499,"byte_end":68580,"line_start":1051,"line_end":1051,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68585,"byte_end":68613,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68618,"byte_end":68688,"line_start":1053,"line_end":1053,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68693,"byte_end":68762,"line_start":1054,"line_end":1054,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68767,"byte_end":68772,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68777,"byte_end":68837,"line_start":1056,"line_end":1056,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68842,"byte_end":68845,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68850,"byte_end":68879,"line_start":1058,"line_end":1058,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68884,"byte_end":68929,"line_start":1059,"line_end":1059,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68934,"byte_end":68937,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":68942,"byte_end":69014,"line_start":1061,"line_end":1061,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69019,"byte_end":69075,"line_start":1062,"line_end":1062,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69080,"byte_end":69087,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70736,"byte_end":70751,"line_start":1108,"line_end":1108,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Output = T>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69361,"byte_end":69435,"line_start":1073,"line_end":1073,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69440,"byte_end":69443,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69448,"byte_end":69521,"line_start":1075,"line_end":1075,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69526,"byte_end":69590,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69595,"byte_end":69642,"line_start":1077,"line_end":1077,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69647,"byte_end":69650,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69655,"byte_end":69697,"line_start":1079,"line_end":1079,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69702,"byte_end":69742,"line_start":1080,"line_end":1080,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69747,"byte_end":69750,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69755,"byte_end":69818,"line_start":1082,"line_end":1082,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69823,"byte_end":69859,"line_start":1083,"line_end":1083,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69864,"byte_end":69921,"line_start":1084,"line_end":1084,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69926,"byte_end":69984,"line_start":1085,"line_end":1085,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69989,"byte_end":69992,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":69997,"byte_end":70050,"line_start":1087,"line_end":1087,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70055,"byte_end":70091,"line_start":1088,"line_end":1088,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70096,"byte_end":70161,"line_start":1089,"line_end":1089,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70166,"byte_end":70222,"line_start":1090,"line_end":1090,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70227,"byte_end":70230,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70235,"byte_end":70249,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70254,"byte_end":70257,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70262,"byte_end":70269,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70274,"byte_end":70300,"line_start":1095,"line_end":1095,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70305,"byte_end":70308,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70313,"byte_end":70362,"line_start":1097,"line_end":1097,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70367,"byte_end":70370,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70375,"byte_end":70403,"line_start":1099,"line_end":1099,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70408,"byte_end":70433,"line_start":1100,"line_end":1100,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70438,"byte_end":70507,"line_start":1101,"line_end":1101,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70512,"byte_end":70545,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70550,"byte_end":70596,"line_start":1103,"line_end":1103,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70601,"byte_end":70611,"line_start":1104,"line_end":1104,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70616,"byte_end":70678,"line_start":1105,"line_end":1105,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70683,"byte_end":70716,"line_start":1106,"line_end":1106,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70721,"byte_end":70728,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76533,"byte_end":76537,"line_start":1249,"line_end":1249,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":70960,"byte_end":71023,"line_start":1116,"line_end":1116,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71028,"byte_end":71080,"line_start":1117,"line_end":1117,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71085,"byte_end":71148,"line_start":1118,"line_end":1118,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71153,"byte_end":71216,"line_start":1119,"line_end":1119,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71221,"byte_end":71286,"line_start":1120,"line_end":1120,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71291,"byte_end":71357,"line_start":1121,"line_end":1121,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71362,"byte_end":71424,"line_start":1122,"line_end":1122,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71429,"byte_end":71493,"line_start":1123,"line_end":1123,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71498,"byte_end":71562,"line_start":1124,"line_end":1124,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71567,"byte_end":71607,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71612,"byte_end":71615,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71620,"byte_end":71682,"line_start":1127,"line_end":1127,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71687,"byte_end":71757,"line_start":1128,"line_end":1128,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71762,"byte_end":71774,"line_start":1129,"line_end":1129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71779,"byte_end":71782,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71787,"byte_end":71801,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71806,"byte_end":71823,"line_start":1132,"line_end":1132,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71828,"byte_end":71845,"line_start":1133,"line_end":1133,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71850,"byte_end":71867,"line_start":1134,"line_end":1134,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71872,"byte_end":71879,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71884,"byte_end":71887,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71892,"byte_end":71927,"line_start":1137,"line_end":1137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71932,"byte_end":71935,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71940,"byte_end":71954,"line_start":1139,"line_end":1139,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71959,"byte_end":71976,"line_start":1140,"line_end":1140,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":71981,"byte_end":71998,"line_start":1141,"line_end":1141,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72003,"byte_end":72020,"line_start":1142,"line_end":1142,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72025,"byte_end":72032,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72037,"byte_end":72040,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72045,"byte_end":72108,"line_start":1145,"line_end":1145,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72113,"byte_end":72150,"line_start":1146,"line_end":1146,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72155,"byte_end":72158,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72163,"byte_end":72189,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72194,"byte_end":72197,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72202,"byte_end":72271,"line_start":1150,"line_end":1150,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72276,"byte_end":72342,"line_start":1151,"line_end":1151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72347,"byte_end":72350,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72355,"byte_end":72418,"line_start":1153,"line_end":1153,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72423,"byte_end":72482,"line_start":1154,"line_end":1154,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72487,"byte_end":72553,"line_start":1155,"line_end":1155,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72558,"byte_end":72624,"line_start":1156,"line_end":1156,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72629,"byte_end":72693,"line_start":1157,"line_end":1157,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72698,"byte_end":72761,"line_start":1158,"line_end":1158,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72766,"byte_end":72831,"line_start":1159,"line_end":1159,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72836,"byte_end":72899,"line_start":1160,"line_end":1160,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72904,"byte_end":72969,"line_start":1161,"line_end":1161,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":72974,"byte_end":73040,"line_start":1162,"line_end":1162,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73045,"byte_end":73101,"line_start":1163,"line_end":1163,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73106,"byte_end":73109,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73114,"byte_end":73176,"line_start":1165,"line_end":1165,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73181,"byte_end":73243,"line_start":1166,"line_end":1166,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73248,"byte_end":73310,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73315,"byte_end":73381,"line_start":1168,"line_end":1168,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73386,"byte_end":73450,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73455,"byte_end":73519,"line_start":1170,"line_end":1170,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73524,"byte_end":73546,"line_start":1171,"line_end":1171,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73551,"byte_end":73554,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73559,"byte_end":73618,"line_start":1173,"line_end":1173,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73623,"byte_end":73689,"line_start":1174,"line_end":1174,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73694,"byte_end":73758,"line_start":1175,"line_end":1175,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73763,"byte_end":73822,"line_start":1176,"line_end":1176,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73827,"byte_end":73893,"line_start":1177,"line_end":1177,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73898,"byte_end":73963,"line_start":1178,"line_end":1178,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":73968,"byte_end":74030,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74035,"byte_end":74062,"line_start":1180,"line_end":1180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74067,"byte_end":74070,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74075,"byte_end":74101,"line_start":1182,"line_end":1182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74106,"byte_end":74109,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74114,"byte_end":74173,"line_start":1184,"line_end":1184,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74178,"byte_end":74242,"line_start":1185,"line_end":1185,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74247,"byte_end":74313,"line_start":1186,"line_end":1186,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74318,"byte_end":74360,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74365,"byte_end":74368,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74373,"byte_end":74380,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74385,"byte_end":74411,"line_start":1190,"line_end":1190,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74416,"byte_end":74419,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74424,"byte_end":74435,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74440,"byte_end":74473,"line_start":1193,"line_end":1193,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74478,"byte_end":74497,"line_start":1194,"line_end":1194,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74502,"byte_end":74543,"line_start":1195,"line_end":1195,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74548,"byte_end":74581,"line_start":1196,"line_end":1196,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74586,"byte_end":74652,"line_start":1197,"line_end":1197,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74657,"byte_end":74660,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74665,"byte_end":74692,"line_start":1199,"line_end":1199,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74697,"byte_end":74704,"line_start":1200,"line_end":1200,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74709,"byte_end":74712,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74717,"byte_end":74783,"line_start":1202,"line_end":1202,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74788,"byte_end":74852,"line_start":1203,"line_end":1203,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74857,"byte_end":74917,"line_start":1204,"line_end":1204,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74922,"byte_end":74987,"line_start":1205,"line_end":1205,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":74992,"byte_end":75012,"line_start":1206,"line_end":1206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75017,"byte_end":75020,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75025,"byte_end":75032,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75037,"byte_end":75063,"line_start":1209,"line_end":1209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75068,"byte_end":75071,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75076,"byte_end":75087,"line_start":1211,"line_end":1211,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75092,"byte_end":75125,"line_start":1212,"line_end":1212,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75130,"byte_end":75149,"line_start":1213,"line_end":1213,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75154,"byte_end":75185,"line_start":1214,"line_end":1214,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75190,"byte_end":75250,"line_start":1215,"line_end":1215,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75255,"byte_end":75288,"line_start":1216,"line_end":1216,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75293,"byte_end":75359,"line_start":1217,"line_end":1217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75364,"byte_end":75367,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75372,"byte_end":75399,"line_start":1219,"line_end":1219,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75404,"byte_end":75411,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75416,"byte_end":75419,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75424,"byte_end":75487,"line_start":1222,"line_end":1222,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75492,"byte_end":75557,"line_start":1223,"line_end":1223,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75562,"byte_end":75626,"line_start":1224,"line_end":1224,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75631,"byte_end":75697,"line_start":1225,"line_end":1225,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75702,"byte_end":75766,"line_start":1226,"line_end":1226,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75771,"byte_end":75834,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75839,"byte_end":75850,"line_start":1228,"line_end":1228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75855,"byte_end":75858,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75863,"byte_end":75929,"line_start":1230,"line_end":1230,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75934,"byte_end":75966,"line_start":1231,"line_end":1231,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75971,"byte_end":75974,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":75979,"byte_end":76023,"line_start":1233,"line_end":1233,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76028,"byte_end":76031,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76036,"byte_end":76101,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76106,"byte_end":76171,"line_start":1236,"line_end":1236,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76176,"byte_end":76202,"line_start":1237,"line_end":1237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76207,"byte_end":76210,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76215,"byte_end":76222,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76227,"byte_end":76253,"line_start":1240,"line_end":1240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76258,"byte_end":76261,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76266,"byte_end":76291,"line_start":1242,"line_end":1242,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76296,"byte_end":76331,"line_start":1243,"line_end":1243,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76336,"byte_end":76402,"line_start":1244,"line_end":1244,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76407,"byte_end":76440,"line_start":1245,"line_end":1245,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76445,"byte_end":76448,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76453,"byte_end":76513,"line_start":1247,"line_end":1247,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76518,"byte_end":76525,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77462,"byte_end":77471,"line_start":1277,"line_end":1277,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76774,"byte_end":76844,"line_start":1258,"line_end":1258,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76849,"byte_end":76907,"line_start":1259,"line_end":1259,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76912,"byte_end":76915,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76920,"byte_end":76992,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":76997,"byte_end":77068,"line_start":1262,"line_end":1262,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77073,"byte_end":77102,"line_start":1263,"line_end":1263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77107,"byte_end":77110,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77115,"byte_end":77129,"line_start":1265,"line_end":1265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77134,"byte_end":77137,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77142,"byte_end":77149,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77154,"byte_end":77180,"line_start":1268,"line_end":1268,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77185,"byte_end":77188,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77193,"byte_end":77218,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77223,"byte_end":77258,"line_start":1271,"line_end":1271,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77263,"byte_end":77331,"line_start":1272,"line_end":1272,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77336,"byte_end":77369,"line_start":1273,"line_end":1273,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77374,"byte_end":77377,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77382,"byte_end":77442,"line_start":1275,"line_end":1275,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77447,"byte_end":77454,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78604,"byte_end":78612,"line_start":1310,"line_end":1310,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Output = T> + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77673,"byte_end":77711,"line_start":1285,"line_end":1285,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77716,"byte_end":77719,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77724,"byte_end":77796,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77801,"byte_end":77867,"line_start":1288,"line_end":1288,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77872,"byte_end":77947,"line_start":1289,"line_end":1289,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77952,"byte_end":77980,"line_start":1290,"line_end":1290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77985,"byte_end":77988,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":77993,"byte_end":78053,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78058,"byte_end":78119,"line_start":1293,"line_end":1293,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78124,"byte_end":78127,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78132,"byte_end":78160,"line_start":1295,"line_end":1295,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78165,"byte_end":78205,"line_start":1296,"line_end":1296,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78210,"byte_end":78213,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78218,"byte_end":78232,"line_start":1298,"line_end":1298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78237,"byte_end":78240,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78245,"byte_end":78252,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78257,"byte_end":78283,"line_start":1301,"line_end":1301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78288,"byte_end":78291,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78296,"byte_end":78321,"line_start":1303,"line_end":1303,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78326,"byte_end":78361,"line_start":1304,"line_end":1304,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78366,"byte_end":78445,"line_start":1305,"line_end":1305,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78450,"byte_end":78505,"line_start":1306,"line_end":1306,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78510,"byte_end":78513,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78518,"byte_end":78584,"line_start":1308,"line_end":1308,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78589,"byte_end":78596,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79536,"byte_end":79549,"line_start":1337,"line_end":1337,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Output = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78879,"byte_end":78947,"line_start":1319,"line_end":1319,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78952,"byte_end":78955,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":78960,"byte_end":79033,"line_start":1321,"line_end":1321,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79038,"byte_end":79070,"line_start":1322,"line_end":1322,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79075,"byte_end":79078,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79083,"byte_end":79121,"line_start":1324,"line_end":1324,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79126,"byte_end":79162,"line_start":1325,"line_end":1325,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79167,"byte_end":79170,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79175,"byte_end":79182,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79187,"byte_end":79213,"line_start":1328,"line_end":1328,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79218,"byte_end":79221,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79226,"byte_end":79251,"line_start":1330,"line_end":1330,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79256,"byte_end":79291,"line_start":1331,"line_end":1331,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79296,"byte_end":79377,"line_start":1332,"line_end":1332,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79382,"byte_end":79437,"line_start":1333,"line_end":1333,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79442,"byte_end":79445,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79450,"byte_end":79516,"line_start":1335,"line_end":1335,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79521,"byte_end":79528,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4779},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80578,"byte_end":80581,"line_start":1370,"line_end":1370,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79795,"byte_end":79833,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79838,"byte_end":79841,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79846,"byte_end":79912,"line_start":1348,"line_end":1348,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79917,"byte_end":79982,"line_start":1349,"line_end":1349,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":79987,"byte_end":80049,"line_start":1350,"line_end":1350,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80054,"byte_end":80078,"line_start":1351,"line_end":1351,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80083,"byte_end":80086,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80091,"byte_end":80160,"line_start":1353,"line_end":1353,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80165,"byte_end":80168,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80173,"byte_end":80235,"line_start":1355,"line_end":1355,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80240,"byte_end":80302,"line_start":1356,"line_end":1356,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80307,"byte_end":80357,"line_start":1357,"line_end":1357,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80362,"byte_end":80365,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80370,"byte_end":80384,"line_start":1359,"line_end":1359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80389,"byte_end":80392,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80397,"byte_end":80404,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80409,"byte_end":80435,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80440,"byte_end":80443,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80448,"byte_end":80470,"line_start":1364,"line_end":1364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80475,"byte_end":80478,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80483,"byte_end":80521,"line_start":1366,"line_end":1366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80526,"byte_end":80529,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80534,"byte_end":80558,"line_start":1368,"line_end":1368,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80563,"byte_end":80570,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4781},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81580,"byte_end":81587,"line_start":1403,"line_end":1403,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80690,"byte_end":80735,"line_start":1377,"line_end":1377,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80740,"byte_end":80743,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80748,"byte_end":80814,"line_start":1379,"line_end":1379,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80819,"byte_end":80884,"line_start":1380,"line_end":1380,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80889,"byte_end":80951,"line_start":1381,"line_end":1381,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80956,"byte_end":80980,"line_start":1382,"line_end":1382,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80985,"byte_end":80988,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":80993,"byte_end":81062,"line_start":1384,"line_end":1384,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81067,"byte_end":81070,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81075,"byte_end":81137,"line_start":1386,"line_end":1386,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81142,"byte_end":81204,"line_start":1387,"line_end":1387,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81209,"byte_end":81259,"line_start":1388,"line_end":1388,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81264,"byte_end":81267,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81272,"byte_end":81286,"line_start":1390,"line_end":1390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81291,"byte_end":81294,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81299,"byte_end":81306,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81311,"byte_end":81337,"line_start":1393,"line_end":1393,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81342,"byte_end":81345,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81350,"byte_end":81383,"line_start":1395,"line_end":1395,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81388,"byte_end":81429,"line_start":1396,"line_end":1396,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81434,"byte_end":81439,"line_start":1397,"line_end":1397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81444,"byte_end":81447,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81452,"byte_end":81484,"line_start":1399,"line_end":1399,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81489,"byte_end":81521,"line_start":1400,"line_end":1400,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81526,"byte_end":81560,"line_start":1401,"line_end":1401,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81565,"byte_end":81572,"line_start":1402,"line_end":1402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82430,"byte_end":82433,"line_start":1433,"line_end":1433,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81712,"byte_end":81777,"line_start":1410,"line_end":1410,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81782,"byte_end":81847,"line_start":1411,"line_end":1411,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81852,"byte_end":81868,"line_start":1412,"line_end":1412,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81873,"byte_end":81876,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81881,"byte_end":81946,"line_start":1414,"line_end":1414,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":81951,"byte_end":82017,"line_start":1415,"line_end":1415,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82022,"byte_end":82060,"line_start":1416,"line_end":1416,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82065,"byte_end":82068,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82073,"byte_end":82143,"line_start":1418,"line_end":1418,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82148,"byte_end":82151,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82156,"byte_end":82170,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82175,"byte_end":82178,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82183,"byte_end":82190,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82195,"byte_end":82221,"line_start":1423,"line_end":1423,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82226,"byte_end":82229,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82234,"byte_end":82259,"line_start":1425,"line_end":1425,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82264,"byte_end":82267,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82272,"byte_end":82318,"line_start":1427,"line_end":1427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82323,"byte_end":82326,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82331,"byte_end":82356,"line_start":1429,"line_end":1429,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82361,"byte_end":82364,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82369,"byte_end":82410,"line_start":1431,"line_end":1431,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82415,"byte_end":82422,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83172,"byte_end":83178,"line_start":1457,"line_end":1457,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82549,"byte_end":82622,"line_start":1440,"line_end":1440,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82627,"byte_end":82697,"line_start":1441,"line_end":1441,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82702,"byte_end":82751,"line_start":1442,"line_end":1442,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82756,"byte_end":82759,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82764,"byte_end":82829,"line_start":1444,"line_end":1444,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82834,"byte_end":82903,"line_start":1445,"line_end":1445,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82908,"byte_end":82946,"line_start":1446,"line_end":1446,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82951,"byte_end":82954,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82959,"byte_end":82973,"line_start":1448,"line_end":1448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82978,"byte_end":82981,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82986,"byte_end":82993,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":82998,"byte_end":83024,"line_start":1451,"line_end":1451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83029,"byte_end":83032,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83037,"byte_end":83075,"line_start":1453,"line_end":1453,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83080,"byte_end":83083,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83088,"byte_end":83152,"line_start":1455,"line_end":1455,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83157,"byte_end":83164,"line_start":1456,"line_end":1456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84146,"byte_end":84156,"line_start":1488,"line_end":1488,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83548,"byte_end":83613,"line_start":1471,"line_end":1471,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83618,"byte_end":83677,"line_start":1472,"line_end":1472,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83682,"byte_end":83722,"line_start":1473,"line_end":1473,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83727,"byte_end":83730,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83735,"byte_end":83800,"line_start":1475,"line_end":1475,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83805,"byte_end":83871,"line_start":1476,"line_end":1476,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83876,"byte_end":83914,"line_start":1477,"line_end":1477,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83919,"byte_end":83922,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83927,"byte_end":83941,"line_start":1479,"line_end":1479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83946,"byte_end":83949,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83954,"byte_end":83961,"line_start":1481,"line_end":1481,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83966,"byte_end":83992,"line_start":1482,"line_end":1482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":83997,"byte_end":84000,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84005,"byte_end":84050,"line_start":1484,"line_end":1484,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84055,"byte_end":84058,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84063,"byte_end":84126,"line_start":1486,"line_end":1486,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84131,"byte_end":84138,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85389,"byte_end":85392,"line_start":1531,"line_end":1531,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84671,"byte_end":84736,"line_start":1508,"line_end":1508,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84741,"byte_end":84806,"line_start":1509,"line_end":1509,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84811,"byte_end":84827,"line_start":1510,"line_end":1510,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84832,"byte_end":84835,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84840,"byte_end":84905,"line_start":1512,"line_end":1512,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84910,"byte_end":84976,"line_start":1513,"line_end":1513,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":84981,"byte_end":85019,"line_start":1514,"line_end":1514,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85024,"byte_end":85027,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85032,"byte_end":85102,"line_start":1516,"line_end":1516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85107,"byte_end":85110,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85115,"byte_end":85129,"line_start":1518,"line_end":1518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85134,"byte_end":85137,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85142,"byte_end":85149,"line_start":1520,"line_end":1520,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85154,"byte_end":85180,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85185,"byte_end":85188,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85193,"byte_end":85218,"line_start":1523,"line_end":1523,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85223,"byte_end":85226,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85231,"byte_end":85277,"line_start":1525,"line_end":1525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85282,"byte_end":85285,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85290,"byte_end":85315,"line_start":1527,"line_end":1527,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85320,"byte_end":85323,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85328,"byte_end":85369,"line_start":1529,"line_end":1529,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85374,"byte_end":85381,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86145,"byte_end":86151,"line_start":1555,"line_end":1555,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85508,"byte_end":85581,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85586,"byte_end":85656,"line_start":1539,"line_end":1539,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85661,"byte_end":85710,"line_start":1540,"line_end":1540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85715,"byte_end":85718,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85723,"byte_end":85788,"line_start":1542,"line_end":1542,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85793,"byte_end":85862,"line_start":1543,"line_end":1543,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85867,"byte_end":85905,"line_start":1544,"line_end":1544,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85910,"byte_end":85913,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85918,"byte_end":85932,"line_start":1546,"line_end":1546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85937,"byte_end":85940,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85945,"byte_end":85952,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85957,"byte_end":85983,"line_start":1549,"line_end":1549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85988,"byte_end":85991,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":85996,"byte_end":86034,"line_start":1551,"line_end":1551,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86039,"byte_end":86042,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86047,"byte_end":86125,"line_start":1553,"line_end":1553,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86130,"byte_end":86137,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87120,"byte_end":87130,"line_start":1586,"line_end":1586,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86521,"byte_end":86586,"line_start":1569,"line_end":1569,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86591,"byte_end":86650,"line_start":1570,"line_end":1570,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86655,"byte_end":86695,"line_start":1571,"line_end":1571,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86700,"byte_end":86703,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86708,"byte_end":86773,"line_start":1573,"line_end":1573,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86778,"byte_end":86844,"line_start":1574,"line_end":1574,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86849,"byte_end":86887,"line_start":1575,"line_end":1575,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86892,"byte_end":86895,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86900,"byte_end":86914,"line_start":1577,"line_end":1577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86919,"byte_end":86922,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86927,"byte_end":86934,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86939,"byte_end":86965,"line_start":1580,"line_end":1580,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86970,"byte_end":86973,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":86978,"byte_end":87023,"line_start":1582,"line_end":1582,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87028,"byte_end":87031,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87036,"byte_end":87100,"line_start":1584,"line_end":1584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87105,"byte_end":87112,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88061,"byte_end":88066,"line_start":1622,"line_end":1622,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87645,"byte_end":87706,"line_start":1606,"line_end":1606,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87711,"byte_end":87714,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87719,"byte_end":87733,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87738,"byte_end":87741,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87746,"byte_end":87753,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87758,"byte_end":87784,"line_start":1611,"line_end":1611,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87789,"byte_end":87792,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87797,"byte_end":87819,"line_start":1613,"line_end":1613,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87824,"byte_end":87846,"line_start":1614,"line_end":1614,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87851,"byte_end":87854,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87859,"byte_end":87911,"line_start":1616,"line_end":1616,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87916,"byte_end":87919,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87924,"byte_end":87978,"line_start":1618,"line_end":1618,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87983,"byte_end":87986,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":87991,"byte_end":88041,"line_start":1620,"line_end":1620,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88046,"byte_end":88053,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89160,"byte_end":89168,"line_start":1652,"line_end":1652,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88237,"byte_end":88297,"line_start":1629,"line_end":1629,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88302,"byte_end":88364,"line_start":1630,"line_end":1630,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88369,"byte_end":88429,"line_start":1631,"line_end":1631,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88434,"byte_end":88500,"line_start":1632,"line_end":1632,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88505,"byte_end":88581,"line_start":1633,"line_end":1633,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88586,"byte_end":88589,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88594,"byte_end":88655,"line_start":1635,"line_end":1635,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88660,"byte_end":88721,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88726,"byte_end":88785,"line_start":1637,"line_end":1637,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88790,"byte_end":88793,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88798,"byte_end":88876,"line_start":1639,"line_end":1639,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88881,"byte_end":88884,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88889,"byte_end":88903,"line_start":1641,"line_end":1641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88908,"byte_end":88911,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88916,"byte_end":88923,"line_start":1643,"line_end":1643,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88928,"byte_end":88954,"line_start":1644,"line_end":1644,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88959,"byte_end":88962,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88967,"byte_end":88992,"line_start":1646,"line_end":1646,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":88997,"byte_end":89000,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89005,"byte_end":89067,"line_start":1648,"line_end":1648,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89072,"byte_end":89075,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89080,"byte_end":89140,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89145,"byte_end":89152,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90207,"byte_end":90217,"line_start":1682,"line_end":1682,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89327,"byte_end":89400,"line_start":1659,"line_end":1659,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89405,"byte_end":89457,"line_start":1660,"line_end":1660,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89462,"byte_end":89465,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89470,"byte_end":89535,"line_start":1662,"line_end":1662,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89540,"byte_end":89609,"line_start":1663,"line_end":1663,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89614,"byte_end":89644,"line_start":1664,"line_end":1664,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89649,"byte_end":89652,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89657,"byte_end":89728,"line_start":1666,"line_end":1666,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89733,"byte_end":89804,"line_start":1667,"line_end":1667,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89809,"byte_end":89880,"line_start":1668,"line_end":1668,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89885,"byte_end":89919,"line_start":1669,"line_end":1669,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89924,"byte_end":89927,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89932,"byte_end":89946,"line_start":1671,"line_end":1671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89951,"byte_end":89954,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89959,"byte_end":89966,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":89971,"byte_end":89997,"line_start":1674,"line_end":1674,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90002,"byte_end":90005,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90010,"byte_end":90035,"line_start":1676,"line_end":1676,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90040,"byte_end":90043,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90048,"byte_end":90112,"line_start":1678,"line_end":1678,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90117,"byte_end":90120,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90125,"byte_end":90187,"line_start":1680,"line_end":1680,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90192,"byte_end":90199,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4829},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91230,"byte_end":91239,"line_start":1711,"line_end":1711,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90393,"byte_end":90465,"line_start":1689,"line_end":1689,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90470,"byte_end":90522,"line_start":1690,"line_end":1690,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90527,"byte_end":90530,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90535,"byte_end":90599,"line_start":1692,"line_end":1692,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90604,"byte_end":90674,"line_start":1693,"line_end":1693,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90679,"byte_end":90706,"line_start":1694,"line_end":1694,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90711,"byte_end":90714,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90719,"byte_end":90790,"line_start":1696,"line_end":1696,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90795,"byte_end":90867,"line_start":1697,"line_end":1697,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90872,"byte_end":90944,"line_start":1698,"line_end":1698,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90949,"byte_end":90952,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90957,"byte_end":90971,"line_start":1700,"line_end":1700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90976,"byte_end":90979,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90984,"byte_end":90991,"line_start":1702,"line_end":1702,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":90996,"byte_end":91022,"line_start":1703,"line_end":1703,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91027,"byte_end":91030,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91035,"byte_end":91060,"line_start":1705,"line_end":1705,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91065,"byte_end":91068,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91073,"byte_end":91136,"line_start":1707,"line_end":1707,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91141,"byte_end":91144,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91149,"byte_end":91210,"line_start":1709,"line_end":1709,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91215,"byte_end":91222,"line_start":1710,"line_end":1710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92316,"byte_end":92328,"line_start":1741,"line_end":1741,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91414,"byte_end":91483,"line_start":1718,"line_end":1718,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91488,"byte_end":91549,"line_start":1719,"line_end":1719,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91554,"byte_end":91557,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91562,"byte_end":91631,"line_start":1721,"line_end":1721,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91636,"byte_end":91704,"line_start":1722,"line_end":1722,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91709,"byte_end":91733,"line_start":1723,"line_end":1723,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91738,"byte_end":91741,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91746,"byte_end":91814,"line_start":1725,"line_end":1725,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91819,"byte_end":91890,"line_start":1726,"line_end":1726,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91895,"byte_end":91963,"line_start":1727,"line_end":1727,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":91968,"byte_end":92035,"line_start":1728,"line_end":1728,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92040,"byte_end":92043,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92048,"byte_end":92062,"line_start":1730,"line_end":1730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92067,"byte_end":92070,"line_start":1731,"line_end":1731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92075,"byte_end":92082,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92087,"byte_end":92113,"line_start":1733,"line_end":1733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92118,"byte_end":92121,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92126,"byte_end":92163,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92168,"byte_end":92171,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let found_number = c.par_iter().find_map_any(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92176,"byte_end":92245,"line_start":1737,"line_end":1737,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92250,"byte_end":92253,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(found_number, Some(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92258,"byte_end":92296,"line_start":1739,"line_end":1739,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92301,"byte_end":92308,"line_start":1740,"line_end":1740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93518,"byte_end":93532,"line_start":1775,"line_end":1775,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92577,"byte_end":92650,"line_start":1752,"line_end":1752,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92655,"byte_end":92731,"line_start":1753,"line_end":1753,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92736,"byte_end":92739,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92744,"byte_end":92818,"line_start":1755,"line_end":1755,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92823,"byte_end":92896,"line_start":1756,"line_end":1756,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92901,"byte_end":92953,"line_start":1757,"line_end":1757,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92958,"byte_end":92961,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":92966,"byte_end":93037,"line_start":1759,"line_end":1759,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93042,"byte_end":93112,"line_start":1760,"line_end":1760,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93117,"byte_end":93192,"line_start":1761,"line_end":1761,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93197,"byte_end":93235,"line_start":1762,"line_end":1762,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93240,"byte_end":93243,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93248,"byte_end":93262,"line_start":1764,"line_end":1764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93267,"byte_end":93270,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93275,"byte_end":93282,"line_start":1766,"line_end":1766,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93287,"byte_end":93313,"line_start":1767,"line_end":1767,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93318,"byte_end":93321,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93326,"byte_end":93363,"line_start":1769,"line_end":1769,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93368,"byte_end":93371,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93376,"byte_end":93447,"line_start":1771,"line_end":1771,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93452,"byte_end":93455,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93460,"byte_end":93498,"line_start":1773,"line_end":1773,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93503,"byte_end":93510,"line_start":1774,"line_end":1774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94717,"byte_end":94730,"line_start":1809,"line_end":1809,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93783,"byte_end":93856,"line_start":1786,"line_end":1786,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93861,"byte_end":93936,"line_start":1787,"line_end":1787,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93941,"byte_end":93944,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":93949,"byte_end":94023,"line_start":1789,"line_end":1789,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94028,"byte_end":94101,"line_start":1790,"line_end":1790,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94106,"byte_end":94155,"line_start":1791,"line_end":1791,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94160,"byte_end":94163,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94168,"byte_end":94239,"line_start":1793,"line_end":1793,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94244,"byte_end":94314,"line_start":1794,"line_end":1794,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94319,"byte_end":94394,"line_start":1795,"line_end":1795,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94399,"byte_end":94437,"line_start":1796,"line_end":1796,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94442,"byte_end":94445,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94450,"byte_end":94464,"line_start":1798,"line_end":1798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94469,"byte_end":94472,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94477,"byte_end":94484,"line_start":1800,"line_end":1800,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94489,"byte_end":94515,"line_start":1801,"line_end":1801,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94520,"byte_end":94523,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94528,"byte_end":94565,"line_start":1803,"line_end":1803,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94570,"byte_end":94573,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ let last_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94578,"byte_end":94647,"line_start":1805,"line_end":1805,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94652,"byte_end":94655,"line_start":1806,"line_end":1806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(last_number, Some(5));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94660,"byte_end":94697,"line_start":1807,"line_end":1807,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94702,"byte_end":94709,"line_start":1808,"line_end":1808,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95147,"byte_end":95151,"line_start":1823,"line_end":1823,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n\"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":94999,"byte_end":95139,"line_start":1821,"line_end":1822,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95856,"byte_end":95859,"line_start":1847,"line_end":1847,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95307,"byte_end":95367,"line_start":1830,"line_end":1830,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95372,"byte_end":95434,"line_start":1831,"line_end":1831,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95439,"byte_end":95499,"line_start":1832,"line_end":1832,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95504,"byte_end":95570,"line_start":1833,"line_end":1833,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95575,"byte_end":95612,"line_start":1834,"line_end":1834,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95617,"byte_end":95620,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95625,"byte_end":95639,"line_start":1836,"line_end":1836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95644,"byte_end":95647,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95652,"byte_end":95659,"line_start":1838,"line_end":1838,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95664,"byte_end":95690,"line_start":1839,"line_end":1839,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95695,"byte_end":95698,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95703,"byte_end":95739,"line_start":1841,"line_end":1841,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95744,"byte_end":95747,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95752,"byte_end":95801,"line_start":1843,"line_end":1843,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95806,"byte_end":95809,"line_start":1844,"line_end":1844,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95814,"byte_end":95836,"line_start":1845,"line_end":1845,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":95841,"byte_end":95848,"line_start":1846,"line_end":1846,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96487,"byte_end":96490,"line_start":1869,"line_end":1869,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96027,"byte_end":96095,"line_start":1854,"line_end":1854,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96100,"byte_end":96170,"line_start":1855,"line_end":1855,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96175,"byte_end":96242,"line_start":1856,"line_end":1856,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96247,"byte_end":96250,"line_start":1857,"line_end":1857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96255,"byte_end":96269,"line_start":1858,"line_end":1858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96274,"byte_end":96277,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96282,"byte_end":96289,"line_start":1860,"line_end":1860,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96294,"byte_end":96320,"line_start":1861,"line_end":1861,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96325,"byte_end":96328,"line_start":1862,"line_end":1862,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96333,"byte_end":96369,"line_start":1863,"line_end":1863,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96374,"byte_end":96377,"line_start":1864,"line_end":1864,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96382,"byte_end":96431,"line_start":1865,"line_end":1865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96436,"byte_end":96439,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96444,"byte_end":96467,"line_start":1867,"line_end":1867,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96472,"byte_end":96479,"line_start":1868,"line_end":1868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97472,"byte_end":97482,"line_start":1903,"line_end":1903,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96739,"byte_end":96810,"line_start":1881,"line_end":1881,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96815,"byte_end":96850,"line_start":1882,"line_end":1882,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96855,"byte_end":96858,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96863,"byte_end":96877,"line_start":1884,"line_end":1884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96882,"byte_end":96885,"line_start":1885,"line_end":1885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96890,"byte_end":96897,"line_start":1886,"line_end":1886,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96902,"byte_end":96928,"line_start":1887,"line_end":1887,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96933,"byte_end":96984,"line_start":1888,"line_end":1888,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96989,"byte_end":96992,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":96997,"byte_end":97035,"line_start":1890,"line_end":1890,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97040,"byte_end":97069,"line_start":1891,"line_end":1891,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97074,"byte_end":97098,"line_start":1892,"line_end":1892,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97103,"byte_end":97121,"line_start":1893,"line_end":1893,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97126,"byte_end":97182,"line_start":1894,"line_end":1894,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97187,"byte_end":97241,"line_start":1895,"line_end":1895,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97246,"byte_end":97261,"line_start":1896,"line_end":1896,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97266,"byte_end":97287,"line_start":1897,"line_end":1897,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97292,"byte_end":97307,"line_start":1898,"line_end":1898,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97312,"byte_end":97315,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97320,"byte_end":97352,"line_start":1900,"line_end":1900,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97357,"byte_end":97452,"line_start":1901,"line_end":1901,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97457,"byte_end":97464,"line_start":1902,"line_end":1902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98793,"byte_end":98803,"line_start":1941,"line_end":1941,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97634,"byte_end":97706,"line_start":1911,"line_end":1911,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97711,"byte_end":97735,"line_start":1912,"line_end":1912,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97740,"byte_end":97743,"line_start":1913,"line_end":1913,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97748,"byte_end":97821,"line_start":1914,"line_end":1914,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97826,"byte_end":97900,"line_start":1915,"line_end":1915,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97905,"byte_end":97980,"line_start":1916,"line_end":1916,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":97985,"byte_end":98055,"line_start":1917,"line_end":1917,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98060,"byte_end":98132,"line_start":1918,"line_end":1918,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98137,"byte_end":98140,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98145,"byte_end":98181,"line_start":1920,"line_end":1920,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98186,"byte_end":98189,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98194,"byte_end":98208,"line_start":1922,"line_end":1922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98213,"byte_end":98216,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98221,"byte_end":98293,"line_start":1924,"line_end":1924,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98298,"byte_end":98370,"line_start":1925,"line_end":1925,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98375,"byte_end":98407,"line_start":1926,"line_end":1926,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98412,"byte_end":98415,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98420,"byte_end":98439,"line_start":1928,"line_end":1928,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98444,"byte_end":98470,"line_start":1929,"line_end":1929,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98475,"byte_end":98503,"line_start":1930,"line_end":1930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98508,"byte_end":98511,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98516,"byte_end":98534,"line_start":1932,"line_end":1932,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98539,"byte_end":98563,"line_start":1933,"line_end":1933,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98568,"byte_end":98589,"line_start":1934,"line_end":1934,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98594,"byte_end":98617,"line_start":1935,"line_end":1935,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98622,"byte_end":98655,"line_start":1936,"line_end":1936,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98660,"byte_end":98716,"line_start":1937,"line_end":1937,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98721,"byte_end":98757,"line_start":1938,"line_end":1938,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98762,"byte_end":98773,"line_start":1939,"line_end":1939,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98778,"byte_end":98785,"line_start":1940,"line_end":1940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102098,"byte_end":102105,"line_start":2042,"line_end":2042,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Creates a fresh collection containing all the elements produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Creates a fresh collection containing all the elements produced","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98871,"byte_end":98938,"line_start":1945,"line_end":1945,"column_start":5,"column_end":72}},{"value":"/ by this parallel iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98943,"byte_end":98973,"line_start":1946,"line_end":1946,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98978,"byte_end":98981,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ You may prefer [`collect_into_vec()`] implemented on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":98986,"byte_end":99042,"line_start":1948,"line_end":1948,"column_start":5,"column_end":61}},{"value":"/ [`IndexedParallelIterator`], if your underlying iterator also implements","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99047,"byte_end":99123,"line_start":1949,"line_end":1949,"column_start":5,"column_end":81}},{"value":"/ it. [`collect_into_vec()`] allocates efficiently with precise knowledge","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99128,"byte_end":99203,"line_start":1950,"line_end":1950,"column_start":5,"column_end":80}},{"value":"/ of how many elements the iterator contains, and even allows you to reuse","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99208,"byte_end":99284,"line_start":1951,"line_end":1951,"column_start":5,"column_end":81}},{"value":"/ an existing vector's backing store rather than allocating a fresh vector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99289,"byte_end":99366,"line_start":1952,"line_end":1952,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99371,"byte_end":99374,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99379,"byte_end":99446,"line_start":1954,"line_end":1954,"column_start":5,"column_end":72}},{"value":"/ [`collect_into_vec()`]:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99451,"byte_end":99478,"line_start":1955,"line_end":1955,"column_start":5,"column_end":32}},{"value":"/     trait.IndexedParallelIterator.html#method.collect_into_vec","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99483,"byte_end":99549,"line_start":1956,"line_end":1956,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99554,"byte_end":99557,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99562,"byte_end":99576,"line_start":1958,"line_end":1958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99581,"byte_end":99584,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99589,"byte_end":99596,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99601,"byte_end":99627,"line_start":1961,"line_end":1961,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99632,"byte_end":99635,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99640,"byte_end":99698,"line_start":1963,"line_end":1963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99703,"byte_end":99706,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99711,"byte_end":99774,"line_start":1965,"line_end":1965,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99779,"byte_end":99782,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99787,"byte_end":99823,"line_start":1967,"line_end":1967,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99828,"byte_end":99835,"line_start":1968,"line_end":1968,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99840,"byte_end":99843,"line_start":1969,"line_end":1969,"column_start":5,"column_end":8}},{"value":"/ You can collect a pair of collections like [`unzip`](#method.unzip)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99848,"byte_end":99919,"line_start":1970,"line_end":1970,"column_start":5,"column_end":76}},{"value":"/ for paired items:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99924,"byte_end":99945,"line_start":1971,"line_end":1971,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99950,"byte_end":99953,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99958,"byte_end":99965,"line_start":1973,"line_end":1973,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":99970,"byte_end":99996,"line_start":1974,"line_end":1974,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100001,"byte_end":100004,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100009,"byte_end":100054,"line_start":1976,"line_end":1976,"column_start":5,"column_end":50}},{"value":"/ let (first, second): (Vec<_>, Vec<_>) = a.into_par_iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100059,"byte_end":100131,"line_start":1977,"line_end":1977,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100136,"byte_end":100139,"line_start":1978,"line_end":1978,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first, [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100144,"byte_end":100180,"line_start":1979,"line_end":1979,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(second, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100185,"byte_end":100222,"line_start":1980,"line_end":1980,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100227,"byte_end":100234,"line_start":1981,"line_end":1981,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100239,"byte_end":100242,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ Or like [`partition_map`](#method.partition_map) for `Either` items:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100247,"byte_end":100319,"line_start":1983,"line_end":1983,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100324,"byte_end":100327,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100332,"byte_end":100339,"line_start":1985,"line_end":1985,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100344,"byte_end":100370,"line_start":1986,"line_end":1986,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100375,"byte_end":100403,"line_start":1987,"line_end":1987,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100408,"byte_end":100411,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100416,"byte_end":100490,"line_start":1989,"line_end":1989,"column_start":5,"column_end":79}},{"value":"/     if x % 2 == 0 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100495,"byte_end":100518,"line_start":1990,"line_end":1990,"column_start":5,"column_end":28}},{"value":"/         Either::Left(x * 4)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100523,"byte_end":100554,"line_start":1991,"line_end":1991,"column_start":5,"column_end":36}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100559,"byte_end":100575,"line_start":1992,"line_end":1992,"column_start":5,"column_end":21}},{"value":"/         Either::Right(x * 3)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100580,"byte_end":100612,"line_start":1993,"line_end":1993,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100617,"byte_end":100626,"line_start":1994,"line_end":1994,"column_start":5,"column_end":14}},{"value":"/ }).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100631,"byte_end":100648,"line_start":1995,"line_end":1995,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100653,"byte_end":100656,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100661,"byte_end":100698,"line_start":1997,"line_end":1997,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100703,"byte_end":100741,"line_start":1998,"line_end":1998,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100746,"byte_end":100753,"line_start":1999,"line_end":1999,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100758,"byte_end":100761,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ You can even collect an arbitrarily-nested combination of pairs and `Either`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100766,"byte_end":100847,"line_start":2001,"line_end":2001,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100852,"byte_end":100855,"line_start":2002,"line_end":2002,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100860,"byte_end":100867,"line_start":2003,"line_end":2003,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100872,"byte_end":100898,"line_start":2004,"line_end":2004,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100903,"byte_end":100931,"line_start":2005,"line_end":2005,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100936,"byte_end":100939,"line_start":2006,"line_end":2006,"column_start":5,"column_end":8}},{"value":"/ let (first, (left, right)): (Vec<_>, (Vec<_>, Vec<_>))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":100944,"byte_end":101002,"line_start":2007,"line_end":2007,"column_start":5,"column_end":63}},{"value":"/     = (0..8).into_par_iter().map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101007,"byte_end":101049,"line_start":2008,"line_end":2008,"column_start":5,"column_end":47}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101054,"byte_end":101081,"line_start":2009,"line_end":2009,"column_start":5,"column_end":32}},{"value":"/             (x, Either::Left(x * 4))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101086,"byte_end":101126,"line_start":2010,"line_end":2010,"column_start":5,"column_end":45}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101131,"byte_end":101151,"line_start":2011,"line_end":2011,"column_start":5,"column_end":25}},{"value":"/             (-x, Either::Right(x * 3))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101156,"byte_end":101198,"line_start":2012,"line_end":2012,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101203,"byte_end":101216,"line_start":2013,"line_end":2013,"column_start":5,"column_end":18}},{"value":"/     }).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101221,"byte_end":101242,"line_start":2014,"line_end":2014,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101247,"byte_end":101250,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first, [0, -1, 2, -3, 4, -5, 6, -7]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101255,"byte_end":101307,"line_start":2016,"line_end":2016,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101312,"byte_end":101349,"line_start":2017,"line_end":2017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101354,"byte_end":101392,"line_start":2018,"line_end":2018,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101397,"byte_end":101404,"line_start":2019,"line_end":2019,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101409,"byte_end":101412,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ All of that can _also_ be combined with short-circuiting collection of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101417,"byte_end":101491,"line_start":2021,"line_end":2021,"column_start":5,"column_end":79}},{"value":"/ `Result` or `Option` types:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101496,"byte_end":101527,"line_start":2022,"line_end":2022,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101532,"byte_end":101535,"line_start":2023,"line_end":2023,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101540,"byte_end":101547,"line_start":2024,"line_end":2024,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101552,"byte_end":101578,"line_start":2025,"line_end":2025,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101583,"byte_end":101611,"line_start":2026,"line_end":2026,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101616,"byte_end":101619,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ let result: Result<(Vec<_>, (Vec<_>, Vec<_>)), _>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101624,"byte_end":101677,"line_start":2028,"line_end":2028,"column_start":5,"column_end":58}},{"value":"/     = (0..8).into_par_iter().map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101682,"byte_end":101724,"line_start":2029,"line_end":2029,"column_start":5,"column_end":47}},{"value":"/         if x > 5 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101729,"byte_end":101751,"line_start":2030,"line_end":2030,"column_start":5,"column_end":27}},{"value":"/             Err(x)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101756,"byte_end":101778,"line_start":2031,"line_end":2031,"column_start":5,"column_end":27}},{"value":"/         } else if x % 2 == 0 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101783,"byte_end":101817,"line_start":2032,"line_end":2032,"column_start":5,"column_end":39}},{"value":"/             Ok((x, Either::Left(x * 4)))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101822,"byte_end":101866,"line_start":2033,"line_end":2033,"column_start":5,"column_end":49}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101871,"byte_end":101891,"line_start":2034,"line_end":2034,"column_start":5,"column_end":25}},{"value":"/             Ok((-x, Either::Right(x * 3)))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101896,"byte_end":101942,"line_start":2035,"line_end":2035,"column_start":5,"column_end":51}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101947,"byte_end":101960,"line_start":2036,"line_end":2036,"column_start":5,"column_end":18}},{"value":"/     }).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101965,"byte_end":101986,"line_start":2037,"line_end":2037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101991,"byte_end":101994,"line_start":2038,"line_end":2038,"column_start":5,"column_end":8}},{"value":"/ let error = result.unwrap_err();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":101999,"byte_end":102035,"line_start":2039,"line_end":2039,"column_start":5,"column_end":41}},{"value":"/ assert!(error == 6 || error == 7);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102040,"byte_end":102078,"line_start":2040,"line_end":2040,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102083,"byte_end":102090,"line_start":2041,"line_end":2041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103357,"byte_end":103362,"line_start":2083,"line_end":2083,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102223,"byte_end":102291,"line_start":2049,"line_end":2049,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102296,"byte_end":102328,"line_start":2050,"line_end":2050,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102333,"byte_end":102336,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102341,"byte_end":102408,"line_start":2052,"line_end":2052,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102413,"byte_end":102476,"line_start":2053,"line_end":2053,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102481,"byte_end":102541,"line_start":2054,"line_end":2054,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102546,"byte_end":102611,"line_start":2055,"line_end":2055,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102616,"byte_end":102619,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102624,"byte_end":102638,"line_start":2057,"line_end":2057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102643,"byte_end":102646,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102651,"byte_end":102658,"line_start":2059,"line_end":2059,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102663,"byte_end":102689,"line_start":2060,"line_end":2060,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102694,"byte_end":102697,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102702,"byte_end":102747,"line_start":2062,"line_end":2062,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102752,"byte_end":102755,"line_start":2063,"line_end":2063,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102760,"byte_end":102832,"line_start":2064,"line_end":2064,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102837,"byte_end":102840,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102845,"byte_end":102880,"line_start":2066,"line_end":2066,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102885,"byte_end":102921,"line_start":2067,"line_end":2067,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102926,"byte_end":102933,"line_start":2068,"line_end":2068,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102938,"byte_end":102941,"line_start":2069,"line_end":2069,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102946,"byte_end":102983,"line_start":2070,"line_end":2070,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102988,"byte_end":102991,"line_start":2071,"line_end":2071,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":102996,"byte_end":103003,"line_start":2072,"line_end":2072,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103008,"byte_end":103034,"line_start":2073,"line_end":2073,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103039,"byte_end":103042,"line_start":2074,"line_end":2074,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103047,"byte_end":103134,"line_start":2075,"line_end":2075,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103139,"byte_end":103180,"line_start":2076,"line_end":2076,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103185,"byte_end":103202,"line_start":2077,"line_end":2077,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103207,"byte_end":103210,"line_start":2078,"line_end":2078,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103215,"byte_end":103252,"line_start":2079,"line_end":2079,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103257,"byte_end":103295,"line_start":2080,"line_end":2080,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103300,"byte_end":103337,"line_start":2081,"line_end":2081,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103342,"byte_end":103349,"line_start":2082,"line_end":2082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104467,"byte_end":104476,"line_start":2113,"line_end":2113,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103644,"byte_end":103716,"line_start":2094,"line_end":2094,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103721,"byte_end":103794,"line_start":2095,"line_end":2095,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103799,"byte_end":103869,"line_start":2096,"line_end":2096,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103874,"byte_end":103877,"line_start":2097,"line_end":2097,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103882,"byte_end":103955,"line_start":2098,"line_end":2098,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":103960,"byte_end":104034,"line_start":2099,"line_end":2099,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104039,"byte_end":104111,"line_start":2100,"line_end":2100,"column_start":5,"column_end":77}},{"value":"/ that used type inference assuming the two were the same.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104116,"byte_end":104176,"line_start":2101,"line_end":2101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104181,"byte_end":104184,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104189,"byte_end":104203,"line_start":2103,"line_end":2103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104208,"byte_end":104211,"line_start":2104,"line_end":2104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104216,"byte_end":104223,"line_start":2105,"line_end":2105,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104228,"byte_end":104254,"line_start":2106,"line_end":2106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104259,"byte_end":104262,"line_start":2107,"line_end":2107,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104267,"byte_end":104358,"line_start":2108,"line_end":2108,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104363,"byte_end":104366,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104371,"byte_end":104406,"line_start":2110,"line_end":2110,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104411,"byte_end":104447,"line_start":2111,"line_end":2111,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104452,"byte_end":104459,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106196,"byte_end":106209,"line_start":2165,"line_end":2165,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104747,"byte_end":104818,"line_start":2122,"line_end":2122,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104823,"byte_end":104895,"line_start":2123,"line_end":2123,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104900,"byte_end":104970,"line_start":2124,"line_end":2124,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104975,"byte_end":104978,"line_start":2125,"line_end":2125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":104983,"byte_end":104997,"line_start":2126,"line_end":2126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105002,"byte_end":105005,"line_start":2127,"line_end":2127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105010,"byte_end":105017,"line_start":2128,"line_end":2128,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105022,"byte_end":105048,"line_start":2129,"line_end":2129,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105053,"byte_end":105081,"line_start":2130,"line_end":2130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105086,"byte_end":105089,"line_start":2131,"line_end":2131,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105094,"byte_end":105158,"line_start":2132,"line_end":2132,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105163,"byte_end":105191,"line_start":2133,"line_end":2133,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105196,"byte_end":105223,"line_start":2134,"line_end":2134,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105228,"byte_end":105263,"line_start":2135,"line_end":2135,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105268,"byte_end":105288,"line_start":2136,"line_end":2136,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105293,"byte_end":105329,"line_start":2137,"line_end":2137,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105334,"byte_end":105347,"line_start":2138,"line_end":2138,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105352,"byte_end":105363,"line_start":2139,"line_end":2139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105368,"byte_end":105371,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105376,"byte_end":105413,"line_start":2141,"line_end":2141,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105418,"byte_end":105456,"line_start":2142,"line_end":2142,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105461,"byte_end":105468,"line_start":2143,"line_end":2143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105473,"byte_end":105476,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105481,"byte_end":105528,"line_start":2145,"line_end":2145,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105533,"byte_end":105536,"line_start":2146,"line_end":2146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105541,"byte_end":105548,"line_start":2147,"line_end":2147,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105553,"byte_end":105579,"line_start":2148,"line_end":2148,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105584,"byte_end":105615,"line_start":2149,"line_end":2149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105620,"byte_end":105623,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105628,"byte_end":105717,"line_start":2151,"line_end":2151,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105722,"byte_end":105746,"line_start":2152,"line_end":2152,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105751,"byte_end":105800,"line_start":2153,"line_end":2153,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105805,"byte_end":105841,"line_start":2154,"line_end":2154,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105846,"byte_end":105883,"line_start":2155,"line_end":2155,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105888,"byte_end":105925,"line_start":2156,"line_end":2156,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105930,"byte_end":105968,"line_start":2157,"line_end":2157,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105973,"byte_end":105984,"line_start":2158,"line_end":2158,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105989,"byte_end":105992,"line_start":2159,"line_end":2159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":105997,"byte_end":106028,"line_start":2160,"line_end":2160,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106033,"byte_end":106073,"line_start":2161,"line_end":2161,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106078,"byte_end":106108,"line_start":2162,"line_end":2162,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106113,"byte_end":106176,"line_start":2163,"line_end":2163,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106181,"byte_end":106188,"line_start":2164,"line_end":2164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106842,"byte_end":106853,"line_start":2188,"line_end":2188,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106513,"byte_end":106582,"line_start":2176,"line_end":2176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106587,"byte_end":106590,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106595,"byte_end":106609,"line_start":2178,"line_end":2178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106614,"byte_end":106617,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106622,"byte_end":106629,"line_start":2180,"line_end":2180,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106634,"byte_end":106660,"line_start":2181,"line_end":2181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106665,"byte_end":106668,"line_start":2182,"line_end":2182,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106673,"byte_end":106699,"line_start":2183,"line_end":2183,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106704,"byte_end":106768,"line_start":2184,"line_end":2184,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106773,"byte_end":106776,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106781,"byte_end":106822,"line_start":2186,"line_end":2186,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106827,"byte_end":106834,"line_start":2187,"line_end":2187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107579,"byte_end":107594,"line_start":2207,"line_end":2207,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":106996,"byte_end":107060,"line_start":2195,"line_end":2195,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107065,"byte_end":107121,"line_start":2196,"line_end":2196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107126,"byte_end":107129,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107134,"byte_end":107195,"line_start":2198,"line_end":2198,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107200,"byte_end":107265,"line_start":2199,"line_end":2199,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107270,"byte_end":107329,"line_start":2200,"line_end":2200,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107334,"byte_end":107373,"line_start":2201,"line_end":2201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107378,"byte_end":107381,"line_start":2202,"line_end":2202,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107386,"byte_end":107452,"line_start":2203,"line_end":2203,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107457,"byte_end":107471,"line_start":2204,"line_end":2204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107476,"byte_end":107479,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107484,"byte_end":107571,"line_start":2206,"line_end":2206,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108481,"byte_end":108488,"line_start":2225,"line_end":2225,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":4674},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107687,"byte_end":107751,"line_start":2211,"line_end":2211,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107756,"byte_end":107812,"line_start":2212,"line_end":2212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107817,"byte_end":107820,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107825,"byte_end":107892,"line_start":2214,"line_end":2214,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107897,"byte_end":107966,"line_start":2215,"line_end":2215,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":107971,"byte_end":108042,"line_start":2216,"line_end":2216,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108047,"byte_end":108117,"line_start":2217,"line_end":2217,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108122,"byte_end":108191,"line_start":2218,"line_end":2218,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108196,"byte_end":108263,"line_start":2219,"line_end":2219,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108268,"byte_end":108302,"line_start":2220,"line_end":2220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108307,"byte_end":108310,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108315,"byte_end":108379,"line_start":2222,"line_end":2222,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108384,"byte_end":108439,"line_start":2223,"line_end":2223,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108444,"byte_end":108473,"line_start":2224,"line_end":2224,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108931,"byte_end":108954,"line_start":2244,"line_end":2244,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4901},{"krate":0,"index":4907},{"krate":0,"index":4912},{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4918},{"krate":0,"index":4920},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4945}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108693,"byte_end":108759,"line_start":2239,"line_end":2239,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108760,"byte_end":108825,"line_start":2240,"line_end":2240,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108826,"byte_end":108843,"line_start":2241,"line_end":2241,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108844,"byte_end":108847,"line_start":2242,"line_end":2242,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108848,"byte_end":108920,"line_start":2243,"line_end":2243,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109563,"byte_end":109579,"line_start":2263,"line_end":2263,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108979,"byte_end":109038,"line_start":2245,"line_end":2245,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109043,"byte_end":109102,"line_start":2246,"line_end":2246,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109107,"byte_end":109172,"line_start":2247,"line_end":2247,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109177,"byte_end":109243,"line_start":2248,"line_end":2248,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109248,"byte_end":109251,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109256,"byte_end":109270,"line_start":2250,"line_end":2250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109275,"byte_end":109278,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109283,"byte_end":109290,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109295,"byte_end":109321,"line_start":2253,"line_end":2253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109326,"byte_end":109329,"line_start":2254,"line_end":2254,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109334,"byte_end":109373,"line_start":2255,"line_end":2255,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109378,"byte_end":109413,"line_start":2256,"line_end":2256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109418,"byte_end":109421,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109426,"byte_end":109452,"line_start":2258,"line_end":2258,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109457,"byte_end":109493,"line_start":2259,"line_end":2259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109498,"byte_end":109501,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109506,"byte_end":109543,"line_start":2261,"line_end":2261,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109548,"byte_end":109555,"line_start":2262,"line_end":2262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110389,"byte_end":110404,"line_start":2288,"line_end":2288,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109678,"byte_end":109735,"line_start":2267,"line_end":2267,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109740,"byte_end":109802,"line_start":2268,"line_end":2268,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109807,"byte_end":109873,"line_start":2269,"line_end":2269,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109878,"byte_end":109945,"line_start":2270,"line_end":2270,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109950,"byte_end":109953,"line_start":2271,"line_end":2271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109958,"byte_end":109972,"line_start":2272,"line_end":2272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109977,"byte_end":109980,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109985,"byte_end":109992,"line_start":2274,"line_end":2274,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":109997,"byte_end":110023,"line_start":2275,"line_end":2275,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110028,"byte_end":110031,"line_start":2276,"line_end":2276,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110036,"byte_end":110075,"line_start":2277,"line_end":2277,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110080,"byte_end":110112,"line_start":2278,"line_end":2278,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110117,"byte_end":110150,"line_start":2279,"line_end":2279,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110155,"byte_end":110158,"line_start":2280,"line_end":2280,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110163,"byte_end":110191,"line_start":2281,"line_end":2281,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110196,"byte_end":110216,"line_start":2282,"line_end":2282,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110221,"byte_end":110269,"line_start":2283,"line_end":2283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110274,"byte_end":110277,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110282,"byte_end":110320,"line_start":2285,"line_end":2285,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110325,"byte_end":110369,"line_start":2286,"line_end":2286,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110374,"byte_end":110381,"line_start":2287,"line_end":2287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4887},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111216,"byte_end":111219,"line_start":2315,"line_end":2315,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Iterates over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterates over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110624,"byte_end":110687,"line_start":2297,"line_end":2297,"column_start":5,"column_end":68}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110692,"byte_end":110758,"line_start":2298,"line_end":2298,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110763,"byte_end":110822,"line_start":2299,"line_end":2299,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110827,"byte_end":110891,"line_start":2300,"line_end":2300,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110896,"byte_end":110915,"line_start":2301,"line_end":2301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110920,"byte_end":110923,"line_start":2302,"line_end":2302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110928,"byte_end":110942,"line_start":2303,"line_end":2303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110947,"byte_end":110950,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110955,"byte_end":110962,"line_start":2305,"line_end":2305,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110967,"byte_end":110993,"line_start":2306,"line_end":2306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":110998,"byte_end":111001,"line_start":2307,"line_end":2307,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111006,"byte_end":111037,"line_start":2308,"line_end":2308,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111042,"byte_end":111066,"line_start":2309,"line_end":2309,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111071,"byte_end":111104,"line_start":2310,"line_end":2310,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111109,"byte_end":111128,"line_start":2311,"line_end":2311,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111133,"byte_end":111136,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111141,"byte_end":111196,"line_start":2313,"line_end":2313,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111201,"byte_end":111208,"line_start":2314,"line_end":2314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111993,"byte_end":111999,"line_start":2342,"line_end":2342,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111411,"byte_end":111488,"line_start":2323,"line_end":2323,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111493,"byte_end":111496,"line_start":2324,"line_end":2324,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111501,"byte_end":111513,"line_start":2325,"line_end":2325,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111518,"byte_end":111580,"line_start":2326,"line_end":2326,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111585,"byte_end":111588,"line_start":2327,"line_end":2327,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111593,"byte_end":111612,"line_start":2328,"line_end":2328,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111617,"byte_end":111643,"line_start":2329,"line_end":2329,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111648,"byte_end":111651,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111656,"byte_end":111676,"line_start":2331,"line_end":2331,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111681,"byte_end":111704,"line_start":2332,"line_end":2332,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111709,"byte_end":111743,"line_start":2333,"line_end":2333,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111748,"byte_end":111782,"line_start":2334,"line_end":2334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111787,"byte_end":111790,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111795,"byte_end":111817,"line_start":2336,"line_end":2336,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111822,"byte_end":111892,"line_start":2337,"line_end":2337,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111897,"byte_end":111900,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111905,"byte_end":111936,"line_start":2339,"line_end":2339,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111941,"byte_end":111973,"line_start":2340,"line_end":2340,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":111978,"byte_end":111985,"line_start":2341,"line_end":2341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112846,"byte_end":112856,"line_start":2366,"line_end":2366,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112285,"byte_end":112346,"line_start":2352,"line_end":2352,"column_start":5,"column_end":66}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112351,"byte_end":112415,"line_start":2353,"line_end":2353,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112420,"byte_end":112485,"line_start":2354,"line_end":2354,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112490,"byte_end":112555,"line_start":2355,"line_end":2355,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112560,"byte_end":112579,"line_start":2356,"line_end":2356,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112584,"byte_end":112587,"line_start":2357,"line_end":2357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112592,"byte_end":112606,"line_start":2358,"line_end":2358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112611,"byte_end":112614,"line_start":2359,"line_end":2359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112619,"byte_end":112626,"line_start":2360,"line_end":2360,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112631,"byte_end":112657,"line_start":2361,"line_end":2361,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112662,"byte_end":112710,"line_start":2362,"line_end":2362,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112715,"byte_end":112779,"line_start":2363,"line_end":2363,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112784,"byte_end":112826,"line_start":2364,"line_end":2364,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":112831,"byte_end":112838,"line_start":2365,"line_end":2365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113474,"byte_end":113493,"line_start":2385,"line_end":2385,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113098,"byte_end":113159,"line_start":2374,"line_end":2374,"column_start":5,"column_end":66}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113164,"byte_end":113201,"line_start":2375,"line_end":2375,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113206,"byte_end":113209,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113214,"byte_end":113228,"line_start":2377,"line_end":2377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113233,"byte_end":113236,"line_start":2378,"line_end":2378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113241,"byte_end":113248,"line_start":2379,"line_end":2379,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113253,"byte_end":113279,"line_start":2380,"line_end":2380,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113284,"byte_end":113332,"line_start":2381,"line_end":2381,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113337,"byte_end":113410,"line_start":2382,"line_end":2382,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113415,"byte_end":113454,"line_start":2383,"line_end":2383,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113459,"byte_end":113466,"line_start":2384,"line_end":2384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114674,"byte_end":114680,"line_start":2413,"line_end":2413,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Splits an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Splits an iterator up into fixed-size chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113751,"byte_end":113800,"line_start":2393,"line_end":2393,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113805,"byte_end":113808,"line_start":2394,"line_end":2394,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113813,"byte_end":113889,"line_start":2395,"line_end":2395,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113894,"byte_end":113973,"line_start":2396,"line_end":2396,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":113978,"byte_end":114030,"line_start":2397,"line_end":2397,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114035,"byte_end":114038,"line_start":2398,"line_end":2398,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114043,"byte_end":114121,"line_start":2399,"line_end":2399,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114126,"byte_end":114200,"line_start":2400,"line_end":2400,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114205,"byte_end":114208,"line_start":2401,"line_end":2401,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114213,"byte_end":114286,"line_start":2402,"line_end":2402,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114291,"byte_end":114375,"line_start":2403,"line_end":2403,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114380,"byte_end":114383,"line_start":2404,"line_end":2404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114388,"byte_end":114402,"line_start":2405,"line_end":2405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114407,"byte_end":114410,"line_start":2406,"line_end":2406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114415,"byte_end":114422,"line_start":2407,"line_end":2407,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114427,"byte_end":114453,"line_start":2408,"line_end":2408,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114458,"byte_end":114506,"line_start":2409,"line_end":2409,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114511,"byte_end":114576,"line_start":2410,"line_end":2410,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114581,"byte_end":114654,"line_start":2411,"line_end":2411,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114659,"byte_end":114666,"line_start":2412,"line_end":2412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115292,"byte_end":115295,"line_start":2432,"line_end":2432,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114838,"byte_end":114922,"line_start":2418,"line_end":2418,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114927,"byte_end":114939,"line_start":2419,"line_end":2419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114944,"byte_end":114947,"line_start":2420,"line_end":2420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114952,"byte_end":114966,"line_start":2421,"line_end":2421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114971,"byte_end":114974,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114979,"byte_end":114986,"line_start":2423,"line_end":2423,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":114991,"byte_end":115017,"line_start":2424,"line_end":2424,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115022,"byte_end":115052,"line_start":2425,"line_end":2425,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115057,"byte_end":115060,"line_start":2426,"line_end":2426,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115065,"byte_end":115091,"line_start":2427,"line_end":2427,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115096,"byte_end":115151,"line_start":2428,"line_end":2428,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115156,"byte_end":115212,"line_start":2429,"line_end":2429,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115217,"byte_end":115272,"line_start":2430,"line_end":2430,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115277,"byte_end":115284,"line_start":2431,"line_end":2431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116524,"byte_end":116535,"line_start":2472,"line_end":2472,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115910,"byte_end":115994,"line_start":2456,"line_end":2456,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":115999,"byte_end":116011,"line_start":2457,"line_end":2457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116016,"byte_end":116019,"line_start":2458,"line_end":2458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116024,"byte_end":116038,"line_start":2459,"line_end":2459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116043,"byte_end":116046,"line_start":2460,"line_end":2460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116051,"byte_end":116058,"line_start":2461,"line_end":2461,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116063,"byte_end":116089,"line_start":2462,"line_end":2462,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116094,"byte_end":116124,"line_start":2463,"line_end":2463,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116129,"byte_end":116151,"line_start":2464,"line_end":2464,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116156,"byte_end":116159,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116164,"byte_end":116196,"line_start":2466,"line_end":2466,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116201,"byte_end":116276,"line_start":2467,"line_end":2467,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116281,"byte_end":116357,"line_start":2468,"line_end":2468,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116362,"byte_end":116435,"line_start":2469,"line_end":2469,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116440,"byte_end":116504,"line_start":2470,"line_end":2470,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":116509,"byte_end":116516,"line_start":2471,"line_end":2471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117314,"byte_end":117316,"line_start":2498,"line_end":2498,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117211,"byte_end":117268,"line_start":2496,"line_end":2496,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117273,"byte_end":117306,"line_start":2497,"line_end":2497,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117818,"byte_end":117820,"line_start":2515,"line_end":2515,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117713,"byte_end":117770,"line_start":2513,"line_end":2513,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":117775,"byte_end":117810,"line_start":2514,"line_end":2514,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4914},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118137,"byte_end":118139,"line_start":2526,"line_end":2526,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118014,"byte_end":118071,"line_start":2524,"line_end":2524,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118076,"byte_end":118129,"line_start":2525,"line_end":2525,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4916},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118478,"byte_end":118480,"line_start":2537,"line_end":2537,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118366,"byte_end":118423,"line_start":2535,"line_end":2535,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118428,"byte_end":118470,"line_start":2536,"line_end":2536,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118888,"byte_end":118890,"line_start":2549,"line_end":2549,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118762,"byte_end":118819,"line_start":2547,"line_end":2547,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":118824,"byte_end":118880,"line_start":2548,"line_end":2548,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119232,"byte_end":119234,"line_start":2560,"line_end":2560,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119120,"byte_end":119177,"line_start":2558,"line_end":2558,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119182,"byte_end":119224,"line_start":2559,"line_end":2559,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119888,"byte_end":119897,"line_start":2585,"line_end":2585,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119519,"byte_end":119560,"line_start":2570,"line_end":2570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119565,"byte_end":119568,"line_start":2571,"line_end":2571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119573,"byte_end":119587,"line_start":2572,"line_end":2572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119592,"byte_end":119595,"line_start":2573,"line_end":2573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119600,"byte_end":119607,"line_start":2574,"line_end":2574,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119612,"byte_end":119638,"line_start":2575,"line_end":2575,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119643,"byte_end":119646,"line_start":2576,"line_end":2576,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119651,"byte_end":119687,"line_start":2577,"line_end":2577,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119692,"byte_end":119722,"line_start":2578,"line_end":2578,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119727,"byte_end":119751,"line_start":2579,"line_end":2579,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119756,"byte_end":119776,"line_start":2580,"line_end":2580,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119781,"byte_end":119800,"line_start":2581,"line_end":2581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119805,"byte_end":119808,"line_start":2582,"line_end":2582,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119813,"byte_end":119868,"line_start":2583,"line_end":2583,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119873,"byte_end":119880,"line_start":2584,"line_end":2584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120441,"byte_end":120448,"line_start":2609,"line_end":2609,"column_start":8,"column_end":15},"name":"step_by","qualname":"::iter::IndexedParallelIterator::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Creates an iterator that steps by the given amount","sig":null,"attributes":[{"value":"/ Creates an iterator that steps by the given amount","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":119965,"byte_end":120019,"line_start":2589,"line_end":2589,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120024,"byte_end":120027,"line_start":2590,"line_end":2590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120032,"byte_end":120046,"line_start":2591,"line_end":2591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120051,"byte_end":120054,"line_start":2592,"line_end":2592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120059,"byte_end":120066,"line_start":2593,"line_end":2593,"column_start":5,"column_end":12}},{"value":"/use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120071,"byte_end":120096,"line_start":2594,"line_end":2594,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120101,"byte_end":120104,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ let range = (3..10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120109,"byte_end":120133,"line_start":2596,"line_end":2596,"column_start":5,"column_end":29}},{"value":"/ let result: Vec<i32> = range","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120138,"byte_end":120170,"line_start":2597,"line_end":2597,"column_start":5,"column_end":37}},{"value":"/    .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120175,"byte_end":120198,"line_start":2598,"line_end":2598,"column_start":5,"column_end":28}},{"value":"/    .step_by(3)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120203,"byte_end":120221,"line_start":2599,"line_end":2599,"column_start":5,"column_end":23}},{"value":"/    .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120226,"byte_end":120244,"line_start":2600,"line_end":2600,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120249,"byte_end":120252,"line_start":2601,"line_end":2601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [3, 6, 9])","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120257,"byte_end":120290,"line_start":2602,"line_end":2602,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120295,"byte_end":120302,"line_start":2603,"line_end":2603,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120307,"byte_end":120310,"line_start":2604,"line_end":2604,"column_start":5,"column_end":8}},{"value":"/ # Compatibility","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120315,"byte_end":120334,"line_start":2605,"line_end":2605,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120339,"byte_end":120342,"line_start":2606,"line_end":2606,"column_start":5,"column_end":8}},{"value":"/ This method is only available on Rust 1.38 or greater.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120347,"byte_end":120405,"line_start":2607,"line_end":2607,"column_start":5,"column_end":63}},{"value":"cfg(has_step_by_rev)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120410,"byte_end":120433,"line_start":2608,"line_end":2608,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120864,"byte_end":120868,"line_start":2627,"line_end":2627,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120529,"byte_end":120587,"line_start":2613,"line_end":2613,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120592,"byte_end":120595,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120600,"byte_end":120614,"line_start":2615,"line_end":2615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120619,"byte_end":120622,"line_start":2616,"line_end":2616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120627,"byte_end":120634,"line_start":2617,"line_end":2617,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120639,"byte_end":120665,"line_start":2618,"line_end":2618,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120670,"byte_end":120673,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120678,"byte_end":120711,"line_start":2620,"line_end":2620,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120716,"byte_end":120740,"line_start":2621,"line_end":2621,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120745,"byte_end":120762,"line_start":2622,"line_end":2622,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120767,"byte_end":120786,"line_start":2623,"line_end":2623,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120791,"byte_end":120794,"line_start":2624,"line_end":2624,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120799,"byte_end":120844,"line_start":2625,"line_end":2625,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120849,"byte_end":120856,"line_start":2626,"line_end":2626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121269,"byte_end":121273,"line_start":2645,"line_end":2645,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":120939,"byte_end":120998,"line_start":2631,"line_end":2631,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121003,"byte_end":121006,"line_start":2632,"line_end":2632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121011,"byte_end":121025,"line_start":2633,"line_end":2633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121030,"byte_end":121033,"line_start":2634,"line_end":2634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121038,"byte_end":121045,"line_start":2635,"line_end":2635,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121050,"byte_end":121076,"line_start":2636,"line_end":2636,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121081,"byte_end":121084,"line_start":2637,"line_end":2637,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121089,"byte_end":121122,"line_start":2638,"line_end":2638,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121127,"byte_end":121151,"line_start":2639,"line_end":2639,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121156,"byte_end":121172,"line_start":2640,"line_end":2640,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121177,"byte_end":121196,"line_start":2641,"line_end":2641,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121201,"byte_end":121204,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121209,"byte_end":121249,"line_start":2643,"line_end":2643,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121254,"byte_end":121261,"line_start":2644,"line_end":2644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121987,"byte_end":121999,"line_start":2667,"line_end":2667,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121344,"byte_end":121404,"line_start":2649,"line_end":2649,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121409,"byte_end":121470,"line_start":2650,"line_end":2650,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121475,"byte_end":121537,"line_start":2651,"line_end":2651,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121542,"byte_end":121603,"line_start":2652,"line_end":2652,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121608,"byte_end":121660,"line_start":2653,"line_end":2653,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121665,"byte_end":121668,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121673,"byte_end":121687,"line_start":2655,"line_end":2655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121692,"byte_end":121695,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121700,"byte_end":121707,"line_start":2657,"line_end":2657,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121712,"byte_end":121738,"line_start":2658,"line_end":2658,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121743,"byte_end":121746,"line_start":2659,"line_end":2659,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121751,"byte_end":121776,"line_start":2660,"line_end":2660,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121781,"byte_end":121784,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121789,"byte_end":121856,"line_start":2662,"line_end":2662,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121861,"byte_end":121891,"line_start":2663,"line_end":2663,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121896,"byte_end":121899,"line_start":2664,"line_end":2664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121904,"byte_end":121967,"line_start":2665,"line_end":2665,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":121972,"byte_end":121979,"line_start":2666,"line_end":2666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4929},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123240,"byte_end":123254,"line_start":2704,"line_end":2704,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122298,"byte_end":122371,"line_start":2680,"line_end":2680,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122376,"byte_end":122436,"line_start":2681,"line_end":2681,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122441,"byte_end":122444,"line_start":2682,"line_end":2682,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122449,"byte_end":122512,"line_start":2683,"line_end":2683,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122517,"byte_end":122582,"line_start":2684,"line_end":2684,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122587,"byte_end":122650,"line_start":2685,"line_end":2685,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122655,"byte_end":122668,"line_start":2686,"line_end":2686,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122673,"byte_end":122676,"line_start":2687,"line_end":2687,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122681,"byte_end":122752,"line_start":2688,"line_end":2688,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122757,"byte_end":122828,"line_start":2689,"line_end":2689,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122833,"byte_end":122904,"line_start":2690,"line_end":2690,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122909,"byte_end":122947,"line_start":2691,"line_end":2691,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122952,"byte_end":122955,"line_start":2692,"line_end":2692,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122960,"byte_end":122974,"line_start":2693,"line_end":2693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122979,"byte_end":122982,"line_start":2694,"line_end":2694,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122987,"byte_end":122994,"line_start":2695,"line_end":2695,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":122999,"byte_end":123025,"line_start":2696,"line_end":2696,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123030,"byte_end":123033,"line_start":2697,"line_end":2697,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123038,"byte_end":123063,"line_start":2698,"line_end":2698,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123068,"byte_end":123071,"line_start":2699,"line_end":2699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123076,"byte_end":123142,"line_start":2700,"line_end":2700,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123147,"byte_end":123150,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123155,"byte_end":123220,"line_start":2702,"line_end":2702,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123225,"byte_end":123232,"line_start":2703,"line_end":2703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124461,"byte_end":124474,"line_start":2741,"line_end":2741,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123555,"byte_end":123627,"line_start":2717,"line_end":2717,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123632,"byte_end":123692,"line_start":2718,"line_end":2718,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123697,"byte_end":123700,"line_start":2719,"line_end":2719,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123705,"byte_end":123767,"line_start":2720,"line_end":2720,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123772,"byte_end":123836,"line_start":2721,"line_end":2721,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123841,"byte_end":123902,"line_start":2722,"line_end":2722,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123907,"byte_end":123920,"line_start":2723,"line_end":2723,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123925,"byte_end":123928,"line_start":2724,"line_end":2724,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":123933,"byte_end":124004,"line_start":2725,"line_end":2725,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124009,"byte_end":124081,"line_start":2726,"line_end":2726,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124086,"byte_end":124154,"line_start":2727,"line_end":2727,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124159,"byte_end":124170,"line_start":2728,"line_end":2728,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124175,"byte_end":124178,"line_start":2729,"line_end":2729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124183,"byte_end":124197,"line_start":2730,"line_end":2730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124202,"byte_end":124205,"line_start":2731,"line_end":2731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124210,"byte_end":124217,"line_start":2732,"line_end":2732,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124222,"byte_end":124248,"line_start":2733,"line_end":2733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124253,"byte_end":124256,"line_start":2734,"line_end":2734,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124261,"byte_end":124286,"line_start":2735,"line_end":2735,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124291,"byte_end":124294,"line_start":2736,"line_end":2736,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124299,"byte_end":124364,"line_start":2737,"line_end":2737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124369,"byte_end":124372,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124377,"byte_end":124441,"line_start":2739,"line_end":2739,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124446,"byte_end":124453,"line_start":2740,"line_end":2740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124962,"byte_end":124970,"line_start":2759,"line_end":2759,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n\"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":124793,"byte_end":124954,"line_start":2755,"line_end":2758,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4937},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125861,"byte_end":125870,"line_start":2784,"line_end":2784,"column_start":8,"column_end":17},"name":"positions","qualname":"::iter::IndexedParallelIterator::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Searches for items in the parallel iterator that match the given\n predicate, and returns their indices.","sig":null,"attributes":[{"value":"/ Searches for items in the parallel iterator that match the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125124,"byte_end":125192,"line_start":2766,"line_end":2766,"column_start":5,"column_end":73}},{"value":"/ predicate, and returns their indices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125197,"byte_end":125238,"line_start":2767,"line_end":2767,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125243,"byte_end":125246,"line_start":2768,"line_end":2768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125251,"byte_end":125265,"line_start":2769,"line_end":2769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125270,"byte_end":125273,"line_start":2770,"line_end":2770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125278,"byte_end":125285,"line_start":2771,"line_end":2771,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125290,"byte_end":125316,"line_start":2772,"line_end":2772,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125321,"byte_end":125324,"line_start":2773,"line_end":2773,"column_start":5,"column_end":8}},{"value":"/ let primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125329,"byte_end":125387,"line_start":2774,"line_end":2774,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125392,"byte_end":125395,"line_start":2775,"line_end":2775,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 1 modulo 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125400,"byte_end":125459,"line_start":2776,"line_end":2776,"column_start":5,"column_end":64}},{"value":"/ let p1mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 1).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125464,"byte_end":125544,"line_start":2777,"line_end":2777,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p1mod6, [3, 5, 7]); // primes 7, 13, and 19","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125549,"byte_end":125607,"line_start":2778,"line_end":2778,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125612,"byte_end":125615,"line_start":2779,"line_end":2779,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 5 modulo 6","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125620,"byte_end":125679,"line_start":2780,"line_end":2780,"column_start":5,"column_end":64}},{"value":"/ let p5mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 5).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125684,"byte_end":125764,"line_start":2781,"line_end":2781,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p5mod6, [2, 4, 6, 8, 9]); // primes 5, 11, 17, 23, and 29","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125769,"byte_end":125841,"line_start":2782,"line_end":2782,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":125846,"byte_end":125853,"line_start":2783,"line_end":2783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126387,"byte_end":126390,"line_start":2806,"line_end":2806,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126032,"byte_end":126097,"line_start":2791,"line_end":2791,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126102,"byte_end":126120,"line_start":2792,"line_end":2792,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126125,"byte_end":126128,"line_start":2793,"line_end":2793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126133,"byte_end":126147,"line_start":2794,"line_end":2794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126152,"byte_end":126155,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126160,"byte_end":126167,"line_start":2796,"line_end":2796,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126172,"byte_end":126198,"line_start":2797,"line_end":2797,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126203,"byte_end":126206,"line_start":2798,"line_end":2798,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126211,"byte_end":126242,"line_start":2799,"line_end":2799,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126247,"byte_end":126271,"line_start":2800,"line_end":2800,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126276,"byte_end":126290,"line_start":2801,"line_end":2801,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126295,"byte_end":126314,"line_start":2802,"line_end":2802,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126319,"byte_end":126322,"line_start":2803,"line_end":2803,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126327,"byte_end":126367,"line_start":2804,"line_end":2804,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126372,"byte_end":126379,"line_start":2805,"line_end":2805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127210,"byte_end":127222,"line_start":2832,"line_end":2832,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n rayon job.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126446,"byte_end":126513,"line_start":2810,"line_end":2810,"column_start":5,"column_end":72}},{"value":"/ rayon job.  Rayon will not split any smaller than this length, but","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126518,"byte_end":126588,"line_start":2811,"line_end":2811,"column_start":5,"column_end":75}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126593,"byte_end":126658,"line_start":2812,"line_end":2812,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126663,"byte_end":126666,"line_start":2813,"line_end":2813,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126671,"byte_end":126740,"line_start":2814,"line_end":2814,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126745,"byte_end":126758,"line_start":2815,"line_end":2815,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126763,"byte_end":126829,"line_start":2816,"line_end":2816,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126834,"byte_end":126863,"line_start":2817,"line_end":2817,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126868,"byte_end":126871,"line_start":2818,"line_end":2818,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126876,"byte_end":126890,"line_start":2819,"line_end":2819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126895,"byte_end":126898,"line_start":2820,"line_end":2820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126903,"byte_end":126910,"line_start":2821,"line_end":2821,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126915,"byte_end":126941,"line_start":2822,"line_end":2822,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126946,"byte_end":126949,"line_start":2823,"line_end":2823,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126954,"byte_end":126982,"line_start":2824,"line_end":2824,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":126987,"byte_end":127011,"line_start":2825,"line_end":2825,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127016,"byte_end":127043,"line_start":2826,"line_end":2826,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127048,"byte_end":127123,"line_start":2827,"line_end":2827,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127128,"byte_end":127152,"line_start":2828,"line_end":2828,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127157,"byte_end":127160,"line_start":2829,"line_end":2829,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127165,"byte_end":127190,"line_start":2830,"line_end":2830,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127195,"byte_end":127202,"line_start":2831,"line_end":2831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128164,"byte_end":128176,"line_start":2860,"line_end":2860,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n rayon job.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127301,"byte_end":127368,"line_start":2836,"line_end":2836,"column_start":5,"column_end":72}},{"value":"/ rayon job.  Rayon will try to split at least below this length,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127373,"byte_end":127440,"line_start":2837,"line_end":2837,"column_start":5,"column_end":72}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127445,"byte_end":127513,"line_start":2838,"line_end":2838,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127518,"byte_end":127586,"line_start":2839,"line_end":2839,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127591,"byte_end":127613,"line_start":2840,"line_end":2840,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127618,"byte_end":127621,"line_start":2841,"line_end":2841,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127626,"byte_end":127694,"line_start":2842,"line_end":2842,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127699,"byte_end":127712,"line_start":2843,"line_end":2843,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127717,"byte_end":127783,"line_start":2844,"line_end":2844,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127788,"byte_end":127817,"line_start":2845,"line_end":2845,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127822,"byte_end":127825,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127830,"byte_end":127844,"line_start":2847,"line_end":2847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127849,"byte_end":127852,"line_start":2848,"line_end":2848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127857,"byte_end":127864,"line_start":2849,"line_end":2849,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127869,"byte_end":127895,"line_start":2850,"line_end":2850,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127900,"byte_end":127903,"line_start":2851,"line_end":2851,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127908,"byte_end":127936,"line_start":2852,"line_end":2852,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127941,"byte_end":127965,"line_start":2853,"line_end":2853,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":127970,"byte_end":127997,"line_start":2854,"line_end":2854,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128002,"byte_end":128077,"line_start":2855,"line_end":2855,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128082,"byte_end":128106,"line_start":2856,"line_end":2856,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128111,"byte_end":128114,"line_start":2857,"line_end":2857,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128119,"byte_end":128144,"line_start":2858,"line_end":2858,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128149,"byte_end":128156,"line_start":2859,"line_end":2859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128664,"byte_end":128667,"line_start":2878,"line_end":2878,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128255,"byte_end":128319,"line_start":2864,"line_end":2864,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128324,"byte_end":128363,"line_start":2865,"line_end":2865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128368,"byte_end":128371,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128376,"byte_end":128390,"line_start":2867,"line_end":2867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128395,"byte_end":128398,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128403,"byte_end":128410,"line_start":2869,"line_end":2869,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128415,"byte_end":128441,"line_start":2870,"line_end":2870,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128446,"byte_end":128449,"line_start":2871,"line_end":2871,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128454,"byte_end":128515,"line_start":2872,"line_end":2872,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128520,"byte_end":128555,"line_start":2873,"line_end":2873,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128560,"byte_end":128563,"line_start":2874,"line_end":2874,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128568,"byte_end":128609,"line_start":2875,"line_end":2875,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128614,"byte_end":128644,"line_start":2876,"line_end":2876,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128649,"byte_end":128656,"line_start":2877,"line_end":2877,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129431,"byte_end":129436,"line_start":2894,"line_end":2894,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128690,"byte_end":128754,"line_start":2880,"line_end":2880,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128759,"byte_end":128815,"line_start":2881,"line_end":2881,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128820,"byte_end":128823,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128828,"byte_end":128889,"line_start":2883,"line_end":2883,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128894,"byte_end":128959,"line_start":2884,"line_end":2884,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":128964,"byte_end":129023,"line_start":2885,"line_end":2885,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129028,"byte_end":129094,"line_start":2886,"line_end":2886,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129099,"byte_end":129163,"line_start":2887,"line_end":2887,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129168,"byte_end":129225,"line_start":2888,"line_end":2888,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129230,"byte_end":129233,"line_start":2889,"line_end":2889,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129238,"byte_end":129304,"line_start":2890,"line_end":2890,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129309,"byte_end":129323,"line_start":2891,"line_end":2891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129328,"byte_end":129331,"line_start":2892,"line_end":2892,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129336,"byte_end":129423,"line_start":2893,"line_end":2893,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130276,"byte_end":130289,"line_start":2911,"line_end":2911,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":4882},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129500,"byte_end":129564,"line_start":2896,"line_end":2896,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129569,"byte_end":129625,"line_start":2897,"line_end":2897,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129630,"byte_end":129633,"line_start":2898,"line_end":2898,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129638,"byte_end":129702,"line_start":2899,"line_end":2899,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129707,"byte_end":129770,"line_start":2900,"line_end":2900,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129775,"byte_end":129833,"line_start":2901,"line_end":2901,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129838,"byte_end":129904,"line_start":2902,"line_end":2902,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129909,"byte_end":129974,"line_start":2903,"line_end":2903,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":129979,"byte_end":130045,"line_start":2904,"line_end":2904,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130050,"byte_end":130070,"line_start":2905,"line_end":2905,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130075,"byte_end":130078,"line_start":2906,"line_end":2906,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130083,"byte_end":130149,"line_start":2907,"line_end":2907,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130154,"byte_end":130168,"line_start":2908,"line_end":2908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130173,"byte_end":130176,"line_start":2909,"line_end":2909,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130181,"byte_end":130268,"line_start":2910,"line_end":2910,"column_start":5,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131439,"byte_end":131459,"line_start":2950,"line_end":2950,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":4949}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130362,"byte_end":130428,"line_start":2914,"line_end":2914,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130429,"byte_end":130477,"line_start":2915,"line_end":2915,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130478,"byte_end":130548,"line_start":2916,"line_end":2916,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130549,"byte_end":130578,"line_start":2917,"line_end":2917,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130579,"byte_end":130582,"line_start":2918,"line_end":2918,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130583,"byte_end":130670,"line_start":2919,"line_end":2919,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130671,"byte_end":130674,"line_start":2920,"line_end":2920,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130675,"byte_end":130728,"line_start":2921,"line_end":2921,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130729,"byte_end":130790,"line_start":2922,"line_end":2922,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130791,"byte_end":130794,"line_start":2923,"line_end":2923,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130795,"byte_end":130809,"line_start":2924,"line_end":2924,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130810,"byte_end":130813,"line_start":2925,"line_end":2925,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130814,"byte_end":130868,"line_start":2926,"line_end":2926,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130869,"byte_end":130872,"line_start":2927,"line_end":2927,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130873,"byte_end":130880,"line_start":2928,"line_end":2928,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130881,"byte_end":130907,"line_start":2929,"line_end":2929,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130908,"byte_end":130925,"line_start":2930,"line_end":2930,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130926,"byte_end":130929,"line_start":2931,"line_end":2931,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130930,"byte_end":130952,"line_start":2932,"line_end":2932,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130953,"byte_end":130973,"line_start":2933,"line_end":2933,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130974,"byte_end":130979,"line_start":2934,"line_end":2934,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130980,"byte_end":130983,"line_start":2935,"line_end":2935,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":130984,"byte_end":131041,"line_start":2936,"line_end":2936,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131042,"byte_end":131090,"line_start":2937,"line_end":2937,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131091,"byte_end":131142,"line_start":2938,"line_end":2938,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131143,"byte_end":131152,"line_start":2939,"line_end":2939,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131153,"byte_end":131205,"line_start":2940,"line_end":2940,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131206,"byte_end":131229,"line_start":2941,"line_end":2941,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131230,"byte_end":131291,"line_start":2942,"line_end":2942,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131292,"byte_end":131305,"line_start":2943,"line_end":2943,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131306,"byte_end":131315,"line_start":2944,"line_end":2944,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131316,"byte_end":131321,"line_start":2945,"line_end":2945,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131322,"byte_end":131325,"line_start":2946,"line_end":2946,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131326,"byte_end":131389,"line_start":2947,"line_end":2947,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131390,"byte_end":131420,"line_start":2948,"line_end":2948,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131421,"byte_end":131428,"line_start":2949,"line_end":2949,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132437,"byte_end":132450,"line_start":2969,"line_end":2969,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4947},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131488,"byte_end":131568,"line_start":2954,"line_end":2954,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131573,"byte_end":131576,"line_start":2955,"line_end":2955,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131581,"byte_end":131647,"line_start":2956,"line_end":2956,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131652,"byte_end":131717,"line_start":2957,"line_end":2957,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131722,"byte_end":131786,"line_start":2958,"line_end":2958,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131791,"byte_end":131856,"line_start":2959,"line_end":2959,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131861,"byte_end":131909,"line_start":2960,"line_end":2960,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131914,"byte_end":131974,"line_start":2961,"line_end":2961,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":131979,"byte_end":132044,"line_start":2962,"line_end":2962,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132049,"byte_end":132113,"line_start":2963,"line_end":2963,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132118,"byte_end":132121,"line_start":2964,"line_end":2964,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132126,"byte_end":132210,"line_start":2965,"line_end":2965,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132215,"byte_end":132277,"line_start":2966,"line_end":2966,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132282,"byte_end":132354,"line_start":2967,"line_end":2967,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132359,"byte_end":132429,"line_start":2968,"line_end":2968,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133349,"byte_end":133363,"line_start":3005,"line_end":3005,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":4953}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132531,"byte_end":132622,"line_start":2974,"line_end":2974,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132623,"byte_end":132626,"line_start":2975,"line_end":2975,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132627,"byte_end":132680,"line_start":2976,"line_end":2976,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132681,"byte_end":132684,"line_start":2977,"line_end":2977,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132685,"byte_end":132699,"line_start":2978,"line_end":2978,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132700,"byte_end":132703,"line_start":2979,"line_end":2979,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132704,"byte_end":132752,"line_start":2980,"line_end":2980,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132753,"byte_end":132756,"line_start":2981,"line_end":2981,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132757,"byte_end":132764,"line_start":2982,"line_end":2982,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132765,"byte_end":132791,"line_start":2983,"line_end":2983,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132792,"byte_end":132809,"line_start":2984,"line_end":2984,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132810,"byte_end":132813,"line_start":2985,"line_end":2985,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132814,"byte_end":132836,"line_start":2986,"line_end":2986,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132837,"byte_end":132857,"line_start":2987,"line_end":2987,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132858,"byte_end":132863,"line_start":2988,"line_end":2988,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132864,"byte_end":132867,"line_start":2989,"line_end":2989,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132868,"byte_end":132919,"line_start":2990,"line_end":2990,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132920,"byte_end":132968,"line_start":2991,"line_end":2991,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":132969,"byte_end":133020,"line_start":2992,"line_end":2992,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133021,"byte_end":133030,"line_start":2993,"line_end":2993,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133031,"byte_end":133083,"line_start":2994,"line_end":2994,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133084,"byte_end":133148,"line_start":2995,"line_end":2995,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133149,"byte_end":133158,"line_start":2996,"line_end":2996,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133159,"byte_end":133164,"line_start":2997,"line_end":2997,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133165,"byte_end":133168,"line_start":2998,"line_end":2998,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133169,"byte_end":133208,"line_start":2999,"line_end":2999,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133209,"byte_end":133239,"line_start":3000,"line_end":3000,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133240,"byte_end":133270,"line_start":3001,"line_end":3001,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133271,"byte_end":133299,"line_start":3002,"line_end":3002,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133300,"byte_end":133330,"line_start":3003,"line_end":3003,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133331,"byte_end":133338,"line_start":3004,"line_end":3004,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4953},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133791,"byte_end":133801,"line_start":3022,"line_end":3022,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4951},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133392,"byte_end":133457,"line_start":3009,"line_end":3009,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133462,"byte_end":133504,"line_start":3010,"line_end":3010,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133509,"byte_end":133512,"line_start":3011,"line_end":3011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133517,"byte_end":133531,"line_start":3012,"line_end":3012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133536,"byte_end":133539,"line_start":3013,"line_end":3013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133544,"byte_end":133551,"line_start":3014,"line_end":3014,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133556,"byte_end":133582,"line_start":3015,"line_end":3015,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133587,"byte_end":133590,"line_start":3016,"line_end":3016,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133595,"byte_end":133620,"line_start":3017,"line_end":3017,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133625,"byte_end":133650,"line_start":3018,"line_end":3018,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133655,"byte_end":133713,"line_start":3019,"line_end":3019,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133718,"byte_end":133771,"line_start":3020,"line_end":3020,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133776,"byte_end":133783,"line_start":3021,"line_end":3021,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134229,"byte_end":134246,"line_start":3034,"line_end":3034,"column_start":11,"column_end":28},"name":"ParallelDrainFull","qualname":"::iter::ParallelDrainFull","value":"ParallelDrainFull","parent":null,"children":[{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958}],"decl_id":null,"docs":" `ParallelDrainFull` creates a parallel iterator that moves all items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainFull` creates a parallel iterator that moves all items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133885,"byte_end":133957,"line_start":3027,"line_end":3027,"column_start":1,"column_end":73}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":133958,"byte_end":134018,"line_start":3028,"line_end":3028,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134019,"byte_end":134022,"line_start":3029,"line_end":3029,"column_start":1,"column_end":4}},{"value":"/ Types which are indexable typically implement [`ParallelDrainRange`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134023,"byte_end":134095,"line_start":3030,"line_end":3030,"column_start":1,"column_end":73}},{"value":"/ instead, where you can drain fully with `par_drain(..)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134096,"byte_end":134156,"line_start":3031,"line_end":3031,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134157,"byte_end":134160,"line_start":3032,"line_end":3032,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainRange`]: trait.ParallelDrainRange.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134161,"byte_end":134218,"line_start":3033,"line_end":3033,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134324,"byte_end":134328,"line_start":3036,"line_end":3036,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainFull::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4955},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134253,"byte_end":134314,"line_start":3035,"line_end":3035,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134509,"byte_end":134513,"line_start":3040,"line_end":3040,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainFull::Item","value":"type Item: Send;","parent":{"krate":0,"index":4955},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134372,"byte_end":134433,"line_start":3038,"line_end":3038,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134438,"byte_end":134499,"line_start":3039,"line_end":3039,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135453,"byte_end":135462,"line_start":3067,"line_end":3067,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainFull::par_drain","value":"pub fn par_drain(Self) -> Self::Iter","parent":{"krate":0,"index":4955},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over an entire collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over an entire collection.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134526,"byte_end":134593,"line_start":3042,"line_end":3042,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134598,"byte_end":134601,"line_start":3043,"line_end":3043,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items are removed, even if the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134606,"byte_end":134674,"line_start":3044,"line_end":3044,"column_start":5,"column_end":73}},{"value":"/ iterator was not fully consumed. If the iterator is leaked, for example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134679,"byte_end":134754,"line_start":3045,"line_end":3045,"column_start":5,"column_end":80}},{"value":"/ using `std::mem::forget`, it is unspecified how many items are removed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134759,"byte_end":134834,"line_start":3046,"line_end":3046,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134839,"byte_end":134842,"line_start":3047,"line_end":3047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134847,"byte_end":134861,"line_start":3048,"line_end":3048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134866,"byte_end":134869,"line_start":3049,"line_end":3049,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134874,"byte_end":134881,"line_start":3050,"line_end":3050,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134886,"byte_end":134912,"line_start":3051,"line_end":3051,"column_start":5,"column_end":31}},{"value":"/ use std::collections::{BinaryHeap, HashSet};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134917,"byte_end":134965,"line_start":3052,"line_end":3052,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134970,"byte_end":134973,"line_start":3053,"line_end":3053,"column_start":5,"column_end":8}},{"value":"/ let squares: HashSet<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":134978,"byte_end":135043,"line_start":3054,"line_end":3054,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135048,"byte_end":135051,"line_start":3055,"line_end":3055,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_> = squares.iter().copied().collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135056,"byte_end":135124,"line_start":3056,"line_end":3056,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135129,"byte_end":135144,"line_start":3057,"line_end":3057,"column_start":5,"column_end":20}},{"value":"/     // heaps are drained in arbitrary order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135149,"byte_end":135196,"line_start":3058,"line_end":3058,"column_start":5,"column_end":52}},{"value":"/     heap.par_drain()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135201,"byte_end":135225,"line_start":3059,"line_end":3059,"column_start":5,"column_end":29}},{"value":"/         .inspect(|x| assert!(squares.contains(x)))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135230,"byte_end":135284,"line_start":3060,"line_end":3060,"column_start":5,"column_end":59}},{"value":"/         .count(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135289,"byte_end":135310,"line_start":3061,"line_end":3061,"column_start":5,"column_end":26}},{"value":"/     squares.len(),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135315,"byte_end":135337,"line_start":3062,"line_end":3062,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135342,"byte_end":135348,"line_start":3063,"line_end":3063,"column_start":5,"column_end":11}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135353,"byte_end":135382,"line_start":3064,"line_end":3064,"column_start":5,"column_end":34}},{"value":"/ assert!(heap.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135387,"byte_end":135433,"line_start":3065,"line_end":3065,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135438,"byte_end":135445,"line_start":3066,"line_end":3066,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135782,"byte_end":135800,"line_start":3076,"line_end":3076,"column_start":11,"column_end":29},"name":"ParallelDrainRange","qualname":"::iter::ParallelDrainRange","value":"ParallelDrainRange<Idx = usize>","parent":null,"children":[{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963}],"decl_id":null,"docs":" `ParallelDrainRange` creates a parallel iterator that moves a range of items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainRange` creates a parallel iterator that moves a range of items","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135487,"byte_end":135567,"line_start":3070,"line_end":3070,"column_start":1,"column_end":81}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135568,"byte_end":135628,"line_start":3071,"line_end":3071,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135629,"byte_end":135632,"line_start":3072,"line_end":3072,"column_start":1,"column_end":4}},{"value":"/ Types which are not indexable may implement [`ParallelDrainFull`] instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135633,"byte_end":135711,"line_start":3073,"line_end":3073,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135712,"byte_end":135715,"line_start":3074,"line_end":3074,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainFull`]: trait.ParallelDrainFull.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135716,"byte_end":135771,"line_start":3075,"line_end":3075,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135891,"byte_end":135895,"line_start":3078,"line_end":3078,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainRange::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4959},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135820,"byte_end":135881,"line_start":3077,"line_end":3077,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136076,"byte_end":136080,"line_start":3082,"line_end":3082,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainRange::Item","value":"type Item: Send;","parent":{"krate":0,"index":4959},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":135939,"byte_end":136000,"line_start":3080,"line_end":3080,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136005,"byte_end":136066,"line_start":3081,"line_end":3081,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138291,"byte_end":138300,"line_start":3142,"line_end":3142,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainRange::par_drain","value":"pub fn par_drain<R: RangeBounds<Idx>>(Self, R) -> Self::Iter","parent":{"krate":0,"index":4959},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over a range of the collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over a range of the collection.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136093,"byte_end":136165,"line_start":3084,"line_end":3084,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136170,"byte_end":136173,"line_start":3085,"line_end":3085,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items in the range are removed, even","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136178,"byte_end":136252,"line_start":3086,"line_end":3086,"column_start":5,"column_end":79}},{"value":"/ if the iterator was not fully consumed. If the iterator is leaked, for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136257,"byte_end":136331,"line_start":3087,"line_end":3087,"column_start":5,"column_end":79}},{"value":"/ example using `std::mem::forget`, it is unspecified how many items are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136336,"byte_end":136410,"line_start":3088,"line_end":3088,"column_start":5,"column_end":79}},{"value":"/ removed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136415,"byte_end":136427,"line_start":3089,"line_end":3089,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136432,"byte_end":136435,"line_start":3090,"line_end":3090,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136440,"byte_end":136454,"line_start":3091,"line_end":3091,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136459,"byte_end":136462,"line_start":3092,"line_end":3092,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136467,"byte_end":136474,"line_start":3093,"line_end":3093,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136479,"byte_end":136505,"line_start":3094,"line_end":3094,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136510,"byte_end":136513,"line_start":3095,"line_end":3095,"column_start":5,"column_end":8}},{"value":"/ let squares: Vec<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136518,"byte_end":136579,"line_start":3096,"line_end":3096,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136584,"byte_end":136587,"line_start":3097,"line_end":3097,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFull\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136592,"byte_end":136618,"line_start":3098,"line_end":3098,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136623,"byte_end":136657,"line_start":3099,"line_end":3099,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136662,"byte_end":136691,"line_start":3100,"line_end":3100,"column_start":5,"column_end":34}},{"value":"/            .eq(squares.par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136696,"byte_end":136745,"line_start":3101,"line_end":3101,"column_start":5,"column_end":54}},{"value":"/ assert!(vec.is_empty());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136750,"byte_end":136778,"line_start":3102,"line_end":3102,"column_start":5,"column_end":33}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136783,"byte_end":136828,"line_start":3103,"line_end":3103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136833,"byte_end":136836,"line_start":3104,"line_end":3104,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFrom\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136841,"byte_end":136867,"line_start":3105,"line_end":3105,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136872,"byte_end":136906,"line_start":3106,"line_end":3106,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(5..)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136911,"byte_end":136941,"line_start":3107,"line_end":3107,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[5..].par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":136946,"byte_end":137000,"line_start":3108,"line_end":3108,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[..5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137005,"byte_end":137045,"line_start":3109,"line_end":3109,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137050,"byte_end":137095,"line_start":3110,"line_end":3110,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137100,"byte_end":137103,"line_start":3111,"line_end":3111,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeTo\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137108,"byte_end":137132,"line_start":3112,"line_end":3112,"column_start":5,"column_end":29}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137137,"byte_end":137171,"line_start":3113,"line_end":3113,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137176,"byte_end":137206,"line_start":3114,"line_end":3114,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[..5].par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137211,"byte_end":137265,"line_start":3115,"line_end":3115,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[5..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137270,"byte_end":137310,"line_start":3116,"line_end":3116,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137315,"byte_end":137360,"line_start":3117,"line_end":3117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137365,"byte_end":137368,"line_start":3118,"line_end":3118,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeToInclusive\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137373,"byte_end":137406,"line_start":3119,"line_end":3119,"column_start":5,"column_end":38}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137411,"byte_end":137445,"line_start":3120,"line_end":3120,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..=5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137450,"byte_end":137481,"line_start":3121,"line_end":3121,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[..=5].par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137486,"byte_end":137541,"line_start":3122,"line_end":3122,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..], &squares[6..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137546,"byte_end":137586,"line_start":3123,"line_end":3123,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137591,"byte_end":137636,"line_start":3124,"line_end":3124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137641,"byte_end":137644,"line_start":3125,"line_end":3125,"column_start":5,"column_end":8}},{"value":"/ println!(\"Range\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137649,"byte_end":137671,"line_start":3126,"line_end":3126,"column_start":5,"column_end":27}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137676,"byte_end":137710,"line_start":3127,"line_end":3127,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..7)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137715,"byte_end":137746,"line_start":3128,"line_end":3128,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[3..7].par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137751,"byte_end":137806,"line_start":3129,"line_end":3129,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137811,"byte_end":137852,"line_start":3130,"line_end":3130,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[7..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137857,"byte_end":137898,"line_start":3131,"line_end":3131,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137903,"byte_end":137948,"line_start":3132,"line_end":3132,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137953,"byte_end":137956,"line_start":3133,"line_end":3133,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeInclusive\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137961,"byte_end":137992,"line_start":3134,"line_end":3134,"column_start":5,"column_end":36}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":137997,"byte_end":138031,"line_start":3135,"line_end":3135,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..=7)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138036,"byte_end":138068,"line_start":3136,"line_end":3136,"column_start":5,"column_end":37}},{"value":"/            .eq(squares[3..=7].par_iter().copied()));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138073,"byte_end":138129,"line_start":3137,"line_end":3137,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138134,"byte_end":138175,"line_start":3138,"line_end":3138,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[8..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138180,"byte_end":138221,"line_start":3139,"line_end":3139,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138226,"byte_end":138271,"line_start":3140,"line_end":3140,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138276,"byte_end":138283,"line_start":3141,"line_end":3141,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138985,"byte_end":138988,"line_start":3166,"line_end":3166,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":8357},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138864,"byte_end":138893,"line_start":3163,"line_end":3163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138898,"byte_end":138901,"line_start":3164,"line_end":3164,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":138906,"byte_end":138970,"line_start":3165,"line_end":3165,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139030,"byte_end":139036,"line_start":3169,"line_end":3169,"column_start":14,"column_end":20},"name":"Output","qualname":"::iter::private::Try::Output","value":"type Output;","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139051,"byte_end":139059,"line_start":3170,"line_end":3170,"column_start":14,"column_end":22},"name":"Residual","qualname":"::iter::private::Try::Residual","value":"type Residual;","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139073,"byte_end":139084,"line_start":3172,"line_end":3172,"column_start":12,"column_end":23},"name":"from_output","qualname":"::iter::private::Try::from_output","value":"pub fn from_output(Self::Output) -> Self","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139128,"byte_end":139141,"line_start":3174,"line_end":3174,"column_start":12,"column_end":25},"name":"from_residual","qualname":"::iter::private::Try::from_residual","value":"pub fn from_residual(Self::Residual) -> Self","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139189,"byte_end":139195,"line_start":3176,"line_end":3176,"column_start":12,"column_end":18},"name":"branch","qualname":"::iter::private::Try::branch","value":"pub fn branch(Self) -> ControlFlow<Self::Residual, Self::Output>","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":8363},{"krate":0,"index":8366},{"krate":0,"index":8369},{"krate":0,"index":5037},{"krate":0,"index":5042},{"krate":0,"index":5048},{"krate":0,"index":8372},{"krate":0,"index":8376},{"krate":0,"index":5055},{"krate":0,"index":5059},{"krate":0,"index":8388},{"krate":0,"index":8380},{"krate":0,"index":8395},{"krate":0,"index":8399},{"krate":0,"index":5065},{"krate":0,"index":8411},{"krate":0,"index":8403},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5080}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432286,"byte_end":432340,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432341,"byte_end":432344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432345,"byte_end":432423,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432424,"byte_end":432462,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432463,"byte_end":432466,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432467,"byte_end":432530,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433138,"byte_end":433146,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8365}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432630,"byte_end":432706,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432707,"byte_end":432710,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432711,"byte_end":432793,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432794,"byte_end":432797,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432798,"byte_end":432861,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432862,"byte_end":432865,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432866,"byte_end":432935,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":432936,"byte_end":433016,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433017,"byte_end":433102,"line_start":20,"line_end":20,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":8372},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434788,"byte_end":434792,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8375}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434293,"byte_end":434375,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434376,"byte_end":434379,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434380,"byte_end":434462,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434463,"byte_end":434466,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434467,"byte_end":434525,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434526,"byte_end":434529,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434530,"byte_end":434599,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434600,"byte_end":434680,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434681,"byte_end":434759,"line_start":85,"line_end":85,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435826,"byte_end":435833,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8398}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435308,"byte_end":435398,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435399,"byte_end":435402,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435403,"byte_end":435485,"line_start":117,"line_end":117,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435486,"byte_end":435489,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435490,"byte_end":435552,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435553,"byte_end":435556,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435557,"byte_end":435626,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435627,"byte_end":435707,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":435708,"byte_end":435797,"line_start":123,"line_end":123,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":5089},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":5090},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5114},{"krate":0,"index":5117},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5126}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":437725,"byte_end":437793,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":437794,"byte_end":437863,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\prelude.rs","byte_start":437864,"byte_end":437933,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":8418},{"krate":0,"index":8421},{"krate":0,"index":8424},{"krate":0,"index":5144},{"krate":0,"index":5149},{"krate":0,"index":5152},{"krate":0,"index":5157},{"krate":0,"index":5169},{"krate":0,"index":5170},{"krate":0,"index":5173},{"krate":0,"index":5176},{"krate":0,"index":5182},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5193},{"krate":0,"index":8429},{"krate":0,"index":8433},{"krate":0,"index":8439},{"krate":0,"index":8446},{"krate":0,"index":8450},{"krate":0,"index":8456},{"krate":0,"index":8463},{"krate":0,"index":8467},{"krate":0,"index":8473},{"krate":0,"index":8480},{"krate":0,"index":8484},{"krate":0,"index":8490},{"krate":0,"index":8497},{"krate":0,"index":8501},{"krate":0,"index":8507},{"krate":0,"index":8514},{"krate":0,"index":8518},{"krate":0,"index":8524},{"krate":0,"index":8531},{"krate":0,"index":8535},{"krate":0,"index":8541},{"krate":0,"index":8548},{"krate":0,"index":8552},{"krate":0,"index":8558},{"krate":0,"index":8565},{"krate":0,"index":8567},{"krate":0,"index":8574},{"krate":0,"index":8580},{"krate":0,"index":8582},{"krate":0,"index":8589},{"krate":0,"index":8595},{"krate":0,"index":8597},{"krate":0,"index":8604},{"krate":0,"index":8610},{"krate":0,"index":8612},{"krate":0,"index":8619},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5200}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438470,"byte_end":438523,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438524,"byte_end":438577,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438578,"byte_end":438581,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438582,"byte_end":438660,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438661,"byte_end":438704,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438705,"byte_end":438708,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438709,"byte_end":438716,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438717,"byte_end":438743,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438744,"byte_end":438747,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438748,"byte_end":438787,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438788,"byte_end":438818,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438819,"byte_end":438822,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438823,"byte_end":438872,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438873,"byte_end":438914,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438915,"byte_end":438922,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438923,"byte_end":438926,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":438927,"byte_end":438997,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8418},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439869,"byte_end":439873,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8420}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types and `char`.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types and `char`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439129,"byte_end":439210,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439211,"byte_end":439214,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439215,"byte_end":439283,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439284,"byte_end":439349,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439350,"byte_end":439353,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439354,"byte_end":439361,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439362,"byte_end":439388,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439389,"byte_end":439392,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439393,"byte_end":439433,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439434,"byte_end":439472,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439473,"byte_end":439538,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439539,"byte_end":439581,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439582,"byte_end":439620,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439621,"byte_end":439624,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439625,"byte_end":439660,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439661,"byte_end":439726,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439727,"byte_end":439769,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439770,"byte_end":439799,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439800,"byte_end":439803,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439804,"byte_end":439825,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":439826,"byte_end":439833,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441170,"byte_end":441182,"line_start":92,"line_end":92,"column_start":15,"column_end":27},"name":"RangeInteger","qualname":"::range::private::RangeInteger","value":"RangeInteger: Sized + Send","parent":null,"children":[{"krate":0,"index":8427},{"krate":0,"index":5160},{"krate":0,"index":5162}],"decl_id":null,"docs":" Implementation details of `ParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `ParallelIterator for Iter<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441092,"byte_end":441155,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5160},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441236,"byte_end":441251,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"drive_unindexed","qualname":"::range::private::RangeInteger::drive_unindexed","value":"pub fn drive_unindexed<C>(Iter<Self>, C) -> C::Result where\nC: UnindexedConsumer<Self>","parent":{"krate":0,"index":5159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5162},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441365,"byte_end":441372,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"opt_len","qualname":"::range::private::RangeInteger::opt_len","value":"pub fn opt_len(&Iter<Self>) -> Option<usize>","parent":{"krate":0,"index":5159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5163},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441506,"byte_end":441525,"line_start":103,"line_end":103,"column_start":15,"column_end":34},"name":"IndexedRangeInteger","qualname":"::range::private::IndexedRangeInteger","value":"IndexedRangeInteger: RangeInteger","parent":null,"children":[{"krate":0,"index":8428},{"krate":0,"index":5164},{"krate":0,"index":5166},{"krate":0,"index":5167}],"decl_id":null,"docs":" Implementation details of `IndexedParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `IndexedParallelIterator for Iter<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441421,"byte_end":441491,"line_start":102,"line_end":102,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5164},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441579,"byte_end":441584,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"drive","qualname":"::range::private::IndexedRangeInteger::drive","value":"pub fn drive<C>(Iter<Self>, C) -> C::Result where C: Consumer<Self>","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5166},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441689,"byte_end":441692,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"len","qualname":"::range::private::IndexedRangeInteger::len","value":"pub fn len(&Iter<Self>) -> usize","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441734,"byte_end":441747,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"with_producer","qualname":"::range::private::IndexedRangeInteger::with_producer","value":"pub fn with_producer<CB>(Iter<Self>, CB) -> CB::Output where\nCB: ProducerCallback<Self>","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":5212},{"krate":0,"index":8631},{"krate":0,"index":8634},{"krate":0,"index":8637},{"krate":0,"index":5215},{"krate":0,"index":5218},{"krate":0,"index":5223},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5242},{"krate":0,"index":5248},{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":8648},{"krate":0,"index":8642},{"krate":0,"index":8660},{"krate":0,"index":8654},{"krate":0,"index":8672},{"krate":0,"index":8666},{"krate":0,"index":8684},{"krate":0,"index":8678},{"krate":0,"index":8690},{"krate":0,"index":8695},{"krate":0,"index":8700},{"krate":0,"index":8705},{"krate":0,"index":8710},{"krate":0,"index":8715},{"krate":0,"index":8720},{"krate":0,"index":8725},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5264}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":451931,"byte_end":451994,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":451995,"byte_end":452049,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452050,"byte_end":452053,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452054,"byte_end":452132,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452133,"byte_end":452176,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452177,"byte_end":452180,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452181,"byte_end":452188,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452189,"byte_end":452215,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452216,"byte_end":452219,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452220,"byte_end":452260,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452261,"byte_end":452292,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452293,"byte_end":452296,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452297,"byte_end":452346,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452347,"byte_end":452389,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452390,"byte_end":452397,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452398,"byte_end":452401,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452402,"byte_end":452481,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":8631},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453335,"byte_end":453339,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8633}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types and `char`.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types and `char`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452579,"byte_end":452671,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452672,"byte_end":452675,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452676,"byte_end":452744,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, `i16`, and `char`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452745,"byte_end":452816,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452817,"byte_end":452820,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452821,"byte_end":452828,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452829,"byte_end":452855,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452856,"byte_end":452859,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452860,"byte_end":452899,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452900,"byte_end":452937,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":452938,"byte_end":453003,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453004,"byte_end":453046,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453047,"byte_end":453083,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453084,"byte_end":453087,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453088,"byte_end":453126,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453127,"byte_end":453192,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453193,"byte_end":453235,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453236,"byte_end":453265,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453266,"byte_end":453269,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453270,"byte_end":453291,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453292,"byte_end":453299,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455231,"byte_end":455243,"line_start":98,"line_end":98,"column_start":15,"column_end":27},"name":"RangeInteger","qualname":"::range_inclusive::private::RangeInteger","value":"RangeInteger: Sized + Send","parent":null,"children":[{"krate":0,"index":8640},{"krate":0,"index":5226},{"krate":0,"index":5228}],"decl_id":null,"docs":" Implementation details of `ParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `ParallelIterator for Iter<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455153,"byte_end":455216,"line_start":97,"line_end":97,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455297,"byte_end":455312,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"drive_unindexed","qualname":"::range_inclusive::private::RangeInteger::drive_unindexed","value":"pub fn drive_unindexed<C>(Iter<Self>, C) -> C::Result where\nC: UnindexedConsumer<Self>","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455426,"byte_end":455433,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"opt_len","qualname":"::range_inclusive::private::RangeInteger::opt_len","value":"pub fn opt_len(&Iter<Self>) -> Option<usize>","parent":{"krate":0,"index":5225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455567,"byte_end":455586,"line_start":109,"line_end":109,"column_start":15,"column_end":34},"name":"IndexedRangeInteger","qualname":"::range_inclusive::private::IndexedRangeInteger","value":"IndexedRangeInteger: RangeInteger","parent":null,"children":[{"krate":0,"index":8641},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5233}],"decl_id":null,"docs":" Implementation details of `IndexedParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `IndexedParallelIterator for Iter<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455482,"byte_end":455552,"line_start":108,"line_end":108,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455640,"byte_end":455645,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"drive","qualname":"::range_inclusive::private::IndexedRangeInteger::drive","value":"pub fn drive<C>(Iter<Self>, C) -> C::Result where C: Consumer<Self>","parent":{"krate":0,"index":5229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455750,"byte_end":455753,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"len","qualname":"::range_inclusive::private::IndexedRangeInteger::len","value":"pub fn len(&Iter<Self>) -> usize","parent":{"krate":0,"index":5229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455795,"byte_end":455808,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"with_producer","qualname":"::range_inclusive::private::IndexedRangeInteger::with_producer","value":"pub fn with_producer<CB>(Iter<Self>, CB) -> CB::Output where\nCB: ProducerCallback<Self>","parent":{"krate":0,"index":5229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","parent":null,"children":[{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5276},{"krate":0,"index":8736},{"krate":0,"index":8739},{"krate":0,"index":8742},{"krate":0,"index":5279},{"krate":0,"index":8752},{"krate":0,"index":8745},{"krate":0,"index":8758},{"krate":0,"index":8762},{"krate":0,"index":5285},{"krate":0,"index":5289},{"krate":0,"index":8774},{"krate":0,"index":8766},{"krate":0,"index":8781},{"krate":0,"index":8785},{"krate":0,"index":5296},{"krate":0,"index":8797},{"krate":0,"index":8789},{"krate":0,"index":5303}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463353,"byte_end":463407,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463408,"byte_end":463411,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463412,"byte_end":463490,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463491,"byte_end":463529,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463530,"byte_end":463533,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463534,"byte_end":463597,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8736},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463763,"byte_end":463771,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8738}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463692,"byte_end":463727,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8758},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464213,"byte_end":464217,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8761}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464123,"byte_end":464184,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8781},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464839,"byte_end":464846,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8784}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464752,"byte_end":464810,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":5314},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5460},{"krate":0,"index":5548},{"krate":0,"index":5626},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5810},{"krate":0,"index":5813},{"krate":0,"index":5816},{"krate":0,"index":5819},{"krate":0,"index":5829},{"krate":0,"index":5832},{"krate":0,"index":5861},{"krate":0,"index":5864},{"krate":0,"index":5870},{"krate":0,"index":8906},{"krate":0,"index":8910},{"krate":0,"index":5876},{"krate":0,"index":5880},{"krate":0,"index":5887},{"krate":0,"index":5895},{"krate":0,"index":5899},{"krate":0,"index":8914},{"krate":0,"index":8919},{"krate":0,"index":5906},{"krate":0,"index":5910},{"krate":0,"index":5917},{"krate":0,"index":5925},{"krate":0,"index":5930},{"krate":0,"index":8923},{"krate":0,"index":8927},{"krate":0,"index":5937},{"krate":0,"index":5944},{"krate":0,"index":5952},{"krate":0,"index":5956},{"krate":0,"index":5963},{"krate":0,"index":5969},{"krate":0,"index":5974},{"krate":0,"index":5979},{"krate":0,"index":5986},{"krate":0,"index":5997},{"krate":0,"index":6003},{"krate":0,"index":6008},{"krate":0,"index":6015}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466763,"byte_end":466815,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466816,"byte_end":466819,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466820,"byte_end":466898,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466899,"byte_end":466937,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466938,"byte_end":466941,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":466942,"byte_end":467003,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8804},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501617,"byte_end":501623,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8807},{"krate":0,"index":8808}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501518,"byte_end":501588,"line_start":6,"line_end":6,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8813},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":503733,"byte_end":503744,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"ChunksExact","qualname":"::slice::chunks::ChunksExact","value":"ChunksExact {  }","parent":null,"children":[{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":503634,"byte_end":503704,"line_start":92,"line_end":92,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504361,"byte_end":504370,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'data [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504181,"byte_end":504251,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504256,"byte_end":504331,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504336,"byte_end":504349,"line_start":114,"line_end":114,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8823},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506321,"byte_end":506330,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::chunks::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":8826},{"krate":0,"index":8827}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506224,"byte_end":506292,"line_start":193,"line_end":193,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":8832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508377,"byte_end":508391,"line_start":275,"line_end":275,"column_start":12,"column_end":26},"name":"ChunksExactMut","qualname":"::slice::chunks::ChunksExactMut","value":"ChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8837}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508280,"byte_end":508348,"line_start":273,"line_end":273,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509394,"byte_end":509408,"line_start":302,"line_end":302,"column_start":12,"column_end":26},"name":"into_remainder","qualname":"<ChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508847,"byte_end":508917,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508922,"byte_end":508997,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509002,"byte_end":509015,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509020,"byte_end":509023,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Note that this has to consume `self` to return the original lifetime of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509028,"byte_end":509103,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ the data, which prevents this from actually being used as a parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509108,"byte_end":509180,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ iterator since that also consumes. This method is provided for parity","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509185,"byte_end":509258,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ with `std::iter::ChunksExactMut`, but consider calling `remainder()` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509263,"byte_end":509338,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ `take_remainder()` as alternatives.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509343,"byte_end":509382,"line_start":301,"line_end":301,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509802,"byte_end":509811,"line_start":312,"line_end":312,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExactMut>::remainder","value":"pub fn remainder(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509463,"byte_end":509533,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509538,"byte_end":509613,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509618,"byte_end":509631,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509636,"byte_end":509639,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Consider `take_remainder()` if you need access to the data with its","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509644,"byte_end":509715,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ original lifetime, rather than borrowing through `&mut self` here.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509720,"byte_end":509790,"line_start":311,"line_end":311,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5432},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510090,"byte_end":510104,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"take_remainder","qualname":"<ChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements. Subsequent calls will return an empty slice.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509865,"byte_end":509935,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":509940,"byte_end":510015,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ elements. Subsequent calls will return an empty slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510020,"byte_end":510078,"line_start":318,"line_end":318,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8864},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576053,"byte_end":576060,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RChunks","qualname":"::slice::rchunks::RChunks","value":"RChunks {  }","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice, starting at the end.\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice, starting at the end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":575932,"byte_end":576024,"line_start":5,"line_end":5,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":8873},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578209,"byte_end":578221,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"RChunksExact","qualname":"::slice::rchunks::RChunksExact","value":"RChunksExact {  }","parent":null,"children":[{"krate":0,"index":8876},{"krate":0,"index":8877},{"krate":0,"index":8878}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice, starting at the end.\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice, starting at the end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578088,"byte_end":578180,"line_start":91,"line_end":91,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578802,"byte_end":578811,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"remainder","qualname":"<RChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'data [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578622,"byte_end":578692,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578697,"byte_end":578772,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578777,"byte_end":578790,"line_start":112,"line_end":112,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8883},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580814,"byte_end":580824,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"RChunksMut","qualname":"::slice::rchunks::RChunksMut","value":"RChunksMut {  }","parent":null,"children":[{"krate":0,"index":8886},{"krate":0,"index":8887}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice, starting at the end.\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice, starting at the end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580695,"byte_end":580785,"line_start":191,"line_end":191,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":8892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":582908,"byte_end":582923,"line_start":273,"line_end":273,"column_start":12,"column_end":27},"name":"RChunksExactMut","qualname":"::slice::rchunks::RChunksExactMut","value":"RChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8897}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice, starting at the end.\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice, starting at the end.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":582789,"byte_end":582879,"line_start":271,"line_end":271,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583891,"byte_end":583905,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"into_remainder","qualname":"<RChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583343,"byte_end":583413,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583418,"byte_end":583493,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583498,"byte_end":583511,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583516,"byte_end":583519,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this has to consume `self` to return the original lifetime of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583524,"byte_end":583599,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ the data, which prevents this from actually being used as a parallel","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583604,"byte_end":583676,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ iterator since that also consumes. This method is provided for parity","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583681,"byte_end":583754,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ with `std::iter::RChunksExactMut`, but consider calling `remainder()` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583759,"byte_end":583835,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ `take_remainder()` as alternatives.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583840,"byte_end":583879,"line_start":298,"line_end":298,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584299,"byte_end":584308,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"remainder","qualname":"<RChunksExactMut>::remainder","value":"pub fn remainder(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583960,"byte_end":584030,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584035,"byte_end":584110,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584115,"byte_end":584128,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584133,"byte_end":584136,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Consider `take_remainder()` if you need access to the data with its","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584141,"byte_end":584212,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ original lifetime, rather than borrowing through `&mut self` here.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584217,"byte_end":584287,"line_start":308,"line_end":308,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584587,"byte_end":584601,"line_start":316,"line_end":316,"column_start":12,"column_end":26},"name":"take_remainder","qualname":"<RChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements. Subsequent calls will return an empty slice.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584362,"byte_end":584432,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584437,"byte_end":584512,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ elements. Subsequent calls will return an empty slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584517,"byte_end":584575,"line_start":315,"line_end":315,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":5819},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467502,"byte_end":467515,"line_start":29,"line_end":29,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467456,"byte_end":467491,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5821},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467634,"byte_end":467651,"line_start":32,"line_end":32,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467531,"byte_end":467600,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467605,"byte_end":467626,"line_start":31,"line_end":31,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5822},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468084,"byte_end":468093,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467673,"byte_end":467746,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467751,"byte_end":467775,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467780,"byte_end":467783,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467788,"byte_end":467802,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467807,"byte_end":467810,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467815,"byte_end":467822,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467827,"byte_end":467853,"line_start":40,"line_end":40,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467858,"byte_end":467910,"line_start":41,"line_end":41,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467915,"byte_end":467946,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":467951,"byte_end":468004,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468009,"byte_end":468024,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468029,"byte_end":468064,"line_start":45,"line_end":45,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468069,"byte_end":468076,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468627,"byte_end":468638,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468299,"byte_end":468368,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468373,"byte_end":468412,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468417,"byte_end":468420,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468425,"byte_end":468439,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468444,"byte_end":468447,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468452,"byte_end":468459,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468464,"byte_end":468490,"line_start":63,"line_end":63,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468495,"byte_end":468556,"line_start":64,"line_end":64,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468561,"byte_end":468607,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468612,"byte_end":468619,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5825},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469351,"byte_end":469361,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468795,"byte_end":468864,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468869,"byte_end":468917,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468922,"byte_end":468925,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":468930,"byte_end":468995,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469000,"byte_end":469071,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469076,"byte_end":469121,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469126,"byte_end":469129,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469134,"byte_end":469148,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469153,"byte_end":469156,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469161,"byte_end":469168,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469173,"byte_end":469199,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469204,"byte_end":469269,"line_start":85,"line_end":85,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469274,"byte_end":469331,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469336,"byte_end":469343,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470100,"byte_end":470116,"line_start":107,"line_end":107,"column_start":8,"column_end":24},"name":"par_chunks_exact","qualname":"::slice::ParallelSlice::par_chunks_exact","value":"pub fn par_chunks_exact(&Self, usize) -> ChunksExact<, T>","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469541,"byte_end":469602,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469607,"byte_end":469655,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469660,"byte_end":469663,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469668,"byte_end":469737,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469742,"byte_end":469807,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469812,"byte_end":469870,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469875,"byte_end":469878,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469883,"byte_end":469897,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469902,"byte_end":469905,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469910,"byte_end":469917,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469922,"byte_end":469948,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks_exact(2).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":469953,"byte_end":470024,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4]]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470029,"byte_end":470080,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470085,"byte_end":470092,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470884,"byte_end":470895,"line_start":126,"line_end":126,"column_start":8,"column_end":19},"name":"par_rchunks","qualname":"::slice::ParallelSlice::par_rchunks","value":"pub fn par_rchunks(&Self, usize) -> RChunks<, T>","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of `self` at a time,\n starting at the end. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of `self` at a time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470306,"byte_end":470393,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/ starting at the end. The chunks do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470398,"byte_end":470449,"line_start":113,"line_end":113,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470454,"byte_end":470457,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470462,"byte_end":470527,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470532,"byte_end":470603,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470608,"byte_end":470653,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470658,"byte_end":470661,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470666,"byte_end":470680,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470685,"byte_end":470688,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470693,"byte_end":470700,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470705,"byte_end":470731,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_rchunks(2).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470736,"byte_end":470802,"line_start":123,"line_end":123,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(chunks, vec![&[4, 5][..], &[2, 3], &[1]]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470807,"byte_end":470864,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":470869,"byte_end":470876,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471658,"byte_end":471675,"line_start":145,"line_end":145,"column_start":8,"column_end":25},"name":"par_rchunks_exact","qualname":"::slice::ParallelSlice::par_rchunks_exact","value":"pub fn par_rchunks_exact(&Self, usize) -> RChunksExact<, T>","parent":{"krate":0,"index":5819},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of `self` at a time,\n starting at the end. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of `self` at a time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471077,"byte_end":471156,"line_start":131,"line_end":131,"column_start":5,"column_end":84}},{"value":"/ starting at the end. The chunks do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471161,"byte_end":471212,"line_start":132,"line_end":132,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471217,"byte_end":471220,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471225,"byte_end":471294,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471299,"byte_end":471364,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471369,"byte_end":471427,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471432,"byte_end":471435,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471440,"byte_end":471454,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471459,"byte_end":471462,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471467,"byte_end":471474,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471479,"byte_end":471505,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_rchunks_exact(2).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471510,"byte_end":471582,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(chunks, vec![&[4, 5][..], &[2, 3]]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471587,"byte_end":471638,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471643,"byte_end":471650,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472038,"byte_end":472054,"line_start":159,"line_end":159,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5849},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5857}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":471984,"byte_end":472027,"line_start":158,"line_end":158,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5834},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472181,"byte_end":472202,"line_start":162,"line_end":162,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472070,"byte_end":472143,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472148,"byte_end":472173,"line_start":161,"line_end":161,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472651,"byte_end":472664,"line_start":176,"line_end":176,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472232,"byte_end":472299,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472304,"byte_end":472342,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472347,"byte_end":472350,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472355,"byte_end":472369,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472374,"byte_end":472377,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472382,"byte_end":472389,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472394,"byte_end":472420,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472425,"byte_end":472479,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472484,"byte_end":472520,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472525,"byte_end":472569,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472574,"byte_end":472631,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472636,"byte_end":472643,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473490,"byte_end":473504,"line_start":202,"line_end":202,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472884,"byte_end":472953,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":472958,"byte_end":473022,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473027,"byte_end":473030,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473035,"byte_end":473100,"line_start":189,"line_end":189,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473105,"byte_end":473176,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473181,"byte_end":473226,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473231,"byte_end":473234,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473239,"byte_end":473253,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473258,"byte_end":473261,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473266,"byte_end":473273,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473278,"byte_end":473304,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473309,"byte_end":473345,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473350,"byte_end":473377,"line_start":198,"line_end":198,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473382,"byte_end":473426,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473431,"byte_end":473470,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473475,"byte_end":473482,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5838},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474313,"byte_end":474333,"line_start":223,"line_end":223,"column_start":8,"column_end":28},"name":"par_chunks_exact_mut","qualname":"::slice::ParallelSliceMut::par_chunks_exact_mut","value":"pub fn par_chunks_exact_mut(&mut Self, usize) -> ChunksExactMut<, T>","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473698,"byte_end":473759,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473764,"byte_end":473828,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473833,"byte_end":473836,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473841,"byte_end":473910,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473915,"byte_end":473980,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":473985,"byte_end":474043,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474048,"byte_end":474051,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474056,"byte_end":474070,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474075,"byte_end":474078,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474083,"byte_end":474090,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474095,"byte_end":474121,"line_start":217,"line_end":217,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474126,"byte_end":474162,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_exact_mut(3)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474167,"byte_end":474200,"line_start":219,"line_end":219,"column_start":5,"column_end":38}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474205,"byte_end":474249,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 4, 5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474254,"byte_end":474293,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474298,"byte_end":474305,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475165,"byte_end":475180,"line_start":244,"line_end":244,"column_start":8,"column_end":23},"name":"par_rchunks_mut","qualname":"::slice::ParallelSliceMut::par_rchunks_mut","value":"pub fn par_rchunks_mut(&mut Self, usize) -> RChunksMut<, T>","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of `self` at a time,\n starting at the end. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of `self` at a time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474537,"byte_end":474624,"line_start":228,"line_end":228,"column_start":5,"column_end":92}},{"value":"/ starting at the end. The chunks are mutable and do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474629,"byte_end":474696,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474701,"byte_end":474704,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474709,"byte_end":474774,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474779,"byte_end":474850,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474855,"byte_end":474900,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474905,"byte_end":474908,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474913,"byte_end":474927,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474932,"byte_end":474935,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474940,"byte_end":474947,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474952,"byte_end":474978,"line_start":238,"line_end":238,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":474983,"byte_end":475019,"line_start":239,"line_end":239,"column_start":5,"column_end":41}},{"value":"/ array.par_rchunks_mut(2)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475024,"byte_end":475052,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475057,"byte_end":475101,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [1, 3, 2, 5, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475106,"byte_end":475145,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475150,"byte_end":475157,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476013,"byte_end":476034,"line_start":265,"line_end":265,"column_start":8,"column_end":29},"name":"par_rchunks_exact_mut","qualname":"::slice::ParallelSliceMut::par_rchunks_exact_mut","value":"pub fn par_rchunks_exact_mut(&mut Self, usize) -> RChunksExactMut<, T>","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of `self` at a time,\n starting at the end. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of `self` at a time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475376,"byte_end":475455,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/ starting at the end. The chunks are mutable and do not overlap.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475460,"byte_end":475527,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475532,"byte_end":475535,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475540,"byte_end":475609,"line_start":252,"line_end":252,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475614,"byte_end":475679,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475684,"byte_end":475742,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475747,"byte_end":475750,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475755,"byte_end":475769,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475774,"byte_end":475777,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475782,"byte_end":475789,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475794,"byte_end":475820,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475825,"byte_end":475861,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ array.par_rchunks_exact_mut(3)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475866,"byte_end":475900,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475905,"byte_end":475949,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [1, 2, 5, 4, 3]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475954,"byte_end":475993,"line_start":263,"line_end":263,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":475998,"byte_end":476005,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477706,"byte_end":477714,"line_start":303,"line_end":303,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476240,"byte_end":476272,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476277,"byte_end":476280,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e., does not reorder equal elements) and *O*(*n* \\* log(*n*)) worst-case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476285,"byte_end":476385,"line_start":272,"line_end":272,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476390,"byte_end":476393,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476398,"byte_end":476491,"line_start":274,"line_end":274,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476496,"byte_end":476549,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476554,"byte_end":476611,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476616,"byte_end":476619,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476624,"byte_end":476652,"line_start":278,"line_end":278,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476657,"byte_end":476660,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476665,"byte_end":476728,"line_start":280,"line_end":280,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476733,"byte_end":476786,"line_start":281,"line_end":281,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476791,"byte_end":476883,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476888,"byte_end":476952,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476957,"byte_end":476960,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":476965,"byte_end":477058,"line_start":285,"line_end":285,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477063,"byte_end":477113,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477118,"byte_end":477121,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477126,"byte_end":477220,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477225,"byte_end":477319,"line_start":289,"line_end":289,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477324,"byte_end":477420,"line_start":290,"line_end":290,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477425,"byte_end":477489,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477494,"byte_end":477497,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477502,"byte_end":477516,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477521,"byte_end":477524,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477529,"byte_end":477536,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477541,"byte_end":477567,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477572,"byte_end":477575,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477580,"byte_end":477614,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477619,"byte_end":477622,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477627,"byte_end":477644,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477649,"byte_end":477686,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477691,"byte_end":477698,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480335,"byte_end":480346,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477829,"byte_end":477888,"line_start":310,"line_end":310,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477893,"byte_end":477896,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e., does not reorder equal elements) and *O*(*n* \\* log(*n*)) worst-case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":477901,"byte_end":478001,"line_start":312,"line_end":312,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478006,"byte_end":478009,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The comparator function must define a total ordering for the elements in the slice. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478014,"byte_end":478104,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/ the ordering is not total, the order of the elements is unspecified. An order is a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478109,"byte_end":478195,"line_start":315,"line_end":315,"column_start":5,"column_end":91}},{"value":"/ total order if it is (for all `a`, `b` and `c`):","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478200,"byte_end":478252,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478257,"byte_end":478260,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ * total and antisymmetric: exactly one of `a < b`, `a == b` or `a > b` is true, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478265,"byte_end":478352,"line_start":318,"line_end":318,"column_start":5,"column_end":92}},{"value":"/ * transitive, `a < b` and `b < c` implies `a < c`. The same must hold for both `==` and `>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478357,"byte_end":478453,"line_start":319,"line_end":319,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478458,"byte_end":478461,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ For example, while [`f64`] doesn't implement [`Ord`] because `NaN != NaN`, we can use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478466,"byte_end":478555,"line_start":321,"line_end":321,"column_start":5,"column_end":94}},{"value":"/ `partial_cmp` as our sort function when we know the slice doesn't contain a `NaN`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478560,"byte_end":478646,"line_start":322,"line_end":322,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478651,"byte_end":478654,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478659,"byte_end":478666,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478671,"byte_end":478697,"line_start":325,"line_end":325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478702,"byte_end":478705,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let mut floats = [5f64, 4.0, 1.0, 3.0, 2.0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478710,"byte_end":478758,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/ floats.par_sort_by(|a, b| a.partial_cmp(b).unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478763,"byte_end":478820,"line_start":328,"line_end":328,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(floats, [1.0, 2.0, 3.0, 4.0, 5.0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478825,"byte_end":478875,"line_start":329,"line_end":329,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478880,"byte_end":478887,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478892,"byte_end":478895,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478900,"byte_end":478993,"line_start":332,"line_end":332,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":478998,"byte_end":479051,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479056,"byte_end":479119,"line_start":334,"line_end":334,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479124,"byte_end":479127,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479132,"byte_end":479160,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479165,"byte_end":479168,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479173,"byte_end":479236,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479241,"byte_end":479294,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479299,"byte_end":479391,"line_start":340,"line_end":340,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479396,"byte_end":479460,"line_start":341,"line_end":341,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479465,"byte_end":479468,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479473,"byte_end":479566,"line_start":343,"line_end":343,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479571,"byte_end":479621,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479626,"byte_end":479629,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479634,"byte_end":479728,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479733,"byte_end":479827,"line_start":347,"line_end":347,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479832,"byte_end":479928,"line_start":348,"line_end":348,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":479933,"byte_end":479997,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480002,"byte_end":480005,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480010,"byte_end":480024,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480029,"byte_end":480032,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480037,"byte_end":480044,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480049,"byte_end":480075,"line_start":354,"line_end":354,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480080,"byte_end":480083,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480088,"byte_end":480120,"line_start":356,"line_end":356,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480125,"byte_end":480160,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480165,"byte_end":480200,"line_start":358,"line_end":358,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480205,"byte_end":480208,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480213,"byte_end":480235,"line_start":360,"line_end":360,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480240,"byte_end":480275,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480280,"byte_end":480315,"line_start":362,"line_end":362,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480320,"byte_end":480327,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482414,"byte_end":482429,"line_start":411,"line_end":411,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<K, F>(&mut Self, F) where K: Ord, F: Fn(&T) -> K + Sync","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480559,"byte_end":480622,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480627,"byte_end":480630,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e., does not reorder equal elements) and *O*(*m* \\* *n* \\* log(*n*))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480635,"byte_end":480730,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ worst-case, where the key function is *O*(*m*).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480735,"byte_end":480786,"line_start":376,"line_end":376,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480791,"byte_end":480794,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ For expensive key functions (e.g. functions that are not simple property accesses or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480799,"byte_end":480887,"line_start":378,"line_end":378,"column_start":5,"column_end":93}},{"value":"/ basic operations), [`par_sort_by_cached_key`](#method.par_sort_by_cached_key) is likely to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480892,"byte_end":480986,"line_start":379,"line_end":379,"column_start":5,"column_end":99}},{"value":"/ be significantly faster, as it does not recompute element keys.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":480991,"byte_end":481058,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481063,"byte_end":481066,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481071,"byte_end":481164,"line_start":382,"line_end":382,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481169,"byte_end":481222,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481227,"byte_end":481298,"line_start":384,"line_end":384,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481303,"byte_end":481306,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481311,"byte_end":481339,"line_start":386,"line_end":386,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481344,"byte_end":481347,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481352,"byte_end":481415,"line_start":388,"line_end":388,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481420,"byte_end":481473,"line_start":389,"line_end":389,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481478,"byte_end":481570,"line_start":390,"line_end":390,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481575,"byte_end":481639,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481644,"byte_end":481647,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481652,"byte_end":481745,"line_start":393,"line_end":393,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481750,"byte_end":481800,"line_start":394,"line_end":394,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481805,"byte_end":481808,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481813,"byte_end":481907,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":481912,"byte_end":482006,"line_start":397,"line_end":397,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482011,"byte_end":482107,"line_start":398,"line_end":398,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482112,"byte_end":482176,"line_start":399,"line_end":399,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482181,"byte_end":482184,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482189,"byte_end":482203,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482208,"byte_end":482211,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482216,"byte_end":482223,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482228,"byte_end":482254,"line_start":404,"line_end":404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482259,"byte_end":482262,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482267,"byte_end":482304,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482309,"byte_end":482312,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482317,"byte_end":482352,"line_start":408,"line_end":408,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482357,"byte_end":482394,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482399,"byte_end":482406,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484492,"byte_end":484514,"line_start":459,"line_end":459,"column_start":8,"column_end":30},"name":"par_sort_by_cached_key","qualname":"::slice::ParallelSliceMut::par_sort_by_cached_key","value":"pub fn par_sort_by_cached_key<K, F>(&mut Self, F) where F: Fn(&T) -> K + Sync,\nK: Ord + Send","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482603,"byte_end":482666,"line_start":419,"line_end":419,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482671,"byte_end":482674,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ During sorting, the key function is called at most once per element, by using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482679,"byte_end":482760,"line_start":421,"line_end":421,"column_start":5,"column_end":86}},{"value":"/ temporary storage to remember the results of key evaluation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482765,"byte_end":482829,"line_start":422,"line_end":422,"column_start":5,"column_end":69}},{"value":"/ The key function is called in parallel, so the order of calls is completely unspecified.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482834,"byte_end":482926,"line_start":423,"line_end":423,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482931,"byte_end":482934,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e., does not reorder equal elements) and *O*(*m* \\* *n* + *n* \\* log(*n*))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":482939,"byte_end":483040,"line_start":425,"line_end":425,"column_start":5,"column_end":106}},{"value":"/ worst-case, where the key function is *O*(*m*).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483045,"byte_end":483096,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483101,"byte_end":483104,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ For simple key functions (e.g., functions that are property accesses or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483109,"byte_end":483184,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ basic operations), [`par_sort_by_key`](#method.par_sort_by_key) is likely to be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483189,"byte_end":483272,"line_start":429,"line_end":429,"column_start":5,"column_end":88}},{"value":"/ faster.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483277,"byte_end":483288,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483293,"byte_end":483296,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483301,"byte_end":483329,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483334,"byte_end":483337,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483342,"byte_end":483435,"line_start":434,"line_end":434,"column_start":5,"column_end":98}},{"value":"/ which combines the fast average case of randomized quicksort with the fast worst case of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483440,"byte_end":483532,"line_start":435,"line_end":435,"column_start":5,"column_end":97}},{"value":"/ heapsort, while achieving linear time on slices with certain patterns. It uses some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483537,"byte_end":483624,"line_start":436,"line_end":436,"column_start":5,"column_end":92}},{"value":"/ randomization to avoid degenerate cases, but with a fixed seed to always provide","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483629,"byte_end":483713,"line_start":437,"line_end":437,"column_start":5,"column_end":89}},{"value":"/ deterministic behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483718,"byte_end":483745,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483750,"byte_end":483753,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ In the worst case, the algorithm allocates temporary storage in a `Vec<(K, usize)>` the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483758,"byte_end":483849,"line_start":440,"line_end":440,"column_start":5,"column_end":96}},{"value":"/ length of the slice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483854,"byte_end":483878,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483883,"byte_end":483886,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483891,"byte_end":483980,"line_start":443,"line_end":443,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":483985,"byte_end":484078,"line_start":444,"line_end":444,"column_start":5,"column_end":98}},{"value":"/ parallel. Finally, after sorting the cached keys, the item positions are updated sequentially.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484083,"byte_end":484181,"line_start":445,"line_end":445,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484186,"byte_end":484189,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484194,"byte_end":484240,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484245,"byte_end":484248,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484253,"byte_end":484267,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484272,"byte_end":484275,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484280,"byte_end":484287,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484292,"byte_end":484318,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484323,"byte_end":484326,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 32, -3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484331,"byte_end":484369,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484374,"byte_end":484377,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_cached_key(|k| k.to_string());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484382,"byte_end":484430,"line_start":456,"line_end":456,"column_start":5,"column_end":53}},{"value":"/ assert!(v == [-3, -5, 2, 32, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484435,"byte_end":484472,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":484477,"byte_end":484484,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487696,"byte_end":487713,"line_start":542,"line_end":542,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but might not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but might not preserve the order of equal elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486326,"byte_end":486410,"line_start":510,"line_end":510,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486415,"byte_end":486418,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e., may reorder equal elements), in-place","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486423,"byte_end":486493,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ (i.e., does not allocate), and *O*(*n* \\* log(*n*)) worst-case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486498,"byte_end":486565,"line_start":513,"line_end":513,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486570,"byte_end":486573,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486578,"byte_end":486606,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486611,"byte_end":486614,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486619,"byte_end":486712,"line_start":517,"line_end":517,"column_start":5,"column_end":98}},{"value":"/ which combines the fast average case of randomized quicksort with the fast worst case of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486717,"byte_end":486809,"line_start":518,"line_end":518,"column_start":5,"column_end":97}},{"value":"/ heapsort, while achieving linear time on slices with certain patterns. It uses some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486814,"byte_end":486901,"line_start":519,"line_end":519,"column_start":5,"column_end":92}},{"value":"/ randomization to avoid degenerate cases, but with a fixed seed to always provide","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486906,"byte_end":486990,"line_start":520,"line_end":520,"column_start":5,"column_end":89}},{"value":"/ deterministic behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":486995,"byte_end":487022,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487027,"byte_end":487030,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ It is typically faster than stable sorting, except in a few special cases, e.g., when the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487035,"byte_end":487128,"line_start":523,"line_end":523,"column_start":5,"column_end":98}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487133,"byte_end":487193,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487198,"byte_end":487201,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487206,"byte_end":487295,"line_start":526,"line_end":526,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487300,"byte_end":487393,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487398,"byte_end":487411,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487416,"byte_end":487419,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487424,"byte_end":487470,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487475,"byte_end":487478,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487483,"byte_end":487497,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487502,"byte_end":487505,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487510,"byte_end":487517,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487522,"byte_end":487548,"line_start":535,"line_end":535,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487553,"byte_end":487556,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487561,"byte_end":487595,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487600,"byte_end":487603,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487608,"byte_end":487634,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487639,"byte_end":487676,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487681,"byte_end":487688,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490258,"byte_end":490278,"line_start":603,"line_end":603,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but might not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but might not preserve the order of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487828,"byte_end":487923,"line_start":549,"line_end":549,"column_start":5,"column_end":100}},{"value":"/ equal elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487928,"byte_end":487947,"line_start":550,"line_end":550,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487952,"byte_end":487955,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e., may reorder equal elements), in-place","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":487960,"byte_end":488030,"line_start":552,"line_end":552,"column_start":5,"column_end":75}},{"value":"/ (i.e., does not allocate), and *O*(*n* \\* log(*n*)) worst-case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488035,"byte_end":488102,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488107,"byte_end":488110,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ The comparator function must define a total ordering for the elements in the slice. If","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488115,"byte_end":488205,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ the ordering is not total, the order of the elements is unspecified. An order is a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488210,"byte_end":488296,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ total order if it is (for all `a`, `b` and `c`):","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488301,"byte_end":488353,"line_start":557,"line_end":557,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488358,"byte_end":488361,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ * total and antisymmetric: exactly one of `a < b`, `a == b` or `a > b` is true, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488366,"byte_end":488453,"line_start":559,"line_end":559,"column_start":5,"column_end":92}},{"value":"/ * transitive, `a < b` and `b < c` implies `a < c`. The same must hold for both `==` and `>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488458,"byte_end":488554,"line_start":560,"line_end":560,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488559,"byte_end":488562,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ For example, while [`f64`] doesn't implement [`Ord`] because `NaN != NaN`, we can use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488567,"byte_end":488656,"line_start":562,"line_end":562,"column_start":5,"column_end":94}},{"value":"/ `partial_cmp` as our sort function when we know the slice doesn't contain a `NaN`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488661,"byte_end":488747,"line_start":563,"line_end":563,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488752,"byte_end":488755,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488760,"byte_end":488767,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488772,"byte_end":488798,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488803,"byte_end":488806,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mut floats = [5f64, 4.0, 1.0, 3.0, 2.0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488811,"byte_end":488859,"line_start":568,"line_end":568,"column_start":5,"column_end":53}},{"value":"/ floats.par_sort_unstable_by(|a, b| a.partial_cmp(b).unwrap());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488864,"byte_end":488930,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(floats, [1.0, 2.0, 3.0, 4.0, 5.0]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488935,"byte_end":488985,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":488990,"byte_end":488997,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489002,"byte_end":489005,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489010,"byte_end":489038,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489043,"byte_end":489046,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489051,"byte_end":489144,"line_start":575,"line_end":575,"column_start":5,"column_end":98}},{"value":"/ which combines the fast average case of randomized quicksort with the fast worst case of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489149,"byte_end":489241,"line_start":576,"line_end":576,"column_start":5,"column_end":97}},{"value":"/ heapsort, while achieving linear time on slices with certain patterns. It uses some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489246,"byte_end":489333,"line_start":577,"line_end":577,"column_start":5,"column_end":92}},{"value":"/ randomization to avoid degenerate cases, but with a fixed seed to always provide","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489338,"byte_end":489422,"line_start":578,"line_end":578,"column_start":5,"column_end":89}},{"value":"/ deterministic behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489427,"byte_end":489454,"line_start":579,"line_end":579,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489459,"byte_end":489462,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ It is typically faster than stable sorting, except in a few special cases, e.g., when the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489467,"byte_end":489560,"line_start":581,"line_end":581,"column_start":5,"column_end":98}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489565,"byte_end":489625,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489630,"byte_end":489633,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489638,"byte_end":489727,"line_start":584,"line_end":584,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489732,"byte_end":489825,"line_start":585,"line_end":585,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489830,"byte_end":489843,"line_start":586,"line_end":586,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489848,"byte_end":489851,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489856,"byte_end":489902,"line_start":588,"line_end":588,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489907,"byte_end":489910,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489915,"byte_end":489929,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489934,"byte_end":489937,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489942,"byte_end":489949,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489954,"byte_end":489980,"line_start":593,"line_end":593,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489985,"byte_end":489988,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":489993,"byte_end":490025,"line_start":595,"line_end":595,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490030,"byte_end":490074,"line_start":596,"line_end":596,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490079,"byte_end":490114,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490119,"byte_end":490122,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490127,"byte_end":490149,"line_start":599,"line_end":599,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490154,"byte_end":490198,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490203,"byte_end":490238,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490243,"byte_end":490250,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5857},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492024,"byte_end":492048,"line_start":647,"line_end":647,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<K, F>(&mut Self, F) where K: Ord, F: Fn(&T) ->\nK + Sync","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but might not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but might not preserve the order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490491,"byte_end":490587,"line_start":612,"line_end":612,"column_start":5,"column_end":101}},{"value":"/ of equal elements.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490592,"byte_end":490614,"line_start":613,"line_end":613,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490619,"byte_end":490622,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e., may reorder equal elements), in-place","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490627,"byte_end":490697,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ (i.e., does not allocate), and *O*(m \\* *n* \\* log(*n*)) worst-case,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490702,"byte_end":490774,"line_start":616,"line_end":616,"column_start":5,"column_end":77}},{"value":"/ where the key function is *O*(*m*).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490779,"byte_end":490818,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490823,"byte_end":490826,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490831,"byte_end":490859,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490864,"byte_end":490867,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490872,"byte_end":490965,"line_start":621,"line_end":621,"column_start":5,"column_end":98}},{"value":"/ which combines the fast average case of randomized quicksort with the fast worst case of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":490970,"byte_end":491062,"line_start":622,"line_end":622,"column_start":5,"column_end":97}},{"value":"/ heapsort, while achieving linear time on slices with certain patterns. It uses some","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491067,"byte_end":491154,"line_start":623,"line_end":623,"column_start":5,"column_end":92}},{"value":"/ randomization to avoid degenerate cases, but with a fixed seed to always provide","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491159,"byte_end":491243,"line_start":624,"line_end":624,"column_start":5,"column_end":89}},{"value":"/ deterministic behavior.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491248,"byte_end":491275,"line_start":625,"line_end":625,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491280,"byte_end":491283,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Due to its key calling strategy, `par_sort_unstable_by_key` is likely to be slower than","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491288,"byte_end":491379,"line_start":627,"line_end":627,"column_start":5,"column_end":96}},{"value":"/ [`par_sort_by_cached_key`](#method.par_sort_by_cached_key) in cases where the key function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491384,"byte_end":491478,"line_start":628,"line_end":628,"column_start":5,"column_end":99}},{"value":"/ is expensive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491483,"byte_end":491500,"line_start":629,"line_end":629,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491505,"byte_end":491508,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491513,"byte_end":491602,"line_start":631,"line_end":631,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491607,"byte_end":491700,"line_start":632,"line_end":632,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491705,"byte_end":491718,"line_start":633,"line_end":633,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491723,"byte_end":491726,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491731,"byte_end":491777,"line_start":635,"line_end":635,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491782,"byte_end":491785,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491790,"byte_end":491804,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491809,"byte_end":491812,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491817,"byte_end":491824,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491829,"byte_end":491855,"line_start":640,"line_end":640,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491860,"byte_end":491863,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491868,"byte_end":491905,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491910,"byte_end":491913,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491918,"byte_end":491962,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":491967,"byte_end":492004,"line_start":645,"line_end":645,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492009,"byte_end":492016,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8906},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492864,"byte_end":492868,"line_start":683,"line_end":683,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8909}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492782,"byte_end":492835,"line_start":681,"line_end":681,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8914},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494375,"byte_end":494382,"line_start":748,"line_end":748,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":8917},{"krate":0,"index":8918}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494279,"byte_end":494346,"line_start":746,"line_end":746,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8923},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496419,"byte_end":496426,"line_start":830,"line_end":830,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8926}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496339,"byte_end":496390,"line_start":828,"line_end":828,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497878,"byte_end":497883,"line_start":891,"line_end":891,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5967},{"krate":0,"index":5968}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497808,"byte_end":497866,"line_start":890,"line_end":890,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5997},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":499752,"byte_end":499760,"line_start":967,"line_end":967,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6002}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":499674,"byte_end":499740,"line_start":966,"line_end":966,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","parent":null,"children":[{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6049},{"krate":0,"index":6051},{"krate":0,"index":6068},{"krate":0,"index":6071},{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":8971},{"krate":0,"index":8974},{"krate":0,"index":8977},{"krate":0,"index":6080},{"krate":0,"index":6083},{"krate":0,"index":6088},{"krate":0,"index":8980},{"krate":0,"index":8983},{"krate":0,"index":8986},{"krate":0,"index":6094},{"krate":0,"index":6098},{"krate":0,"index":6103},{"krate":0,"index":8989},{"krate":0,"index":8992},{"krate":0,"index":8995},{"krate":0,"index":6109},{"krate":0,"index":6112},{"krate":0,"index":6117},{"krate":0,"index":8998},{"krate":0,"index":9001},{"krate":0,"index":9004},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6131},{"krate":0,"index":9007},{"krate":0,"index":9012},{"krate":0,"index":9016},{"krate":0,"index":6137},{"krate":0,"index":6141},{"krate":0,"index":6147},{"krate":0,"index":9020},{"krate":0,"index":9025},{"krate":0,"index":9029},{"krate":0,"index":6157},{"krate":0,"index":6163},{"krate":0,"index":6167},{"krate":0,"index":6172},{"krate":0,"index":6178},{"krate":0,"index":9033},{"krate":0,"index":9037},{"krate":0,"index":9040},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":9043},{"krate":0,"index":9047},{"krate":0,"index":9050},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":9053},{"krate":0,"index":9058},{"krate":0,"index":9062},{"krate":0,"index":6199},{"krate":0,"index":6205},{"krate":0,"index":6211},{"krate":0,"index":9066},{"krate":0,"index":9071},{"krate":0,"index":9075},{"krate":0,"index":6219},{"krate":0,"index":6226},{"krate":0,"index":6232}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592147,"byte_end":592198,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592199,"byte_end":592202,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592203,"byte_end":592281,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592282,"byte_end":592320,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592321,"byte_end":592324,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592325,"byte_end":592397,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592398,"byte_end":592470,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592471,"byte_end":592546,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char`, `&[char]`, and any function or closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592547,"byte_end":592619,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592620,"byte_end":592660,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592661,"byte_end":592664,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592665,"byte_end":592744,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592745,"byte_end":592830,"line_start":13,"line_end":13,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592831,"byte_end":592834,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":592835,"byte_end":592892,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594141,"byte_end":594155,"line_start":60,"line_end":60,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6047}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594094,"byte_end":594130,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6034},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594272,"byte_end":594290,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594162,"byte_end":594234,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594239,"byte_end":594264,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6035},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594575,"byte_end":594584,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594312,"byte_end":594376,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594381,"byte_end":594384,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594389,"byte_end":594403,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594408,"byte_end":594411,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594416,"byte_end":594423,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594428,"byte_end":594454,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594459,"byte_end":594519,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594524,"byte_end":594555,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594560,"byte_end":594567,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6036},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594993,"byte_end":595009,"line_start":89,"line_end":89,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594690,"byte_end":594776,"line_start":80,"line_end":80,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594781,"byte_end":594784,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594789,"byte_end":594803,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594808,"byte_end":594811,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594816,"byte_end":594823,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594828,"byte_end":594854,"line_start":85,"line_end":85,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594859,"byte_end":594932,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594937,"byte_end":594973,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":594978,"byte_end":594985,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6037},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595669,"byte_end":595678,"line_start":109,"line_end":109,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595127,"byte_end":595186,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595191,"byte_end":595194,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595199,"byte_end":595273,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595278,"byte_end":595351,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595356,"byte_end":595432,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().copied()` instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595437,"byte_end":595489,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595494,"byte_end":595497,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595502,"byte_end":595516,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595521,"byte_end":595524,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595529,"byte_end":595536,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595541,"byte_end":595567,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595572,"byte_end":595612,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595617,"byte_end":595649,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595654,"byte_end":595661,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596399,"byte_end":596415,"line_start":133,"line_end":133,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595784,"byte_end":595848,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595853,"byte_end":595856,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595861,"byte_end":595934,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":595939,"byte_end":596008,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596013,"byte_end":596016,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596021,"byte_end":596035,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596040,"byte_end":596043,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596048,"byte_end":596055,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596060,"byte_end":596086,"line_start":123,"line_end":123,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596091,"byte_end":596094,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596099,"byte_end":596146,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596151,"byte_end":596190,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596195,"byte_end":596198,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596203,"byte_end":596247,"line_start":128,"line_end":128,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596252,"byte_end":596282,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596287,"byte_end":596339,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596344,"byte_end":596379,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596384,"byte_end":596391,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597143,"byte_end":597152,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596533,"byte_end":596595,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596600,"byte_end":596658,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596663,"byte_end":596666,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596671,"byte_end":596742,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char`, `&[char]`, and any function or closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596747,"byte_end":596819,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596824,"byte_end":596864,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596869,"byte_end":596872,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596877,"byte_end":596891,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596896,"byte_end":596899,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596904,"byte_end":596911,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596916,"byte_end":596942,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596947,"byte_end":596989,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":596994,"byte_end":597016,"line_start":151,"line_end":151,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597021,"byte_end":597073,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597078,"byte_end":597092,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597097,"byte_end":597123,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597128,"byte_end":597135,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6041},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598021,"byte_end":598041,"line_start":178,"line_end":178,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597272,"byte_end":597335,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597340,"byte_end":597409,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597414,"byte_end":597484,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597489,"byte_end":597531,"line_start":163,"line_end":163,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597536,"byte_end":597539,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597544,"byte_end":597615,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char`, `&[char]`, and any function or closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597620,"byte_end":597692,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597697,"byte_end":597737,"line_start":167,"line_end":167,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597742,"byte_end":597745,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597750,"byte_end":597764,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597769,"byte_end":597772,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597777,"byte_end":597784,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597789,"byte_end":597815,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597820,"byte_end":597859,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597864,"byte_end":597919,"line_start":174,"line_end":174,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597924,"byte_end":597943,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":597948,"byte_end":598001,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598006,"byte_end":598013,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6043},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598712,"byte_end":598721,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598183,"byte_end":598257,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598262,"byte_end":598332,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598337,"byte_end":598412,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598417,"byte_end":598440,"line_start":185,"line_end":185,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598445,"byte_end":598448,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598453,"byte_end":598467,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598472,"byte_end":598475,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598480,"byte_end":598487,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598492,"byte_end":598518,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598523,"byte_end":598571,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598576,"byte_end":598596,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598601,"byte_end":598626,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598631,"byte_end":598650,"line_start":194,"line_end":194,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598655,"byte_end":598692,"line_start":195,"line_end":195,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598697,"byte_end":598704,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6044},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599346,"byte_end":599366,"line_start":216,"line_end":216,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598796,"byte_end":598868,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598873,"byte_end":598915,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598920,"byte_end":598923,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":598928,"byte_end":599001,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599006,"byte_end":599071,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599076,"byte_end":599079,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599084,"byte_end":599098,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599103,"byte_end":599106,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599111,"byte_end":599118,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599123,"byte_end":599149,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599154,"byte_end":599200,"line_start":211,"line_end":211,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599205,"byte_end":599236,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599241,"byte_end":599280,"line_start":213,"line_end":213,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599285,"byte_end":599326,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599331,"byte_end":599338,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600083,"byte_end":600094,"line_start":237,"line_end":237,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599461,"byte_end":599521,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599526,"byte_end":599586,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599591,"byte_end":599594,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599599,"byte_end":599670,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char`, `&[char]`, and any function or closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599675,"byte_end":599747,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599752,"byte_end":599792,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599797,"byte_end":599800,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599805,"byte_end":599819,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599824,"byte_end":599827,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599832,"byte_end":599839,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599844,"byte_end":599870,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599875,"byte_end":599917,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599922,"byte_end":599959,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":599964,"byte_end":600013,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600018,"byte_end":600032,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600037,"byte_end":600063,"line_start":235,"line_end":235,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600068,"byte_end":600075,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6047},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600912,"byte_end":600929,"line_start":260,"line_end":260,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":6033},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600252,"byte_end":600328,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600333,"byte_end":600405,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600410,"byte_end":600413,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600418,"byte_end":600489,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char`, `&[char]`, and any function or closure","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600494,"byte_end":600566,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600571,"byte_end":600611,"line_start":249,"line_end":249,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600616,"byte_end":600619,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600624,"byte_end":600638,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600643,"byte_end":600646,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600651,"byte_end":600658,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600663,"byte_end":600689,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600694,"byte_end":600745,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600750,"byte_end":600793,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600798,"byte_end":600816,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600821,"byte_end":600892,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":600897,"byte_end":600904,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601826,"byte_end":601833,"line_start":288,"line_end":288,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":8931},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6062},{"krate":0,"index":6065}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601613,"byte_end":601684,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601689,"byte_end":601734,"line_start":285,"line_end":285,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601739,"byte_end":601742,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601747,"byte_end":601811,"line_start":287,"line_end":287,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601893,"byte_end":601900,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6057},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601953,"byte_end":601961,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":602014,"byte_end":602026,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6059},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":602070,"byte_end":602081,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6062},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":602208,"byte_end":602220,"line_start":296,"line_end":296,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6065},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":602330,"byte_end":602348,"line_start":299,"line_end":299,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8971},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604245,"byte_end":604250,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":8973}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604156,"byte_end":604209,"line_start":371,"line_end":371,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8980},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605292,"byte_end":605303,"line_start":417,"line_end":417,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":8982}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605181,"byte_end":605256,"line_start":415,"line_end":415,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8989},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":606675,"byte_end":606680,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":8991}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":606591,"byte_end":606639,"line_start":471,"line_end":471,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8998},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607696,"byte_end":607707,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":9000}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607607,"byte_end":607660,"line_start":515,"line_end":515,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":9007},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608775,"byte_end":608780,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9010},{"krate":0,"index":9011}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608679,"byte_end":608739,"line_start":559,"line_end":559,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9020},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610449,"byte_end":610464,"line_start":622,"line_end":622,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":9023},{"krate":0,"index":9024}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610342,"byte_end":610413,"line_start":620,"line_end":620,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9033},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612322,"byte_end":612327,"line_start":688,"line_end":688,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612242,"byte_end":612286,"line_start":686,"line_end":686,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":9043},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612998,"byte_end":613013,"line_start":717,"line_end":717,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612901,"byte_end":612962,"line_start":715,"line_end":715,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":9053},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613602,"byte_end":613609,"line_start":742,"line_end":742,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":9056},{"krate":0,"index":9057}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613508,"byte_end":613566,"line_start":740,"line_end":740,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9066},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":615010,"byte_end":615022,"line_start":798,"line_end":798,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":9069},{"krate":0,"index":9070}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":614894,"byte_end":614974,"line_start":796,"line_end":796,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","parent":null,"children":[{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":9079},{"krate":0,"index":9083},{"krate":0,"index":6259},{"krate":0,"index":6264}],"decl_id":null,"docs":" This module contains the parallel iterator types for owned strings\n (`String`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for owned strings","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":616400,"byte_end":616470,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ (`String`). You will rarely need to interact with it directly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":616471,"byte_end":616536,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":616537,"byte_end":616596,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9079},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617157,"byte_end":617162,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Drain","qualname":"::string::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":9081},{"krate":0,"index":9082}],"decl_id":null,"docs":" Draining parallel iterator that moves a range of characters out of a string,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range of characters out of a string,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617014,"byte_end":617094,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617095,"byte_end":617128,"line_start":23,"line_end":23,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6277},{"krate":0,"index":6280},{"krate":0,"index":6283},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":6296},{"krate":0,"index":6299},{"krate":0,"index":6305},{"krate":0,"index":9086},{"krate":0,"index":9089},{"krate":0,"index":9092},{"krate":0,"index":6311},{"krate":0,"index":6316},{"krate":0,"index":6322},{"krate":0,"index":6329},{"krate":0,"index":9095},{"krate":0,"index":9101},{"krate":0,"index":6336},{"krate":0,"index":6343},{"krate":0,"index":6351},{"krate":0,"index":6355},{"krate":0,"index":6359},{"krate":0,"index":6363},{"krate":0,"index":6370},{"krate":0,"index":6374},{"krate":0,"index":6378},{"krate":0,"index":6385},{"krate":0,"index":6389},{"krate":0,"index":6393},{"krate":0,"index":6396}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617667,"byte_end":617729,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617730,"byte_end":617733,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617734,"byte_end":617812,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617813,"byte_end":617851,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617852,"byte_end":617855,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":617856,"byte_end":617913,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9086},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618663,"byte_end":618671,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":9088}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618578,"byte_end":618627,"line_start":36,"line_end":36,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9095},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620163,"byte_end":620168,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"Drain","qualname":"::vec::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":9098},{"krate":0,"index":9099},{"krate":0,"index":9100}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620038,"byte_end":620134,"line_start":100,"line_end":100,"column_start":1,"column_end":97}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\split_producer.rs","byte_start":10509,"byte_end":10522,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\split_producer.rs","byte_start":11990,"byte_end":12003,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15285,"byte_end":15293,"line_start":53,"line_end":53,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15600,"byte_end":15608,"line_start":68,"line_end":68,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19333,"byte_end":19343,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19800,"byte_end":19804,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20575,"byte_end":20580,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20891,"byte_end":20896,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":21366,"byte_end":21371,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22442,"byte_end":22446,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23957,"byte_end":23961,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25255,"byte_end":25259,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27642,"byte_end":27646,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29401,"byte_end":29405,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30570,"byte_end":30578,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":31128,"byte_end":31132,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":32805,"byte_end":32810,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":33115,"byte_end":33120,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":33682,"byte_end":33687,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17857,"byte_end":17867,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":18284,"byte_end":18294,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":154109,"byte_end":154117,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":155246,"byte_end":155260,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157619,"byte_end":157627,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162340,"byte_end":162345,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162574,"byte_end":162579,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":163682,"byte_end":163687,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":164622,"byte_end":164631,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":165309,"byte_end":165318,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":165987,"byte_end":166000,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":166183,"byte_end":166196,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":167808,"byte_end":167816,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168030,"byte_end":168038,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168334,"byte_end":168342,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168463,"byte_end":168471,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169241,"byte_end":169247,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169447,"byte_end":169453,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169786,"byte_end":169792,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":170490,"byte_end":170498,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":171071,"byte_end":171084,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":172203,"byte_end":172211,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":172889,"byte_end":172897,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":173058,"byte_end":173066,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174197,"byte_end":174203,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174391,"byte_end":174397,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174845,"byte_end":174851,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":175496,"byte_end":175504,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":176061,"byte_end":176075,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":176971,"byte_end":176985,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":177097,"byte_end":177111,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":177759,"byte_end":177773,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":178093,"byte_end":178105,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":183251,"byte_end":183266,"line_start":14,"line_end":14,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":183845,"byte_end":183860,"line_start":27,"line_end":27,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185040,"byte_end":185053,"line_start":57,"line_end":57,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185091,"byte_end":185104,"line_start":59,"line_end":59,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185486,"byte_end":185499,"line_start":73,"line_end":73,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185879,"byte_end":185894,"line_start":86,"line_end":86,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":186973,"byte_end":186986,"line_start":122,"line_end":122,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":187978,"byte_end":187993,"line_start":155,"line_end":155,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":188382,"byte_end":188396,"line_start":168,"line_end":168,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203068,"byte_end":203074,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203262,"byte_end":203268,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203715,"byte_end":203721,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":204365,"byte_end":204373,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":204929,"byte_end":204943,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":205838,"byte_end":205852,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":205964,"byte_end":205978,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":206625,"byte_end":206639,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":206958,"byte_end":206970,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208252,"byte_end":208257,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208347,"byte_end":208352,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208488,"byte_end":208493,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208779,"byte_end":208784,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":209264,"byte_end":209277,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210257,"byte_end":210266,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210460,"byte_end":210469,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210813,"byte_end":210822,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":211328,"byte_end":211336,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":211920,"byte_end":211937,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214141,"byte_end":214156,"line_start":33,"line_end":33,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214560,"byte_end":214575,"line_start":51,"line_end":51,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214732,"byte_end":214745,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":215571,"byte_end":215581,"line_start":101,"line_end":101,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":215879,"byte_end":215889,"line_start":114,"line_end":114,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":216387,"byte_end":216395,"line_start":136,"line_end":136,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":216738,"byte_end":216746,"line_start":150,"line_end":150,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":217266,"byte_end":217274,"line_start":173,"line_end":173,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":217576,"byte_end":217584,"line_start":186,"line_end":186,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":218161,"byte_end":218168,"line_start":211,"line_end":211,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":218629,"byte_end":218636,"line_start":227,"line_end":227,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219265,"byte_end":219272,"line_start":254,"line_end":254,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219610,"byte_end":219617,"line_start":268,"line_end":268,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219963,"byte_end":219973,"line_start":282,"line_end":282,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":220330,"byte_end":220340,"line_start":296,"line_end":296,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":220684,"byte_end":220696,"line_start":316,"line_end":316,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221118,"byte_end":221130,"line_start":336,"line_end":336,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221287,"byte_end":221297,"line_start":346,"line_end":346,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221741,"byte_end":221752,"line_start":371,"line_end":371,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222148,"byte_end":222154,"line_start":384,"line_end":384,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222653,"byte_end":222659,"line_start":397,"line_end":397,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222942,"byte_end":222960,"line_start":412,"line_end":412,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":223388,"byte_end":223406,"line_start":432,"line_end":432,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":223563,"byte_end":223579,"line_start":442,"line_end":442,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":224511,"byte_end":224517,"line_start":484,"line_end":484,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":224779,"byte_end":224785,"line_start":494,"line_end":494,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225062,"byte_end":225068,"line_start":504,"line_end":504,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225537,"byte_end":225545,"line_start":524,"line_end":524,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225832,"byte_end":225840,"line_start":537,"line_end":537,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":226297,"byte_end":226300,"line_start":557,"line_end":557,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":227312,"byte_end":227315,"line_start":584,"line_end":584,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228370,"byte_end":228376,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228536,"byte_end":228542,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228754,"byte_end":228760,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":229304,"byte_end":229318,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":229469,"byte_end":229483,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":230227,"byte_end":230241,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":230624,"byte_end":230636,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231912,"byte_end":231921,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232128,"byte_end":232137,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232327,"byte_end":232336,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232899,"byte_end":232916,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":233069,"byte_end":233086,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":233872,"byte_end":233889,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":234290,"byte_end":234305,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":235475,"byte_end":235487,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":235641,"byte_end":235653,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":236238,"byte_end":236250,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":236610,"byte_end":236620,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":237647,"byte_end":237658,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":240180,"byte_end":240192,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":240742,"byte_end":240754,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":241820,"byte_end":241832,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":243390,"byte_end":243400,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":245108,"byte_end":245119,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245939,"byte_end":245946,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246125,"byte_end":246132,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246313,"byte_end":246320,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246886,"byte_end":246901,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":247046,"byte_end":247061,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":247853,"byte_end":247868,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":248308,"byte_end":248321,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249913,"byte_end":249924,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250133,"byte_end":250144,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250333,"byte_end":250344,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250930,"byte_end":250949,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":251098,"byte_end":251117,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":251900,"byte_end":251919,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":252331,"byte_end":252348,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253565,"byte_end":253572,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253790,"byte_end":253797,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":254309,"byte_end":254324,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":254429,"byte_end":254444,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":255127,"byte_end":255142,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":255500,"byte_end":255513,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256929,"byte_end":256940,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257201,"byte_end":257212,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257759,"byte_end":257778,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257887,"byte_end":257906,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":258580,"byte_end":258599,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":258929,"byte_end":258946,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":259625,"byte_end":259629,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260426,"byte_end":260430,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260620,"byte_end":260624,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":261233,"byte_end":261245,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":262101,"byte_end":262113,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":262582,"byte_end":262592,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":263752,"byte_end":263760,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264549,"byte_end":264557,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264811,"byte_end":264819,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":265387,"byte_end":265403,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":266321,"byte_end":266337,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267066,"byte_end":267081,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267477,"byte_end":267492,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267916,"byte_end":267931,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":268817,"byte_end":268820,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269090,"byte_end":269098,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269455,"byte_end":269465,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269775,"byte_end":269785,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":270249,"byte_end":270256,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":270791,"byte_end":270799,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271099,"byte_end":271106,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271429,"byte_end":271437,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271716,"byte_end":271722,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271984,"byte_end":271990,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272258,"byte_end":272264,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272528,"byte_end":272534,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272805,"byte_end":272811,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":273255,"byte_end":273258,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274792,"byte_end":274799,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274960,"byte_end":274967,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":275183,"byte_end":275190,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":275650,"byte_end":275657,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":276399,"byte_end":276407,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":277078,"byte_end":277093,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":278303,"byte_end":278318,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":278468,"byte_end":278483,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":279226,"byte_end":279241,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":279620,"byte_end":279633,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280957,"byte_end":280967,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":281219,"byte_end":281229,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":281606,"byte_end":281616,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":282512,"byte_end":282521,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":283331,"byte_end":283340,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":284121,"byte_end":284139,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":284459,"byte_end":284477,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":287342,"byte_end":287355,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":288488,"byte_end":288501,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":289062,"byte_end":289075,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":290002,"byte_end":290020,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":290662,"byte_end":290680,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":291057,"byte_end":291075,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292177,"byte_end":292188,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292419,"byte_end":292430,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292960,"byte_end":292971,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":293878,"byte_end":293886,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":294453,"byte_end":294472,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":294713,"byte_end":294732,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":296907,"byte_end":296922,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":297694,"byte_end":297709,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298357,"byte_end":298372,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298720,"byte_end":298739,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298964,"byte_end":298983,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":300061,"byte_end":300080,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":300620,"byte_end":300637,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302375,"byte_end":302381,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302586,"byte_end":302592,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302927,"byte_end":302933,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":303511,"byte_end":303519,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":304154,"byte_end":304168,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305475,"byte_end":305481,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305686,"byte_end":305692,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":306027,"byte_end":306033,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":306611,"byte_end":306619,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":307254,"byte_end":307268,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308635,"byte_end":308638,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308795,"byte_end":308798,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":309001,"byte_end":309004,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":309478,"byte_end":309481,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":310223,"byte_end":310231,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2561}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":310910,"byte_end":310921,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312093,"byte_end":312104,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312245,"byte_end":312256,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312995,"byte_end":313006,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":313397,"byte_end":313406,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314643,"byte_end":314650,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314882,"byte_end":314889,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":315121,"byte_end":315128,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":315644,"byte_end":315651,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":316496,"byte_end":316504,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":317287,"byte_end":317302,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":318635,"byte_end":318646,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319027,"byte_end":319038,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319329,"byte_end":319340,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319654,"byte_end":319669,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319835,"byte_end":319850,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":320694,"byte_end":320709,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":321169,"byte_end":321182,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322713,"byte_end":322720,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322893,"byte_end":322900,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":323144,"byte_end":323151,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":323691,"byte_end":323698,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":324573,"byte_end":324581,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2848},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":325391,"byte_end":325406,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":326856,"byte_end":326871,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":327053,"byte_end":327068,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":327924,"byte_end":327939,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":337317,"byte_end":337329,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":337673,"byte_end":337685,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":338041,"byte_end":338053,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":338247,"byte_end":338258,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339226,"byte_end":339230,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339516,"byte_end":339520,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340707,"byte_end":340711,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340869,"byte_end":340873,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340983,"byte_end":340992,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":341187,"byte_end":341196,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":341706,"byte_end":341715,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":342415,"byte_end":342423,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":343132,"byte_end":343149,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344247,"byte_end":344260,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344607,"byte_end":344620,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344871,"byte_end":344884,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":345195,"byte_end":345212,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":346170,"byte_end":346187,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":346666,"byte_end":346681,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3083},{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":347530,"byte_end":347546,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349455,"byte_end":349456,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349966,"byte_end":349976,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":350974,"byte_end":350994,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":351286,"byte_end":351306,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356131,"byte_end":356140,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356329,"byte_end":356338,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356562,"byte_end":356571,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":357137,"byte_end":357154,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":357372,"byte_end":357389,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":358288,"byte_end":358303,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359447,"byte_end":359462,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359484,"byte_end":359499,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359648,"byte_end":359663,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360213,"byte_end":360228,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360460,"byte_end":360475,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360660,"byte_end":360673,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361688,"byte_end":361702,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361744,"byte_end":361758,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361860,"byte_end":361874,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362401,"byte_end":362415,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362664,"byte_end":362678,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362919,"byte_end":362931,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364333,"byte_end":364339,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":365191,"byte_end":365197,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":365647,"byte_end":365661,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366712,"byte_end":366719,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":367037,"byte_end":367044,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":367656,"byte_end":367671,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368468,"byte_end":368472,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368850,"byte_end":368854,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368983,"byte_end":368987,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369566,"byte_end":369569,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369751,"byte_end":369754,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":370089,"byte_end":370092,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":370662,"byte_end":370670,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":371185,"byte_end":371196,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372401,"byte_end":372405,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372638,"byte_end":372642,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372977,"byte_end":372981,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":373562,"byte_end":373570,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378697,"byte_end":378702,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378882,"byte_end":378887,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":379375,"byte_end":379388,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380308,"byte_end":380319,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380341,"byte_end":380352,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380493,"byte_end":380504,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380971,"byte_end":380982,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":381198,"byte_end":381209,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":381382,"byte_end":381391,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3602}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382376,"byte_end":382380,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382613,"byte_end":382617,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3617}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382952,"byte_end":382956,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":383519,"byte_end":383527,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384106,"byte_end":384113,"line_start":10,"line_end":10,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385023,"byte_end":385030,"line_start":41,"line_end":41,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385226,"byte_end":385233,"line_start":47,"line_end":47,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385937,"byte_end":385952,"line_start":77,"line_end":77,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":386858,"byte_end":386873,"line_start":113,"line_end":113,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":387412,"byte_end":387425,"line_start":138,"line_end":138,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388221,"byte_end":388232,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":389089,"byte_end":389100,"line_start":201,"line_end":201,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":389385,"byte_end":389396,"line_start":213,"line_end":213,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":390018,"byte_end":390037,"line_start":241,"line_end":241,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":391015,"byte_end":391034,"line_start":281,"line_end":281,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3776},{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392180,"byte_end":392197,"line_start":31,"line_end":31,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392239,"byte_end":392256,"line_start":33,"line_end":33,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392358,"byte_end":392375,"line_start":39,"line_end":39,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393008,"byte_end":393025,"line_start":66,"line_end":66,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3840},{"krate":0,"index":3841}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393304,"byte_end":393321,"line_start":81,"line_end":81,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3847}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393827,"byte_end":393842,"line_start":100,"line_end":100,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395342,"byte_end":395363,"line_start":28,"line_end":28,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395397,"byte_end":395418,"line_start":30,"line_end":30,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3903}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395512,"byte_end":395533,"line_start":36,"line_end":36,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":396121,"byte_end":396142,"line_start":62,"line_end":62,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3918},{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":396387,"byte_end":396408,"line_start":76,"line_end":76,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3924}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":397121,"byte_end":397140,"line_start":99,"line_end":99,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":401063,"byte_end":401068,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":401949,"byte_end":401958,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":402995,"byte_end":403007,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":403638,"byte_end":403644,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4036}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":405045,"byte_end":405051,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":405988,"byte_end":406001,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":407264,"byte_end":407277,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":407941,"byte_end":407952,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":408693,"byte_end":408705,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":409789,"byte_end":409797,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":411279,"byte_end":411288,"line_start":507,"line_end":507,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":411406,"byte_end":411415,"line_start":513,"line_end":513,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412292,"byte_end":412298,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412458,"byte_end":412464,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412676,"byte_end":412682,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":413144,"byte_end":413150,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":413891,"byte_end":413899,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":414576,"byte_end":414590,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":415850,"byte_end":415864,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":416011,"byte_end":416025,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":416771,"byte_end":416785,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":417306,"byte_end":417318,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4275},{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":418264,"byte_end":418273,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":419023,"byte_end":419032,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":419136,"byte_end":419145,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419958,"byte_end":419967,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4307}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":420157,"byte_end":420166,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4311},{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":420796,"byte_end":420813,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":421613,"byte_end":421630,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":422033,"byte_end":422048,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4352},{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423702,"byte_end":423705,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423928,"byte_end":423931,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":424315,"byte_end":424318,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4379},{"krate":0,"index":4380}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":424978,"byte_end":424987,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4391},{"krate":0,"index":4392}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":425608,"byte_end":425617,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4403},{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":426274,"byte_end":426285,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427694,"byte_end":427699,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427969,"byte_end":427974,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4433}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":428366,"byte_end":428371,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429476,"byte_end":429482,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429689,"byte_end":429695,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4613}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":430030,"byte_end":430036,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4616},{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":430718,"byte_end":430726,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":431407,"byte_end":431421,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42795,"byte_end":42796,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44304,"byte_end":44305,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108588,"byte_end":108589,"line_start":2230,"line_end":2230,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139307,"byte_end":139318,"line_start":3180,"line_end":3180,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8358},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139962,"byte_end":139968,"line_start":3205,"line_end":3205,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8359},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":140576,"byte_end":140582,"line_start":3230,"line_end":3230,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8360},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":141198,"byte_end":141202,"line_start":3255,"line_end":3255,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8361},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":141946,"byte_end":141950,"line_start":3281,"line_end":3281,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8362},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433220,"byte_end":433226,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433399,"byte_end":433407,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433702,"byte_end":433710,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5052},{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434867,"byte_end":434871,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5058}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":436347,"byte_end":436361,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":436973,"byte_end":436979,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":440006,"byte_end":440011,"line_start":53,"line_end":53,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":440288,"byte_end":440300,"line_start":69,"line_end":69,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441954,"byte_end":441958,"line_start":119,"line_end":119,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5178},{"krate":0,"index":5179},{"krate":0,"index":5181}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":442287,"byte_end":442291,"line_start":135,"line_end":135,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5187}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":447926,"byte_end":447930,"line_start":323,"line_end":323,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":448237,"byte_end":448241,"line_start":338,"line_end":338,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5201},{"krate":0,"index":5203},{"krate":0,"index":5204}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453386,"byte_end":453390,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":454328,"byte_end":454342,"line_start":75,"line_end":75,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":456015,"byte_end":456019,"line_start":125,"line_end":125,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5247}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":456348,"byte_end":456352,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":459848,"byte_end":459852,"line_start":265,"line_end":265,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5263}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":460232,"byte_end":460236,"line_start":281,"line_end":281,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463860,"byte_end":463866,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464300,"byte_end":464304,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":465557,"byte_end":465563,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5307}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501712,"byte_end":501718,"line_start":13,"line_end":13,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501876,"byte_end":501882,"line_start":19,"line_end":19,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5331}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502011,"byte_end":502017,"line_start":25,"line_end":25,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502345,"byte_end":502351,"line_start":40,"line_end":40,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5342},{"krate":0,"index":5344},{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502974,"byte_end":502988,"line_start":68,"line_end":68,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":503854,"byte_end":503865,"line_start":100,"line_end":100,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5362},{"krate":0,"index":5363}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504451,"byte_end":504462,"line_start":120,"line_end":120,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504596,"byte_end":504607,"line_start":126,"line_end":126,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5374}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504935,"byte_end":504946,"line_start":141,"line_end":141,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5381}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":505566,"byte_end":505585,"line_start":169,"line_end":169,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506423,"byte_end":506432,"line_start":200,"line_end":200,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506613,"byte_end":506622,"line_start":206,"line_end":206,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506954,"byte_end":506963,"line_start":221,"line_end":221,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5411},{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":507596,"byte_end":507613,"line_start":249,"line_end":249,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508509,"byte_end":508523,"line_start":281,"line_end":281,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510245,"byte_end":510259,"line_start":324,"line_end":324,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510591,"byte_end":510605,"line_start":339,"line_end":339,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5443},{"krate":0,"index":5445},{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":511235,"byte_end":511257,"line_start":367,"line_end":367,"column_start":43,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":512715,"byte_end":512725,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5491}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":515634,"byte_end":515647,"line_start":102,"line_end":102,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5501}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":519373,"byte_end":519382,"line_start":205,"line_end":205,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":530970,"byte_end":530975,"line_start":511,"line_end":511,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5536}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\quicksort.rs","byte_start":539992,"byte_end":540002,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5568}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576149,"byte_end":576156,"line_start":12,"line_end":12,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576314,"byte_end":576321,"line_start":18,"line_end":18,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5639}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576451,"byte_end":576458,"line_start":24,"line_end":24,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5643},{"krate":0,"index":5644},{"krate":0,"index":5646}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576786,"byte_end":576793,"line_start":39,"line_end":39,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5652},{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":577418,"byte_end":577433,"line_start":67,"line_end":67,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5665},{"krate":0,"index":5666}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578331,"byte_end":578343,"line_start":99,"line_end":99,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5670},{"krate":0,"index":5671}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578892,"byte_end":578904,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":579039,"byte_end":579051,"line_start":124,"line_end":124,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5682}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":579379,"byte_end":579391,"line_start":139,"line_end":139,"column_start":58,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580013,"byte_end":580033,"line_start":167,"line_end":167,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580917,"byte_end":580927,"line_start":198,"line_end":198,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":581108,"byte_end":581118,"line_start":204,"line_end":204,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":581450,"byte_end":581460,"line_start":219,"line_end":219,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5717},{"krate":0,"index":5719},{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":582095,"byte_end":582113,"line_start":247,"line_end":247,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583041,"byte_end":583056,"line_start":279,"line_end":279,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584742,"byte_end":584757,"line_start":321,"line_end":321,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":585089,"byte_end":585104,"line_start":336,"line_end":336,"column_start":58,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5754}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":585736,"byte_end":585759,"line_start":364,"line_end":364,"column_start":43,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492944,"byte_end":492948,"line_start":687,"line_end":687,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493075,"byte_end":493079,"line_start":693,"line_end":693,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5886}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493405,"byte_end":493409,"line_start":708,"line_end":708,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5892},{"krate":0,"index":5893}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493912,"byte_end":493924,"line_start":732,"line_end":732,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494482,"byte_end":494489,"line_start":753,"line_end":753,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5909}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494619,"byte_end":494626,"line_start":759,"line_end":759,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494954,"byte_end":494961,"line_start":774,"line_end":774,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5920},{"krate":0,"index":5922},{"krate":0,"index":5923}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":495635,"byte_end":495650,"line_start":803,"line_end":803,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496525,"byte_end":496532,"line_start":834,"line_end":834,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496862,"byte_end":496869,"line_start":849,"line_end":849,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5947},{"krate":0,"index":5949},{"krate":0,"index":5950}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497382,"byte_end":497397,"line_start":873,"line_end":873,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497978,"byte_end":497983,"line_start":896,"line_end":896,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5973}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":498166,"byte_end":498171,"line_start":905,"line_end":905,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5978}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":498367,"byte_end":498372,"line_start":911,"line_end":911,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5983},{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":499859,"byte_end":499867,"line_start":972,"line_end":972,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6007}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":500092,"byte_end":500100,"line_start":980,"line_end":980,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6012},{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604036,"byte_end":604038,"line_start":365,"line_end":365,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8970},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961},{"krate":0,"index":8964},{"krate":0,"index":8967}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604365,"byte_end":604370,"line_start":381,"line_end":381,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6085},{"krate":0,"index":6086}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604630,"byte_end":604643,"line_start":392,"line_end":392,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605442,"byte_end":605453,"line_start":426,"line_end":426,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6100},{"krate":0,"index":6101}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605804,"byte_end":605823,"line_start":441,"line_end":441,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":606795,"byte_end":606800,"line_start":481,"line_end":481,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6114},{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607058,"byte_end":607071,"line_start":492,"line_end":492,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607828,"byte_end":607839,"line_start":525,"line_end":525,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608104,"byte_end":608123,"line_start":536,"line_end":536,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608864,"byte_end":608869,"line_start":566,"line_end":566,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":609019,"byte_end":609024,"line_start":572,"line_end":572,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610677,"byte_end":610692,"line_start":632,"line_end":632,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6166}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610846,"byte_end":610869,"line_start":638,"line_end":638,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6171}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":611177,"byte_end":611192,"line_start":647,"line_end":647,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":611540,"byte_end":611563,"line_start":659,"line_end":659,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6185}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612527,"byte_end":612532,"line_start":699,"line_end":699,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613126,"byte_end":613141,"line_start":724,"line_end":724,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6196},{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613806,"byte_end":613813,"line_start":752,"line_end":752,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6208},{"krate":0,"index":6209}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":614190,"byte_end":614205,"line_start":767,"line_end":767,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":615242,"byte_end":615254,"line_start":809,"line_end":809,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6229},{"krate":0,"index":6230}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":615667,"byte_end":615687,"line_start":825,"line_end":825,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6236},{"krate":0,"index":6237},{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617255,"byte_end":617260,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6261},{"krate":0,"index":6262}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617537,"byte_end":617542,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618742,"byte_end":618745,"line_start":42,"line_end":42,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618918,"byte_end":618926,"line_start":51,"line_end":51,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":619223,"byte_end":619231,"line_start":66,"line_end":66,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6324},{"krate":0,"index":6326},{"krate":0,"index":6327}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620306,"byte_end":620311,"line_start":108,"line_end":108,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620622,"byte_end":620627,"line_start":123,"line_end":123,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6348},{"krate":0,"index":6349}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":621445,"byte_end":621450,"line_start":152,"line_end":152,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":622576,"byte_end":622589,"line_start":181,"line_end":181,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6361},{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":623589,"byte_end":623602,"line_start":204,"line_end":204,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":624261,"byte_end":624274,"line_start":224,"line_end":224,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":624650,"byte_end":624660,"line_start":238,"line_end":238,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625134,"byte_end":625144,"line_start":257,"line_end":257,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6388}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625465,"byte_end":625475,"line_start":266,"line_end":266,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6392}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625596,"byte_end":625606,"line_start":272,"line_end":272,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625652,"byte_end":625662,"line_start":274,"line_end":274,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":627678,"byte_end":627684,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6430}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":628204,"byte_end":628210,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6434},{"krate":0,"index":6436},{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":629004,"byte_end":629010,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5313,"byte_end":5320,"line_start":134,"line_end":134,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5426,"byte_end":5433,"line_start":137,"line_end":137,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5521,"byte_end":5528,"line_start":140,"line_end":140,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5671,"byte_end":5678,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3984,"byte_end":3989,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":3999,"byte_end":4010,"line_start":95,"line_end":95,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17007,"byte_end":17018,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17028,"byte_end":17037,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":149}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17047,"byte_end":17056,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":163}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17066,"byte_end":17074,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17084,"byte_end":17092,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":208}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17102,"byte_end":17113,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":238}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17123,"byte_end":17132,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":251}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4020,"byte_end":4024,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":357}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":37733,"byte_end":37741,"line_start":89,"line_end":89,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":386}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4034,"byte_end":4040,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5027}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4050,"byte_end":4057,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":5089}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4067,"byte_end":4072,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5129}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4082,"byte_end":4097,"line_start":100,"line_end":100,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":5206}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4107,"byte_end":4113,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5270}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4123,"byte_end":4128,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5314}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4138,"byte_end":4141,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6026}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4151,"byte_end":4157,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6240}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":4167,"byte_end":4170,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6267}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\split_producer.rs","byte_start":10078,"byte_end":10083,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":26}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\split_producer.rs","byte_start":10509,"byte_end":10522,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\split_producer.rs","byte_start":11990,"byte_end":12003,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15285,"byte_end":15293,"line_start":53,"line_end":53,"column_start":52,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\array.rs","byte_start":15600,"byte_end":15608,"line_start":68,"line_end":68,"column_start":59,"column_end":67},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6528},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19333,"byte_end":19343,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":19800,"byte_end":19804,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20575,"byte_end":20580,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6598},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":20891,"byte_end":20896,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6598},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\binary_heap.rs","byte_start":21366,"byte_end":21371,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_map.rs","byte_start":22442,"byte_end":22446,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6630},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\btree_set.rs","byte_start":23957,"byte_end":23961,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6706},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_map.rs","byte_start":25255,"byte_end":25259,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6755},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\hash_set.rs","byte_start":27642,"byte_end":27646,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\linked_list.rs","byte_start":29401,"byte_end":29405,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6915},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":30570,"byte_end":30578,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":31128,"byte_end":31132,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6985},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":32805,"byte_end":32810,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":7031},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":33115,"byte_end":33120,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7031},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\vec_deque.rs","byte_start":33682,"byte_end":33687,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7031},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":17857,"byte_end":17867,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\collections\\mod.rs","byte_start":18284,"byte_end":18294,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":333},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145642,"byte_end":145646,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":145649,"byte_end":145654,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148656,"byte_end":148660,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":148663,"byte_end":148668,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":149976,"byte_end":149981,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":151996,"byte_end":152004,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":413},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153109,"byte_end":153113,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":153116,"byte_end":153121,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":154109,"byte_end":154117,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":7041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":155246,"byte_end":155260,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":7046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\plumbing\\mod.rs","byte_start":157619,"byte_end":157627,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162340,"byte_end":162345,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":7052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":162574,"byte_end":162579,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":7052},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":163682,"byte_end":163687,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":7052},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":164622,"byte_end":164631,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":511},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":165309,"byte_end":165318,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":523},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":165987,"byte_end":166000,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":166183,"byte_end":166196,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":167808,"byte_end":167816,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168030,"byte_end":168038,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168334,"byte_end":168342,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chain.rs","byte_start":168463,"byte_end":168471,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169241,"byte_end":169247,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169447,"byte_end":169453,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7065},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":169786,"byte_end":169792,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7065},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":170490,"byte_end":170498,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":171071,"byte_end":171084,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":613},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":172203,"byte_end":172211,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":172889,"byte_end":172897,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\chunks.rs","byte_start":173058,"byte_end":173066,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174197,"byte_end":174203,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174391,"byte_end":174397,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7075},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":174845,"byte_end":174851,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7075},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":175496,"byte_end":175504,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":668},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":176061,"byte_end":176075,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":678},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":176971,"byte_end":176985,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":177097,"byte_end":177111,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":177759,"byte_end":177773,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\cloned.rs","byte_start":178093,"byte_end":178105,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":715},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":183251,"byte_end":183266,"line_start":14,"line_end":14,"column_start":15,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":183845,"byte_end":183860,"line_start":27,"line_end":27,"column_start":24,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185040,"byte_end":185053,"line_start":57,"line_end":57,"column_start":29,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185091,"byte_end":185104,"line_start":59,"line_end":59,"column_start":13,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185486,"byte_end":185499,"line_start":73,"line_end":73,"column_start":22,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":185879,"byte_end":185894,"line_start":86,"line_end":86,"column_start":40,"column_end":55},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":750},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":186973,"byte_end":186986,"line_start":122,"line_end":122,"column_start":38,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":763},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":187978,"byte_end":187993,"line_start":155,"line_end":155,"column_start":49,"column_end":64},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":750},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\collect\\consumer.rs","byte_start":188382,"byte_end":188396,"line_start":168,"line_end":168,"column_start":47,"column_end":61},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203068,"byte_end":203074,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203262,"byte_end":203268,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7084},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":203715,"byte_end":203721,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7084},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":204365,"byte_end":204373,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":204929,"byte_end":204943,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":871},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":205838,"byte_end":205852,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":205964,"byte_end":205978,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":886},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":206625,"byte_end":206639,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":886},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\copied.rs","byte_start":206958,"byte_end":206970,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":908},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208252,"byte_end":208257,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208347,"byte_end":208352,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208488,"byte_end":208493,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":208779,"byte_end":208784,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\empty.rs","byte_start":209264,"byte_end":209277,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":954},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210257,"byte_end":210266,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210460,"byte_end":210469,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7093},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":210813,"byte_end":210822,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7093},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":211328,"byte_end":211336,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":994},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\enumerate.rs","byte_start":211920,"byte_end":211937,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214141,"byte_end":214156,"line_start":33,"line_end":33,"column_start":31,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214560,"byte_end":214575,"line_start":51,"line_end":51,"column_start":40,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1078},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":214732,"byte_end":214745,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":215571,"byte_end":215581,"line_start":101,"line_end":101,"column_start":31,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":215879,"byte_end":215889,"line_start":114,"line_end":114,"column_start":39,"column_end":49},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":216387,"byte_end":216395,"line_start":136,"line_end":136,"column_start":39,"column_end":47},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":216738,"byte_end":216746,"line_start":150,"line_end":150,"column_start":59,"column_end":67},"kind":{"Impl":{"id":116}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":217266,"byte_end":217274,"line_start":173,"line_end":173,"column_start":31,"column_end":39},"kind":{"Impl":{"id":117}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":217576,"byte_end":217584,"line_start":186,"line_end":186,"column_start":39,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":218161,"byte_end":218168,"line_start":211,"line_end":211,"column_start":42,"column_end":49},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":218629,"byte_end":218636,"line_start":227,"line_end":227,"column_start":62,"column_end":69},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219265,"byte_end":219272,"line_start":254,"line_end":254,"column_start":34,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219610,"byte_end":219617,"line_start":268,"line_end":268,"column_start":42,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":219963,"byte_end":219973,"line_start":282,"line_end":282,"column_start":31,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":220330,"byte_end":220340,"line_start":296,"line_end":296,"column_start":39,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":220684,"byte_end":220696,"line_start":316,"line_end":316,"column_start":31,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1184},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221118,"byte_end":221130,"line_start":336,"line_end":336,"column_start":40,"column_end":52},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1184},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221287,"byte_end":221297,"line_start":346,"line_end":346,"column_start":23,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1186},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":221741,"byte_end":221752,"line_start":371,"line_end":371,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222148,"byte_end":222154,"line_start":384,"line_end":384,"column_start":31,"column_end":37},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222653,"byte_end":222659,"line_start":397,"line_end":397,"column_start":39,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":222942,"byte_end":222960,"line_start":412,"line_end":412,"column_start":25,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1222},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":223388,"byte_end":223406,"line_start":432,"line_end":432,"column_start":34,"column_end":52},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1222},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":223563,"byte_end":223579,"line_start":442,"line_end":442,"column_start":23,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":224511,"byte_end":224517,"line_start":484,"line_end":484,"column_start":38,"column_end":44},"kind":{"Impl":{"id":134}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":224779,"byte_end":224785,"line_start":494,"line_end":494,"column_start":33,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225062,"byte_end":225068,"line_start":504,"line_end":504,"column_start":43,"column_end":49},"kind":{"Impl":{"id":136}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225537,"byte_end":225545,"line_start":524,"line_end":524,"column_start":31,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":225832,"byte_end":225840,"line_start":537,"line_end":537,"column_start":39,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":226297,"byte_end":226300,"line_start":557,"line_end":557,"column_start":31,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\extend.rs","byte_start":227312,"byte_end":227315,"line_start":584,"line_end":584,"column_start":39,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228370,"byte_end":228376,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7102},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228536,"byte_end":228542,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":228754,"byte_end":228760,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7102},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":229304,"byte_end":229318,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":229469,"byte_end":229483,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":230227,"byte_end":230241,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1306},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter.rs","byte_start":230624,"byte_end":230636,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1335},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":231912,"byte_end":231921,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7111},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232128,"byte_end":232137,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232327,"byte_end":232336,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7111},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":232899,"byte_end":232916,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":233069,"byte_end":233086,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1375},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":233872,"byte_end":233889,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1375},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\filter_map.rs","byte_start":234290,"byte_end":234305,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1406},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":235475,"byte_end":235487,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":235641,"byte_end":235653,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1435},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":236238,"byte_end":236250,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1435},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":236610,"byte_end":236620,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find.rs","byte_start":237647,"byte_end":237658,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1481},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":240180,"byte_end":240192,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":240742,"byte_end":240754,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1506},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":241820,"byte_end":241832,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1506},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":243390,"byte_end":243400,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1535},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\find_first_last\\mod.rs","byte_start":245108,"byte_end":245119,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1552},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":245939,"byte_end":245946,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7128},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246125,"byte_end":246132,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246313,"byte_end":246320,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7128},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":246886,"byte_end":246901,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":247046,"byte_end":247061,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":247853,"byte_end":247868,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map.rs","byte_start":248308,"byte_end":248321,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1613},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":249913,"byte_end":249924,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7137},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250133,"byte_end":250144,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250333,"byte_end":250344,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7137},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":250930,"byte_end":250949,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":251098,"byte_end":251117,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1656},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":251900,"byte_end":251919,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1656},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flat_map_iter.rs","byte_start":252331,"byte_end":252348,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1687},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253565,"byte_end":253572,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":253790,"byte_end":253797,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7146},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":254309,"byte_end":254324,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":254429,"byte_end":254444,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":255127,"byte_end":255142,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten.rs","byte_start":255500,"byte_end":255513,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1736},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":256929,"byte_end":256940,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257201,"byte_end":257212,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7155},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257759,"byte_end":257778,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":257887,"byte_end":257906,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1759},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":258580,"byte_end":258599,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1759},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\flatten_iter.rs","byte_start":258929,"byte_end":258946,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1779},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":259625,"byte_end":259629,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260426,"byte_end":260430,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7164},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":260620,"byte_end":260624,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7164},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":261233,"byte_end":261245,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1820},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":262101,"byte_end":262113,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1820},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":262582,"byte_end":262592,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1850},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":263752,"byte_end":263760,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264549,"byte_end":264557,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7176},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":264811,"byte_end":264819,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7176},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":265387,"byte_end":265403,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1893},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\fold.rs","byte_start":266321,"byte_end":266337,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1893},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267066,"byte_end":267081,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267477,"byte_end":267492,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\for_each.rs","byte_start":267916,"byte_end":267931,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":268817,"byte_end":268820,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269090,"byte_end":269098,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269455,"byte_end":269465,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":207}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":269775,"byte_end":269785,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":208}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":270249,"byte_end":270256,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":209}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":270791,"byte_end":270799,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":210}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271099,"byte_end":271106,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":211}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271429,"byte_end":271437,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271716,"byte_end":271722,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":213}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":271984,"byte_end":271990,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":214}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272258,"byte_end":272264,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272528,"byte_end":272534,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":216}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":272805,"byte_end":272811,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":217}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\from_par_iter.rs","byte_start":273255,"byte_end":273258,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":218}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274792,"byte_end":274799,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7188},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":274960,"byte_end":274967,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":275183,"byte_end":275190,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7188},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":275650,"byte_end":275657,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7188},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":276399,"byte_end":276407,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2113},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":277078,"byte_end":277093,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2125},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":278303,"byte_end":278318,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":278468,"byte_end":278483,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2143},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":279226,"byte_end":279241,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2143},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\inspect.rs","byte_start":279620,"byte_end":279633,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2172},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":280957,"byte_end":280967,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":281219,"byte_end":281229,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":7197},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":281606,"byte_end":281616,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":7197},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":282512,"byte_end":282521,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2217},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":283331,"byte_end":283340,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2231},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":284121,"byte_end":284139,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":284459,"byte_end":284477,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":287342,"byte_end":287355,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":288488,"byte_end":288501,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave.rs","byte_start":289062,"byte_end":289075,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":290002,"byte_end":290020,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":7210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":290662,"byte_end":290680,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":7210},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\interleave_shortest.rs","byte_start":291057,"byte_end":291075,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7210},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292177,"byte_end":292188,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":7222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292419,"byte_end":292430,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7222},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":292960,"byte_end":292971,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":7222},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":293878,"byte_end":293886,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2338},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":294453,"byte_end":294472,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":294713,"byte_end":294732,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":296907,"byte_end":296922,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":297694,"byte_end":297709,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298357,"byte_end":298372,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298720,"byte_end":298739,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":298964,"byte_end":298983,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":300061,"byte_end":300080,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\intersperse.rs","byte_start":300620,"byte_end":300637,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2410},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302375,"byte_end":302381,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":7232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302586,"byte_end":302592,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":7232},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":302927,"byte_end":302933,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":7232},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":303511,"byte_end":303519,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2448},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":304154,"byte_end":304168,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2458},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305475,"byte_end":305481,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":305686,"byte_end":305692,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7242},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":306027,"byte_end":306033,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7242},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":306611,"byte_end":306619,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2488},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\len.rs","byte_start":307254,"byte_end":307268,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2498},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308635,"byte_end":308638,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7252},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":308795,"byte_end":308798,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":309001,"byte_end":309004,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7252},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":309478,"byte_end":309481,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":7252},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":310223,"byte_end":310231,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2550},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":310910,"byte_end":310921,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2563},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312093,"byte_end":312104,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312245,"byte_end":312256,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2582},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":312995,"byte_end":313006,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2582},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map.rs","byte_start":313397,"byte_end":313406,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2613},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314643,"byte_end":314650,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":314882,"byte_end":314889,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":7261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":315121,"byte_end":315128,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7261},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":315644,"byte_end":315651,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":7261},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":316496,"byte_end":316504,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":317287,"byte_end":317302,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2686},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":318635,"byte_end":318646,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2708},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319027,"byte_end":319038,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2708},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319329,"byte_end":319340,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2708},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319654,"byte_end":319669,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":319835,"byte_end":319850,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2738},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":320694,"byte_end":320709,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2738},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":321169,"byte_end":321182,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2774},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322713,"byte_end":322720,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":7273},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":322893,"byte_end":322900,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":7273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":323144,"byte_end":323151,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7273},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":323691,"byte_end":323698,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7273},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":324573,"byte_end":324581,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2834},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":325391,"byte_end":325406,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2851},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":326856,"byte_end":326871,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":327053,"byte_end":327068,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2874},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\map_with.rs","byte_start":327924,"byte_end":327939,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2874},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":337317,"byte_end":337329,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2921},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":337673,"byte_end":337685,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2921},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":338041,"byte_end":338053,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2921},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\noop.rs","byte_start":338247,"byte_end":338258,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2943},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339226,"byte_end":339230,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":8164},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\once.rs","byte_start":339516,"byte_end":339520,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":8164},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340707,"byte_end":340711,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":8182},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340869,"byte_end":340873,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":8182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":340983,"byte_end":340992,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":8173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":341187,"byte_end":341196,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":8173},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":341706,"byte_end":341715,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":8173},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":342415,"byte_end":342423,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3000},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":343132,"byte_end":343149,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3009},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344247,"byte_end":344260,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344607,"byte_end":344620,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":344871,"byte_end":344884,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":345195,"byte_end":345212,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3044},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":346170,"byte_end":346187,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3044},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":346666,"byte_end":346681,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3065},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\panic_fuse.rs","byte_start":347530,"byte_end":347546,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3085},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349290,"byte_end":349295,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":3145}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349455,"byte_end":349456,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3148},"to":{"krate":0,"index":3145}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":349966,"byte_end":349976,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":8189},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":350974,"byte_end":350994,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3155},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\par_bridge.rs","byte_start":351286,"byte_end":351306,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3155},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356131,"byte_end":356140,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":8198},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356329,"byte_end":356338,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":8198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":356562,"byte_end":356571,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":8198},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":357137,"byte_end":357154,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":357372,"byte_end":357389,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3197},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\positions.rs","byte_start":358288,"byte_end":358303,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3220},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359447,"byte_end":359462,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359484,"byte_end":359499,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":359648,"byte_end":359663,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3255},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360213,"byte_end":360228,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3255},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360460,"byte_end":360475,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3255},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\product.rs","byte_start":360660,"byte_end":360673,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3280},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361688,"byte_end":361702,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3302},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361744,"byte_end":361758,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3302},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":361860,"byte_end":361874,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3302},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362401,"byte_end":362415,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3302},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362664,"byte_end":362678,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3302},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\reduce.rs","byte_start":362919,"byte_end":362931,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3341},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":364333,"byte_end":364339,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":365191,"byte_end":365197,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":8207},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":365647,"byte_end":365661,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3378},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":366712,"byte_end":366719,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":8216},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":367037,"byte_end":367044,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":8216},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":367656,"byte_end":367671,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3402},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368468,"byte_end":368472,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368850,"byte_end":368854,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\repeat.rs","byte_start":368983,"byte_end":368987,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369566,"byte_end":369569,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":369751,"byte_end":369754,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8226},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":370089,"byte_end":370092,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8226},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":370662,"byte_end":370670,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3449},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\rev.rs","byte_start":371185,"byte_end":371196,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3459},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372401,"byte_end":372405,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372638,"byte_end":372642,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8235},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":372977,"byte_end":372981,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8235},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\skip.rs","byte_start":373562,"byte_end":373570,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3496},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378697,"byte_end":378702,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":8245},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":378882,"byte_end":378887,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8245},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\splitter.rs","byte_start":379375,"byte_end":379388,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3531},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380308,"byte_end":380319,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3566},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380341,"byte_end":380352,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380493,"byte_end":380504,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3566},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":380971,"byte_end":380982,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3566},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":381198,"byte_end":381209,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3566},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\sum.rs","byte_start":381382,"byte_end":381391,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3591},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382376,"byte_end":382380,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":8254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382613,"byte_end":382617,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":8254},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":382952,"byte_end":382956,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8254},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\take.rs","byte_start":383519,"byte_end":383527,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3625},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":384106,"byte_end":384113,"line_start":10,"line_end":10,"column_start":19,"column_end":26},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385023,"byte_end":385030,"line_start":41,"line_end":41,"column_start":55,"column_end":62},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8264},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385226,"byte_end":385233,"line_start":47,"line_end":47,"column_start":40,"column_end":47},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8264},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":385937,"byte_end":385952,"line_start":77,"line_end":77,"column_start":42,"column_end":57},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":386858,"byte_end":386873,"line_start":113,"line_end":113,"column_start":51,"column_end":66},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":387412,"byte_end":387425,"line_start":138,"line_end":138,"column_start":36,"column_end":49},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3715},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":388221,"byte_end":388232,"line_start":172,"line_end":172,"column_start":15,"column_end":26},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":389089,"byte_end":389100,"line_start":201,"line_end":201,"column_start":56,"column_end":67},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":8279},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":389385,"byte_end":389396,"line_start":213,"line_end":213,"column_start":36,"column_end":47},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8279},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":390018,"byte_end":390037,"line_start":241,"line_end":241,"column_start":38,"column_end":57},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_fold.rs","byte_start":391015,"byte_end":391034,"line_start":281,"line_end":281,"column_start":47,"column_end":66},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392180,"byte_end":392197,"line_start":31,"line_end":31,"column_start":26,"column_end":43},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3808},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392239,"byte_end":392256,"line_start":33,"line_end":33,"column_start":27,"column_end":44},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3808},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":392358,"byte_end":392375,"line_start":39,"line_end":39,"column_start":36,"column_end":53},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393008,"byte_end":393025,"line_start":66,"line_end":66,"column_start":45,"column_end":62},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393304,"byte_end":393321,"line_start":81,"line_end":81,"column_start":35,"column_end":52},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce.rs","byte_start":393827,"byte_end":393842,"line_start":100,"line_end":100,"column_start":30,"column_end":45},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3848},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395342,"byte_end":395363,"line_start":28,"line_end":28,"column_start":22,"column_end":43},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3892},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395397,"byte_end":395418,"line_start":30,"line_end":30,"column_start":23,"column_end":44},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3892},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":395512,"byte_end":395533,"line_start":36,"line_end":36,"column_start":32,"column_end":53},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3892},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":396121,"byte_end":396142,"line_start":62,"line_end":62,"column_start":41,"column_end":62},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":3892},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":396387,"byte_end":396408,"line_start":76,"line_end":76,"column_start":39,"column_end":60},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":3892},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\try_reduce_with.rs","byte_start":397121,"byte_end":397140,"line_start":99,"line_end":99,"column_start":30,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":3925},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398375,"byte_end":398379,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":398382,"byte_end":398386,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":401063,"byte_end":401068,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":3973},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":401949,"byte_end":401958,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3989},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":402995,"byte_end":403007,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4007},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":403638,"byte_end":403644,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4020},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":405045,"byte_end":405051,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":405988,"byte_end":406001,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":407264,"byte_end":407277,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":407941,"byte_end":407952,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4083},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":408693,"byte_end":408705,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4101},"to":{"krate":0,"index":429}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":409789,"byte_end":409797,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4126},"to":{"krate":0,"index":3943}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":411279,"byte_end":411288,"line_start":507,"line_end":507,"column_start":25,"column_end":34},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4152},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\unzip.rs","byte_start":411406,"byte_end":411415,"line_start":513,"line_end":513,"column_start":38,"column_end":47},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4152},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412292,"byte_end":412298,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":8291},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412458,"byte_end":412464,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":8291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":412676,"byte_end":412682,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":8291},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":413144,"byte_end":413150,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":8291},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":413891,"byte_end":413899,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":414576,"byte_end":414590,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4208},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":415850,"byte_end":415864,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":416011,"byte_end":416025,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4226},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":416771,"byte_end":416785,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4226},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":417306,"byte_end":417318,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4255},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":418264,"byte_end":418273,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":419023,"byte_end":419032,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\update.rs","byte_start":419136,"byte_end":419145,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":419958,"byte_end":419967,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":8313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":420157,"byte_end":420166,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":8313},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":420796,"byte_end":420813,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4314},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":421613,"byte_end":421630,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4314},"to":{"krate":0,"index":432}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\while_some.rs","byte_start":422033,"byte_end":422048,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4335},"to":{"krate":0,"index":421}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423702,"byte_end":423705,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":423928,"byte_end":423931,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8322},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":424315,"byte_end":424318,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8322},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":424978,"byte_end":424987,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4382},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":425608,"byte_end":425617,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4394},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip.rs","byte_start":426274,"byte_end":426285,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4406},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427694,"byte_end":427699,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":8335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":427969,"byte_end":427974,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":8335},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\zip_eq.rs","byte_start":428366,"byte_end":428371,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":8335},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429476,"byte_end":429482,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":8347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":429689,"byte_end":429695,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":8347},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":430030,"byte_end":430036,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":8347},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":430718,"byte_end":430726,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":4621},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\step_by.rs","byte_start":431407,"byte_end":431421,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4632},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":42795,"byte_end":42796,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":4659},"to":{"krate":0,"index":4652}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":44304,"byte_end":44305,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4670},"to":{"krate":0,"index":4663}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45194,"byte_end":45199,"line_start":348,"line_end":348,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":45202,"byte_end":45206,"line_start":348,"line_end":348,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108588,"byte_end":108589,"line_start":2230,"line_end":2230,"column_start":52,"column_end":53},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":4878},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":108956,"byte_end":108972,"line_start":2244,"line_end":2244,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":4674},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139307,"byte_end":139318,"line_start":3180,"line_end":3180,"column_start":24,"column_end":35},"kind":{"Impl":{"id":440}},"from":{"krate":2,"index":44676},"to":{"krate":0,"index":4982}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":139962,"byte_end":139968,"line_start":3205,"line_end":3205,"column_start":21,"column_end":27},"kind":{"Impl":{"id":441}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":4982}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":140576,"byte_end":140582,"line_start":3230,"line_end":3230,"column_start":24,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":4982}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":141198,"byte_end":141202,"line_start":3255,"line_end":3255,"column_start":24,"column_end":28},"kind":{"Impl":{"id":443}},"from":{"krate":2,"index":49132},"to":{"krate":0,"index":4982}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\iter\\mod.rs","byte_start":141946,"byte_end":141950,"line_start":3281,"line_end":3281,"column_start":24,"column_end":28},"kind":{"Impl":{"id":444}},"from":{"krate":2,"index":49132},"to":{"krate":0,"index":4982}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433220,"byte_end":433226,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":445}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433399,"byte_end":433407,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8363},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":433702,"byte_end":433710,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8363},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":434867,"byte_end":434871,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8372},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":436347,"byte_end":436361,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5071},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\option.rs","byte_start":436973,"byte_end":436979,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"kind":{"Impl":{"id":454}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":440006,"byte_end":440011,"line_start":53,"line_end":53,"column_start":34,"column_end":39},"kind":{"Impl":{"id":455}},"from":{"krate":2,"index":44768},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":440288,"byte_end":440300,"line_start":69,"line_end":69,"column_start":26,"column_end":38},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5149},"to":{"krate":2,"index":7790}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441184,"byte_end":441189,"line_start":92,"line_end":92,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":5159}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441192,"byte_end":441196,"line_start":92,"line_end":92,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":5159}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441527,"byte_end":441539,"line_start":103,"line_end":103,"column_start":36,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5159},"to":{"krate":0,"index":5163}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":441954,"byte_end":441958,"line_start":119,"line_end":119,"column_start":44,"column_end":48},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8418},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":442287,"byte_end":442291,"line_start":135,"line_end":135,"column_start":58,"column_end":62},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8418},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":447926,"byte_end":447930,"line_start":323,"line_end":323,"column_start":27,"column_end":31},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":8418},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range.rs","byte_start":448237,"byte_end":448241,"line_start":338,"line_end":338,"column_start":34,"column_end":38},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":8418},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":453386,"byte_end":453390,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":8631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":454328,"byte_end":454342,"line_start":75,"line_end":75,"column_start":34,"column_end":48},"kind":{"Impl":{"id":482}},"from":{"krate":2,"index":44837},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455245,"byte_end":455250,"line_start":98,"line_end":98,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":5225}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455253,"byte_end":455257,"line_start":98,"line_end":98,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":5225}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":455588,"byte_end":455600,"line_start":109,"line_end":109,"column_start":36,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5225},"to":{"krate":0,"index":5229}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":456015,"byte_end":456019,"line_start":125,"line_end":125,"column_start":44,"column_end":48},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8631},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":456348,"byte_end":456352,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":8631},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":459848,"byte_end":459852,"line_start":265,"line_end":265,"column_start":27,"column_end":31},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8631},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\range_inclusive.rs","byte_start":460232,"byte_end":460236,"line_start":281,"line_end":281,"column_start":34,"column_end":38},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8631},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":463860,"byte_end":463866,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":503}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":464300,"byte_end":464304,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8758},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\result.rs","byte_start":465557,"byte_end":465563,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":511}},"from":{"krate":2,"index":46410},"to":{"krate":0,"index":4947}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501712,"byte_end":501718,"line_start":13,"line_end":13,"column_start":22,"column_end":28},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":501876,"byte_end":501882,"line_start":19,"line_end":19,"column_start":32,"column_end":38},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8804},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502011,"byte_end":502017,"line_start":25,"line_end":25,"column_start":51,"column_end":57},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8804},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502345,"byte_end":502351,"line_start":40,"line_end":40,"column_start":58,"column_end":64},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8804},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":502974,"byte_end":502988,"line_start":68,"line_end":68,"column_start":43,"column_end":57},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":5347},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":503854,"byte_end":503865,"line_start":100,"line_end":100,"column_start":22,"column_end":33},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504451,"byte_end":504462,"line_start":120,"line_end":120,"column_start":32,"column_end":43},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8813},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504596,"byte_end":504607,"line_start":126,"line_end":126,"column_start":51,"column_end":62},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8813},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":504935,"byte_end":504946,"line_start":141,"line_end":141,"column_start":58,"column_end":69},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8813},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":505566,"byte_end":505585,"line_start":169,"line_end":169,"column_start":43,"column_end":62},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":5383},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506423,"byte_end":506432,"line_start":200,"line_end":200,"column_start":22,"column_end":31},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506613,"byte_end":506622,"line_start":206,"line_end":206,"column_start":51,"column_end":60},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8823},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":506954,"byte_end":506963,"line_start":221,"line_end":221,"column_start":58,"column_end":67},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8823},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":507596,"byte_end":507613,"line_start":249,"line_end":249,"column_start":43,"column_end":60},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5414},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":508509,"byte_end":508523,"line_start":281,"line_end":281,"column_start":22,"column_end":36},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510245,"byte_end":510259,"line_start":324,"line_end":324,"column_start":51,"column_end":65},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8832},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":510591,"byte_end":510605,"line_start":339,"line_end":339,"column_start":58,"column_end":72},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8832},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\chunks.rs","byte_start":511235,"byte_end":511257,"line_start":367,"line_end":367,"column_start":43,"column_end":65},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5448},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":512715,"byte_end":512725,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5484},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":515634,"byte_end":515647,"line_start":102,"line_end":102,"column_start":22,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":519373,"byte_end":519382,"line_start":205,"line_end":205,"column_start":22,"column_end":31},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mergesort.rs","byte_start":530970,"byte_end":530975,"line_start":511,"line_end":511,"column_start":22,"column_end":27},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":5527},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\quicksort.rs","byte_start":539992,"byte_end":540002,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":5562},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576149,"byte_end":576156,"line_start":12,"line_end":12,"column_start":22,"column_end":29},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576314,"byte_end":576321,"line_start":18,"line_end":18,"column_start":32,"column_end":39},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8864},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576451,"byte_end":576458,"line_start":24,"line_end":24,"column_start":51,"column_end":58},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8864},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":576786,"byte_end":576793,"line_start":39,"line_end":39,"column_start":58,"column_end":65},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8864},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":577418,"byte_end":577433,"line_start":67,"line_end":67,"column_start":43,"column_end":58},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":5655},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578331,"byte_end":578343,"line_start":99,"line_end":99,"column_start":22,"column_end":34},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":578892,"byte_end":578904,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8873},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":579039,"byte_end":579051,"line_start":124,"line_end":124,"column_start":51,"column_end":63},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8873},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":579379,"byte_end":579391,"line_start":139,"line_end":139,"column_start":58,"column_end":70},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8873},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580013,"byte_end":580033,"line_start":167,"line_end":167,"column_start":43,"column_end":63},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":5691},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":580917,"byte_end":580927,"line_start":198,"line_end":198,"column_start":22,"column_end":32},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":581108,"byte_end":581118,"line_start":204,"line_end":204,"column_start":51,"column_end":61},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8883},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":581450,"byte_end":581460,"line_start":219,"line_end":219,"column_start":58,"column_end":68},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8883},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":582095,"byte_end":582113,"line_start":247,"line_end":247,"column_start":43,"column_end":61},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":5722},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":583041,"byte_end":583056,"line_start":279,"line_end":279,"column_start":22,"column_end":37},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":584742,"byte_end":584757,"line_start":321,"line_end":321,"column_start":51,"column_end":66},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8892},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":585089,"byte_end":585104,"line_start":336,"line_end":336,"column_start":58,"column_end":73},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8892},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\rchunks.rs","byte_start":585736,"byte_end":585759,"line_start":364,"line_end":364,"column_start":43,"column_end":66},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":5756},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":492944,"byte_end":492948,"line_start":687,"line_end":687,"column_start":32,"column_end":36},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8906},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493075,"byte_end":493079,"line_start":693,"line_end":693,"column_start":51,"column_end":55},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8906},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493405,"byte_end":493409,"line_start":708,"line_end":708,"column_start":58,"column_end":62},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":8906},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":493912,"byte_end":493924,"line_start":732,"line_end":732,"column_start":43,"column_end":55},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":5895},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494482,"byte_end":494489,"line_start":753,"line_end":753,"column_start":32,"column_end":39},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8914},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494619,"byte_end":494626,"line_start":759,"line_end":759,"column_start":51,"column_end":58},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8914},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":494954,"byte_end":494961,"line_start":774,"line_end":774,"column_start":58,"column_end":65},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8914},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":495635,"byte_end":495650,"line_start":803,"line_end":803,"column_start":43,"column_end":58},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":5925},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496525,"byte_end":496532,"line_start":834,"line_end":834,"column_start":51,"column_end":58},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8923},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":496862,"byte_end":496869,"line_start":849,"line_end":849,"column_start":58,"column_end":65},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8923},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497382,"byte_end":497397,"line_start":873,"line_end":873,"column_start":43,"column_end":58},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":5952},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":497978,"byte_end":497983,"line_start":896,"line_end":896,"column_start":36,"column_end":41},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":5963},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":498166,"byte_end":498171,"line_start":905,"line_end":905,"column_start":36,"column_end":41},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":5963},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":498367,"byte_end":498372,"line_start":911,"line_end":911,"column_start":40,"column_end":45},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":5963},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":499859,"byte_end":499867,"line_start":972,"line_end":972,"column_start":36,"column_end":44},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":5997},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\slice\\mod.rs","byte_start":500092,"byte_end":500100,"line_start":980,"line_end":980,"column_start":40,"column_end":48},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":5997},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601835,"byte_end":601840,"line_start":288,"line_end":288,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":6055}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601843,"byte_end":601847,"line_start":288,"line_end":288,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":6055}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":601850,"byte_end":601854,"line_start":288,"line_end":288,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":6055}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604036,"byte_end":604038,"line_start":365,"line_end":365,"column_start":54,"column_end":56},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6079},"to":{"krate":0,"index":6055}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604365,"byte_end":604370,"line_start":381,"line_end":381,"column_start":32,"column_end":37},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8971},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":604630,"byte_end":604643,"line_start":392,"line_end":392,"column_start":33,"column_end":46},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6080},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605442,"byte_end":605453,"line_start":426,"line_end":426,"column_start":32,"column_end":43},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8980},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":605804,"byte_end":605823,"line_start":441,"line_end":441,"column_start":33,"column_end":52},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6094},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":606795,"byte_end":606800,"line_start":481,"line_end":481,"column_start":32,"column_end":37},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":8989},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607058,"byte_end":607071,"line_start":492,"line_end":492,"column_start":33,"column_end":46},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6109},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":607828,"byte_end":607839,"line_start":525,"line_end":525,"column_start":32,"column_end":43},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":8998},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608104,"byte_end":608123,"line_start":536,"line_end":536,"column_start":33,"column_end":52},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6123},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":608864,"byte_end":608869,"line_start":566,"line_end":566,"column_start":23,"column_end":28},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":9007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":609019,"byte_end":609024,"line_start":572,"line_end":572,"column_start":44,"column_end":49},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":9007},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610677,"byte_end":610692,"line_start":632,"line_end":632,"column_start":23,"column_end":38},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":9020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":610846,"byte_end":610869,"line_start":638,"line_end":638,"column_start":36,"column_end":59},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":611177,"byte_end":611192,"line_start":647,"line_end":647,"column_start":44,"column_end":59},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":9020},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":611540,"byte_end":611563,"line_start":659,"line_end":659,"column_start":58,"column_end":81},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6157},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":612527,"byte_end":612532,"line_start":699,"line_end":699,"column_start":32,"column_end":37},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":9033},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613126,"byte_end":613141,"line_start":724,"line_end":724,"column_start":32,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":9043},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":613806,"byte_end":613813,"line_start":752,"line_end":752,"column_start":44,"column_end":51},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":9053},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":614190,"byte_end":614205,"line_start":767,"line_end":767,"column_start":51,"column_end":66},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6199},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":615242,"byte_end":615254,"line_start":809,"line_end":809,"column_start":44,"column_end":56},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":9066},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\str.rs","byte_start":615667,"byte_end":615687,"line_start":825,"line_end":825,"column_start":51,"column_end":71},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6219},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617255,"byte_end":617260,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9079},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\string.rs","byte_start":617537,"byte_end":617542,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9079},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618742,"byte_end":618745,"line_start":42,"line_end":42,"column_start":40,"column_end":43},"kind":{"Impl":{"id":594}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":4648}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":618918,"byte_end":618926,"line_start":51,"line_end":51,"column_start":36,"column_end":44},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":9086},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":619223,"byte_end":619231,"line_start":66,"line_end":66,"column_start":43,"column_end":51},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":9086},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620306,"byte_end":620311,"line_start":108,"line_end":108,"column_start":43,"column_end":48},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":9095},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":620622,"byte_end":620627,"line_start":123,"line_end":123,"column_start":50,"column_end":55},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9095},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":621445,"byte_end":621450,"line_start":152,"line_end":152,"column_start":31,"column_end":36},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9095},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":622576,"byte_end":622589,"line_start":181,"line_end":181,"column_start":15,"column_end":28},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":623589,"byte_end":623602,"line_start":204,"line_end":204,"column_start":43,"column_end":56},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6355},"to":{"krate":0,"index":404}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":624261,"byte_end":624274,"line_start":224,"line_end":224,"column_start":39,"column_end":52},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6355},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":624650,"byte_end":624660,"line_start":238,"line_end":238,"column_start":36,"column_end":46},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625134,"byte_end":625144,"line_start":257,"line_end":257,"column_start":47,"column_end":57},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":7834}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625465,"byte_end":625475,"line_start":266,"line_end":266,"column_start":45,"column_end":55},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":7859}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625596,"byte_end":625606,"line_start":272,"line_end":272,"column_start":47,"column_end":57},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":8260}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\vec.rs","byte_start":625652,"byte_end":625662,"line_start":274,"line_end":274,"column_start":32,"column_end":42},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":3300}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":627678,"byte_end":627684,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":608}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4674}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":628204,"byte_end":628210,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":609}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4882}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\par_either.rs","byte_start":629004,"byte_end":629010,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":610}},"from":{"krate":16,"index":181},"to":{"krate":0,"index":4951}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5313,"byte_end":5320,"line_start":134,"line_end":134,"column_start":31,"column_end":38},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":6515},"to":{"krate":2,"index":3057}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5426,"byte_end":5433,"line_start":137,"line_end":137,"column_start":31,"column_end":38},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":6515},"to":{"krate":2,"index":3069}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5521,"byte_end":5528,"line_start":140,"line_end":140,"column_start":19,"column_end":26},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":6515},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rayon-1.5.3\\src\\lib.rs","byte_start":5671,"byte_end":5678,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":6515},"to":{"krate":2,"index":3067}}]}