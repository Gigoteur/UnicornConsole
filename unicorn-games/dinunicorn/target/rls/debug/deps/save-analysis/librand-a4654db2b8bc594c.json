{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rand","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","-C","metadata=a4654db2b8bc594c","-C","extra-filename=-a4654db2b8bc594c","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","--extern","winapi=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libwinapi-9aeacbd1649155c5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\librand-a4654db2b8bc594c.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[6458330937389031091,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","num":16,"id":{"name":"winapi","disambiguator":[15949846003312357418,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":472,"byte_end":39222,"line_start":11,"line_end":1220,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9895,"byte_end":9904,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9940,"byte_end":9945,"line_start":267,"line_end":267,"column_start":35,"column_end":40},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9979,"byte_end":9987,"line_start":270,"line_end":270,"column_start":17,"column_end":25},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9989,"byte_end":9999,"line_start":270,"line_end":270,"column_start":27,"column_end":37},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10018,"byte_end":10027,"line_start":271,"line_end":271,"column_start":17,"column_end":26},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10043,"byte_end":10054,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40190,"byte_end":40195,"line_start":24,"line_end":24,"column_start":22,"column_end":27},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40241,"byte_end":40246,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40248,"byte_end":40258,"line_start":26,"line_end":26,"column_start":30,"column_end":40},"alias_span":null,"name":"ChiSquared","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40260,"byte_end":40267,"line_start":26,"line_end":26,"column_start":42,"column_end":49},"alias_span":null,"name":"FisherF","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40269,"byte_end":40277,"line_start":26,"line_end":26,"column_start":51,"column_end":59},"alias_span":null,"name":"StudentT","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40325,"byte_end":40331,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Normal","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40333,"byte_end":40342,"line_start":28,"line_end":28,"column_start":32,"column_end":41},"alias_span":null,"name":"LogNormal","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40394,"byte_end":40397,"line_start":30,"line_end":30,"column_start":28,"column_end":31},"alias_span":null,"name":"Exp","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10682,"byte_end":10691,"line_start":294,"line_end":294,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":558}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10773,"byte_end":10781,"line_start":298,"line_end":298,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10783,"byte_end":10793,"line_start":298,"line_end":298,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188652,"byte_end":188661,"line_start":48,"line_end":48,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":632}},{"kind":"Use","ref_id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188684,"byte_end":188692,"line_start":49,"line_end":49,"column_start":22,"column_end":30},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":632}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188717,"byte_end":188727,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":632}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188753,"byte_end":188764,"line_start":51,"line_end":51,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":632}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":472,"byte_end":39222,"line_start":11,"line_end":1220,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":327},{"krate":0,"index":405},{"krate":0,"index":470},{"krate":0,"index":495},{"krate":0,"index":532},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":570},{"krate":0,"index":632},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":863},{"krate":0,"index":871},{"krate":0,"index":1580},{"krate":0,"index":1586},{"krate":0,"index":878},{"krate":0,"index":1591},{"krate":0,"index":1595},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":1599},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":903},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":914},{"krate":0,"index":916}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"/ Utilities for random number generation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The key functions are `random()` and `Rng::gen()`. These are polymorphic and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":519,"byte_end":599,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ so can be used to generate any type that implements `Rand`. Type inference","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":600,"byte_end":678,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ means that often a simple call to `rand::random()` or `rng.gen()` will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":679,"byte_end":753,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ suffice, but sometimes an annotation is required, e.g.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":754,"byte_end":812,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ `rand::random::<f64>()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":813,"byte_end":841,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":842,"byte_end":845,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See the `distributions` submodule for sampling random numbers from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":846,"byte_end":916,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ distributions like normal and exponential.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":917,"byte_end":963,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":964,"byte_end":967,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":968,"byte_end":979,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":980,"byte_end":983,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate is [on crates.io](https://crates.io/crates/rand) and can be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":984,"byte_end":1058,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ used by adding `rand` to the dependencies in your project's `Cargo.toml`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1059,"byte_end":1136,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1137,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1141,"byte_end":1152,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1153,"byte_end":1171,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ rand = \"0.4\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1172,"byte_end":1188,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1189,"byte_end":1196,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1197,"byte_end":1200,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ and this to your crate root:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1201,"byte_end":1233,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1234,"byte_end":1237,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1238,"byte_end":1249,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1250,"byte_end":1272,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1273,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1281,"byte_end":1284,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Thread-local RNG","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1285,"byte_end":1307,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1308,"byte_end":1311,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ There is built-in support for a RNG associated with each thread stored","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1312,"byte_end":1386,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ in thread-local storage. This RNG can be accessed via `thread_rng`, or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1387,"byte_end":1461,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ used implicitly via `random`. This RNG is normally randomly seeded","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1462,"byte_end":1532,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ from an operating-system source of randomness, e.g. `/dev/urandom` on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1533,"byte_end":1606,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ Unix systems, and will automatically reseed itself from this source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1607,"byte_end":1678,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ after generating 32 KiB of random data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1679,"byte_end":1722,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1723,"byte_end":1726,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Cryptographic security","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1727,"byte_end":1755,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1756,"byte_end":1759,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ An application that requires an entropy source for cryptographic purposes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1760,"byte_end":1837,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ must use `OsRng`, which reads randomness from the source that the operating","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1838,"byte_end":1917,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ system provides (e.g. `/dev/urandom` on Unixes or `CryptGenRandom()` on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1918,"byte_end":1993,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ Windows).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":1994,"byte_end":2007,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/ The other random number generators provided by this module are not suitable","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2008,"byte_end":2087,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ for such purposes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2088,"byte_end":2110,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2111,"byte_end":2114,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ *Note*: many Unix systems provide `/dev/random` as well as `/dev/urandom`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2115,"byte_end":2193,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ This module uses `/dev/urandom` for the following reasons:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2194,"byte_end":2256,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2257,"byte_end":2260,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ -   On Linux, `/dev/random` may block if entropy pool is empty;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2261,"byte_end":2328,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/     `/dev/urandom` will not block.  This does not mean that `/dev/random`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2329,"byte_end":2406,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/     provides better output than `/dev/urandom`; the kernel internally runs a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2407,"byte_end":2487,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/     cryptographically secure pseudorandom number generator (CSPRNG) based on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2488,"byte_end":2568,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/     entropy pool for random number generation, so the \"quality\" of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2569,"byte_end":2639,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/     `/dev/random` is not better than `/dev/urandom` in most cases.  However,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2640,"byte_end":2720,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/     this means that `/dev/urandom` can yield somewhat predictable randomness","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2721,"byte_end":2801,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     if the entropy pool is very small, such as immediately after first","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2802,"byte_end":2876,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/     booting.  Linux 3.17 added the `getrandom(2)` system call which solves","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2877,"byte_end":2955,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/     the issue: it blocks if entropy pool is not initialized yet, but it does","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":2956,"byte_end":3036,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/     not block once initialized.  `OsRng` tries to use `getrandom(2)` if","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3037,"byte_end":3112,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/     available, and use `/dev/urandom` fallback if not.  If an application","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3113,"byte_end":3190,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     does not have `getrandom` and likely to be run soon after first booting,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3191,"byte_end":3271,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/     or on a system with very few entropy sources, one should consider using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3272,"byte_end":3351,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     `/dev/random` via `ReadRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3352,"byte_end":3388,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"/ -   On some systems (e.g. FreeBSD, OpenBSD and Mac OS X) there is no","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3389,"byte_end":3461,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/     difference between the two sources. (Also note that, on some systems","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3462,"byte_end":3538,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/     e.g.  FreeBSD, both `/dev/random` and `/dev/urandom` may block once if","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3539,"byte_end":3617,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/     the CSPRNG has not seeded yet.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3618,"byte_end":3657,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3658,"byte_end":3661,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3662,"byte_end":3676,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3677,"byte_end":3680,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3681,"byte_end":3692,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3693,"byte_end":3711,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3712,"byte_end":3715,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3716,"byte_end":3753,"line_start":84,"line_end":84,"column_start":1,"column_end":38}},{"value":"/ if rng.gen() { // random bool","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3754,"byte_end":3787,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/     println!(\"i32: {}, u32: {}\", rng.gen::<i32>(), rng.gen::<u32>())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3788,"byte_end":3860,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3861,"byte_end":3866,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3867,"byte_end":3874,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3875,"byte_end":3878,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3879,"byte_end":3890,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ let tuple = rand::random::<(f64, char)>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3891,"byte_end":3937,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ println!(\"{:?}\", tuple)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3938,"byte_end":3965,"line_start":92,"line_end":92,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3966,"byte_end":3973,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3974,"byte_end":3977,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Monte Carlo estimation of π","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":3978,"byte_end":4013,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4014,"byte_end":4017,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For this example, imagine we have a square with sides of length 2 and a unit","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4018,"byte_end":4098,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ circle, both centered at the origin. Since the area of a unit circle is π,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4099,"byte_end":4178,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ we have:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4179,"byte_end":4191,"line_start":99,"line_end":99,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4192,"byte_end":4195,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4196,"byte_end":4207,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/     (area of unit circle) / (area of square) = π / 4","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4208,"byte_end":4265,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4266,"byte_end":4273,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4274,"byte_end":4277,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ So if we sample many points randomly from the square, roughly π / 4 of them","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4278,"byte_end":4358,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ should be inside the circle.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4359,"byte_end":4391,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4392,"byte_end":4395,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ We can use the above fact to estimate the value of π: pick many points in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4396,"byte_end":4474,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ the square at random, calculate the fraction that fall within the circle,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4475,"byte_end":4552,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ and multiply this fraction by 4.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4553,"byte_end":4589,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4590,"byte_end":4593,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4594,"byte_end":4601,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4602,"byte_end":4658,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4659,"byte_end":4662,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4663,"byte_end":4678,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/    let between = Range::new(-1f64, 1.);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4679,"byte_end":4722,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/    let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4723,"byte_end":4763,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4764,"byte_end":4767,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/    let total = 1_000_000;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4768,"byte_end":4797,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/    let mut in_circle = 0;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4798,"byte_end":4827,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4828,"byte_end":4831,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/    for _ in 0..total {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4832,"byte_end":4858,"line_start":122,"line_end":122,"column_start":1,"column_end":27}},{"value":"/        let a = between.ind_sample(&mut rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4859,"byte_end":4907,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/        let b = between.ind_sample(&mut rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4908,"byte_end":4956,"line_start":124,"line_end":124,"column_start":1,"column_end":49}},{"value":"/        if a*a + b*b <= 1. {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4957,"byte_end":4988,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/            in_circle += 1;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":4989,"byte_end":5019,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/        }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5020,"byte_end":5032,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5033,"byte_end":5041,"line_start":128,"line_end":128,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5042,"byte_end":5045,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/    // prints something close to 3.14159...","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5046,"byte_end":5092,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/    println!(\"{}\", 4. * (in_circle as f64) / (total as f64));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5093,"byte_end":5157,"line_start":131,"line_end":131,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5158,"byte_end":5163,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5164,"byte_end":5171,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5172,"byte_end":5175,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Monty Hall Problem","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5176,"byte_end":5201,"line_start":135,"line_end":135,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5202,"byte_end":5205,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is a simulation of the [Monty Hall Problem][]:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5206,"byte_end":5261,"line_start":137,"line_end":137,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5262,"byte_end":5265,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ > Suppose you're on a game show, and you're given the choice of three doors:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5266,"byte_end":5346,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ > Behind one door is a car; behind the others, goats. You pick a door, say","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5347,"byte_end":5425,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ > No. 1, and the host, who knows what's behind the doors, opens another","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5426,"byte_end":5501,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ > door, say No. 3, which has a goat. He then says to you, \"Do you want to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5502,"byte_end":5579,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ > pick door No. 2?\" Is it to your advantage to switch your choice?","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5580,"byte_end":5650,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5651,"byte_end":5654,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The rather unintuitive answer is that you will have a 2/3 chance of winning","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5655,"byte_end":5734,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ if you switch and a 1/3 chance of winning if you don't, so it's better to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5735,"byte_end":5812,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ switch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5813,"byte_end":5824,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5825,"byte_end":5828,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This program will simulate the game show and with large enough simulation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5829,"byte_end":5906,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ steps it will indeed confirm that it is better to switch.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5907,"byte_end":5968,"line_start":150,"line_end":150,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5969,"byte_end":5972,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [Monty Hall Problem]: http://en.wikipedia.org/wiki/Monty_Hall_problem","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":5973,"byte_end":6046,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6047,"byte_end":6050,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6051,"byte_end":6058,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6059,"byte_end":6077,"line_start":155,"line_end":155,"column_start":1,"column_end":19}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6078,"byte_end":6134,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6135,"byte_end":6138,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ struct SimulationResult {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6139,"byte_end":6168,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/     win: bool,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6169,"byte_end":6187,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/     switch: bool,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6188,"byte_end":6209,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6210,"byte_end":6215,"line_start":161,"line_end":161,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6216,"byte_end":6219,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Run a single simulation of the Monty Hall problem.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6220,"byte_end":6277,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/ fn simulate<R: Rng>(random_door: &Range<u32>, rng: &mut R)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6278,"byte_end":6340,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/                     -> SimulationResult {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6341,"byte_end":6386,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/     let car = random_door.ind_sample(rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6387,"byte_end":6433,"line_start":166,"line_end":166,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6434,"byte_end":6437,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     // This is our initial choice","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6438,"byte_end":6475,"line_start":168,"line_end":168,"column_start":1,"column_end":38}},{"value":"/     let mut choice = random_door.ind_sample(rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6476,"byte_end":6529,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6530,"byte_end":6533,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     // The game host opens a door","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6534,"byte_end":6571,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/     let open = game_host_open(car, choice, rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6572,"byte_end":6624,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6625,"byte_end":6628,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/     // Shall we switch?","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6629,"byte_end":6656,"line_start":174,"line_end":174,"column_start":1,"column_end":28}},{"value":"/     let switch = rng.gen();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6657,"byte_end":6688,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/     if switch {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6689,"byte_end":6708,"line_start":176,"line_end":176,"column_start":1,"column_end":20}},{"value":"/         choice = switch_door(choice, open);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6709,"byte_end":6756,"line_start":177,"line_end":177,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6757,"byte_end":6766,"line_start":178,"line_end":178,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6767,"byte_end":6770,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     SimulationResult { win: choice == car, switch: switch }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6771,"byte_end":6834,"line_start":180,"line_end":180,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6835,"byte_end":6840,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6841,"byte_end":6844,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ // Returns the door the game host opens given our choice and knowledge of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6845,"byte_end":6922,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/ // where the car is. The game host will never open the door with the car.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":6923,"byte_end":7000,"line_start":184,"line_end":184,"column_start":1,"column_end":78}},{"value":"/ fn game_host_open<R: Rng>(car: u32, choice: u32, rng: &mut R) -> u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7001,"byte_end":7075,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/     let choices = free_doors(&[car, choice]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7076,"byte_end":7125,"line_start":186,"line_end":186,"column_start":1,"column_end":50}},{"value":"/     rand::seq::sample_slice(rng, &choices, 1)[0]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7126,"byte_end":7178,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7179,"byte_end":7184,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7185,"byte_end":7188,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // Returns the door we switch to, given our current choice and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7189,"byte_end":7255,"line_start":190,"line_end":190,"column_start":1,"column_end":67}},{"value":"/ // the open door. There will only be one valid door.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7256,"byte_end":7312,"line_start":191,"line_end":191,"column_start":1,"column_end":57}},{"value":"/ fn switch_door(choice: u32, open: u32) -> u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7313,"byte_end":7364,"line_start":192,"line_end":192,"column_start":1,"column_end":52}},{"value":"/     free_doors(&[choice, open])[0]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7365,"byte_end":7403,"line_start":193,"line_end":193,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7404,"byte_end":7409,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7410,"byte_end":7413,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ fn free_doors(blocked: &[u32]) -> Vec<u32> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7414,"byte_end":7462,"line_start":196,"line_end":196,"column_start":1,"column_end":49}},{"value":"/     (0..3).filter(|x| !blocked.contains(x)).collect()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7463,"byte_end":7520,"line_start":197,"line_end":197,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7521,"byte_end":7526,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7527,"byte_end":7530,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7531,"byte_end":7546,"line_start":200,"line_end":200,"column_start":1,"column_end":16}},{"value":"/     // The estimation will be more accurate with more simulations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7547,"byte_end":7616,"line_start":201,"line_end":201,"column_start":1,"column_end":70}},{"value":"/     let num_simulations = 10000;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7617,"byte_end":7653,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7654,"byte_end":7657,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7658,"byte_end":7699,"line_start":204,"line_end":204,"column_start":1,"column_end":42}},{"value":"/     let random_door = Range::new(0, 3);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7700,"byte_end":7743,"line_start":205,"line_end":205,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7744,"byte_end":7747,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/     let (mut switch_wins, mut switch_losses) = (0, 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7748,"byte_end":7806,"line_start":207,"line_end":207,"column_start":1,"column_end":59}},{"value":"/     let (mut keep_wins, mut keep_losses) = (0, 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7807,"byte_end":7861,"line_start":208,"line_end":208,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7862,"byte_end":7865,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/     println!(\"Running {} simulations...\", num_simulations);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7866,"byte_end":7929,"line_start":210,"line_end":210,"column_start":1,"column_end":64}},{"value":"/     for _ in 0..num_simulations {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7930,"byte_end":7967,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/         let result = simulate(&random_door, &mut rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":7968,"byte_end":8026,"line_start":212,"line_end":212,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8027,"byte_end":8030,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/         match (result.win, result.switch) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8031,"byte_end":8078,"line_start":214,"line_end":214,"column_start":1,"column_end":48}},{"value":"/             (true, true) => switch_wins += 1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8079,"byte_end":8128,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/             (true, false) => keep_wins += 1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8129,"byte_end":8177,"line_start":216,"line_end":216,"column_start":1,"column_end":49}},{"value":"/             (false, true) => switch_losses += 1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8178,"byte_end":8230,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/             (false, false) => keep_losses += 1,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8231,"byte_end":8282,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8283,"byte_end":8296,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8297,"byte_end":8306,"line_start":220,"line_end":220,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8307,"byte_end":8310,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     let total_switches = switch_wins + switch_losses;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8311,"byte_end":8368,"line_start":222,"line_end":222,"column_start":1,"column_end":58}},{"value":"/     let total_keeps = keep_wins + keep_losses;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8369,"byte_end":8419,"line_start":223,"line_end":223,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8420,"byte_end":8423,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/     println!(\"Switched door {} times with {} wins and {} losses\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8424,"byte_end":8493,"line_start":225,"line_end":225,"column_start":1,"column_end":70}},{"value":"/              total_switches, switch_wins, switch_losses);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8494,"byte_end":8555,"line_start":226,"line_end":226,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8556,"byte_end":8559,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     println!(\"Kept our choice {} times with {} wins and {} losses\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8560,"byte_end":8631,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/              total_keeps, keep_wins, keep_losses);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8632,"byte_end":8686,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8687,"byte_end":8690,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     // With a large number of simulations, the values should converge to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8691,"byte_end":8767,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/     // 0.667 and 0.333 respectively.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8768,"byte_end":8808,"line_start":232,"line_end":232,"column_start":1,"column_end":41}},{"value":"/     println!(\"Estimated chance to win if we switch: {}\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8809,"byte_end":8869,"line_start":233,"line_end":233,"column_start":1,"column_end":61}},{"value":"/              switch_wins as f32 / total_switches as f32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8870,"byte_end":8931,"line_start":234,"line_end":234,"column_start":1,"column_end":62}},{"value":"/     println!(\"Estimated chance to win if we don't: {}\",","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8932,"byte_end":8991,"line_start":235,"line_end":235,"column_start":1,"column_end":60}},{"value":"/              keep_wins as f32 / total_keeps as f32);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":8992,"byte_end":9048,"line_start":236,"line_end":236,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9049,"byte_end":9054,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9055,"byte_end":9062,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9268,"byte_end":9307,"line_start":244,"line_end":244,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":119},{"krate":0,"index":190},{"krate":0,"index":236},{"krate":0,"index":271},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1117},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":322}],"decl_id":null,"docs":" Sampling from random distributions.","sig":null,"attributes":[{"value":"/ Sampling from random distributions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39691,"byte_end":39730,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39731,"byte_end":39734,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is a generalization of `Rand` to allow parameters to control the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39735,"byte_end":39808,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ exact properties of the generated values, e.g. the mean and standard","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39809,"byte_end":39881,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ deviation of a normal distribution. The `Sample` trait is the most","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39882,"byte_end":39952,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ general, and allows for generating values that change some state","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":39953,"byte_end":40021,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ internally. The `IndependentSample` trait is for generating values","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40022,"byte_end":40092,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ that do not need to record state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40093,"byte_end":40130,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::distributions::range","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":921},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":934},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":954},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":118},{"krate":0,"index":974},{"krate":0,"index":978}],"decl_id":null,"docs":" Generating numbers between two others.\n","sig":null,"attributes":[{"value":"/ Generating numbers between two others.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54225,"byte_end":54267,"line_start":11,"line_end":11,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55490,"byte_end":55495,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Range","qualname":"::distributions::range::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[{"value":"/ Sample values uniformly between two bounds.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54424,"byte_end":54471,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54472,"byte_end":54475,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This gives a uniform distribution (assuming the RNG used to sample","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54476,"byte_end":54546,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ it is itself uniform & the `SampleRange` implementation for the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54547,"byte_end":54614,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ given type is correct), even for edge cases like `low = 0u8`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54615,"byte_end":54680,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ `high = 170u8`, for which a naive modulo operation would return","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54681,"byte_end":54748,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ numbers less than 85 with double the probability to those greater","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54749,"byte_end":54818,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ than 85.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54819,"byte_end":54831,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54832,"byte_end":54835,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Types should attempt to sample in `[low, high)`, i.e., not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54836,"byte_end":54898,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ including `high`, but this may be very difficult. All the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54899,"byte_end":54960,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/ primitive integer types satisfy this property, and the float types","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":54961,"byte_end":55031,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ normally satisfy it, but rounding may mean `high` can occur.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55032,"byte_end":55096,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55097,"byte_end":55100,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55101,"byte_end":55114,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55115,"byte_end":55118,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55119,"byte_end":55130,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55131,"byte_end":55187,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55188,"byte_end":55191,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55192,"byte_end":55207,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     let between = Range::new(10, 10000);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55208,"byte_end":55252,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55253,"byte_end":55294,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/     let mut sum = 0;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55295,"byte_end":55319,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     for _ in 0..1000 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55320,"byte_end":55346,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/         sum += between.ind_sample(&mut rng);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55347,"byte_end":55395,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55396,"byte_end":55405,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/     println!(\"{}\", sum);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55406,"byte_end":55434,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55435,"byte_end":55440,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55441,"byte_end":55448,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55719,"byte_end":55722,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<X>>::new","value":"pub fn new(X, X) -> Range<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Range` instance that samples uniformly from\n `[low, high)`. Panics if `low >= high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Range` instance that samples uniformly from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55598,"byte_end":55659,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ `[low, high)`. Panics if `low >= high`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55664,"byte_end":55707,"line_start":58,"line_end":58,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56381,"byte_end":56392,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"SampleRange","qualname":"::distributions::range::SampleRange","value":"SampleRange: Sized","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" The helper trait for types that have a sensible way to sample\n uniformly between two values. This should not be used directly,\n and is only to facilitate `Range`.\n","sig":null,"attributes":[{"value":"/ The helper trait for types that have a sensible way to sample","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56198,"byte_end":56263,"line_start":75,"line_end":75,"column_start":1,"column_end":66}},{"value":"/ uniformly between two values. This should not be used directly,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56264,"byte_end":56331,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/ and is only to facilitate `Range`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56332,"byte_end":56370,"line_start":77,"line_end":77,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56652,"byte_end":56667,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"construct_range","qualname":"::distributions::range::SampleRange::construct_range","value":"pub fn construct_range(Self, Self) -> Range<Self>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Construct the `Range` object that `sample_range`\n requires. This should not ever be called directly, only via\n `Range::new`, which will check that `low < high`, so this\n function doesn't have to repeat the check.\n","sig":null,"attributes":[{"value":"/ Construct the `Range` object that `sample_range`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56407,"byte_end":56459,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/ requires. This should not ever be called directly, only via","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56464,"byte_end":56527,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ `Range::new`, which will check that `low < high`, so this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56532,"byte_end":56593,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/ function doesn't have to repeat the check.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56598,"byte_end":56644,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56817,"byte_end":56829,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"sample_range","qualname":"::distributions::range::SampleRange::sample_range","value":"pub fn sample_range<R: Rng>(&Range<Self>, &mut R) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Sample a value from the given `Range` with the given `Rng` as\n a source of randomness.\n","sig":null,"attributes":[{"value":"/ Sample a value from the given `Range` with the given `Rng` as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56712,"byte_end":56777,"line_start":85,"line_end":85,"column_start":5,"column_end":70}},{"value":"/ a source of randomness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56782,"byte_end":56809,"line_start":86,"line_end":86,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamma","qualname":"::distributions::gamma","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" The Gamma and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40415,"byte_end":40436,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ The Gamma and derived distributions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62449,"byte_end":62489,"line_start":13,"line_end":13,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63735,"byte_end":63740,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Gamma","qualname":"::distributions::gamma::Gamma","value":"Gamma {  }","parent":null,"children":[{"krate":0,"index":983}],"decl_id":null,"docs":" The Gamma distribution `Gamma(shape, scale)` distribution.","sig":null,"attributes":[{"value":"/ The Gamma distribution `Gamma(shape, scale)` distribution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62645,"byte_end":62707,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62708,"byte_end":62711,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The density function of this distribution is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62712,"byte_end":62760,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62761,"byte_end":62764,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62765,"byte_end":62776,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ f(x) =  x^(k - 1) * exp(-x / θ) / (Γ(k) * θ^k)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62777,"byte_end":62830,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62831,"byte_end":62838,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62839,"byte_end":62842,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ where `Γ` is the Gamma function, `k` is the shape and `θ` is the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62843,"byte_end":62913,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ scale and both `k` and `θ` are strictly positive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62914,"byte_end":62968,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62969,"byte_end":62972,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The algorithm used is that described by Marsaglia & Tsang 2000[1],","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":62973,"byte_end":63043,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ falling back to directly sampling from an Exponential for `shape","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63044,"byte_end":63112,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ == 1`, and using the boosting technique described in [1] for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63113,"byte_end":63177,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ `shape < 1`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63178,"byte_end":63194,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63195,"byte_end":63198,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63199,"byte_end":63212,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63213,"byte_end":63216,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63217,"byte_end":63228,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{IndependentSample, Gamma};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63229,"byte_end":63285,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63286,"byte_end":63289,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let gamma = Gamma::new(2.0, 5.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63290,"byte_end":63327,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/ let v = gamma.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63328,"byte_end":63382,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ println!(\"{} is from a Gamma(2, 5) distribution\", v);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63383,"byte_end":63440,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63441,"byte_end":63448,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63449,"byte_end":63452,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [1]: George Marsaglia and Wai Wan Tsang. 2000. \"A Simple Method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63453,"byte_end":63520,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ for Generating Gamma Variables\" *ACM Trans. Math. Softw.* 26, 3","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63521,"byte_end":63588,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ (September 2000),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63589,"byte_end":63610,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ 363-372. DOI:[10.1145/358407.358414](http://doi.acm.org/10.1145/358407.358414)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63611,"byte_end":63693,"line_start":51,"line_end":51,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65025,"byte_end":65028,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Gamma>::new","value":"pub fn new(f64, f64) -> Gamma","parent":null,"children":[],"decl_id":null,"docs":" Construct an object representing the `Gamma(shape, scale)`\n distribution.","sig":null,"attributes":[{"value":"/ Construct an object representing the `Gamma(shape, scale)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64859,"byte_end":64921,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ distribution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64926,"byte_end":64943,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64948,"byte_end":64951,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Panics if `shape <= 0` or `scale <= 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64956,"byte_end":64999,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65004,"byte_end":65013,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68074,"byte_end":68084,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"ChiSquared","qualname":"::distributions::gamma::ChiSquared","value":"ChiSquared {  }","parent":null,"children":[{"krate":0,"index":1022}],"decl_id":null,"docs":" The chi-squared distribution `χ²(k)`, where `k` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The chi-squared distribution `χ²(k)`, where `k` is the degrees of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67473,"byte_end":67544,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67545,"byte_end":67557,"line_start":184,"line_end":184,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67558,"byte_end":67561,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For `k > 0` integral, this distribution is the sum of the squares","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67562,"byte_end":67631,"line_start":186,"line_end":186,"column_start":1,"column_end":70}},{"value":"/ of `k` independent standard normal random variables. For other","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67632,"byte_end":67698,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ `k`, this uses the equivalent characterisation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67699,"byte_end":67749,"line_start":188,"line_end":188,"column_start":1,"column_end":51}},{"value":"/ `χ²(k) = Gamma(k/2, 2)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67750,"byte_end":67780,"line_start":189,"line_end":189,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67781,"byte_end":67784,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67785,"byte_end":67798,"line_start":191,"line_end":191,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67799,"byte_end":67802,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67803,"byte_end":67814,"line_start":193,"line_end":193,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{ChiSquared, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67815,"byte_end":67876,"line_start":194,"line_end":194,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67877,"byte_end":67880,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let chi = ChiSquared::new(11.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67881,"byte_end":67917,"line_start":196,"line_end":196,"column_start":1,"column_end":37}},{"value":"/ let v = chi.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67918,"byte_end":67970,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/ println!(\"{} is from a χ²(11) distribution\", v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":67971,"byte_end":68024,"line_start":198,"line_end":198,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68025,"byte_end":68032,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68550,"byte_end":68553,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<ChiSquared>::new","value":"pub fn new(f64) -> ChiSquared","parent":null,"children":[],"decl_id":null,"docs":" Create a new chi-squared distribution with degrees-of-freedom\n `k`. Panics if `k < 0`.\n","sig":null,"attributes":[{"value":"/ Create a new chi-squared distribution with degrees-of-freedom","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68441,"byte_end":68506,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ `k`. Panics if `k < 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68511,"byte_end":68538,"line_start":216,"line_end":216,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69811,"byte_end":69818,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"FisherF","qualname":"::distributions::gamma::FisherF","value":"FisherF {  }","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" The Fisher F distribution `F(m, n)`.","sig":null,"attributes":[{"value":"/ The Fisher F distribution `F(m, n)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69328,"byte_end":69368,"line_start":243,"line_end":243,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69369,"byte_end":69372,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ This distribution is equivalent to the ratio of two normalised","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69373,"byte_end":69439,"line_start":245,"line_end":245,"column_start":1,"column_end":67}},{"value":"/ chi-squared distributions, that is, `F(m,n) = (χ²(m)/m) /","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69440,"byte_end":69503,"line_start":246,"line_end":246,"column_start":1,"column_end":62}},{"value":"/ (χ²(n)/n)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69504,"byte_end":69521,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69522,"byte_end":69525,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69526,"byte_end":69539,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69540,"byte_end":69543,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69544,"byte_end":69555,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{FisherF, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69556,"byte_end":69614,"line_start":252,"line_end":252,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69615,"byte_end":69618,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let f = FisherF::new(2.0, 32.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69619,"byte_end":69655,"line_start":254,"line_end":254,"column_start":1,"column_end":37}},{"value":"/ let v = f.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69656,"byte_end":69706,"line_start":255,"line_end":255,"column_start":1,"column_end":51}},{"value":"/ println!(\"{} is from an F(2, 32) distribution\", v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69707,"byte_end":69761,"line_start":256,"line_end":256,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69762,"byte_end":69769,"line_start":257,"line_end":257,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70153,"byte_end":70156,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<FisherF>::new","value":"pub fn new(f64, f64) -> FisherF","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FisherF` distribution, with the given\n parameter. Panics if either `m` or `n` are not positive.\n","sig":null,"attributes":[{"value":"/ Create a new `FisherF` distribution, with the given","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70021,"byte_end":70076,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/ parameter. Panics if either `m` or `n` are not positive.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70081,"byte_end":70141,"line_start":269,"line_end":269,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71117,"byte_end":71125,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"StudentT","qualname":"::distributions::gamma::StudentT","value":"StudentT {  }","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"decl_id":null,"docs":" The Student t distribution, `t(nu)`, where `nu` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The Student t distribution, `t(nu)`, where `nu` is the degrees of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70752,"byte_end":70821,"line_start":290,"line_end":290,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70822,"byte_end":70834,"line_start":291,"line_end":291,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70835,"byte_end":70838,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70839,"byte_end":70852,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70853,"byte_end":70856,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70857,"byte_end":70868,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{StudentT, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70869,"byte_end":70928,"line_start":296,"line_end":296,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70929,"byte_end":70932,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ let t = StudentT::new(11.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70933,"byte_end":70965,"line_start":298,"line_end":298,"column_start":1,"column_end":33}},{"value":"/ let v = t.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70966,"byte_end":71016,"line_start":299,"line_end":299,"column_start":1,"column_end":51}},{"value":"/ println!(\"{} is from a t(11) distribution\", v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71017,"byte_end":71067,"line_start":300,"line_end":300,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71068,"byte_end":71075,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71293,"byte_end":71296,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<StudentT>::new","value":"pub fn new(f64) -> StudentT","parent":null,"children":[],"decl_id":null,"docs":" Create a new Student t distribution with `n` degrees of\n freedom. Panics if `n <= 0`.\n","sig":null,"attributes":[{"value":"/ Create a new Student t distribution with `n` degrees of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71185,"byte_end":71244,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ freedom. Panics if `n <= 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71249,"byte_end":71281,"line_start":310,"line_end":310,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"normal","qualname":"::distributions::normal","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":214},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":233}],"decl_id":null,"docs":" The normal and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40452,"byte_end":40473,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ The normal and derived distributions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":73692,"byte_end":73733,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74471,"byte_end":74485,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"StandardNormal","qualname":"::distributions::normal::StandardNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate N(0, 1) random numbers\n (a.k.a.  a standard normal, or Gaussian).","sig":null,"attributes":[{"value":"/ A wrapper around an `f64` to generate N(0, 1) random numbers","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":73836,"byte_end":73900,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ (a.k.a.  a standard normal, or Gaussian).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":73901,"byte_end":73946,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":73947,"byte_end":73950,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See `Normal` for the general normal distribution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":73951,"byte_end":74004,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74005,"byte_end":74008,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[1] of the Ziggurat method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74009,"byte_end":74074,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74075,"byte_end":74078,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74079,"byte_end":74146,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ Generate Normal Random","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74147,"byte_end":74173,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ Samples*](http://www.doornik.com/research/ziggurat.pdf). Nuffield","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74174,"byte_end":74243,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ College, Oxford","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74244,"byte_end":74263,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74264,"byte_end":74267,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74268,"byte_end":74281,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74282,"byte_end":74285,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74286,"byte_end":74297,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::normal::StandardNormal;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74298,"byte_end":74350,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74351,"byte_end":74354,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let StandardNormal(x) = rand::random();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74355,"byte_end":74398,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74399,"byte_end":74421,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74422,"byte_end":74429,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74486,"byte_end":74493,"line_start":37,"line_end":37,"column_start":27,"column_end":34},"name":"0","qualname":"::distributions::normal::StandardNormal::0","value":"f64","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76164,"byte_end":76170,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"Normal","qualname":"::distributions::normal::Normal","value":"Normal {  }","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"decl_id":null,"docs":" The normal distribution `N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The normal distribution `N(mean, std_dev**2)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75679,"byte_end":75729,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75730,"byte_end":75733,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This uses the ZIGNOR variant of the Ziggurat method, see","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75734,"byte_end":75794,"line_start":78,"line_end":78,"column_start":1,"column_end":61}},{"value":"/ `StandardNormal` for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75795,"byte_end":75833,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75834,"byte_end":75837,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75838,"byte_end":75851,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75852,"byte_end":75855,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75856,"byte_end":75867,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Normal, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75868,"byte_end":75925,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75926,"byte_end":75929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75930,"byte_end":75965,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ let normal = Normal::new(2.0, 3.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":75966,"byte_end":76005,"line_start":87,"line_end":87,"column_start":1,"column_end":40}},{"value":"/ let v = normal.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76006,"byte_end":76061,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/ println!(\"{} is from a N(2, 9) distribution\", v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76062,"byte_end":76114,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76115,"byte_end":76122,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76412,"byte_end":76415,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Normal>::new","value":"pub fn new(f64, f64) -> Normal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Normal` distribution with the given mean and\n standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `Normal` distribution with the given mean and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76227,"byte_end":76292,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ standard deviation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76297,"byte_end":76320,"line_start":99,"line_end":99,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76325,"byte_end":76328,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76333,"byte_end":76345,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76350,"byte_end":76353,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76358,"byte_end":76386,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76391,"byte_end":76400,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77432,"byte_end":77441,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"LogNormal","qualname":"::distributions::normal::LogNormal","value":"LogNormal {  }","parent":null,"children":[{"krate":0,"index":1073}],"decl_id":null,"docs":" The log-normal distribution `ln N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The log-normal distribution `ln N(mean, std_dev**2)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76929,"byte_end":76986,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76987,"byte_end":76990,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ If `X` is log-normal distributed, then `ln(X)` is `N(mean,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76991,"byte_end":77053,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/ std_dev**2)` distributed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77054,"byte_end":77083,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77084,"byte_end":77087,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77088,"byte_end":77101,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77102,"byte_end":77105,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77106,"byte_end":77117,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{LogNormal, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77118,"byte_end":77178,"line_start":132,"line_end":132,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77179,"byte_end":77182,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77183,"byte_end":77218,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"/ let log_normal = LogNormal::new(2.0, 3.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77219,"byte_end":77265,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ let v = log_normal.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77266,"byte_end":77325,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ println!(\"{} is from an ln N(2, 9) distribution\", v)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77326,"byte_end":77382,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77383,"byte_end":77390,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77673,"byte_end":77676,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<LogNormal>::new","value":"pub fn new(f64, f64) -> LogNormal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LogNormal` distribution with the given mean\n and standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `LogNormal` distribution with the given mean","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77485,"byte_end":77549,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ and standard deviation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77554,"byte_end":77581,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77586,"byte_end":77589,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77594,"byte_end":77606,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77611,"byte_end":77614,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77619,"byte_end":77647,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77652,"byte_end":77661,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exponential","qualname":"::distributions::exponential","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":257},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268}],"decl_id":null,"docs":" The exponential distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40490,"byte_end":40511,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ The exponential distribution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79405,"byte_end":79438,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80232,"byte_end":80236,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Exp1","qualname":"::distributions::exponential::Exp1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate Exp(1) random numbers.","sig":null,"attributes":[{"value":"/ A wrapper around an `f64` to generate Exp(1) random numbers.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79533,"byte_end":79597,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79598,"byte_end":79601,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See `Exp` for the general exponential distribution.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79602,"byte_end":79657,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79658,"byte_end":79661,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[1] of the Ziggurat method. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79662,"byte_end":79731,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ exact description in the paper was adjusted to use tables for the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79732,"byte_end":79801,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ exponential distribution rather than normal.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79802,"byte_end":79850,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79851,"byte_end":79854,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79855,"byte_end":79922,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ Generate Normal Random","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79923,"byte_end":79949,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ Samples*](http://www.doornik.com/research/ziggurat.pdf). Nuffield","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":79950,"byte_end":80019,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ College, Oxford","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80020,"byte_end":80039,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80040,"byte_end":80043,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80044,"byte_end":80057,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80058,"byte_end":80061,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80062,"byte_end":80073,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::exponential::Exp1;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80074,"byte_end":80121,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80122,"byte_end":80125,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let Exp1(x) = rand::random();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80126,"byte_end":80159,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80160,"byte_end":80182,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80183,"byte_end":80190,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80237,"byte_end":80244,"line_start":38,"line_end":38,"column_start":17,"column_end":24},"name":"0","qualname":"::distributions::exponential::Exp1::0","value":"f64","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81239,"byte_end":81242,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"Exp","qualname":"::distributions::exponential::Exp","value":"Exp {  }","parent":null,"children":[{"krate":0,"index":1088}],"decl_id":null,"docs":" The exponential distribution `Exp(lambda)`.","sig":null,"attributes":[{"value":"/ The exponential distribution `Exp(lambda)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80814,"byte_end":80861,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80862,"byte_end":80865,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This distribution has density function: `f(x) = lambda *","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80866,"byte_end":80926,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ exp(-lambda * x)` for `x > 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80927,"byte_end":80961,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80962,"byte_end":80965,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80966,"byte_end":80979,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80980,"byte_end":80983,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80984,"byte_end":80995,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Exp, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80996,"byte_end":81050,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81051,"byte_end":81054,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let exp = Exp::new(2.0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81055,"byte_end":81083,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/ let v = exp.ind_sample(&mut rand::thread_rng());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81084,"byte_end":81136,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ println!(\"{} is from a Exp(2) distribution\", v);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81137,"byte_end":81189,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81190,"byte_end":81197,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81483,"byte_end":81486,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Exp>::new","value":"pub fn new(f64) -> Exp","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Exp` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Exp` with the given shape parameter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81358,"byte_end":81414,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ `lambda`. Panics if `lambda <= 0`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81419,"byte_end":81457,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81462,"byte_end":81471,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40657,"byte_end":40663,"line_start":44,"line_end":44,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[{"value":"/ Types that can be used to create a random instance of `Support`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40578,"byte_end":40646,"line_start":43,"line_end":43,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40777,"byte_end":40783,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"pub fn sample<R: Rng>(&mut Self, &mut R) -> Support","parent":{"krate":0,"index":284},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `Support`, using `rng` as the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40679,"byte_end":40739,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/ source of randomness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40744,"byte_end":40769,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41249,"byte_end":41266,"line_start":58,"line_end":58,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":290}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[{"value":"/ `Sample`s that do not require keeping track of state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40831,"byte_end":40888,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40889,"byte_end":40892,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Since no state is recorded, each sample is (statistically)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40893,"byte_end":40955,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/ independent of all others, assuming the `Rng` used has this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40956,"byte_end":41019,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ property.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41020,"byte_end":41033,"line_start":54,"line_end":54,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41335,"byte_end":41345,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"pub fn ind_sample<R: Rng>(&Self, &mut R) -> Support","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[{"value":"/ Generate a random value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41299,"byte_end":41327,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41520,"byte_end":41530,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"RandSample","qualname":"::distributions::RandSample","value":"RandSample {  }","parent":null,"children":[{"krate":0,"index":1096}],"decl_id":null,"docs":" A wrapper for generating types that implement `Rand` via the\n `Sample` & `IndependentSample` traits.\n","sig":null,"attributes":[{"value":"/ A wrapper for generating types that implement `Rand` via the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41384,"byte_end":41448,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ `Sample` & `IndependentSample` traits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41449,"byte_end":41491,"line_start":64,"line_end":64,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42018,"byte_end":42021,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<RandSample<Sup>>::new","value":"pub fn new() -> RandSample<Sup>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42215,"byte_end":42223,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[{"value":"/ A value with a particular weight for use with `WeightedChoice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42106,"byte_end":42173,"line_start":91,"line_end":91,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42279,"byte_end":42285,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[{"value":"/ The numerical weight of this item","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42233,"byte_end":42270,"line_start":94,"line_end":94,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42348,"byte_end":42352,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":1100},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[{"value":"/ The actual item which is being weighted","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42296,"byte_end":42339,"line_start":96,"line_end":96,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43346,"byte_end":43360,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[{"value":"/ A distribution that selects from a finite collection of weighted items.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42360,"byte_end":42435,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42436,"byte_end":42439,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Each item has an associated weight that influences how likely it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42440,"byte_end":42508,"line_start":102,"line_end":102,"column_start":1,"column_end":69}},{"value":"/ is to be chosen: higher weight is more likely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42509,"byte_end":42559,"line_start":103,"line_end":103,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42560,"byte_end":42563,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The `Clone` restriction is a limitation of the `Sample` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42564,"byte_end":42627,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ `IndependentSample` traits. Note that `&T` is (cheaply) `Clone` for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42628,"byte_end":42699,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ all `T`, as is `u32`, so one can store references or indices into","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42700,"byte_end":42769,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ another vector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42770,"byte_end":42789,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42790,"byte_end":42793,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42794,"byte_end":42807,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42808,"byte_end":42811,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42812,"byte_end":42823,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Weighted, WeightedChoice, IndependentSample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42824,"byte_end":42899,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42900,"byte_end":42903,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ let mut items = vec!(Weighted { weight: 2, item: 'a' },","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42904,"byte_end":42963,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 4, item: 'b' },","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42964,"byte_end":43023,"line_start":116,"line_end":116,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 1, item: 'c' });","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43024,"byte_end":43084,"line_start":117,"line_end":117,"column_start":1,"column_end":61}},{"value":"/ let wc = WeightedChoice::new(&mut items);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43085,"byte_end":43130,"line_start":118,"line_end":118,"column_start":1,"column_end":46}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43131,"byte_end":43168,"line_start":119,"line_end":119,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..16 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43169,"byte_end":43189,"line_start":120,"line_end":120,"column_start":1,"column_end":21}},{"value":"/      // on average prints 'a' 4 times, 'b' 8 and 'c' twice.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43190,"byte_end":43253,"line_start":121,"line_end":121,"column_start":1,"column_end":64}},{"value":"/      println!(\"{}\", wc.ind_sample(&mut rng));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43254,"byte_end":43303,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43304,"byte_end":43309,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43310,"byte_end":43317,"line_start":124,"line_end":124,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43689,"byte_end":43692,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"pub fn new(&'a mut [Weighted<T>]) -> WeightedChoice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[{"value":"/ Create a new `WeightedChoice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43486,"byte_end":43520,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43525,"byte_end":43528,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Panics if:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43533,"byte_end":43547,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43552,"byte_end":43555,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ - `items` is empty","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43560,"byte_end":43582,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ - the total weight is 0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43587,"byte_end":43614,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/ - the total weight is larger than a `u32` can contain.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43619,"byte_end":43677,"line_start":138,"line_end":138,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::jitter","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":365},{"krate":0,"index":1121},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[{"value":"/ Non-physical true random number generator based on timing jitter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":107966,"byte_end":108035,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109410,"byte_end":109419,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[{"value":"/ A true random number generator based on jitter in the CPU execution time,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108295,"byte_end":108372,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ and jitter in memory access time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108373,"byte_end":108410,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108411,"byte_end":108414,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This is a true random number generator, as opposed to pseudo-random","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108415,"byte_end":108486,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ generators. Random numbers generated by `JitterRng` can be seen as fresh","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108487,"byte_end":108563,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ entropy. A consequence is that is orders of magnitude slower than `OsRng`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108564,"byte_end":108641,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ and PRNGs (about 10^3 .. 10^6 slower).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108642,"byte_end":108684,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108685,"byte_end":108688,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ There are very few situations where using this RNG is appropriate. Only very","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108689,"byte_end":108769,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ few applications require true entropy. A normal PRNG can be statistically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108770,"byte_end":108847,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ indistinguishable, and a cryptographic PRNG should also be as impossible to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108848,"byte_end":108927,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ predict.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108928,"byte_end":108940,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108941,"byte_end":108944,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Use of `JitterRng` is recommended for initializing cryptographic PRNGs when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":108945,"byte_end":109024,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `OsRng` is not available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109025,"byte_end":109054,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109055,"byte_end":109058,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This implementation is based on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109059,"byte_end":109094,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ [Jitterentropy](http://www.chronox.de/jent.html) version 2.1.0.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109095,"byte_end":109162,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110265,"byte_end":110272,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[{"value":"/ No timer available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110237,"byte_end":110260,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110332,"byte_end":110343,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[{"value":"/ Timer too coarse to use as an entropy source.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110278,"byte_end":110327,"line_start":80,"line_end":80,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110396,"byte_end":110408,"line_start":83,"line_end":83,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[{"value":"/ Timer is not monotonically increasing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110349,"byte_end":110391,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110462,"byte_end":110477,"line_start":85,"line_end":85,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[{"value":"/ Variations of deltas of time too small.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110414,"byte_end":110457,"line_start":84,"line_end":84,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110545,"byte_end":110557,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[{"value":"/ Too many stuck results (indicating no added entropy).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110483,"byte_end":110540,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110582,"byte_end":110597,"line_start":89,"line_end":89,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":1121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110220,"byte_end":110230,"line_start":77,"line_end":77,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::jitter::TimerError","value":"pub enum TimerError {\n    NoTimer,\n    CoarseTimer,\n    NotMonotonic,\n    TinyVariantions,\n    TooManyStuck,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132}],"decl_id":null,"docs":" An error that can occur when `test_timer` fails.\n","sig":null,"attributes":[{"value":"/ An error that can occur when `test_timer` fails.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110119,"byte_end":110171,"line_start":75,"line_end":75,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111857,"byte_end":111860,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<JitterRng>::new","value":"pub fn new() -> Result<JitterRng, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n Makes use of `std::time` for a timer.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111505,"byte_end":111534,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/ Makes use of `std::time` for a timer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111539,"byte_end":111580,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111585,"byte_end":111588,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ During initialization CPU execution timing jitter is measured a few","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111593,"byte_end":111664,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ hundred times. If this does not pass basic quality tests, an error is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111669,"byte_end":111742,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ returned. The test result is cached to make subsequent calls faster.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111747,"byte_end":111819,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111824,"byte_end":111845,"line_start":129,"line_end":129,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112794,"byte_end":112808,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"pub fn new_with_timer(fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112359,"byte_end":112388,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ A custom timer can be supplied, making it possible to use `JitterRng` in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112393,"byte_end":112469,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ `no_std` environments.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112474,"byte_end":112500,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112505,"byte_end":112508,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The timer must have nanosecond precision.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112513,"byte_end":112558,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112563,"byte_end":112566,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This method is more low-level than `new()`. It is the responsibility of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112571,"byte_end":112646,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ the caller to run `test_timer` before using any numbers generated with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112651,"byte_end":112725,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ `JitterRng`, and optionally call `set_rounds()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112730,"byte_end":112782,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":114070,"byte_end":114080,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"pub fn set_rounds(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[{"value":"/ Configures how many rounds are used to generate each 64-bit value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113575,"byte_end":113645,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ This must be greater than zero, and has a big impact on performance","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113650,"byte_end":113721,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ and output quality.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113726,"byte_end":113749,"line_start":181,"line_end":181,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113754,"byte_end":113757,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ `new_with_timer` conservatively uses 64 rounds, but often less rounds","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113762,"byte_end":113835,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ can be used. The `test_timer()` function returns the minimum number of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113840,"byte_end":113914,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ rounds required for full strength (platform dependent), so one may use","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113919,"byte_end":113993,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ `rng.set_rounds(rng.test_timer()?);` or cache the value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":113998,"byte_end":114058,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124827,"byte_end":124837,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"pub fn test_timer(&mut Self) -> Result<u32, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[{"value":"/ Basic quality tests on the timer, by measuring CPU timing jitter a few","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124510,"byte_end":124584,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ hundred times.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124589,"byte_end":124607,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124612,"byte_end":124615,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If succesful, this will return the estimated number of rounds necessary","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124620,"byte_end":124695,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ to collect 64 bits of entropy. Otherwise a `TimerError` with the cause","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124700,"byte_end":124774,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ of the failure will be returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124779,"byte_end":124815,"line_start":438,"line_end":438,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134558,"byte_end":134569,"line_start":656,"line_end":656,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"pub fn timer_stats(&mut Self, bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterEntropy` entropy collector.","sig":null,"attributes":[{"value":"/ Statistical test: return the timer delta of one normal run of the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130221,"byte_end":130290,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ `JitterEntropy` entropy collector.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130295,"byte_end":130333,"line_start":565,"line_end":565,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130338,"byte_end":130341,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `true` will execute the memory access and the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130346,"byte_end":130419,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ CPU jitter noice sources a variable amount of times (just like a real","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130424,"byte_end":130497,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ `JitterEntropy` round).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130502,"byte_end":130529,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130534,"byte_end":130537,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `false` will execute the noice sources the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130542,"byte_end":130612,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/ minimal number of times. This can be used to measure the minimum amount","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130617,"byte_end":130692,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ of entropy one round of entropy collector can collect in the worst case.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130697,"byte_end":130773,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130778,"byte_end":130781,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130786,"byte_end":130799,"line_start":575,"line_end":575,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130804,"byte_end":130807,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Use `timer_stats` to run the [NIST SP 800-90B Entropy Estimation Suite]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130812,"byte_end":130887,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ (https://github.com/usnistgov/SP800-90B_EntropyAssessment).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130892,"byte_end":130955,"line_start":578,"line_end":578,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130960,"byte_end":130963,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This is the recommended way to test the quality of `JitterRng`. It","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":130968,"byte_end":131038,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ should be run before using the RNG on untested hardware, after changes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131043,"byte_end":131117,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ that could effect how the code is optimised, and after major compiler","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131122,"byte_end":131195,"line_start":582,"line_end":582,"column_start":5,"column_end":78}},{"value":"/ compiler changes, like a new LLVM version.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131200,"byte_end":131246,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131251,"byte_end":131254,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ First generate two files `jitter_rng_var.bin` and `jitter_rng_var.min`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131259,"byte_end":131334,"line_start":585,"line_end":585,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131339,"byte_end":131342,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v jitter_rng_var.bin 8`, and validate it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131347,"byte_end":131423,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ with `restart.py -v jitter_rng_var.bin 8 <min-entropy>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131428,"byte_end":131488,"line_start":588,"line_end":588,"column_start":5,"column_end":65}},{"value":"/ This number is the expected amount of entropy that is at least available","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131493,"byte_end":131569,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ for each round of the entropy collector. This number should be greater","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131574,"byte_end":131648,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ than the amount estimated with `64 / test_timer()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131653,"byte_end":131708,"line_start":591,"line_end":591,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131713,"byte_end":131716,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v -u 4 jitter_rng_var.bin 4`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131721,"byte_end":131790,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ validate it with `restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131795,"byte_end":131872,"line_start":594,"line_end":594,"column_start":5,"column_end":82}},{"value":"/ This number is the expected amount of entropy that is available in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131877,"byte_end":131951,"line_start":595,"line_end":595,"column_start":5,"column_end":79}},{"value":"/ last 4 bits of the timer delta after running noice sources. Note that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":131956,"byte_end":132029,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ a value of 3.70 is the minimum estimated entropy for true randomness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132034,"byte_end":132107,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132112,"byte_end":132115,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v -u 4 jitter_rng_var.bin 4`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132120,"byte_end":132189,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/ validate it with `restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132194,"byte_end":132271,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"/ This number is the expected amount of entropy that is available to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132276,"byte_end":132350,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ entropy collecter if both noice sources only run their minimal number of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132355,"byte_end":132431,"line_start":602,"line_end":602,"column_start":5,"column_end":81}},{"value":"/ times. This measures the absolute worst-case, and gives a lower bound","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132436,"byte_end":132509,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ for the available entropy.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132514,"byte_end":132544,"line_start":604,"line_end":604,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132549,"byte_end":132552,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132557,"byte_end":132575,"line_start":606,"line_end":606,"column_start":5,"column_end":23}},{"value":"/ use rand::JitterRng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132580,"byte_end":132604,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132609,"byte_end":132612,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132617,"byte_end":132645,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/ # use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132650,"byte_end":132674,"line_start":610,"line_end":610,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Write;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132679,"byte_end":132704,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132709,"byte_end":132714,"line_start":612,"line_end":612,"column_start":5,"column_end":10}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132719,"byte_end":132766,"line_start":613,"line_end":613,"column_start":5,"column_end":52}},{"value":"/ fn get_nstime() -> u64 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132771,"byte_end":132799,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/     use std::time::{SystemTime, UNIX_EPOCH};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132804,"byte_end":132852,"line_start":615,"line_end":615,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132857,"byte_end":132860,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/     let dur = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132865,"byte_end":132937,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/     // The correct way to calculate the current time is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":132942,"byte_end":133001,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/     // `dur.as_secs() * 1_000_000_000 + dur.subsec_nanos() as u64`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133006,"byte_end":133076,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/     // But this is faster, and the difference in terms of entropy is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133081,"byte_end":133153,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/     // negligible (log2(10^9) == 29.9).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133158,"byte_end":133201,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/     dur.as_secs() << 30 | dur.subsec_nanos() as u64","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133206,"byte_end":133261,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133266,"byte_end":133271,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133276,"byte_end":133279,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ // Do not initialize with `JitterRng::new`, but with `new_with_timer`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133284,"byte_end":133358,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ // 'new' always runst `test_timer`, and can therefore fail to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133363,"byte_end":133428,"line_start":626,"line_end":626,"column_start":5,"column_end":70}},{"value":"/ // initialize. We want to be able to get the statistics even when the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133433,"byte_end":133506,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ // timer test fails.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133511,"byte_end":133535,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/ let mut rng = JitterRng::new_with_timer(get_nstime);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133540,"byte_end":133596,"line_start":629,"line_end":629,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133601,"byte_end":133604,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ // 1_000_000 results are required for the NIST SP 800-90B Entropy","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133609,"byte_end":133678,"line_start":631,"line_end":631,"column_start":5,"column_end":74}},{"value":"/ // Estimation Suite","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133683,"byte_end":133706,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/ // FIXME: this number is smaller here, otherwise the Doc-test is too slow","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133711,"byte_end":133788,"line_start":633,"line_end":633,"column_start":5,"column_end":82}},{"value":"/ const ROUNDS: usize = 10_000;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133793,"byte_end":133826,"line_start":634,"line_end":634,"column_start":5,"column_end":38}},{"value":"/ let mut deltas_variable: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133831,"byte_end":133897,"line_start":635,"line_end":635,"column_start":5,"column_end":71}},{"value":"/ let mut deltas_minimal: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133902,"byte_end":133967,"line_start":636,"line_end":636,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133972,"byte_end":133975,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ for _ in 0..ROUNDS {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":133980,"byte_end":134004,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/     deltas_variable.push(rng.timer_stats(true) as u8);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134009,"byte_end":134067,"line_start":639,"line_end":639,"column_start":5,"column_end":63}},{"value":"/     deltas_minimal.push(rng.timer_stats(false) as u8);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134072,"byte_end":134130,"line_start":640,"line_end":640,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134135,"byte_end":134140,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134145,"byte_end":134148,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Write out after the statistics collection loop, to not disturb the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134153,"byte_end":134226,"line_start":643,"line_end":643,"column_start":5,"column_end":78}},{"value":"/ // test results.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134231,"byte_end":134251,"line_start":644,"line_end":644,"column_start":5,"column_end":25}},{"value":"/ File::create(\"jitter_rng_var.bin\")?.write(&deltas_variable)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134256,"byte_end":134321,"line_start":645,"line_end":645,"column_start":5,"column_end":70}},{"value":"/ File::create(\"jitter_rng_min.bin\")?.write(&deltas_minimal)?;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134326,"byte_end":134390,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134395,"byte_end":134400,"line_start":647,"line_end":647,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134405,"byte_end":134417,"line_start":648,"line_end":648,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134422,"byte_end":134429,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134434,"byte_end":134439,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134444,"byte_end":134461,"line_start":651,"line_end":651,"column_start":5,"column_end":22}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134466,"byte_end":134496,"line_start":652,"line_end":652,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134501,"byte_end":134508,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134513,"byte_end":134520,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134525,"byte_end":134546,"line_start":655,"line_end":655,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":438}],"decl_id":null,"docs":" Interfaces to the operating system provided random number\n generators.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10374,"byte_end":10395,"line_start":286,"line_end":286,"column_start":1,"column_end":22}},{"value":"/ Interfaces to the operating system provided random number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138328,"byte_end":138389,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ generators.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138390,"byte_end":138405,"line_start":12,"line_end":12,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139378,"byte_end":139383,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness straight from\n the operating system. Platform sources:","sig":null,"attributes":[{"value":"/ A random number generator that retrieves randomness straight from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138485,"byte_end":138554,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ the operating system. Platform sources:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138555,"byte_end":138598,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138599,"byte_end":138602,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - Unix-like systems (Linux, Android, Mac OSX): read directly from","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138603,"byte_end":138672,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/   `/dev/urandom`, or from `getrandom(2)` system call if available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138673,"byte_end":138743,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ - OpenBSD: calls `getentropy(2)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138744,"byte_end":138780,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ - FreeBSD: uses the `kern.arandom` `sysctl(2)` mib","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138781,"byte_end":138835,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ - Windows: calls `RtlGenRandom`, exported from `advapi32.dll` as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138836,"byte_end":138904,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/   `SystemFunction036`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138905,"byte_end":138931,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ - iOS: calls SecRandomCopyBytes as /dev/(u)random is sandboxed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":138932,"byte_end":138999,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ - PNaCl: calls into the `nacl-irt-random-0.1` IRT interface.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139000,"byte_end":139064,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139065,"byte_end":139068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This usually does not block. On some systems (e.g. FreeBSD, OpenBSD,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139069,"byte_end":139141,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ Max OS X, and modern Linux) this may block very early in the init","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139142,"byte_end":139211,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ process, if the CSPRNG has not been seeded yet.[1]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139212,"byte_end":139266,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139267,"byte_end":139270,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [1] See <https://www.python.org/dev/peps/pep-0524/> for a more","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139271,"byte_end":139337,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/     in-depth discussion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139338,"byte_end":139366,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139452,"byte_end":139455,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<OsRng>::new","value":"pub fn new() -> io::Result<OsRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OsRng`.\n","sig":null,"attributes":[{"value":"/ Create a new `OsRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139415,"byte_end":139440,"line_start":42,"line_end":42,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":494}],"decl_id":null,"docs":" A wrapper around any Read to treat it as an RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10408,"byte_end":10429,"line_start":287,"line_end":287,"column_start":1,"column_end":22}},{"value":"/ A wrapper around any Read to treat it as an RNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":156753,"byte_end":156805,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157321,"byte_end":157328,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ReadRng","qualname":"::read::ReadRng","value":"ReadRng {  }","parent":null,"children":[{"krate":0,"index":1150}],"decl_id":null,"docs":" An RNG that reads random bytes straight from a `Read`. This will\n work best with an infinite reader, but this is not required.","sig":null,"attributes":[{"value":"/ An RNG that reads random bytes straight from a `Read`. This will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":156858,"byte_end":156926,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ work best with an infinite reader, but this is not required.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":156927,"byte_end":156991,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":156992,"byte_end":156995,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":156996,"byte_end":157008,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157009,"byte_end":157012,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It will panic if it there is insufficient data to fulfill a request.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157013,"byte_end":157085,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157086,"byte_end":157089,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157090,"byte_end":157103,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157104,"byte_end":157107,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157108,"byte_end":157119,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use rand::{read, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157120,"byte_end":157146,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157147,"byte_end":157150,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let data = vec![1, 2, 3, 4, 5, 6, 7, 8];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157151,"byte_end":157195,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ let mut rng = read::ReadRng::new(&data[..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157196,"byte_end":157244,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ println!(\"{:x}\", rng.gen::<u32>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157245,"byte_end":157284,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157285,"byte_end":157292,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157435,"byte_end":157438,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadRng<R>>::new","value":"pub fn new(R) -> ReadRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReadRng` from a `Read`.\n","sig":null,"attributes":[{"value":"/ Create a new `ReadRng` from a `Read`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157382,"byte_end":157423,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reseeding","qualname":"::reseeding","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":1154},{"krate":0,"index":1161},{"krate":0,"index":507},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":524},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":527},{"krate":0,"index":530}],"decl_id":null,"docs":" A wrapper around another RNG that reseeds it after it\n generates a certain number of random bytes.\n","sig":null,"attributes":[{"value":"/ A wrapper around another RNG that reseeds it after it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160348,"byte_end":160405,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ generates a certain number of random bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160406,"byte_end":160453,"line_start":12,"line_end":12,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160811,"byte_end":160823,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::reseeding::ReseedingRng","value":"ReseedingRng { reseeder }","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"decl_id":null,"docs":" A wrapper around any RNG which reseeds the underlying RNG after it\n has generated a certain number of random bytes.\n","sig":null,"attributes":[{"value":"/ A wrapper around any RNG which reseeds the underlying RNG after it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160660,"byte_end":160730,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ has generated a certain number of random bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160731,"byte_end":160782,"line_start":23,"line_end":23,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160967,"byte_end":160975,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"reseeder","qualname":"::reseeding::ReseedingRng::reseeder","value":"Rsdr","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" Controls the behaviour when reseeding the RNG.\n","sig":null,"attributes":[{"value":"/ Controls the behaviour when reseeding the RNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160908,"byte_end":160958,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161349,"byte_end":161352,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"pub fn new(R, u64, Rsdr) -> ReseedingRng<R, Rsdr>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[{"value":"/ Create a new `ReseedingRng` with the given parameters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161046,"byte_end":161104,"line_start":34,"line_end":34,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161109,"byte_end":161112,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161117,"byte_end":161132,"line_start":36,"line_end":36,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161137,"byte_end":161140,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `rng`: the random number generator to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161145,"byte_end":161193,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/ * `generation_threshold`: the number of bytes of entropy at which to reseed the RNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161198,"byte_end":161286,"line_start":39,"line_end":39,"column_start":5,"column_end":93}},{"value":"/ * `reseeder`: the reseeding object to use.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161291,"byte_end":161337,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161732,"byte_end":161751,"line_start":52,"line_end":52,"column_start":12,"column_end":31},"name":"reseed_if_necessary","qualname":"<ReseedingRng<R, Rsdr>>::reseed_if_necessary","value":"pub fn reseed_if_necessary(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal RNG if the number of bytes that have been\n generated exceed the threshold.\n","sig":null,"attributes":[{"value":"/ Reseed the internal RNG if the number of bytes that have been","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161615,"byte_end":161680,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ generated exceed the threshold.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161685,"byte_end":161720,"line_start":51,"line_end":51,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163983,"byte_end":163991,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"name":"Reseeder","qualname":"::reseeding::Reseeder","value":"Reseeder<R>","parent":null,"children":[{"krate":0,"index":526}],"decl_id":null,"docs":" Something that can be used to reseed an RNG via `ReseedingRng`.","sig":null,"attributes":[{"value":"/ Something that can be used to reseed an RNG via `ReseedingRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163140,"byte_end":163207,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163208,"byte_end":163211,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163212,"byte_end":163225,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163226,"byte_end":163229,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163230,"byte_end":163241,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163242,"byte_end":163283,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ use rand::reseeding::{Reseeder, ReseedingRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163284,"byte_end":163334,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163335,"byte_end":163338,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ struct TickTockReseeder { tick: bool }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163339,"byte_end":163381,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ impl Reseeder<StdRng> for TickTockReseeder {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163382,"byte_end":163430,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/     fn reseed(&mut self, rng: &mut StdRng) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163431,"byte_end":163479,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/         let val = if self.tick {0} else {1};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163480,"byte_end":163528,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/         rng.reseed(&[val]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163529,"byte_end":163560,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/         self.tick = !self.tick;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163561,"byte_end":163596,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163597,"byte_end":163606,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163607,"byte_end":163612,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163613,"byte_end":163628,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/     let rsdr = TickTockReseeder { tick: true };","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163629,"byte_end":163680,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163681,"byte_end":163684,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     let inner = StdRng::new().unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163685,"byte_end":163728,"line_start":120,"line_end":120,"column_start":1,"column_end":44}},{"value":"/     let mut rng = ReseedingRng::new(inner, 10, rsdr);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163729,"byte_end":163786,"line_start":121,"line_end":121,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163787,"byte_end":163790,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     // this will repeat, because it gets reseeded very regularly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163791,"byte_end":163860,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/     let s: String = rng.gen_ascii_chars().take(100).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163861,"byte_end":163927,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/     println!(\"{}\", s);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163928,"byte_end":163954,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163955,"byte_end":163960,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163961,"byte_end":163964,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163965,"byte_end":163972,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164034,"byte_end":164040,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"reseed","qualname":"::reseeding::Reseeder::reseed","value":"pub fn reseed(&mut Self, &mut R)","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Reseed the given RNG.\n","sig":null,"attributes":[{"value":"/ Reseed the given RNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164001,"byte_end":164026,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164240,"byte_end":164257,"line_start":137,"line_end":137,"column_start":12,"column_end":29},"name":"ReseedWithDefault","qualname":"::reseeding::ReseedWithDefault","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reseed an RNG using a `Default` instance. This reseeds by\n replacing the RNG with the result of a `Default::default` call.\n","sig":null,"attributes":[{"value":"/ Reseed an RNG using a `Default` instance. This reseeds by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164069,"byte_end":164130,"line_start":134,"line_end":134,"column_start":1,"column_end":62}},{"value":"/ replacing the RNG with the result of a `Default::default` call.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164131,"byte_end":164198,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556}],"decl_id":null,"docs":" Functions for randomly accessing and sampling sequences.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10463,"byte_end":10508,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/ Functions for randomly accessing and sampling sequences.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167253,"byte_end":167313,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168349,"byte_end":168360,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::seq::sample_iter","value":"pub fn sample_iter<T, I, R>(&mut R, I, usize) -> Result<Vec<T>, Vec<T>> where\nI: IntoIterator<Item = T>, R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample `amount` elements from a finite iterator.","sig":null,"attributes":[{"value":"/ Randomly sample `amount` elements from a finite iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167620,"byte_end":167681,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167682,"byte_end":167685,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The following can be returned:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167686,"byte_end":167720,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ - `Ok`: `Vec` of `amount` non-repeating randomly sampled elements. The order is not random.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167721,"byte_end":167816,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ - `Err`: `Vec` of all the elements from `iterable` in sequential order. This happens when the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167817,"byte_end":167914,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/   length of `iterable` was less than `amount`. This is considered an error since exactly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":167915,"byte_end":168007,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/   `amount` elements is typically expected.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168008,"byte_end":168054,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168055,"byte_end":168058,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(len(iterable))` time and `O(amount)` memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168059,"byte_end":168135,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168136,"byte_end":168139,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168140,"byte_end":168153,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168154,"byte_end":168157,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168158,"byte_end":168169,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168170,"byte_end":168202,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168203,"byte_end":168206,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168207,"byte_end":168238,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let sample = seq::sample_iter(&mut rng, 1..100, 5).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168239,"byte_end":168303,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168304,"byte_end":168333,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168334,"byte_end":168341,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169732,"byte_end":169744,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"sample_slice","qualname":"::seq::sample_slice","value":"pub fn sample_slice<R, T>(&mut R, &[T], usize) -> Vec<T> where R: Rng,\nT: Clone","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` values from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` values from `slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169288,"byte_end":169345,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169346,"byte_end":169349,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169350,"byte_end":169403,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169404,"byte_end":169407,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169408,"byte_end":169465,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169466,"byte_end":169469,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169470,"byte_end":169506,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169507,"byte_end":169510,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169511,"byte_end":169524,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169525,"byte_end":169528,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169529,"byte_end":169540,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169541,"byte_end":169573,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169574,"byte_end":169577,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169578,"byte_end":169609,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169610,"byte_end":169653,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice(&mut rng, &values, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169654,"byte_end":169716,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169717,"byte_end":169724,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170474,"byte_end":170490,"line_start":114,"line_end":114,"column_start":8,"column_end":24},"name":"sample_slice_ref","qualname":"::seq::sample_slice_ref","value":"pub fn sample_slice_ref<'a, R, T>(&mut R, &'a [T], usize) -> Vec<&'a T> where\nR: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` references from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` references from `slice`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170018,"byte_end":170079,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170080,"byte_end":170083,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The references are non-repeating and in random order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170084,"byte_end":170141,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170142,"byte_end":170145,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170146,"byte_end":170203,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170204,"byte_end":170207,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170208,"byte_end":170244,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170245,"byte_end":170248,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170249,"byte_end":170262,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170263,"byte_end":170266,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170267,"byte_end":170278,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170279,"byte_end":170311,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170312,"byte_end":170315,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170316,"byte_end":170347,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170348,"byte_end":170391,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice_ref(&mut rng, &values, 3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170392,"byte_end":170458,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170459,"byte_end":170466,"line_start":113,"line_end":113,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":171149,"byte_end":171163,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"sample_indices","qualname":"::seq::sample_indices","value":"pub fn sample_indices<R>(&mut R, usize, usize) -> Vec<usize> where R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` indices from `0..length`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` indices from `0..length`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170748,"byte_end":170810,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170811,"byte_end":170814,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170815,"byte_end":170868,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170869,"byte_end":170872,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170873,"byte_end":170930,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170931,"byte_end":170934,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This method is used internally by the slice sampling methods, but it can sometimes be useful to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170935,"byte_end":171034,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/ have the indices themselves so this is provided as an alternative.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":171035,"byte_end":171105,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":171106,"byte_end":171109,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > length`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":171110,"byte_end":171141,"line_start":133,"line_end":133,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10611,"byte_end":10617,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":559}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"/ The ChaCha random number generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10624,"byte_end":10663,"line_start":293,"line_end":293,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10703,"byte_end":10708,"line_start":296,"line_end":296,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"/ The ISAAC random number generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10715,"byte_end":10753,"line_start":297,"line_end":297,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":190030,"byte_end":190039,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"ChaChaRng {  }","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537}],"decl_id":null,"docs":" A random number generator that uses the ChaCha20 algorithm [1].","sig":null,"attributes":[{"value":"/ A random number generator that uses the ChaCha20 algorithm [1].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189567,"byte_end":189634,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189635,"byte_end":189638,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The ChaCha algorithm is widely accepted as suitable for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189639,"byte_end":189698,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ cryptographic purposes, but this implementation has not been","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189699,"byte_end":189763,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189764,"byte_end":189832,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189833,"byte_end":189892,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189893,"byte_end":189896,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [1]: D. J. Bernstein, [*ChaCha, a variant of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189897,"byte_end":189945,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ Salsa20*](http://cr.yp.to/chacha.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":189946,"byte_end":189988,"line_start":31,"line_end":31,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192130,"byte_end":192142,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"pub fn new_unseeded() -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[{"value":"/ Create an ChaCha random number generator using the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191539,"byte_end":191601,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/ fixed key of 8 zero words.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191606,"byte_end":191636,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191641,"byte_end":191644,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191649,"byte_end":191663,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191668,"byte_end":191671,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191676,"byte_end":191687,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, ChaChaRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191692,"byte_end":191723,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191728,"byte_end":191731,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191736,"byte_end":191779,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191784,"byte_end":191820,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191825,"byte_end":191861,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191866,"byte_end":191873,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191878,"byte_end":191881,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Since this equivalent to a RNG with a fixed seed, repeated executions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191886,"byte_end":191959,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ of an unseeded RNG will produce the same result. This code sample will","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191964,"byte_end":192038,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ consistently produce:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192043,"byte_end":192068,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192073,"byte_end":192076,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ - 2917185654","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192081,"byte_end":192097,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ - 2419978656","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192102,"byte_end":192118,"line_start":103,"line_end":103,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192976,"byte_end":192987,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"set_counter","qualname":"<ChaChaRng>::set_counter","value":"pub fn set_counter(&mut Self, u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the internal 128-bit ChaCha counter to\n a user-provided value. This permits jumping\n arbitrarily ahead (or backwards) in the pseudorandom stream.","sig":null,"attributes":[{"value":"/ Sets the internal 128-bit ChaCha counter to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192247,"byte_end":192294,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/ a user-provided value. This permits jumping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192299,"byte_end":192346,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/ arbitrarily ahead (or backwards) in the pseudorandom stream.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192351,"byte_end":192415,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192420,"byte_end":192423,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Since the nonce words are used to extend the counter to 128 bits,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192428,"byte_end":192497,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ users wishing to obtain the conventional ChaCha pseudorandom stream","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192502,"byte_end":192573,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ associated with a particular nonce can call this function with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192578,"byte_end":192644,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"/ arguments `0, desired_nonce`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192649,"byte_end":192682,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192687,"byte_end":192690,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192695,"byte_end":192709,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192714,"byte_end":192717,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192722,"byte_end":192733,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, ChaChaRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192738,"byte_end":192769,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192774,"byte_end":192777,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192782,"byte_end":192825,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/ ra.set_counter(0u64, 1234567890u64);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192830,"byte_end":192870,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192875,"byte_end":192911,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192916,"byte_end":192952,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192957,"byte_end":192964,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200851,"byte_end":200859,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"IsaacRng {  }","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm[1].","sig":null,"attributes":[{"value":"/ A random number generator that uses the ISAAC algorithm[1].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200364,"byte_end":200427,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200428,"byte_end":200431,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The ISAAC algorithm is generally accepted as suitable for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200432,"byte_end":200493,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ cryptographic purposes, but this implementation has not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200494,"byte_end":200556,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200557,"byte_end":200625,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200626,"byte_end":200685,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200686,"byte_end":200689,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200690,"byte_end":200755,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ generator*](http://www.burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200756,"byte_end":200823,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201246,"byte_end":201258,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"pub fn new_unseeded() -> IsaacRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201153,"byte_end":201214,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ fixed seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201219,"byte_end":201234,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211175,"byte_end":211185,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"Isaac64Rng {  }","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" A random number generator that uses ISAAC-64[1], the 64-bit\n variant of the ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses ISAAC-64[1], the 64-bit","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210652,"byte_end":210715,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/ variant of the ISAAC algorithm.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210716,"byte_end":210751,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210752,"byte_end":210755,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The ISAAC algorithm is generally accepted as suitable for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210756,"byte_end":210817,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ cryptographic purposes, but this implementation has not be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210818,"byte_end":210880,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210881,"byte_end":210949,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":210950,"byte_end":211009,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211010,"byte_end":211013,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211014,"byte_end":211079,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ generator*](http://www.burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211080,"byte_end":211147,"line_start":35,"line_end":35,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211576,"byte_end":211588,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"pub fn new_unseeded() -> Isaac64Rng","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.\n","sig":null,"attributes":[{"value":"/ Create a 64-bit ISAAC random number generator using the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211477,"byte_end":211536,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ default fixed seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211541,"byte_end":211564,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222208,"byte_end":222219,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"decl_id":null,"docs":" An Xorshift[1] random number\n generator.","sig":null,"attributes":[{"value":"/ An Xorshift[1] random number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221708,"byte_end":221740,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221741,"byte_end":221755,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221756,"byte_end":221759,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The Xorshift algorithm is not suitable for cryptographic purposes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221760,"byte_end":221829,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ but is very fast. If you do not know for sure that it fits your","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221830,"byte_end":221897,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ requirements, use a more secure one such as `IsaacRng` or `OsRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221898,"byte_end":221968,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221969,"byte_end":221972,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [1]: Marsaglia, George (July 2003). [\"Xorshift","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":221973,"byte_end":222023,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/ RNGs\"](http://www.jstatsoft.org/v08/i14/paper). *Journal of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222024,"byte_end":222087,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ Statistical Software*. Vol. 8 (Issue 14).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222088,"byte_end":222133,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222134,"byte_end":222172,"line_start":26,"line_end":26,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222647,"byte_end":222659,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"pub fn new_unseeded() -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[{"value":"/ Creates a new XorShiftRng instance which is not seeded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222308,"byte_end":222367,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222372,"byte_end":222375,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The initial values of this RNG are constants, so all generators created","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222380,"byte_end":222455,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ by this function will yield the same stream of random numbers. It is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222460,"byte_end":222532,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ highly recommended that this is created through `SeedableRng` instead of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222537,"byte_end":222613,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ this function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222618,"byte_end":222635,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12435,"byte_end":12439,"line_start":338,"line_end":338,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":833}],"decl_id":null,"docs":" A type that can be randomly generated using an `Rng`.","sig":null,"attributes":[{"value":"/ A type that can be randomly generated using an `Rng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10846,"byte_end":10903,"line_start":306,"line_end":306,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10904,"byte_end":10907,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ ## Built-in Implementations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10908,"byte_end":10939,"line_start":308,"line_end":308,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10940,"byte_end":10943,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This crate implements `Rand` for various primitive types.  Assuming the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10944,"byte_end":11019,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ provided `Rng` is well-behaved, these implementations generate values with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11020,"byte_end":11098,"line_start":311,"line_end":311,"column_start":1,"column_end":79}},{"value":"/ the following ranges and distributions:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11099,"byte_end":11142,"line_start":312,"line_end":312,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11143,"byte_end":11146,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32`, `u32`, `isize`, `usize`, etc.): Uniformly distributed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11147,"byte_end":11223,"line_start":314,"line_end":314,"column_start":1,"column_end":77}},{"value":"/   over all values of the type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11224,"byte_end":11258,"line_start":315,"line_end":315,"column_start":1,"column_end":35}},{"value":"/ * `char`: Uniformly distributed over all Unicode scalar values, i.e. all","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11259,"byte_end":11335,"line_start":316,"line_end":316,"column_start":1,"column_end":77}},{"value":"/   code points in the range `0...0x10_FFFF`, except for the range","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11336,"byte_end":11404,"line_start":317,"line_end":317,"column_start":1,"column_end":69}},{"value":"/   `0xD800...0xDFFF` (the surrogate code points).  This includes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11405,"byte_end":11472,"line_start":318,"line_end":318,"column_start":1,"column_end":68}},{"value":"/   unassigned/reserved code points.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11473,"byte_end":11511,"line_start":319,"line_end":319,"column_start":1,"column_end":39}},{"value":"/ * `bool`: Generates `false` or `true`, each with probability 0.5.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11512,"byte_end":11581,"line_start":320,"line_end":320,"column_start":1,"column_end":70}},{"value":"/ * Floating point types (`f32` and `f64`): Uniformly distributed in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11582,"byte_end":11656,"line_start":321,"line_end":321,"column_start":1,"column_end":75}},{"value":"/   half-open range `[0, 1)`.  (The [`Open01`], [`Closed01`], [`Exp1`], and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11657,"byte_end":11734,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   [`StandardNormal`] wrapper types produce floating point numbers with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11735,"byte_end":11809,"line_start":323,"line_end":323,"column_start":1,"column_end":75}},{"value":"/   alternative ranges or distributions.)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11810,"byte_end":11853,"line_start":324,"line_end":324,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11854,"byte_end":11857,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11858,"byte_end":11892,"line_start":326,"line_end":326,"column_start":1,"column_end":35}},{"value":"/ [`Closed01`]: struct.Closed01.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11893,"byte_end":11931,"line_start":327,"line_end":327,"column_start":1,"column_end":39}},{"value":"/ [`Exp1`]: distributions/exponential/struct.Exp1.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11932,"byte_end":11988,"line_start":328,"line_end":328,"column_start":1,"column_end":57}},{"value":"/ [`StandardNormal`]: distributions/normal/struct.StandardNormal.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":11989,"byte_end":12060,"line_start":329,"line_end":329,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12061,"byte_end":12064,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ The following aggregate types also implement `Rand` as long as their","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12065,"byte_end":12137,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/ component types implement it:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12138,"byte_end":12171,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12172,"byte_end":12175,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ * Tuples and arrays: Each element of the tuple or array is generated","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12176,"byte_end":12248,"line_start":334,"line_end":334,"column_start":1,"column_end":73}},{"value":"/   independently, using its own `Rand` implementation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12249,"byte_end":12306,"line_start":335,"line_end":335,"column_start":1,"column_end":58}},{"value":"/ * `Option<T>`: Returns `None` with probability 0.5; otherwise generates a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12307,"byte_end":12384,"line_start":336,"line_end":336,"column_start":1,"column_end":78}},{"value":"/   random `T` and returns `Some(T)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12385,"byte_end":12424,"line_start":337,"line_end":337,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12556,"byte_end":12560,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"pub fn rand<R: Rng>(&mut R) -> Self","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[{"value":"/ Generates a random instance of this type using the specified source of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12454,"byte_end":12528,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ randomness.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12533,"byte_end":12548,"line_start":340,"line_end":340,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12635,"byte_end":12638,"line_start":345,"line_end":345,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861}],"decl_id":null,"docs":" A random number generator.\n","sig":null,"attributes":[{"value":"/ A random number generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12594,"byte_end":12624,"line_start":344,"line_end":344,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12862,"byte_end":12870,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"next_u32","qualname":"::Rng::next_u32","value":"pub fn next_u32(&mut Self) -> u32","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return the next random u32.","sig":null,"attributes":[{"value":"/ Return the next random u32.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12645,"byte_end":12676,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12681,"byte_end":12684,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This rarely needs to be called directly, prefer `r.gen()` to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12689,"byte_end":12753,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/ `r.next_u32()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12758,"byte_end":12777,"line_start":349,"line_end":349,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13211,"byte_end":13219,"line_start":359,"line_end":359,"column_start":8,"column_end":16},"name":"next_u64","qualname":"::Rng::next_u64","value":"pub fn next_u64(&mut Self) -> u64","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return the next random u64.","sig":null,"attributes":[{"value":"/ Return the next random u64.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12895,"byte_end":12926,"line_start":353,"line_end":353,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12931,"byte_end":12934,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u32`. An","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12939,"byte_end":13000,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ implementation of this trait must provide at least one of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13005,"byte_end":13066,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/ these two methods. Similarly to `next_u32`, this rarely needs","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13071,"byte_end":13136,"line_start":357,"line_end":357,"column_start":5,"column_end":70}},{"value":"/ to be called directly, prefer `r.gen()` to `r.next_u64()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13141,"byte_end":13203,"line_start":358,"line_end":358,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14619,"byte_end":14627,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"next_f32","qualname":"::Rng::next_f32","value":"pub fn next_f32(&mut Self) -> f32","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return the next random f32 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[{"value":"/ Return the next random f32 selected from the half-open","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13319,"byte_end":13377,"line_start":363,"line_end":363,"column_start":5,"column_end":63}},{"value":"/ interval `[0, 1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13382,"byte_end":13404,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13409,"byte_end":13412,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This uses a technique described by Saito and Matsumoto at","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13417,"byte_end":13478,"line_start":366,"line_end":366,"column_start":5,"column_end":66}},{"value":"/ MCQMC'08. Given that the IEEE floating point numbers are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13483,"byte_end":13543,"line_start":367,"line_end":367,"column_start":5,"column_end":65}},{"value":"/ uniformly distributed over [1,2), we generate a number in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13548,"byte_end":13609,"line_start":368,"line_end":368,"column_start":5,"column_end":66}},{"value":"/ this range and then offset it onto the range [0,1). Our","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13614,"byte_end":13673,"line_start":369,"line_end":369,"column_start":5,"column_end":64}},{"value":"/ choice of bits (masking v. shifting) is arbitrary and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13678,"byte_end":13735,"line_start":370,"line_end":370,"column_start":5,"column_end":62}},{"value":"/ should be immaterial for high quality generators. For low","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13740,"byte_end":13801,"line_start":371,"line_end":371,"column_start":5,"column_end":66}},{"value":"/ quality generators (ex. LCG), prefer bitshifting due to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13806,"byte_end":13865,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/ correlation between sequential low order bits.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13870,"byte_end":13920,"line_start":373,"line_end":373,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13925,"byte_end":13928,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ See:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13933,"byte_end":13941,"line_start":375,"line_end":375,"column_start":5,"column_end":13}},{"value":"/ A PRNG specialized in double precision floating point numbers using","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13946,"byte_end":14017,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ an affine transition","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14022,"byte_end":14046,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14051,"byte_end":14054,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ * <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/ARTICLES/dSFMT.pdf>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14059,"byte_end":14133,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ * <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/dSFMT-slide-e.pdf>","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14138,"byte_end":14216,"line_start":380,"line_end":380,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14221,"byte_end":14224,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u32`, but a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14229,"byte_end":14293,"line_start":382,"line_end":382,"column_start":5,"column_end":69}},{"value":"/ random number generator which can generate numbers satisfying","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14298,"byte_end":14363,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the requirements directly can overload this for performance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14368,"byte_end":14432,"line_start":384,"line_end":384,"column_start":5,"column_end":69}},{"value":"/ It is required that the return value lies in `[0, 1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14437,"byte_end":14495,"line_start":385,"line_end":385,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14500,"byte_end":14503,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ See `Closed01` for the closed interval `[0,1]`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14508,"byte_end":14563,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/ `Open01` for the open interval `(0,1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14568,"byte_end":14611,"line_start":388,"line_end":388,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15375,"byte_end":15383,"line_start":407,"line_end":407,"column_start":8,"column_end":16},"name":"next_f64","qualname":"::Rng::next_f64","value":"pub fn next_f64(&mut Self) -> f64","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return the next random f64 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[{"value":"/ Return the next random f64 selected from the half-open","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14887,"byte_end":14945,"line_start":397,"line_end":397,"column_start":5,"column_end":63}},{"value":"/ interval `[0, 1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14950,"byte_end":14972,"line_start":398,"line_end":398,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14977,"byte_end":14980,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u64`, but a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14985,"byte_end":15049,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/ random number generator which can generate numbers satisfying","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15054,"byte_end":15119,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ the requirements directly can overload this for performance.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15124,"byte_end":15188,"line_start":402,"line_end":402,"column_start":5,"column_end":69}},{"value":"/ It is required that the return value lies in `[0, 1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15193,"byte_end":15251,"line_start":403,"line_end":403,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15256,"byte_end":15259,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See `Closed01` for the closed interval `[0,1]`, and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15264,"byte_end":15319,"line_start":405,"line_end":405,"column_start":5,"column_end":60}},{"value":"/ `Open01` for the open interval `(0,1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15324,"byte_end":15367,"line_start":406,"line_end":406,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16701,"byte_end":16711,"line_start":442,"line_end":442,"column_start":8,"column_end":18},"name":"fill_bytes","qualname":"::Rng::fill_bytes","value":"pub fn fill_bytes(&mut Self, &mut [u8])","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Fill `dest` with random data.","sig":null,"attributes":[{"value":"/ Fill `dest` with random data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15658,"byte_end":15691,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15696,"byte_end":15699,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This has a default implementation in terms of `next_u64` and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15704,"byte_end":15768,"line_start":417,"line_end":417,"column_start":5,"column_end":69}},{"value":"/ `next_u32`, but should be overridden by implementations that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15773,"byte_end":15837,"line_start":418,"line_end":418,"column_start":5,"column_end":69}},{"value":"/ offer a more efficient solution than just calling those","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15842,"byte_end":15901,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ methods repeatedly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15906,"byte_end":15929,"line_start":420,"line_end":420,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15934,"byte_end":15937,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This method does *not* have a requirement to bear any fixed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15942,"byte_end":16005,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"/ relationship to the other methods, for example, it does *not*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16010,"byte_end":16075,"line_start":423,"line_end":423,"column_start":5,"column_end":70}},{"value":"/ have to result in the same output as progressively filling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16080,"byte_end":16142,"line_start":424,"line_end":424,"column_start":5,"column_end":67}},{"value":"/ `dest` with `self.gen::<u8>()`, and any such behaviour should","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16147,"byte_end":16212,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/ not be relied upon.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16217,"byte_end":16240,"line_start":426,"line_end":426,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16245,"byte_end":16248,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This method should guarantee that `dest` is entirely filled","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16253,"byte_end":16316,"line_start":428,"line_end":428,"column_start":5,"column_end":68}},{"value":"/ with new data, and may panic if this is impossible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16321,"byte_end":16375,"line_start":429,"line_end":429,"column_start":5,"column_end":59}},{"value":"/ (e.g. reading past the end of a file that is being used as the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16380,"byte_end":16446,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ source of randomness).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16451,"byte_end":16477,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16482,"byte_end":16485,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16490,"byte_end":16503,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16508,"byte_end":16511,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16516,"byte_end":16527,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16532,"byte_end":16564,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16569,"byte_end":16572,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut v = [0u8; 13579];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16577,"byte_end":16606,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ thread_rng().fill_bytes(&mut v);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16611,"byte_end":16647,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", &v[..]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16652,"byte_end":16681,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16686,"byte_end":16693,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17915,"byte_end":17918,"line_start":479,"line_end":479,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"pub fn gen<T: Rand>(&mut Self) -> T where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return a random value of a `Rand` type.","sig":null,"attributes":[{"value":"/ Return a random value of a `Rand` type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17588,"byte_end":17631,"line_start":466,"line_end":466,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17636,"byte_end":17639,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17644,"byte_end":17657,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17662,"byte_end":17665,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17670,"byte_end":17681,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17686,"byte_end":17718,"line_start":471,"line_end":471,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17723,"byte_end":17726,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17731,"byte_end":17762,"line_start":473,"line_end":473,"column_start":5,"column_end":36}},{"value":"/ let x: u32 = rng.gen();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17767,"byte_end":17794,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17799,"byte_end":17821,"line_start":475,"line_end":475,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", rng.gen::<(f64, bool)>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17826,"byte_end":17873,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17878,"byte_end":17885,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17890,"byte_end":17907,"line_start":478,"line_end":478,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18464,"byte_end":18472,"line_start":497,"line_end":497,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"pub fn gen_iter<'a, T: Rand>(&'a mut Self) -> Generator where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[{"value":"/ Return an iterator that will yield an infinite number of randomly","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18000,"byte_end":18069,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/ generated items.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18074,"byte_end":18094,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18099,"byte_end":18102,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18107,"byte_end":18120,"line_start":486,"line_end":486,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18125,"byte_end":18128,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18133,"byte_end":18140,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18145,"byte_end":18177,"line_start":489,"line_end":489,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18182,"byte_end":18185,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18190,"byte_end":18221,"line_start":491,"line_end":491,"column_start":5,"column_end":36}},{"value":"/ let x = rng.gen_iter::<u32>().take(10).collect::<Vec<u32>>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18226,"byte_end":18291,"line_start":492,"line_end":492,"column_start":5,"column_end":70}},{"value":"/ println!(\"{:?}\", x);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18296,"byte_end":18320,"line_start":493,"line_end":493,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", rng.gen_iter::<(f64, bool)>().take(5)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18325,"byte_end":18383,"line_start":494,"line_end":494,"column_start":5,"column_end":63}},{"value":"/                     .collect::<Vec<(f64, bool)>>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18388,"byte_end":18444,"line_start":495,"line_end":495,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18449,"byte_end":18456,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19360,"byte_end":19369,"line_start":524,"line_end":524,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"pub fn gen_range<T: PartialOrd + SampleRange>(&mut Self, T, T) -> T where\nSelf: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`).","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`low`, `high`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18619,"byte_end":18676,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18681,"byte_end":18684,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper around","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18689,"byte_end":18729,"line_start":503,"line_end":503,"column_start":5,"column_end":45}},{"value":"/ `distributions::Range`. If this function will be called","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18734,"byte_end":18793,"line_start":504,"line_end":504,"column_start":5,"column_end":64}},{"value":"/ repeatedly with the same arguments, one should use `Range`, as","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18798,"byte_end":18864,"line_start":505,"line_end":505,"column_start":5,"column_end":71}},{"value":"/ that will amortize the computations that allow for perfect","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18869,"byte_end":18931,"line_start":506,"line_end":506,"column_start":5,"column_end":67}},{"value":"/ uniformity, as they only happen on initialization.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18936,"byte_end":18990,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18995,"byte_end":18998,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19003,"byte_end":19015,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19020,"byte_end":19023,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Panics if `low >= high`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19028,"byte_end":19056,"line_start":511,"line_end":511,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19061,"byte_end":19064,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19069,"byte_end":19082,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19087,"byte_end":19090,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19095,"byte_end":19106,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19111,"byte_end":19143,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19148,"byte_end":19151,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19156,"byte_end":19187,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ let n: u32 = rng.gen_range(0, 10);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19192,"byte_end":19230,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19235,"byte_end":19257,"line_start":520,"line_end":520,"column_start":5,"column_end":27}},{"value":"/ let m: f64 = rng.gen_range(-40.0f64, 1.3e5f64);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19262,"byte_end":19313,"line_start":521,"line_end":521,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", m);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19318,"byte_end":19340,"line_start":522,"line_end":522,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19345,"byte_end":19352,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19827,"byte_end":19844,"line_start":539,"line_end":539,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"pub fn gen_weighted_bool(&mut Self, u32) -> bool where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[{"value":"/ Return a bool with a 1 in n chance of true","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19580,"byte_end":19626,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19631,"byte_end":19634,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19639,"byte_end":19652,"line_start":531,"line_end":531,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19657,"byte_end":19660,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19665,"byte_end":19676,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19681,"byte_end":19713,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19718,"byte_end":19721,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19726,"byte_end":19757,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(3));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19762,"byte_end":19807,"line_start":537,"line_end":537,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19812,"byte_end":19819,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20233,"byte_end":20248,"line_start":553,"line_end":553,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"pub fn gen_ascii_chars<'a>(&'a mut Self) -> AsciiGenerator where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[{"value":"/ Return an iterator of random characters from the set A-Z,a-z,0-9.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19947,"byte_end":20016,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20021,"byte_end":20024,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20029,"byte_end":20042,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20047,"byte_end":20050,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20055,"byte_end":20066,"line_start":547,"line_end":547,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20071,"byte_end":20103,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20108,"byte_end":20111,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let s: String = thread_rng().gen_ascii_chars().take(10).collect();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20116,"byte_end":20186,"line_start":550,"line_end":550,"column_start":5,"column_end":75}},{"value":"/ println!(\"{}\", s);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20191,"byte_end":20213,"line_start":551,"line_end":551,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20218,"byte_end":20225,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20749,"byte_end":20755,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"pub fn choose<'a, T>(&mut Self, &'a [T]) -> Option<&'a T> where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a random element from `values`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20363,"byte_end":20405,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20410,"byte_end":20413,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20418,"byte_end":20457,"line_start":559,"line_end":559,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20462,"byte_end":20465,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20470,"byte_end":20483,"line_start":561,"line_end":561,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20488,"byte_end":20491,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20496,"byte_end":20503,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20508,"byte_end":20540,"line_start":564,"line_end":564,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20545,"byte_end":20548,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let choices = [1, 2, 4, 8, 16, 32];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20553,"byte_end":20592,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20597,"byte_end":20628,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/ println!(\"{:?}\", rng.choose(&choices));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20633,"byte_end":20676,"line_start":568,"line_end":568,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(rng.choose(&choices[..0]), None);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20681,"byte_end":20729,"line_start":569,"line_end":569,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20734,"byte_end":20741,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21096,"byte_end":21106,"line_start":582,"line_end":582,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"pub fn choose_mut<'a, T>(&mut Self, &'a mut [T]) -> Option<&'a mut T> where\nSelf: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to a random element from `values`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20973,"byte_end":21036,"line_start":579,"line_end":579,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21041,"byte_end":21044,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21049,"byte_end":21088,"line_start":581,"line_end":581,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21913,"byte_end":21920,"line_start":608,"line_end":608,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"pub fn shuffle<T>(&mut Self, &mut [T]) where Self: Sized","parent":{"krate":0,"index":835},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[{"value":"/ Shuffle a mutable slice in place.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21363,"byte_end":21400,"line_start":591,"line_end":591,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21405,"byte_end":21408,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This applies Durstenfeld's algorithm for the [Fisher–Yates shuffle](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21413,"byte_end":21567,"line_start":593,"line_end":593,"column_start":5,"column_end":157}},{"value":"/ which produces an unbiased permutation.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21572,"byte_end":21615,"line_start":594,"line_end":594,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21620,"byte_end":21623,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21628,"byte_end":21641,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21646,"byte_end":21649,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21654,"byte_end":21665,"line_start":598,"line_end":598,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21670,"byte_end":21702,"line_start":599,"line_end":599,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21707,"byte_end":21710,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21715,"byte_end":21746,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ let mut y = [1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21751,"byte_end":21777,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21782,"byte_end":21806,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21811,"byte_end":21835,"line_start":604,"line_end":604,"column_start":5,"column_end":29}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21840,"byte_end":21864,"line_start":605,"line_end":605,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21869,"byte_end":21893,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21898,"byte_end":21905,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23353,"byte_end":23362,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[{"value":"/ Iterator which will generate a stream of random items.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23112,"byte_end":23170,"line_start":664,"line_end":664,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23171,"byte_end":23174,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_iter`] method on [`Rng`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23175,"byte_end":23243,"line_start":666,"line_end":666,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23244,"byte_end":23247,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ [`gen_iter`]: trait.Rng.html#method.gen_iter","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23248,"byte_end":23296,"line_start":668,"line_end":668,"column_start":1,"column_end":49}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23297,"byte_end":23324,"line_start":669,"line_end":669,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23877,"byte_end":23891,"line_start":691,"line_end":691,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":1594}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[{"value":"/ Iterator which will continuously generate random ascii characters.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23603,"byte_end":23673,"line_start":684,"line_end":684,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23674,"byte_end":23677,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_ascii_chars`] method on [`Rng`].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23678,"byte_end":23753,"line_start":686,"line_end":686,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23754,"byte_end":23757,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ [`gen_ascii_chars`]: trait.Rng.html#method.gen_ascii_chars","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23758,"byte_end":23820,"line_start":688,"line_end":688,"column_start":1,"column_end":63}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23821,"byte_end":23848,"line_start":689,"line_end":689,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24420,"byte_end":24431,"line_start":709,"line_end":709,"column_start":11,"column_end":22},"name":"SeedableRng","qualname":"::SeedableRng","value":"SeedableRng<Seed>: Rng","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" A random number generator that can be explicitly seeded to produce\n the same stream of randomness multiple times.\n","sig":null,"attributes":[{"value":"/ A random number generator that can be explicitly seeded to produce","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24289,"byte_end":24359,"line_start":707,"line_end":707,"column_start":1,"column_end":71}},{"value":"/ the same stream of randomness multiple times.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24360,"byte_end":24409,"line_start":708,"line_end":708,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24830,"byte_end":24836,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"reseed","qualname":"::SeedableRng::reseed","value":"pub fn reseed(&mut Self, Seed)","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" Reseed an RNG with the given seed.","sig":null,"attributes":[{"value":"/ Reseed an RNG with the given seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24449,"byte_end":24487,"line_start":710,"line_end":710,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24492,"byte_end":24495,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24500,"byte_end":24513,"line_start":712,"line_end":712,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24518,"byte_end":24521,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24526,"byte_end":24537,"line_start":714,"line_end":714,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24542,"byte_end":24583,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24588,"byte_end":24591,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let seed: &[_] = &[1, 2, 3, 4];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24596,"byte_end":24631,"line_start":717,"line_end":717,"column_start":5,"column_end":40}},{"value":"/ let mut rng: StdRng = SeedableRng::from_seed(seed);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24636,"byte_end":24691,"line_start":718,"line_end":718,"column_start":5,"column_end":60}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24696,"byte_end":24733,"line_start":719,"line_end":719,"column_start":5,"column_end":42}},{"value":"/ rng.reseed(&[5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24738,"byte_end":24768,"line_start":720,"line_end":720,"column_start":5,"column_end":35}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24773,"byte_end":24810,"line_start":721,"line_end":721,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24815,"byte_end":24822,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25167,"byte_end":25176,"line_start":736,"line_end":736,"column_start":8,"column_end":17},"name":"from_seed","qualname":"::SeedableRng::from_seed","value":"pub fn from_seed(Seed) -> Self","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" Create a new RNG with the given seed.","sig":null,"attributes":[{"value":"/ Create a new RNG with the given seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24860,"byte_end":24901,"line_start":725,"line_end":725,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24906,"byte_end":24909,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24914,"byte_end":24927,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24932,"byte_end":24935,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24940,"byte_end":24951,"line_start":729,"line_end":729,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24956,"byte_end":24997,"line_start":730,"line_end":730,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25002,"byte_end":25005,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ let seed: &[_] = &[1, 2, 3, 4];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25010,"byte_end":25045,"line_start":732,"line_end":732,"column_start":5,"column_end":40}},{"value":"/ let mut rng: StdRng = SeedableRng::from_seed(seed);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25050,"byte_end":25105,"line_start":733,"line_end":733,"column_start":5,"column_end":60}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25110,"byte_end":25147,"line_start":734,"line_end":734,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25152,"byte_end":25159,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1599},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25668,"byte_end":25674,"line_start":754,"line_end":754,"column_start":12,"column_end":18},"name":"Open01","qualname":"::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n open interval `(0,1)` (not including either endpoint).","sig":null,"attributes":[{"value":"/ A wrapper for generating floating point numbers uniformly in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25201,"byte_end":25269,"line_start":739,"line_end":739,"column_start":1,"column_end":69}},{"value":"/ open interval `(0,1)` (not including either endpoint).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25270,"byte_end":25328,"line_start":740,"line_end":740,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25329,"byte_end":25332,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ Use `Closed01` for the closed interval `[0,1]`, and the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25333,"byte_end":25400,"line_start":742,"line_end":742,"column_start":1,"column_end":68}},{"value":"/ `Rand` implementation for `f32` and `f64` for the half-open","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25401,"byte_end":25464,"line_start":743,"line_end":743,"column_start":1,"column_end":64}},{"value":"/ `[0,1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25465,"byte_end":25477,"line_start":744,"line_end":744,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25478,"byte_end":25481,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25482,"byte_end":25495,"line_start":746,"line_end":746,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25496,"byte_end":25507,"line_start":747,"line_end":747,"column_start":1,"column_end":12}},{"value":"/ use rand::{random, Open01};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25508,"byte_end":25539,"line_start":748,"line_end":748,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25540,"byte_end":25543,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ let Open01(val) = random::<Open01<f32>>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25544,"byte_end":25590,"line_start":750,"line_end":750,"column_start":1,"column_end":47}},{"value":"/ println!(\"f32 from (0,1): {}\", val);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25591,"byte_end":25631,"line_start":751,"line_end":751,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25632,"byte_end":25639,"line_start":752,"line_end":752,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25678,"byte_end":25683,"line_start":754,"line_end":754,"column_start":22,"column_end":27},"name":"0","qualname":"::Open01::0","value":"F","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26158,"byte_end":26166,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"Closed01","qualname":"::Closed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n closed interval `[0,1]` (including both endpoints).","sig":null,"attributes":[{"value":"/ A wrapper for generating floating point numbers uniformly in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25687,"byte_end":25755,"line_start":756,"line_end":756,"column_start":1,"column_end":69}},{"value":"/ closed interval `[0,1]` (including both endpoints).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25756,"byte_end":25811,"line_start":757,"line_end":757,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25812,"byte_end":25815,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ Use `Open01` for the closed interval `(0,1)`, and the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25816,"byte_end":25881,"line_start":759,"line_end":759,"column_start":1,"column_end":66}},{"value":"/ `Rand` implementation of `f32` and `f64` for the half-open","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25882,"byte_end":25944,"line_start":760,"line_end":760,"column_start":1,"column_end":63}},{"value":"/ `[0,1)`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25945,"byte_end":25957,"line_start":761,"line_end":761,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25958,"byte_end":25961,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25962,"byte_end":25975,"line_start":763,"line_end":763,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25976,"byte_end":25979,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25980,"byte_end":25991,"line_start":765,"line_end":765,"column_start":1,"column_end":12}},{"value":"/ use rand::{random, Closed01};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25992,"byte_end":26025,"line_start":766,"line_end":766,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26026,"byte_end":26029,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ let Closed01(val) = random::<Closed01<f32>>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26030,"byte_end":26080,"line_start":768,"line_end":768,"column_start":1,"column_end":51}},{"value":"/ println!(\"f32 from [0,1]: {}\", val);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26081,"byte_end":26121,"line_start":769,"line_end":769,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26122,"byte_end":26129,"line_start":770,"line_end":770,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26170,"byte_end":26175,"line_start":772,"line_end":772,"column_start":24,"column_end":29},"name":"0","qualname":"::Closed01::0","value":"F","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26304,"byte_end":26310,"line_start":777,"line_end":777,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::StdRng","value":"StdRng {  }","parent":null,"children":[{"krate":0,"index":1614}],"decl_id":null,"docs":" The standard RNG. This is designed to be efficient on the current\n platform.\n","sig":null,"attributes":[{"value":"/ The standard RNG. This is designed to be efficient on the current","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26179,"byte_end":26248,"line_start":774,"line_end":774,"column_start":1,"column_end":70}},{"value":"/ platform.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26249,"byte_end":26262,"line_start":775,"line_end":775,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26946,"byte_end":26949,"line_start":794,"line_end":794,"column_start":12,"column_end":15},"name":"new","qualname":"<StdRng>::new","value":"pub fn new() -> io::Result<StdRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a randomly seeded instance of `StdRng`.","sig":null,"attributes":[{"value":"/ Create a randomly seeded instance of `StdRng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26357,"byte_end":26407,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26412,"byte_end":26415,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This is a very expensive operation as it has to read","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26420,"byte_end":26476,"line_start":784,"line_end":784,"column_start":5,"column_end":61}},{"value":"/ randomness from the operating system and use this in an","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26481,"byte_end":26540,"line_start":785,"line_end":785,"column_start":5,"column_end":64}},{"value":"/ expensive seeding operation. If one is only generating a small","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26545,"byte_end":26611,"line_start":786,"line_end":786,"column_start":5,"column_end":71}},{"value":"/ number of random numbers, or doesn't need the utmost speed for","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26616,"byte_end":26682,"line_start":787,"line_end":787,"column_start":5,"column_end":71}},{"value":"/ generating each number, `thread_rng` and/or `random` may be more","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26687,"byte_end":26755,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ appropriate.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26760,"byte_end":26776,"line_start":789,"line_end":789,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26781,"byte_end":26784,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Reading the randomness from the OS may fail, and any error is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26789,"byte_end":26854,"line_start":791,"line_end":791,"column_start":5,"column_end":70}},{"value":"/ propagated via the `io::Result` return value.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26859,"byte_end":26908,"line_start":792,"line_end":792,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26913,"byte_end":26934,"line_start":793,"line_end":793,"column_start":5,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28338,"byte_end":28346,"line_start":842,"line_end":842,"column_start":8,"column_end":16},"name":"weak_rng","qualname":"::weak_rng","value":"pub fn weak_rng() -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Create a weak random number generator with a default algorithm and seed.","sig":null,"attributes":[{"value":"/ Create a weak random number generator with a default algorithm and seed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27893,"byte_end":27969,"line_start":833,"line_end":833,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27970,"byte_end":27973,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ It returns the fastest `Rng` algorithm currently available in Rust without","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27974,"byte_end":28052,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/ consideration for cryptography or security. If you require a specifically","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28053,"byte_end":28130,"line_start":836,"line_end":836,"column_start":1,"column_end":78}},{"value":"/ seeded `Rng` for consistency over time you should pick one algorithm and","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28131,"byte_end":28207,"line_start":837,"line_end":837,"column_start":1,"column_end":77}},{"value":"/ create the `Rng` yourself.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28208,"byte_end":28238,"line_start":838,"line_end":838,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28239,"byte_end":28242,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ This will seed the generator with randomness from thread_rng.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28243,"byte_end":28308,"line_start":840,"line_end":840,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28309,"byte_end":28330,"line_start":841,"line_end":841,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29024,"byte_end":29033,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"ThreadRng","qualname":"::ThreadRng","value":"ThreadRng {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" The thread-local RNG.\n","sig":null,"attributes":[{"value":"/ The thread-local RNG.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28941,"byte_end":28966,"line_start":865,"line_end":865,"column_start":1,"column_end":26}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28967,"byte_end":28988,"line_start":866,"line_end":866,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29774,"byte_end":29784,"line_start":885,"line_end":885,"column_start":8,"column_end":18},"name":"thread_rng","qualname":"::thread_rng","value":"pub fn thread_rng() -> ThreadRng","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the lazily-initialized thread-local random number\n generator, seeded by the system. Intended to be used in method\n chaining style, e.g. `thread_rng().gen::<i32>()`.","sig":null,"attributes":[{"value":"/ Retrieve the lazily-initialized thread-local random number","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29077,"byte_end":29139,"line_start":872,"line_end":872,"column_start":1,"column_end":63}},{"value":"/ generator, seeded by the system. Intended to be used in method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29140,"byte_end":29206,"line_start":873,"line_end":873,"column_start":1,"column_end":67}},{"value":"/ chaining style, e.g. `thread_rng().gen::<i32>()`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29207,"byte_end":29260,"line_start":874,"line_end":874,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29261,"byte_end":29264,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ After generating a certain amount of randomness, the RNG will reseed itself","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29265,"byte_end":29344,"line_start":876,"line_end":876,"column_start":1,"column_end":80}},{"value":"/ from the operating system or, if the operating system RNG returns an error,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29345,"byte_end":29424,"line_start":877,"line_end":877,"column_start":1,"column_end":80}},{"value":"/ a seed based on the current system time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29425,"byte_end":29469,"line_start":878,"line_end":878,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29470,"byte_end":29473,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ The internal RNG used is platform and architecture dependent, even","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29474,"byte_end":29544,"line_start":880,"line_end":880,"column_start":1,"column_end":71}},{"value":"/ if the operating system random number generator is rigged to give","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29545,"byte_end":29614,"line_start":881,"line_end":881,"column_start":1,"column_end":70}},{"value":"/ the same sequence always. If absolute consistency is required,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29615,"byte_end":29681,"line_start":882,"line_end":882,"column_start":1,"column_end":67}},{"value":"/ explicitly select an RNG, e.g. `IsaacRng` or `Isaac64Rng`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29682,"byte_end":29744,"line_start":883,"line_end":883,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29745,"byte_end":29766,"line_start":884,"line_end":884,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31783,"byte_end":31789,"line_start":961,"line_end":961,"column_start":8,"column_end":14},"name":"random","qualname":"::random","value":"pub fn random<T: Rand>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Generates a random value using the thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generates a random value using the thread-local random number generator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30705,"byte_end":30781,"line_start":917,"line_end":917,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30782,"byte_end":30785,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ `random()` can generate various types of random things, and so may require","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30786,"byte_end":30864,"line_start":919,"line_end":919,"column_start":1,"column_end":79}},{"value":"/ type hinting to generate the specific type you want.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30865,"byte_end":30921,"line_start":920,"line_end":920,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30922,"byte_end":30925,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ This function uses the thread local random number generator. This means","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30926,"byte_end":31001,"line_start":922,"line_end":922,"column_start":1,"column_end":76}},{"value":"/ that if you're calling `random()` in a loop, caching the generator can","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31002,"byte_end":31076,"line_start":923,"line_end":923,"column_start":1,"column_end":75}},{"value":"/ increase performance. An example is shown below.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31077,"byte_end":31129,"line_start":924,"line_end":924,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31130,"byte_end":31133,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31134,"byte_end":31148,"line_start":926,"line_end":926,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31149,"byte_end":31152,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31153,"byte_end":31160,"line_start":928,"line_end":928,"column_start":1,"column_end":8}},{"value":"/ let x = rand::random::<u8>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31161,"byte_end":31194,"line_start":929,"line_end":929,"column_start":1,"column_end":34}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31195,"byte_end":31217,"line_start":930,"line_end":930,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31218,"byte_end":31221,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/ let y = rand::random::<f64>();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31222,"byte_end":31256,"line_start":932,"line_end":932,"column_start":1,"column_end":35}},{"value":"/ println!(\"{}\", y);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31257,"byte_end":31279,"line_start":933,"line_end":933,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31280,"byte_end":31283,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ if rand::random() { // generates a boolean","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31284,"byte_end":31330,"line_start":935,"line_end":935,"column_start":1,"column_end":47}},{"value":"/     println!(\"Better lucky than good!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31331,"byte_end":31375,"line_start":936,"line_end":936,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31376,"byte_end":31381,"line_start":937,"line_end":937,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31382,"byte_end":31389,"line_start":938,"line_end":938,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31390,"byte_end":31393,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ Caching the thread local random number generator:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31394,"byte_end":31447,"line_start":940,"line_end":940,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31448,"byte_end":31451,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31452,"byte_end":31459,"line_start":942,"line_end":942,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31460,"byte_end":31478,"line_start":943,"line_end":943,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31479,"byte_end":31482,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ let mut v = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31483,"byte_end":31513,"line_start":945,"line_end":945,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31514,"byte_end":31517,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31518,"byte_end":31545,"line_start":947,"line_end":947,"column_start":1,"column_end":28}},{"value":"/     *x = rand::random()","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31546,"byte_end":31573,"line_start":948,"line_end":948,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31574,"byte_end":31579,"line_start":949,"line_end":949,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31580,"byte_end":31583,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ // can be made faster by caching thread_rng","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31584,"byte_end":31631,"line_start":951,"line_end":951,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31632,"byte_end":31635,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31636,"byte_end":31673,"line_start":953,"line_end":953,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31674,"byte_end":31677,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31678,"byte_end":31705,"line_start":955,"line_end":955,"column_start":1,"column_end":28}},{"value":"/     *x = rng.gen();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31706,"byte_end":31729,"line_start":956,"line_end":956,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31730,"byte_end":31735,"line_start":957,"line_end":957,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31736,"byte_end":31743,"line_start":958,"line_end":958,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31744,"byte_end":31765,"line_start":959,"line_end":959,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31766,"byte_end":31775,"line_start":960,"line_end":960,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32311,"byte_end":32317,"line_start":982,"line_end":982,"column_start":8,"column_end":14},"name":"sample","qualname":"::sample","value":"pub fn sample<T, I, R>(&mut R, I, usize) -> Vec<T> where I: IntoIterator<Item\n= T>, R: Rng","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use `seq::sample_iter` instead.","sig":null,"attributes":[{"value":"/ DEPRECATED: use `seq::sample_iter` instead.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31834,"byte_end":31881,"line_start":965,"line_end":965,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31882,"byte_end":31885,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ Randomly sample up to `amount` elements from a finite iterator.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31886,"byte_end":31953,"line_start":967,"line_end":967,"column_start":1,"column_end":68}},{"value":"/ The order of elements in the sample is not random.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31954,"byte_end":32008,"line_start":968,"line_end":968,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32009,"byte_end":32012,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32013,"byte_end":32026,"line_start":970,"line_end":970,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32027,"byte_end":32030,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32031,"byte_end":32042,"line_start":972,"line_end":972,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, sample};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32043,"byte_end":32078,"line_start":973,"line_end":973,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32079,"byte_end":32082,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32083,"byte_end":32114,"line_start":975,"line_end":975,"column_start":1,"column_end":32}},{"value":"/ let sample = sample(&mut rng, 1..100, 5);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32115,"byte_end":32160,"line_start":976,"line_end":976,"column_start":1,"column_end":46}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32161,"byte_end":32190,"line_start":977,"line_end":977,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32191,"byte_end":32198,"line_start":978,"line_end":978,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32199,"byte_end":32220,"line_start":979,"line_end":979,"column_start":1,"column_end":22}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32221,"byte_end":32238,"line_start":980,"line_end":980,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.4.0\", note = \"renamed to seq::sample_iter\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32239,"byte_end":32303,"line_start":981,"line_end":981,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55583,"byte_end":55588,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55919,"byte_end":55924,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56076,"byte_end":56081,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64847,"byte_end":64852,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65494,"byte_end":65509,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65727,"byte_end":65742,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65984,"byte_end":65989,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66093,"byte_end":66108,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66212,"byte_end":66227,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66343,"byte_end":66348,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66621,"byte_end":66636,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66851,"byte_end":66866,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68424,"byte_end":68434,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68851,"byte_end":68861,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68976,"byte_end":68986,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70007,"byte_end":70014,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70475,"byte_end":70482,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70597,"byte_end":70604,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71170,"byte_end":71178,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71497,"byte_end":71505,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71620,"byte_end":71628,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74511,"byte_end":74525,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76214,"byte_end":76220,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76636,"byte_end":76642,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76757,"byte_end":76763,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77469,"byte_end":77478,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77878,"byte_end":77887,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":78002,"byte_end":78011,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80333,"byte_end":80337,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81348,"byte_end":81351,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81653,"byte_end":81656,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81771,"byte_end":81774,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41607,"byte_end":41617,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41646,"byte_end":41656,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41737,"byte_end":41747,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41879,"byte_end":41889,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41989,"byte_end":41999,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43458,"byte_end":43472,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":44869,"byte_end":44883,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":45016,"byte_end":45030,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110003,"byte_end":110012,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110607,"byte_end":110617,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111105,"byte_end":111115,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111281,"byte_end":111291,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111489,"byte_end":111498,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":136720,"byte_end":136729,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139403,"byte_end":139408,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139540,"byte_end":139545,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139751,"byte_end":139756,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150064,"byte_end":150069,"line_start":437,"line_end":437,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150172,"byte_end":150177,"line_start":443,"line_end":443,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157365,"byte_end":157372,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157542,"byte_end":157549,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161018,"byte_end":161030,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161975,"byte_end":161987,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":162549,"byte_end":162561,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164299,"byte_end":164316,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164419,"byte_end":164436,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\rand_impls.rs","byte_start":184507,"byte_end":184513,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191522,"byte_end":191531,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195147,"byte_end":195156,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195431,"byte_end":195440,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":196072,"byte_end":196081,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201137,"byte_end":201145,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205258,"byte_end":205266,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205339,"byte_end":205347,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":206177,"byte_end":206185,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207146,"byte_end":207154,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207593,"byte_end":207601,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211460,"byte_end":211470,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216224,"byte_end":216234,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216309,"byte_end":216319,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216822,"byte_end":216832,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":217798,"byte_end":217808,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":218249,"byte_end":218259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222290,"byte_end":222301,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222853,"byte_end":222864,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223180,"byte_end":223191,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223958,"byte_end":223969,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":22715,"byte_end":22718,"line_start":642,"line_end":642,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23485,"byte_end":23494,"line_start":676,"line_end":676,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23957,"byte_end":23971,"line_start":695,"line_end":695,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26344,"byte_end":26350,"line_start":781,"line_end":781,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27337,"byte_end":27343,"line_start":809,"line_end":809,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27556,"byte_end":27562,"line_start":821,"line_end":821,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28568,"byte_end":28585,"line_start":852,"line_end":852,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30405,"byte_end":30414,"line_start":902,"line_end":902,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10343,"byte_end":10356,"line_start":284,"line_end":284,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40408,"byte_end":40413,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40445,"byte_end":40450,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":119}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40482,"byte_end":40488,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":190}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40520,"byte_end":40531,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":236}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10366,"byte_end":10372,"line_start":285,"line_end":285,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":327}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10404,"byte_end":10406,"line_start":286,"line_end":286,"column_start":31,"column_end":33},"ref_id":{"krate":0,"index":405}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10438,"byte_end":10442,"line_start":287,"line_end":287,"column_start":31,"column_end":35},"ref_id":{"krate":0,"index":470}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10452,"byte_end":10461,"line_start":288,"line_end":288,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":495}},{"kind":"Mod","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10517,"byte_end":10520,"line_start":289,"line_end":289,"column_start":55,"column_end":58},"ref_id":{"krate":0,"index":532}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55583,"byte_end":55588,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55919,"byte_end":55924,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":921},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56076,"byte_end":56081,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":921},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56395,"byte_end":56400,"line_start":78,"line_end":78,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64847,"byte_end":64852,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65494,"byte_end":65509,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65727,"byte_end":65742,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65984,"byte_end":65989,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":982},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66093,"byte_end":66108,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66212,"byte_end":66227,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66343,"byte_end":66348,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":982},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66621,"byte_end":66636,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1004},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66851,"byte_end":66866,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68424,"byte_end":68434,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68851,"byte_end":68861,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68976,"byte_end":68986,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70007,"byte_end":70014,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70475,"byte_end":70482,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1039},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70597,"byte_end":70604,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1039},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71170,"byte_end":71178,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71497,"byte_end":71505,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71620,"byte_end":71628,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74511,"byte_end":74525,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1056},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76214,"byte_end":76220,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76636,"byte_end":76642,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1064},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76757,"byte_end":76763,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1064},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77469,"byte_end":77478,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77878,"byte_end":77887,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1072},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":78002,"byte_end":78011,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1072},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80333,"byte_end":80337,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1079},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81348,"byte_end":81351,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81653,"byte_end":81656,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81771,"byte_end":81774,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41277,"byte_end":41283,"line_start":58,"line_end":58,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":284},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41607,"byte_end":41617,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1094},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41646,"byte_end":41656,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1094},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41737,"byte_end":41747,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41879,"byte_end":41889,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41989,"byte_end":41999,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43458,"byte_end":43472,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":44869,"byte_end":44883,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1112},"to":{"krate":0,"index":284}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":45016,"byte_end":45030,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1112},"to":{"krate":0,"index":288}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110003,"byte_end":110012,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":354},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110607,"byte_end":110617,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111105,"byte_end":111115,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1121},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111281,"byte_end":111291,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1121},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111489,"byte_end":111498,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":136720,"byte_end":136729,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":354},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139403,"byte_end":139408,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139540,"byte_end":139545,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":419},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139751,"byte_end":139756,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150064,"byte_end":150069,"line_start":437,"line_end":437,"column_start":10,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150172,"byte_end":150177,"line_start":443,"line_end":443,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1144},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157365,"byte_end":157372,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157542,"byte_end":157549,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1148},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161018,"byte_end":161030,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161975,"byte_end":161987,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":162549,"byte_end":162561,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164299,"byte_end":164316,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":524}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164419,"byte_end":164436,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\rand_impls.rs","byte_start":184507,"byte_end":184513,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":2,"index":46283},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191522,"byte_end":191531,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195147,"byte_end":195156,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1532},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195431,"byte_end":195440,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1532},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":196072,"byte_end":196081,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1532},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201137,"byte_end":201145,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205258,"byte_end":205266,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205339,"byte_end":205347,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1545},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":206177,"byte_end":206185,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1545},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207146,"byte_end":207154,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1545},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207593,"byte_end":207601,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211460,"byte_end":211470,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216224,"byte_end":216234,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":2679}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216309,"byte_end":216319,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1557},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216822,"byte_end":216832,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1557},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":217798,"byte_end":217808,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1557},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":218249,"byte_end":218259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1557},"to":{"krate":2,"index":9685}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222290,"byte_end":222301,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222853,"byte_end":222864,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223180,"byte_end":223191,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223958,"byte_end":223969,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12442,"byte_end":12447,"line_start":338,"line_end":338,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":832}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":22715,"byte_end":22718,"line_start":642,"line_end":642,"column_start":25,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23485,"byte_end":23494,"line_start":676,"line_end":676,"column_start":40,"column_end":49},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23957,"byte_end":23971,"line_start":695,"line_end":695,"column_start":31,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1591},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24439,"byte_end":24442,"line_start":709,"line_end":709,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":835},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26344,"byte_end":26350,"line_start":781,"line_end":781,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27337,"byte_end":27343,"line_start":809,"line_end":809,"column_start":14,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1613},"to":{"krate":0,"index":835}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27556,"byte_end":27562,"line_start":821,"line_end":821,"column_start":39,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1613},"to":{"krate":0,"index":890}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28568,"byte_end":28585,"line_start":852,"line_end":852,"column_start":38,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1620},"to":{"krate":0,"index":524}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30405,"byte_end":30414,"line_start":902,"line_end":902,"column_start":14,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1624},"to":{"krate":0,"index":835}}]}