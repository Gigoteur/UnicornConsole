{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bitflags","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","-C","metadata=185035745ee30f8b","-C","extra-filename=-185035745ee30f8b","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libbitflags-185035745ee30f8b.rmeta"},"prelude":{"crate_id":{"name":"bitflags","disambiguator":[12784266730172947800,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":467,"byte_end":55924,"line_start":11,"line_end":1729,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":467,"byte_end":55924,"line_start":11,"line_end":1729,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7}],"decl_id":null,"docs":" A typesafe bitmask flag generator useful for sets of C-style bitmask flags.\n It can be used for creating typesafe wrappers around C APIs.","sig":null,"attributes":[{"value":"/ A typesafe bitmask flag generator useful for sets of C-style bitmask flags.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":467,"byte_end":546,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ It can be used for creating typesafe wrappers around C APIs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":547,"byte_end":611,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":612,"byte_end":615,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The `bitflags!` macro generates `struct`s that manage a set of flags. The","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":616,"byte_end":693,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ flags should only be defined for integer types, otherwise unexpected type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":694,"byte_end":771,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ errors may occur at compile time.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":772,"byte_end":809,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":810,"byte_end":813,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":814,"byte_end":827,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":828,"byte_end":831,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":832,"byte_end":839,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":840,"byte_end":867,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":868,"byte_end":871,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":872,"byte_end":887,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":888,"byte_end":915,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/         const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":916,"byte_end":949,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":950,"byte_end":983,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/         const C = 0b00000100;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":984,"byte_end":1017,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/         const ABC = Self::A.bits | Self::B.bits | Self::C.bits;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1018,"byte_end":1085,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1086,"byte_end":1095,"line_start":29,"line_end":29,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1096,"byte_end":1101,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1102,"byte_end":1105,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1106,"byte_end":1121,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     let e1 = Flags::A | Flags::C;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1122,"byte_end":1159,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/     let e2 = Flags::B | Flags::C;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1160,"byte_end":1197,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/     assert_eq!((e1 | e2), Flags::ABC);   // union","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1198,"byte_end":1251,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     assert_eq!((e1 & e2), Flags::C);     // intersection","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1252,"byte_end":1312,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/     assert_eq!((e1 - e2), Flags::A);     // set difference","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1313,"byte_end":1375,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/     assert_eq!(!e2, Flags::A);           // set complement","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1376,"byte_end":1438,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1439,"byte_end":1444,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1445,"byte_end":1452,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1453,"byte_end":1456,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ See [`example_generated::Flags`](./example_generated/struct.Flags.html) for documentation of code","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1457,"byte_end":1558,"line_start":42,"line_end":42,"column_start":1,"column_end":102}},{"value":"/ generated by the above `bitflags!` expansion.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1559,"byte_end":1608,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1609,"byte_end":1612,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The generated `struct`s can also be extended with type and trait","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1613,"byte_end":1681,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ implementations:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1682,"byte_end":1702,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1703,"byte_end":1706,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1707,"byte_end":1714,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use std::fmt;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1715,"byte_end":1732,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1733,"byte_end":1736,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1737,"byte_end":1764,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1765,"byte_end":1768,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1769,"byte_end":1784,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1785,"byte_end":1812,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/         const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1813,"byte_end":1846,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1847,"byte_end":1880,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1881,"byte_end":1890,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1891,"byte_end":1896,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1897,"byte_end":1900,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ impl Flags {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1901,"byte_end":1917,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/     pub fn clear(&mut self) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1918,"byte_end":1951,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/         self.bits = 0;  // The `bits` field can be accessed from within the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":1952,"byte_end":2031,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/                         // same module where the `bitflags!` macro was invoked.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2032,"byte_end":2115,"line_start":63,"line_end":63,"column_start":1,"column_end":84}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2116,"byte_end":2125,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2126,"byte_end":2131,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2132,"byte_end":2135,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Display for Flags {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2136,"byte_end":2169,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2170,"byte_end":2232,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/         write!(f, \"hi!\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2233,"byte_end":2261,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2262,"byte_end":2271,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2272,"byte_end":2277,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2278,"byte_end":2281,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2282,"byte_end":2297,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     let mut flags = Flags::A | Flags::B;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2298,"byte_end":2342,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/     flags.clear();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2343,"byte_end":2365,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/     assert!(flags.is_empty());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2366,"byte_end":2400,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(format!(\"{}\", flags), \"hi!\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2401,"byte_end":2449,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(format!(\"{:?}\", Flags::A | Flags::B), \"A | B\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2450,"byte_end":2516,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/     assert_eq!(format!(\"{:?}\", Flags::B), \"B\");","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2517,"byte_end":2568,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2569,"byte_end":2574,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2575,"byte_end":2582,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2583,"byte_end":2586,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Visibility","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2587,"byte_end":2603,"line_start":83,"line_end":83,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2604,"byte_end":2607,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The generated structs and their associated flag constants are not exported","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2608,"byte_end":2686,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/ out of the current module by default. A definition can be exported out of","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2687,"byte_end":2764,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the current module by adding `pub` before `struct`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2765,"byte_end":2820,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2821,"byte_end":2824,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2825,"byte_end":2832,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ mod example {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2833,"byte_end":2850,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/     use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2851,"byte_end":2882,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2883,"byte_end":2886,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2887,"byte_end":2906,"line_start":93,"line_end":93,"column_start":1,"column_end":20}},{"value":"/         pub struct Flags1: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2907,"byte_end":2943,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/             const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2944,"byte_end":2981,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2982,"byte_end":2995,"line_start":96,"line_end":96,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":2996,"byte_end":2999,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ #       pub","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3000,"byte_end":3015,"line_start":98,"line_end":98,"column_start":1,"column_end":16}},{"value":"/         struct Flags2: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3016,"byte_end":3048,"line_start":99,"line_end":99,"column_start":1,"column_end":33}},{"value":"/             const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3049,"byte_end":3086,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3087,"byte_end":3100,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3101,"byte_end":3110,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3111,"byte_end":3116,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3117,"byte_end":3120,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3121,"byte_end":3136,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/     let flag1 = example::Flags1::A;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3137,"byte_end":3176,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/     let flag2 = example::Flags2::B; // error: const `B` is private","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3177,"byte_end":3247,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3248,"byte_end":3253,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3254,"byte_end":3261,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3262,"byte_end":3265,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Attributes","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3266,"byte_end":3282,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3283,"byte_end":3286,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Attributes can be attached to the generated `struct`s by placing them","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3287,"byte_end":3360,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/ before the `struct` keyword.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3361,"byte_end":3393,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3394,"byte_end":3397,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Representations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3398,"byte_end":3420,"line_start":116,"line_end":116,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3421,"byte_end":3424,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ It's valid to add a `#[repr(C)]` or `#[repr(transparent)]` attribute to a type","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3425,"byte_end":3507,"line_start":118,"line_end":118,"column_start":1,"column_end":83}},{"value":"/ generated by `bitflags!`. In these cases, the type is guaranteed to be a newtype.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3508,"byte_end":3593,"line_start":119,"line_end":119,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3594,"byte_end":3597,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3598,"byte_end":3605,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3606,"byte_end":3633,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3634,"byte_end":3637,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3638,"byte_end":3653,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"/     #[repr(transparent)]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3654,"byte_end":3682,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3683,"byte_end":3710,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/         const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3711,"byte_end":3744,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/         const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3745,"byte_end":3778,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/         const C = 0b00000100;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3779,"byte_end":3812,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3813,"byte_end":3822,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3823,"byte_end":3828,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3829,"byte_end":3836,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3837,"byte_end":3840,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Trait implementations","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3841,"byte_end":3868,"line_start":134,"line_end":134,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3869,"byte_end":3872,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The `Copy`, `Clone`, `PartialEq`, `Eq`, `PartialOrd`, `Ord` and `Hash`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3873,"byte_end":3947,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ traits are automatically derived for the `struct`s using the `derive` attribute.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":3948,"byte_end":4032,"line_start":137,"line_end":137,"column_start":1,"column_end":85}},{"value":"/ Additional traits can be derived by providing an explicit `derive`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4033,"byte_end":4103,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ attribute on `struct`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4104,"byte_end":4130,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4131,"byte_end":4134,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The `Extend` and `FromIterator` traits are implemented for the `struct`s,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4135,"byte_end":4212,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ too: `Extend` adds the union of the instances of the `struct` iterated over,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4213,"byte_end":4293,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ while `FromIterator` calculates the union.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4294,"byte_end":4340,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4341,"byte_end":4344,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The `Binary`, `Debug`, `LowerHex`, `Octal` and `UpperHex` traits are also","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4345,"byte_end":4422,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ implemented by displaying the bits value of the internal struct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4423,"byte_end":4491,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4492,"byte_end":4495,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ## Operators","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4496,"byte_end":4512,"line_start":148,"line_end":148,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4513,"byte_end":4516,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ The following operator traits are implemented for the generated `struct`s:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4517,"byte_end":4595,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4596,"byte_end":4599,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ - `BitOr` and `BitOrAssign`: union","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4600,"byte_end":4638,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/ - `BitAnd` and `BitAndAssign`: intersection","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4639,"byte_end":4686,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/ - `BitXor` and `BitXorAssign`: toggle","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4687,"byte_end":4728,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ - `Sub` and `SubAssign`: set difference","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4729,"byte_end":4772,"line_start":155,"line_end":155,"column_start":1,"column_end":44}},{"value":"/ - `Not`: set complement","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4773,"byte_end":4800,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4801,"byte_end":4804,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Methods","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4805,"byte_end":4818,"line_start":158,"line_end":158,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4819,"byte_end":4822,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The following methods are defined for the generated `struct`s:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4823,"byte_end":4889,"line_start":160,"line_end":160,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4890,"byte_end":4893,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ - `empty`: an empty set of flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4894,"byte_end":4930,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/ - `all`: the set of all defined flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4931,"byte_end":4972,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"/ - `bits`: the raw value of the flags currently stored","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":4973,"byte_end":5030,"line_start":164,"line_end":164,"column_start":1,"column_end":58}},{"value":"/ - `from_bits`: convert from underlying bit representation, unless that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5031,"byte_end":5105,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/                representation contains bits that do not correspond to a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5106,"byte_end":5181,"line_start":166,"line_end":166,"column_start":1,"column_end":76}},{"value":"/                defined flag","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5182,"byte_end":5213,"line_start":167,"line_end":167,"column_start":1,"column_end":32}},{"value":"/ - `from_bits_truncate`: convert from underlying bit representation, dropping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5214,"byte_end":5294,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"/                         any bits that do not correspond to defined flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5295,"byte_end":5371,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ - `from_bits_unchecked`: convert from underlying bit representation, keeping","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5372,"byte_end":5452,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/                          all bits (even those not corresponding to defined","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5453,"byte_end":5531,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/                          flags)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5532,"byte_end":5567,"line_start":172,"line_end":172,"column_start":1,"column_end":36}},{"value":"/ - `is_empty`: `true` if no flags are currently stored","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5568,"byte_end":5625,"line_start":173,"line_end":173,"column_start":1,"column_end":58}},{"value":"/ - `is_all`: `true` if currently set flags exactly equal all defined flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5626,"byte_end":5703,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ - `intersects`: `true` if there are flags common to both `self` and `other`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5704,"byte_end":5783,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ - `contains`: `true` if all of the flags in `other` are contained within `self`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5784,"byte_end":5867,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/ - `insert`: inserts the specified flags in-place","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5868,"byte_end":5920,"line_start":177,"line_end":177,"column_start":1,"column_end":53}},{"value":"/ - `remove`: removes the specified flags in-place","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5921,"byte_end":5973,"line_start":178,"line_end":178,"column_start":1,"column_end":53}},{"value":"/ - `toggle`: the specified flags will be inserted if not present, and removed","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":5974,"byte_end":6054,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"/             if they are.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6055,"byte_end":6083,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ - `set`: inserts or removes the specified flags depending on the passed value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6084,"byte_end":6165,"line_start":181,"line_end":181,"column_start":1,"column_end":82}},{"value":"/ - `intersection`: returns a new set of flags, containing only the flags present","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6166,"byte_end":6249,"line_start":182,"line_end":182,"column_start":1,"column_end":84}},{"value":"/                   in both `self` and `other` (the argument to the function).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6250,"byte_end":6330,"line_start":183,"line_end":183,"column_start":1,"column_end":81}},{"value":"/ - `union`: returns a new set of flags, containing any flags present in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6331,"byte_end":6405,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/            either `self` or `other` (the argument to the function).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6406,"byte_end":6477,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ - `difference`: returns a new set of flags, containing all flags present in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6478,"byte_end":6557,"line_start":186,"line_end":186,"column_start":1,"column_end":80}},{"value":"/                 `self` without any of the flags present in `other` (the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6558,"byte_end":6633,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/                 argument to the function).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6634,"byte_end":6680,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ - `symmetric_difference`: returns a new set of flags, containing all flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6681,"byte_end":6759,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/                           present in either `self` or `other` (the argument","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6760,"byte_end":6839,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"/                           to the function), but not both.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6840,"byte_end":6901,"line_start":191,"line_end":191,"column_start":1,"column_end":62}},{"value":"/ - `complement`: returns a new set of flags, containing all flags which are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6902,"byte_end":6980,"line_start":192,"line_end":192,"column_start":1,"column_end":79}},{"value":"/                 not set in `self`, but which are allowed for this type.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":6981,"byte_end":7056,"line_start":193,"line_end":193,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7057,"byte_end":7060,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7061,"byte_end":7075,"line_start":195,"line_end":195,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7076,"byte_end":7079,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ The `Default` trait is not automatically implemented for the generated structs.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7080,"byte_end":7163,"line_start":197,"line_end":197,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7164,"byte_end":7167,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ If your default value is equal to `0` (which is the same value as calling `empty()`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7168,"byte_end":7255,"line_start":199,"line_end":199,"column_start":1,"column_end":88}},{"value":"/ on the generated struct), you can simply derive `Default`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7256,"byte_end":7318,"line_start":200,"line_end":200,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7319,"byte_end":7322,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7323,"byte_end":7330,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7331,"byte_end":7358,"line_start":203,"line_end":203,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7359,"byte_end":7362,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7363,"byte_end":7378,"line_start":205,"line_end":205,"column_start":1,"column_end":16}},{"value":"/     // Results in default value with bits: 0","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7379,"byte_end":7427,"line_start":206,"line_end":206,"column_start":1,"column_end":49}},{"value":"/     #[derive(Default)]","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7428,"byte_end":7454,"line_start":207,"line_end":207,"column_start":1,"column_end":27}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7455,"byte_end":7482,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"/         const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7483,"byte_end":7516,"line_start":209,"line_end":209,"column_start":1,"column_end":34}},{"value":"/         const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7517,"byte_end":7550,"line_start":210,"line_end":210,"column_start":1,"column_end":34}},{"value":"/         const C = 0b00000100;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7551,"byte_end":7584,"line_start":211,"line_end":211,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7585,"byte_end":7594,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7595,"byte_end":7600,"line_start":213,"line_end":213,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7601,"byte_end":7604,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7605,"byte_end":7620,"line_start":215,"line_end":215,"column_start":1,"column_end":16}},{"value":"/     let derived_default: Flags = Default::default();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7621,"byte_end":7677,"line_start":216,"line_end":216,"column_start":1,"column_end":57}},{"value":"/     assert_eq!(derived_default.bits(), 0);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7678,"byte_end":7724,"line_start":217,"line_end":217,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7725,"byte_end":7730,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7731,"byte_end":7738,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7739,"byte_end":7742,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ If your default value is not equal to `0` you need to implement `Default` yourself:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7743,"byte_end":7830,"line_start":221,"line_end":221,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7831,"byte_end":7834,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7835,"byte_end":7842,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7843,"byte_end":7870,"line_start":224,"line_end":224,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7871,"byte_end":7874,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7875,"byte_end":7890,"line_start":226,"line_end":226,"column_start":1,"column_end":16}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7891,"byte_end":7918,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"/         const A = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7919,"byte_end":7952,"line_start":228,"line_end":228,"column_start":1,"column_end":34}},{"value":"/         const B = 0b00000010;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7953,"byte_end":7986,"line_start":229,"line_end":229,"column_start":1,"column_end":34}},{"value":"/         const C = 0b00000100;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":7987,"byte_end":8020,"line_start":230,"line_end":230,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8021,"byte_end":8030,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8031,"byte_end":8036,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8037,"byte_end":8040,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ // explicit `Default` implementation","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8041,"byte_end":8081,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ impl Default for Flags {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8082,"byte_end":8110,"line_start":235,"line_end":235,"column_start":1,"column_end":29}},{"value":"/     fn default() -> Flags {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8111,"byte_end":8142,"line_start":236,"line_end":236,"column_start":1,"column_end":32}},{"value":"/         Flags::A | Flags::C","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8143,"byte_end":8174,"line_start":237,"line_end":237,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8175,"byte_end":8184,"line_start":238,"line_end":238,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8185,"byte_end":8190,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8191,"byte_end":8194,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8195,"byte_end":8210,"line_start":241,"line_end":241,"column_start":1,"column_end":16}},{"value":"/     let implemented_default: Flags = Default::default();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8211,"byte_end":8271,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(implemented_default, (Flags::A | Flags::C));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8272,"byte_end":8335,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8336,"byte_end":8341,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8342,"byte_end":8349,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8350,"byte_end":8353,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ # Zero Flags","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8354,"byte_end":8370,"line_start":247,"line_end":247,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8371,"byte_end":8374,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ Flags with a value equal to zero will have some strange behavior that one should be aware of.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8375,"byte_end":8472,"line_start":249,"line_end":249,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8473,"byte_end":8476,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8477,"byte_end":8484,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/ use bitflags::bitflags;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8485,"byte_end":8512,"line_start":252,"line_end":252,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8513,"byte_end":8516,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ bitflags! {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8517,"byte_end":8532,"line_start":254,"line_end":254,"column_start":1,"column_end":16}},{"value":"/     struct Flags: u32 {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8533,"byte_end":8560,"line_start":255,"line_end":255,"column_start":1,"column_end":28}},{"value":"/         const NONE = 0b00000000;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8561,"byte_end":8597,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"/         const SOME = 0b00000001;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8598,"byte_end":8634,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8635,"byte_end":8644,"line_start":258,"line_end":258,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8645,"byte_end":8650,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8651,"byte_end":8654,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8655,"byte_end":8670,"line_start":261,"line_end":261,"column_start":1,"column_end":16}},{"value":"/     let empty = Flags::empty();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8671,"byte_end":8706,"line_start":262,"line_end":262,"column_start":1,"column_end":36}},{"value":"/     let none = Flags::NONE;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8707,"byte_end":8738,"line_start":263,"line_end":263,"column_start":1,"column_end":32}},{"value":"/     let some = Flags::SOME;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8739,"byte_end":8770,"line_start":264,"line_end":264,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8771,"byte_end":8774,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     // Zero flags are treated as always present","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8775,"byte_end":8826,"line_start":266,"line_end":266,"column_start":1,"column_end":52}},{"value":"/     assert!(empty.contains(Flags::NONE));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8827,"byte_end":8872,"line_start":267,"line_end":267,"column_start":1,"column_end":46}},{"value":"/     assert!(none.contains(Flags::NONE));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8873,"byte_end":8917,"line_start":268,"line_end":268,"column_start":1,"column_end":45}},{"value":"/     assert!(some.contains(Flags::NONE));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8918,"byte_end":8962,"line_start":269,"line_end":269,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8963,"byte_end":8966,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/     // Zero flags will be ignored when testing for emptiness","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":8967,"byte_end":9031,"line_start":271,"line_end":271,"column_start":1,"column_end":65}},{"value":"/     assert!(none.is_empty());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9032,"byte_end":9065,"line_start":272,"line_end":272,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9066,"byte_end":9071,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9072,"byte_end":9079,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9080,"byte_end":9083,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ Users should generally avoid defining a flag with a value of zero.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9084,"byte_end":9154,"line_start":276,"line_end":276,"column_start":1,"column_end":71}},{"value":"no_std","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":9179,"byte_end":9185,"line_start":278,"line_end":278,"column_start":24,"column_end":30}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}