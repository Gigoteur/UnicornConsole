{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","glob","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","-C","metadata=9aa76c574d1b9127","-C","extra-filename=-9aa76c574d1b9127","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libglob-9aa76c574d1b9127.rmeta"},"prelude":{"crate_id":{"name":"glob","disambiguator":[2713311603441141748,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":467,"byte_end":48369,"line_start":11,"line_end":1312,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":467,"byte_end":48369,"line_start":11,"line_end":1312,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":177},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":130},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":141}],"decl_id":null,"docs":" Support for matching file paths against Unix shell style patterns.","sig":null,"attributes":[{"value":"/ Support for matching file paths against Unix shell style patterns.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":467,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":538,"byte_end":541,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `glob` and `glob_with` functions, in concert with the `Paths`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":542,"byte_end":611,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ type, allow querying the filesystem for all files that match a particular","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":612,"byte_end":689,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ pattern - just like the libc `glob` function (for an example see the `glob`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":690,"byte_end":769,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ documentation). The methods on the `Pattern` type provide functionality","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":770,"byte_end":845,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ for checking if individual paths match a particular pattern - in a similar","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":846,"byte_end":924,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ manner to the libc `fnmatch` function","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":925,"byte_end":966,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ For consistency across platforms, and for Windows support, this module","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":967,"byte_end":1041,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ is implemented entirely in Rust rather than deferring to the libc","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1042,"byte_end":1111,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ `glob`/`fnmatch` functions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1112,"byte_end":1143,"line_start":21,"line_end":21,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2265,"byte_end":2270,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"Paths","qualname":"::Paths","value":"Paths {  }","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" An iterator that yields `Path`s from the filesystem that match a particular\n pattern.","sig":null,"attributes":[{"value":"/ An iterator that yields `Path`s from the filesystem that match a particular","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1842,"byte_end":1921,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ pattern.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1922,"byte_end":1934,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1935,"byte_end":1938,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Note that it yields `GlobResult` in order to report any `IoErrors` that may","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":1939,"byte_end":2018,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ arise during iteration. If a directory matches but is unreadable,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2019,"byte_end":2088,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ thereby preventing its contents from being checked for matches, a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2089,"byte_end":2158,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ `GlobError` is returned to express this.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2159,"byte_end":2203,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2204,"byte_end":2207,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See the `glob` function for more details.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2208,"byte_end":2253,"line_start":51,"line_end":51,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4287,"byte_end":4291,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"glob","qualname":"::glob","value":"pub fn glob(&str) -> Result<Paths, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that produces all the Paths that match the given pattern,\n which may be absolute or relative to the current working directory.","sig":null,"attributes":[{"value":"/ Return an iterator that produces all the Paths that match the given pattern,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2438,"byte_end":2518,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ which may be absolute or relative to the current working directory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2519,"byte_end":2590,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2591,"byte_end":2594,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This may return an error if the pattern is invalid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2595,"byte_end":2650,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2651,"byte_end":2654,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This method uses the default match options and is equivalent to calling","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2655,"byte_end":2730,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `glob_with(pattern, MatchOptions::new())`. Use `glob_with` directly if you","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2731,"byte_end":2809,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ want to use non-default match options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2810,"byte_end":2852,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2853,"byte_end":2856,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ When iterating, each result is a `GlobResult` which expresses the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2857,"byte_end":2926,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ possibility that there was an `IoError` when attempting to read the contents","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":2927,"byte_end":3007,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ of the matched path.  In other words, each item returned by the iterator","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3008,"byte_end":3084,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ will either be an `Ok(Path)` if the path matched, or an `Err(GlobError)` if","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3085,"byte_end":3164,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ the path (partially) matched _but_ its contents could not be read in order","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3165,"byte_end":3243,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ to determine if its contents matched.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3244,"byte_end":3285,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3286,"byte_end":3289,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ See the `Paths` documentation for more information.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3290,"byte_end":3345,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3346,"byte_end":3349,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3350,"byte_end":3363,"line_start":78,"line_end":78,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3364,"byte_end":3367,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Consider a directory `/media/pictures` containing only the files","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3368,"byte_end":3436,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/ `kittens.jpg`, `puppies.jpg` and `hamsters.gif`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3437,"byte_end":3489,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3490,"byte_end":3493,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3494,"byte_end":3505,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ use glob::glob;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3506,"byte_end":3525,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3526,"byte_end":3529,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ for entry in glob(\"/media/pictures/*.jpg\").unwrap() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3530,"byte_end":3587,"line_start":86,"line_end":86,"column_start":1,"column_end":58}},{"value":"/     match entry {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3588,"byte_end":3609,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/         Ok(path) => println!(\"{:?}\", path.display()),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3610,"byte_end":3667,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3668,"byte_end":3671,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         // if the path matched but was unreadable,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3672,"byte_end":3726,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/         // thereby preventing its contents from matching","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3727,"byte_end":3787,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/         Err(e) => println!(\"{:?}\", e),","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3788,"byte_end":3830,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3831,"byte_end":3840,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3841,"byte_end":3846,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3847,"byte_end":3854,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3855,"byte_end":3858,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ The above code will print:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3859,"byte_end":3889,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3890,"byte_end":3893,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3894,"byte_end":3907,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ /media/pictures/kittens.jpg","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3908,"byte_end":3939,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/ /media/pictures/puppies.jpg","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3940,"byte_end":3971,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3972,"byte_end":3979,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3980,"byte_end":3983,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ If you want to ignore unreadable paths, you can use something like","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":3984,"byte_end":4054,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ `filter_map`:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4055,"byte_end":4072,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4073,"byte_end":4076,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4077,"byte_end":4088,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use glob::glob;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4089,"byte_end":4108,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/ use std::result::Result;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4109,"byte_end":4137,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4138,"byte_end":4141,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ for path in glob(\"/media/pictures/*.jpg\").unwrap().filter_map(Result::ok) {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4142,"byte_end":4221,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/     println!(\"{}\", path.display());","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4222,"byte_end":4261,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4262,"byte_end":4267,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4268,"byte_end":4275,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4276,"byte_end":4279,"line_start":115,"line_end":115,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4969,"byte_end":4978,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"glob_with","qualname":"::glob_with","value":"pub fn glob_with(&str, &MatchOptions) -> Result<Paths, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that produces all the Paths that match the given pattern,\n which may be absolute or relative to the current working directory.","sig":null,"attributes":[{"value":"/ Return an iterator that produces all the Paths that match the given pattern,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4388,"byte_end":4468,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ which may be absolute or relative to the current working directory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4469,"byte_end":4540,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4541,"byte_end":4544,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This may return an error if the pattern is invalid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4545,"byte_end":4600,"line_start":123,"line_end":123,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4601,"byte_end":4604,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This function accepts Unix shell style patterns as described by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4605,"byte_end":4672,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/ `Pattern::new(..)`.  The options given are passed through unchanged to","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4673,"byte_end":4747,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ `Pattern::matches_with(..)` with the exception that","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4748,"byte_end":4803,"line_start":127,"line_end":127,"column_start":1,"column_end":56}},{"value":"/ `require_literal_separator` is always set to `true` regardless of the value","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4804,"byte_end":4883,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4884,"byte_end":4912,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4913,"byte_end":4916,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Paths are yielded in alphabetical order.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":4917,"byte_end":4961,"line_start":131,"line_end":131,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7984,"byte_end":7993,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"GlobError","qualname":"::GlobError","value":"GlobError {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" A glob iteration error.","sig":null,"attributes":[{"value":"/ A glob iteration error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7726,"byte_end":7753,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7754,"byte_end":7757,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This is typically returned when a particular path cannot be read","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7758,"byte_end":7826,"line_start":224,"line_end":224,"column_start":1,"column_end":69}},{"value":"/ to determine if its contents match the glob pattern. This is possible","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7827,"byte_end":7900,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"/ if the program lacks the permissions, for example.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":7901,"byte_end":7955,"line_start":226,"line_end":226,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8116,"byte_end":8120,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"path","qualname":"<GlobError>::path","value":"pub fn path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" The Path that the error corresponds to.\n","sig":null,"attributes":[{"value":"/ The Path that the error corresponds to.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8061,"byte_end":8104,"line_start":234,"line_end":234,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8207,"byte_end":8212,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"error","qualname":"<GlobError>::error","value":"pub fn error(&Self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" The error in question.\n","sig":null,"attributes":[{"value":"/ The error in question.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8169,"byte_end":8195,"line_start":239,"line_end":239,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8969,"byte_end":8979,"line_start":271,"line_end":271,"column_start":10,"column_end":20},"name":"GlobResult","qualname":"::GlobResult","value":"Result<PathBuf, GlobError>","parent":null,"children":[],"decl_id":null,"docs":" An alias for a glob iteration result.","sig":null,"attributes":[{"value":"/ An alias for a glob iteration result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8782,"byte_end":8823,"line_start":267,"line_end":267,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8824,"byte_end":8827,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This represents either a matched path or a glob iteration error,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8828,"byte_end":8896,"line_start":269,"line_end":269,"column_start":1,"column_end":69}},{"value":"/ such as failing to read a particular directory's contents.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8897,"byte_end":8959,"line_start":270,"line_end":270,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":12981,"byte_end":12993,"line_start":375,"line_end":375,"column_start":12,"column_end":24},"name":"PatternError","qualname":"::PatternError","value":"PatternError { pos, msg }","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" A pattern parsing error.\n","sig":null,"attributes":[{"value":"/ A pattern parsing error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":12885,"byte_end":12913,"line_start":372,"line_end":372,"column_start":1,"column_end":29}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":12931,"byte_end":12969,"line_start":374,"line_end":374,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13073,"byte_end":13076,"line_start":377,"line_end":377,"column_start":9,"column_end":12},"name":"pos","qualname":"::PatternError::pos","value":"usize","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" The approximate character index of where the error occurred.\n","sig":null,"attributes":[{"value":"/ The approximate character index of where the error occurred.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13000,"byte_end":13064,"line_start":376,"line_end":376,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13134,"byte_end":13137,"line_start":380,"line_end":380,"column_start":9,"column_end":12},"name":"msg","qualname":"::PatternError::msg","value":"&'static str","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" A message describing the error.\n","sig":null,"attributes":[{"value":"/ A message describing the error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13090,"byte_end":13125,"line_start":379,"line_end":379,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14781,"byte_end":14788,"line_start":424,"line_end":424,"column_start":12,"column_end":19},"name":"Pattern","qualname":"::Pattern","value":"Pattern {  }","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" A compiled Unix shell style pattern.","sig":null,"attributes":[{"value":"/ A compiled Unix shell style pattern.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13481,"byte_end":13521,"line_start":398,"line_end":398,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13522,"byte_end":13525,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ `?` matches any single character","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13526,"byte_end":13562,"line_start":400,"line_end":400,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13563,"byte_end":13566,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ `*` matches any (possibly empty) sequence of characters","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13567,"byte_end":13626,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13627,"byte_end":13630,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ `**` matches the current directory and arbitrary subdirectories. This","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13631,"byte_end":13704,"line_start":404,"line_end":404,"column_start":1,"column_end":74}},{"value":"/ sequence **must** form a single path component, so both `**a` and `b**` are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13705,"byte_end":13784,"line_start":405,"line_end":405,"column_start":1,"column_end":80}},{"value":"/ invalid and will result in an error.  A sequence of more than two","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13785,"byte_end":13854,"line_start":406,"line_end":406,"column_start":1,"column_end":70}},{"value":"/ consecutive `*` characters is also invalid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13855,"byte_end":13902,"line_start":407,"line_end":407,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13903,"byte_end":13906,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ `[...]` matches any character inside the brackets.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13907,"byte_end":13961,"line_start":409,"line_end":409,"column_start":1,"column_end":55}},{"value":"/ Character sequences can also specify ranges","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13962,"byte_end":14009,"line_start":410,"line_end":410,"column_start":1,"column_end":48}},{"value":"/ of characters, as ordered by Unicode, so e.g. `[0-9]` specifies any","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14010,"byte_end":14081,"line_start":411,"line_end":411,"column_start":1,"column_end":72}},{"value":"/ character between 0 and 9 inclusive. An unclosed bracket is invalid.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14082,"byte_end":14154,"line_start":412,"line_end":412,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14155,"byte_end":14158,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ `[!...]` is the negation of `[...]`, i.e. it matches any characters **not**","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14159,"byte_end":14238,"line_start":414,"line_end":414,"column_start":1,"column_end":80}},{"value":"/ in the brackets.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14239,"byte_end":14259,"line_start":415,"line_end":415,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14260,"byte_end":14263,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ The metacharacters `?`, `*`, `[`, `]` can be matched by using brackets","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14264,"byte_end":14338,"line_start":417,"line_end":417,"column_start":1,"column_end":75}},{"value":"/ (e.g. `[?]`).  When a `]` occurs immediately following `[` or `[!` then","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14339,"byte_end":14414,"line_start":418,"line_end":418,"column_start":1,"column_end":76}},{"value":"/ it is interpreted as being part of, rather then ending, the character","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14415,"byte_end":14488,"line_start":419,"line_end":419,"column_start":1,"column_end":74}},{"value":"/ set, so `]` and NOT `]` can be matched by `[]]` and `[!]]` respectively.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14489,"byte_end":14565,"line_start":420,"line_end":420,"column_start":1,"column_end":77}},{"value":"/ The `-` character can be specified inside a character sequence pattern by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14566,"byte_end":14643,"line_start":421,"line_end":421,"column_start":1,"column_end":78}},{"value":"/ placing it at the start or the end, e.g. `[abc-]`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14644,"byte_end":14698,"line_start":422,"line_end":422,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":16139,"byte_end":16142,"line_start":477,"line_end":477,"column_start":12,"column_end":15},"name":"new","qualname":"<Pattern>::new","value":"pub fn new(&str) -> Result<Pattern, PatternError>","parent":null,"children":[],"decl_id":null,"docs":" This function compiles Unix shell style patterns.","sig":null,"attributes":[{"value":"/ This function compiles Unix shell style patterns.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":16013,"byte_end":16066,"line_start":474,"line_end":474,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":16071,"byte_end":16074,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ An invalid glob pattern will yield an error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":16079,"byte_end":16127,"line_start":476,"line_end":476,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":20891,"byte_end":20897,"line_start":594,"line_end":594,"column_start":12,"column_end":18},"name":"escape","qualname":"<Pattern>::escape","value":"pub fn escape(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escape metacharacters within the given string by surrounding them in\n brackets. The resulting string will, when compiled into a `Pattern`,\n match the input string and nothing else.\n","sig":null,"attributes":[{"value":"/ Escape metacharacters within the given string by surrounding them in","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":20681,"byte_end":20753,"line_start":591,"line_end":591,"column_start":5,"column_end":77}},{"value":"/ brackets. The resulting string will, when compiled into a `Pattern`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":20758,"byte_end":20830,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ match the input string and nothing else.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":20835,"byte_end":20879,"line_start":593,"line_end":593,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21859,"byte_end":21866,"line_start":625,"line_end":625,"column_start":12,"column_end":19},"name":"matches","qualname":"<Pattern>::matches","value":"pub fn matches(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `str` matches this `Pattern` using the default\n match options (i.e. `MatchOptions::new()`).","sig":null,"attributes":[{"value":"/ Return if the given `str` matches this `Pattern` using the default","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21432,"byte_end":21502,"line_start":613,"line_end":613,"column_start":5,"column_end":75}},{"value":"/ match options (i.e. `MatchOptions::new()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21507,"byte_end":21554,"line_start":614,"line_end":614,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21559,"byte_end":21562,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21567,"byte_end":21580,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21585,"byte_end":21588,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21593,"byte_end":21604,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ use glob::Pattern;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21609,"byte_end":21631,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21636,"byte_end":21639,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ assert!(Pattern::new(\"c?t\").unwrap().matches(\"cat\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21644,"byte_end":21701,"line_start":621,"line_end":621,"column_start":5,"column_end":62}},{"value":"/ assert!(Pattern::new(\"k[!e]tteh\").unwrap().matches(\"kitteh\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21706,"byte_end":21772,"line_start":622,"line_end":622,"column_start":5,"column_end":71}},{"value":"/ assert!(Pattern::new(\"d*g\").unwrap().matches(\"doog\"));","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21777,"byte_end":21835,"line_start":623,"line_end":623,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21840,"byte_end":21847,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22122,"byte_end":22134,"line_start":631,"line_end":631,"column_start":12,"column_end":24},"name":"matches_path","qualname":"<Pattern>::matches_path","value":"pub fn matches_path(&Self, &Path) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `Path`, when converted to a `str`, matches this\n `Pattern` using the default match options (i.e. `MatchOptions::new()`).\n","sig":null,"attributes":[{"value":"/ Return if the given `Path`, when converted to a `str`, matches this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":21959,"byte_end":22030,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ `Pattern` using the default match options (i.e. `MatchOptions::new()`).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22035,"byte_end":22110,"line_start":630,"line_end":630,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22402,"byte_end":22414,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"matches_with","qualname":"<Pattern>::matches_with","value":"pub fn matches_with(&Self, &str, &MatchOptions) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `str` matches this `Pattern` using the specified\n match options.\n","sig":null,"attributes":[{"value":"/ Return if the given `str` matches this `Pattern` using the specified","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22295,"byte_end":22367,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/ match options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22372,"byte_end":22390,"line_start":637,"line_end":637,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22680,"byte_end":22697,"line_start":644,"line_end":644,"column_start":12,"column_end":29},"name":"matches_path_with","qualname":"<Pattern>::matches_path_with","value":"pub fn matches_path_with(&Self, &Path, &MatchOptions) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the given `Path`, when converted to a `str`, matches this\n `Pattern` using the specified match options.\n","sig":null,"attributes":[{"value":"/ Return if the given `Path`, when converted to a `str`, matches this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22544,"byte_end":22615,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ `Pattern` using the specified match options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22620,"byte_end":22668,"line_start":643,"line_end":643,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22945,"byte_end":22951,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pattern>::as_str","value":"pub fn as_str<'a>(&'a Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Access the original glob pattern.\n","sig":null,"attributes":[{"value":"/ Access the original glob pattern.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":22896,"byte_end":22933,"line_start":649,"line_end":649,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32419,"byte_end":32431,"line_start":898,"line_end":898,"column_start":12,"column_end":24},"name":"MatchOptions","qualname":"::MatchOptions","value":"MatchOptions { case_sensitive, require_literal_separator, require_literal_leading_dot }","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" Configuration options to modify the behaviour of `Pattern::matches_with(..)`\n","sig":null,"attributes":[{"value":"/ Configuration options to modify the behaviour of `Pattern::matches_with(..)`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32224,"byte_end":32304,"line_start":895,"line_end":895,"column_start":1,"column_end":81}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32305,"byte_end":32343,"line_start":896,"line_end":896,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32690,"byte_end":32704,"line_start":903,"line_end":903,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::MatchOptions::case_sensitive","value":"bool","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Whether or not patterns should be matched in a case-sensitive manner.\n This currently only considers upper/lower case relationships between\n ASCII characters, but in future this might be extended to work with\n Unicode.\n","sig":null,"attributes":[{"value":"/ Whether or not patterns should be matched in a case-sensitive manner.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32438,"byte_end":32511,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ This currently only considers upper/lower case relationships between","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32516,"byte_end":32588,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ ASCII characters, but in future this might be extended to work with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32593,"byte_end":32664,"line_start":901,"line_end":901,"column_start":5,"column_end":76}},{"value":"/ Unicode.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32669,"byte_end":32681,"line_start":902,"line_end":902,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32893,"byte_end":32918,"line_start":908,"line_end":908,"column_start":9,"column_end":34},"name":"require_literal_separator","qualname":"::MatchOptions::require_literal_separator","value":"bool","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If this is true then path-component separator characters (e.g. `/` on\n Posix) must be matched by a literal `/`, rather than by `*` or `?` or\n `[...]`\n","sig":null,"attributes":[{"value":"/ If this is true then path-component separator characters (e.g. `/` on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32717,"byte_end":32790,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ Posix) must be matched by a literal `/`, rather than by `*` or `?` or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32795,"byte_end":32868,"line_start":906,"line_end":906,"column_start":5,"column_end":78}},{"value":"/ `[...]`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32873,"byte_end":32884,"line_start":907,"line_end":907,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33301,"byte_end":33328,"line_start":915,"line_end":915,"column_start":9,"column_end":36},"name":"require_literal_leading_dot","qualname":"::MatchOptions::require_literal_leading_dot","value":"bool","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" If this is true then paths that contain components that start with a `.`\n will not match unless the `.` appears literally in the pattern: `*`, `?`, `**`,\n or `[...]` will not match. This is useful because such files are\n conventionally considered hidden on Unix systems and it might be\n desirable to skip them when listing files.\n","sig":null,"attributes":[{"value":"/ If this is true then paths that contain components that start with a `.`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":32931,"byte_end":33007,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ will not match unless the `.` appears literally in the pattern: `*`, `?`, `**`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33012,"byte_end":33095,"line_start":911,"line_end":911,"column_start":5,"column_end":88}},{"value":"/ or `[...]` will not match. This is useful because such files are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33100,"byte_end":33168,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ conventionally considered hidden on Unix systems and it might be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33173,"byte_end":33241,"line_start":913,"line_end":913,"column_start":5,"column_end":73}},{"value":"/ desirable to skip them when listing files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33246,"byte_end":33292,"line_start":914,"line_end":914,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33804,"byte_end":33807,"line_start":932,"line_end":932,"column_start":12,"column_end":15},"name":"new","qualname":"<MatchOptions>::new","value":"pub fn new() -> MatchOptions","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `MatchOptions` with default field values. This is used\n when calling functions that do not take an explicit `MatchOptions`\n parameter.","sig":null,"attributes":[{"value":"/ Constructs a new `MatchOptions` with default field values. This is used","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33363,"byte_end":33438,"line_start":919,"line_end":919,"column_start":5,"column_end":80}},{"value":"/ when calling functions that do not take an explicit `MatchOptions`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33443,"byte_end":33513,"line_start":920,"line_end":920,"column_start":5,"column_end":75}},{"value":"/ parameter.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33518,"byte_end":33532,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33537,"byte_end":33540,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function always returns this value:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33545,"byte_end":33589,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33594,"byte_end":33597,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33602,"byte_end":33620,"line_start":925,"line_end":925,"column_start":5,"column_end":23}},{"value":"/ MatchOptions {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33625,"byte_end":33643,"line_start":926,"line_end":926,"column_start":5,"column_end":23}},{"value":"/     case_sensitive: true,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33648,"byte_end":33677,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/     require_literal_separator: false.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33682,"byte_end":33723,"line_start":928,"line_end":928,"column_start":5,"column_end":46}},{"value":"/     require_literal_leading_dot: false","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33728,"byte_end":33770,"line_start":929,"line_end":929,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33775,"byte_end":33780,"line_start":930,"line_end":930,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33785,"byte_end":33792,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8045,"byte_end":8054,"line_start":233,"line_end":233,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8280,"byte_end":8289,"line_start":245,"line_end":245,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8464,"byte_end":8473,"line_start":254,"line_end":254,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":9029,"byte_end":9034,"line_start":273,"line_end":273,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13171,"byte_end":13183,"line_start":383,"line_end":383,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13270,"byte_end":13282,"line_start":389,"line_end":389,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14929,"byte_end":14936,"line_start":431,"line_end":431,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":15053,"byte_end":15060,"line_start":437,"line_end":437,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":15999,"byte_end":16006,"line_start":473,"line_end":473,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33344,"byte_end":33356,"line_start":918,"line_end":918,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8045,"byte_end":8054,"line_start":233,"line_end":233,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8280,"byte_end":8289,"line_start":245,"line_end":245,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":143},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":8464,"byte_end":8473,"line_start":254,"line_end":254,"column_start":23,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":9029,"byte_end":9034,"line_start":273,"line_end":273,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13171,"byte_end":13183,"line_start":383,"line_end":383,"column_start":16,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":148},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":13270,"byte_end":13282,"line_start":389,"line_end":389,"column_start":23,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":14929,"byte_end":14936,"line_start":431,"line_end":431,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":15053,"byte_end":15060,"line_start":437,"line_end":437,"column_start":18,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":12324}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":15999,"byte_end":16006,"line_start":473,"line_end":473,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\glob-0.2.11\\src\\lib.rs","byte_start":33344,"byte_end":33356,"line_start":918,"line_end":918,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}}]}