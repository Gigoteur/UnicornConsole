{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3","program":"C:\\Users\\toto\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gif","--edition=2018","C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","opt-level=2","-C","embed-bitcode=no","-C","codegen-units=4","-C","debuginfo=2","-C","debug-assertions=on","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","--cfg","feature=\"std\"","-C","metadata=b11597bdd71c9ce2","-C","extra-filename=-b11597bdd71c9ce2","--out-dir","d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","-L","dependency=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps","--extern","color_quant=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libcolor_quant-f04a38204e025a0c.rmeta","--extern","weezl=d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libweezl-a4dbc5e144a047b7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\toto\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\UnicornConsole\\UnicornConsole\\unicorn-games\\dinunicorn\\target\\rls\\debug\\deps\\libgif-b11597bdd71c9ce2.rmeta"},"prelude":{"crate_id":{"name":"gif","disambiguator":[2255636823028484608,0]},"crate_root":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src","external_crates":[{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13015713666403456114,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1507510987272037120,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3803325750332457499,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4223354511651166533,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15700094508901508366,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12632183332710247155,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18262169243471273054,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15664785966706829415,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[3895343934390880989,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1841993658411810574,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1117248029108287081,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[14646112292732085519,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11979428506951486581,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2104796995944127881,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4084207378877276393,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","num":16,"id":{"name":"color_quant","disambiguator":[12477032604188032398,0]}},{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","num":17,"id":{"name":"weezl","disambiguator":[5914766172575385405,0]}}],"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":0,"byte_end":4723,"line_start":1,"line_end":151,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19272,"byte_end":19288,"line_start":12,"line_end":12,"column_start":20,"column_end":36},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19290,"byte_end":19297,"line_start":12,"line_end":12,"column_start":38,"column_end":45},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19299,"byte_end":19312,"line_start":12,"line_end":12,"column_start":47,"column_end":60},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19314,"byte_end":19333,"line_start":12,"line_end":12,"column_start":62,"column_end":81},"alias_span":null,"name":"DecodingFormatError","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19335,"byte_end":19345,"line_start":12,"line_end":12,"column_start":83,"column_end":93},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19351,"byte_end":19358,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3521,"byte_end":3533,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"alias_span":null,"name":"AnyExtension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3521,"byte_end":3533,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"alias_span":null,"name":"AnyExtension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3535,"byte_end":3540,"line_start":117,"line_end":117,"column_start":39,"column_end":44},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3542,"byte_end":3551,"line_start":117,"line_end":117,"column_start":46,"column_end":55},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3553,"byte_end":3567,"line_start":117,"line_end":117,"column_start":57,"column_end":71},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3569,"byte_end":3574,"line_start":117,"line_end":117,"column_start":73,"column_end":78},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3602,"byte_end":3618,"line_start":119,"line_end":119,"column_start":25,"column_end":41},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3620,"byte_end":3627,"line_start":119,"line_end":119,"column_start":43,"column_end":50},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3629,"byte_end":3642,"line_start":119,"line_end":119,"column_start":52,"column_end":65},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3644,"byte_end":3663,"line_start":119,"line_end":119,"column_start":67,"column_end":86},"alias_span":null,"name":"DecodingFormatError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3736,"byte_end":3747,"line_start":121,"line_end":121,"column_start":25,"column_end":36},"alias_span":null,"name":"ColorOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3749,"byte_end":3760,"line_start":121,"line_end":121,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3749,"byte_end":3760,"line_start":121,"line_end":121,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3762,"byte_end":3772,"line_start":121,"line_end":121,"column_start":51,"column_end":61},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3799,"byte_end":3812,"line_start":122,"line_end":122,"column_start":25,"column_end":38},"alias_span":null,"name":"DecodeOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3814,"byte_end":3821,"line_start":122,"line_end":122,"column_start":40,"column_end":47},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3823,"byte_end":3830,"line_start":122,"line_end":122,"column_start":49,"column_end":56},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3859,"byte_end":3866,"line_start":124,"line_end":124,"column_start":26,"column_end":33},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3868,"byte_end":3881,"line_start":124,"line_end":124,"column_start":35,"column_end":48},"alias_span":null,"name":"ExtensionData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3883,"byte_end":3889,"line_start":124,"line_end":124,"column_start":50,"column_end":56},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3891,"byte_end":3904,"line_start":124,"line_end":124,"column_start":58,"column_end":71},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":0,"byte_end":4723,"line_start":1,"line_end":151,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":22},{"krate":0,"index":60},{"krate":0,"index":278},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":752}],"decl_id":null,"docs":" # GIF en- and decoding library [![Build Status](https://github.com/image-rs/image-gif/workflows/Rust%20CI/badge.svg)](https://github.com/image-rs/image-gif/actions)\n \n GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).\n \n # GIF encoding and decoding library\n \n This library provides all functions necessary to de- and encode GIF files.\n \n ## High level interface\n \n The high level interface consists of the two types\n [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).\n \n ### Decoding GIF files\n \n ```rust\n // Open the file\n use std::fs::File;\n let mut decoder = gif::DecodeOptions::new();\n // Configure the decoder such that it will expand the image to RGBA.\n decoder.set_color_output(gif::ColorOutput::RGBA);\n // Read the file header\n let file = File::open(\"tests/samples/sample_1.gif\").unwrap();\n let mut decoder = decoder.read_info(file).unwrap();\n while let Some(frame) = decoder.read_next_frame().unwrap() {\n     // Process every frame\n }\n ```\n \n \n \n ### Encoding GIF files","sig":null,"attributes":[{"value":"/ # GIF en- and decoding library [![Build Status](https://github.com/image-rs/image-gif/workflows/Rust%20CI/badge.svg)](https://github.com/image-rs/image-gif/actions)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":0,"byte_end":168,"line_start":1,"line_end":1,"column_start":1,"column_end":169}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":169,"byte_end":173,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"/ GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":174,"byte_end":257,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":258,"byte_end":262,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"/ # GIF encoding and decoding library","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":263,"byte_end":302,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":303,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"/ This library provides all functions necessary to de- and encode GIF files.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":308,"byte_end":386,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":387,"byte_end":391,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"/ ## High level interface","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":392,"byte_end":419,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":420,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ The high level interface consists of the two types","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":425,"byte_end":479,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/ [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":480,"byte_end":554,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":555,"byte_end":559,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ ### Decoding GIF files","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":560,"byte_end":586,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":587,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":592,"byte_end":603,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ // Open the file","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":604,"byte_end":624,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":625,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ let mut decoder = gif::DecodeOptions::new();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":648,"byte_end":696,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/ // Configure the decoder such that it will expand the image to RGBA.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":697,"byte_end":769,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ decoder.set_color_output(gif::ColorOutput::RGBA);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":770,"byte_end":823,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ // Read the file header","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":824,"byte_end":851,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ let file = File::open(\"tests/samples/sample_1.gif\").unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":852,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ let mut decoder = decoder.read_info(file).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":918,"byte_end":973,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/ while let Some(frame) = decoder.read_next_frame().unwrap() {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":974,"byte_end":1038,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/     // Process every frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1039,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1070,"byte_end":1075,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1076,"byte_end":1083,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1084,"byte_end":1088,"line_start":29,"line_end":29,"column_start":1,"column_end":5}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1089,"byte_end":1093,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1094,"byte_end":1098,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"/ ### Encoding GIF files","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1099,"byte_end":1125,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1126,"byte_end":1129,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The encoder can be used so save simple computer generated images:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1130,"byte_end":1199,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1200,"byte_end":1204,"line_start":35,"line_end":35,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1205,"byte_end":1216,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use gif::{Frame, Encoder, Repeat};","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1217,"byte_end":1255,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1256,"byte_end":1278,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1279,"byte_end":1304,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1305,"byte_end":1309,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ let color_map = &[0xFF, 0xFF, 0xFF, 0, 0, 0];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1310,"byte_end":1359,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ let (width, height) = (6, 6);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1360,"byte_end":1393,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ let mut beacon_states = [[","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1394,"byte_end":1424,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1425,"byte_end":1450,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1451,"byte_end":1476,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1477,"byte_end":1502,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1503,"byte_end":1528,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1529,"byte_end":1554,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1555,"byte_end":1580,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ ], [","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1581,"byte_end":1589,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1590,"byte_end":1615,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/     0, 1, 1, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1616,"byte_end":1641,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/     0, 1, 0, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1642,"byte_end":1667,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 1, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1668,"byte_end":1693,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 1, 1, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1694,"byte_end":1719,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/     0, 0, 0, 0, 0, 0,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1720,"byte_end":1745,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/ ]];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1746,"byte_end":1753,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ let mut image = File::create(\"tests/samples/beacon.gif\").unwrap();;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1754,"byte_end":1825,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"/ let mut encoder = Encoder::new(&mut image, width, height, color_map).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1826,"byte_end":1908,"line_start":59,"line_end":59,"column_start":1,"column_end":83}},{"value":"/ encoder.set_repeat(Repeat::Infinite).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1909,"byte_end":1959,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ for state in &beacon_states {","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1960,"byte_end":1993,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/     let mut frame = Frame::default();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":1994,"byte_end":2035,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/     frame.width = width;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2036,"byte_end":2064,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/     frame.height = height;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2065,"byte_end":2095,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/     frame.buffer = Cow::Borrowed(&*state);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2096,"byte_end":2142,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/     encoder.write_frame(&frame).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2143,"byte_end":2188,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2189,"byte_end":2194,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2195,"byte_end":2202,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2203,"byte_end":2206,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`Frame::from_*`](struct.Frame.html) can be used to convert a true color image to a paletted","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2207,"byte_end":2303,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ image with a maximum of 256 colors:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2304,"byte_end":2343,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2344,"byte_end":2347,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2348,"byte_end":2359,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2360,"byte_end":2382,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2383,"byte_end":2387,"line_start":75,"line_end":75,"column_start":1,"column_end":5}},{"value":"/ // Get pixel data from some source","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2388,"byte_end":2426,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/ let mut pixels: Vec<u8> = vec![0; 30_000];","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2427,"byte_end":2473,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ // Create frame from data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2474,"byte_end":2503,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/ let frame = gif::Frame::from_rgb(100, 100, &mut *pixels);","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2504,"byte_end":2565,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/ // Create encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2566,"byte_end":2587,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ let mut image = File::create(\"target/indexed_color.gif\").unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2588,"byte_end":2658,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/ let mut encoder = gif::Encoder::new(&mut image, frame.width, frame.height, &[]).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2659,"byte_end":2752,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"/ // Write frame to file","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2753,"byte_end":2779,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/ encoder.write_frame(&frame).unwrap();","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2780,"byte_end":2821,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":2822,"byte_end":2829,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3398,"byte_end":3420,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\lib.rs","byte_start":3421,"byte_end":3445,"line_start":110,"line_end":110,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6233,"byte_end":6236,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"Any","qualname":"::common::DisposalMethod::Any","value":"DisposalMethod::Any","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" StreamingDecoder is not required to take any action.\n","sig":null,"attributes":[{"value":"/ StreamingDecoder is not required to take any action.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6172,"byte_end":6228,"line_start":12,"line_end":12,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6270,"byte_end":6274,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Keep","qualname":"::common::DisposalMethod::Keep","value":"DisposalMethod::Keep","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Do not dispose.\n","sig":null,"attributes":[{"value":"/ Do not dispose.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6246,"byte_end":6265,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6321,"byte_end":6331,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposalMethod::Background","value":"DisposalMethod::Background","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Restore to background color.\n","sig":null,"attributes":[{"value":"/ Restore to background color.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6284,"byte_end":6316,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6370,"byte_end":6378,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposalMethod::Previous","value":"DisposalMethod::Previous","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Restore to previous.\n","sig":null,"attributes":[{"value":"/ Restore to previous.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6341,"byte_end":6365,"line_start":18,"line_end":18,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6151,"byte_end":6165,"line_start":11,"line_end":11,"column_start":10,"column_end":24},"name":"DisposalMethod","qualname":"::common::DisposalMethod","value":"pub enum DisposalMethod { Any = , Keep = , Background = , Previous = , }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437}],"decl_id":null,"docs":" Disposal method\n","sig":null,"attributes":[{"value":"/ Disposal method","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6065,"byte_end":6084,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6130,"byte_end":6141,"line_start":10,"line_end":10,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6460,"byte_end":6467,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposalMethod>::from_u8","value":"pub fn from_u8(u8) -> Option<DisposalMethod>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6413,"byte_end":6448,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7472,"byte_end":7477,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Image","qualname":"::common::Block::Image","value":"Block::Image","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Image block.\n","sig":null,"attributes":[{"value":"/ Image block.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7451,"byte_end":7467,"line_start":48,"line_end":48,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7515,"byte_end":7524,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"Extension","qualname":"::common::Block::Extension","value":"Block::Extension","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Extension block.\n","sig":null,"attributes":[{"value":"/ Extension block.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7490,"byte_end":7510,"line_start":50,"line_end":50,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7560,"byte_end":7567,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::common::Block::Trailer","value":"Block::Trailer","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Image trailer.\n","sig":null,"attributes":[{"value":"/ Image trailer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7537,"byte_end":7555,"line_start":52,"line_end":52,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7439,"byte_end":7444,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Block","qualname":"::common::Block","value":"pub enum Block { Image = , Extension = , Trailer = , }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458}],"decl_id":null,"docs":" Known GIF block labels.","sig":null,"attributes":[{"value":"/ Known GIF block labels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6751,"byte_end":6778,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6779,"byte_end":6782,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that the block uniquely specifies the layout of bytes that follow and how they are","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6783,"byte_end":6874,"line_start":37,"line_end":37,"column_start":1,"column_end":92}},{"value":"/ framed. For example, the header always has a fixed length but is followed by a variable amount","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6875,"byte_end":6973,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ of additional data. An image descriptor may be followed by a local color table depending on","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6974,"byte_end":7069,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ information read in it. Therefore, it doesn't make sense to continue parsing after encountering","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7070,"byte_end":7169,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ an unknown block as the semantics of following bytes are unclear.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7170,"byte_end":7239,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7240,"byte_end":7243,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The extension block provides a common framing for an arbitrary amount of application specific","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7244,"byte_end":7341,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/ data which may be ignored.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7342,"byte_end":7372,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7418,"byte_end":7429,"line_start":46,"line_end":46,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7643,"byte_end":7650,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Block>::from_u8","value":"pub fn from_u8(u8) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7596,"byte_end":7631,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8422,"byte_end":8434,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"AnyExtension","qualname":"::common::AnyExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype wrapper around an arbitrary extension ID.","sig":null,"attributes":[{"value":"/ A newtype wrapper around an arbitrary extension ID.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7862,"byte_end":7917,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7918,"byte_end":7921,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ An extension is some amount of byte data organized in sub-blocks so that one can skip over it","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7922,"byte_end":8019,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ without knowing the semantics. Though technically you likely want to use a `Application`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8020,"byte_end":8112,"line_start":71,"line_end":71,"column_start":1,"column_end":93}},{"value":"/ extension, the library tries to stay flexible here.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8113,"byte_end":8168,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8169,"byte_end":8172,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This allows us to customize the set of impls compared to a raw `u8`. It also clarifies the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8173,"byte_end":8267,"line_start":74,"line_end":74,"column_start":1,"column_end":95}},{"value":"/ intent and gives some inherent methods for interoperability with known extension types.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8268,"byte_end":8359,"line_start":75,"line_end":75,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8435,"byte_end":8441,"line_start":77,"line_end":77,"column_start":25,"column_end":31},"name":"0","qualname":"::common::AnyExtension::0","value":"u8","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9131,"byte_end":9135,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Text","qualname":"::common::Extension::Text","value":"Extension::Text","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Plain Text extension.","sig":null,"attributes":[{"value":"/ Plain Text extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8701,"byte_end":8726,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8731,"byte_end":8734,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This instructs the decoder to render a text as characters in a grid of cells, in a","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8739,"byte_end":8825,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ mono-spaced font of its choosing. This is seldom actually implemented and ignored by","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8830,"byte_end":8918,"line_start":89,"line_end":89,"column_start":5,"column_end":93}},{"value":"/ ImageMagick. The color is always taken from the global table which further complicates any","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8923,"byte_end":9017,"line_start":90,"line_end":90,"column_start":5,"column_end":99}},{"value":"/ use. No real information on the frame sequencing of this block is available in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9022,"byte_end":9108,"line_start":91,"line_end":91,"column_start":5,"column_end":91}},{"value":"/ standard.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9113,"byte_end":9126,"line_start":92,"line_end":92,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9175,"byte_end":9182,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Control","qualname":"::common::Extension::Control","value":"Extension::Control","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Control extension.\n","sig":null,"attributes":[{"value":"/ Control extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9148,"byte_end":9170,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9222,"byte_end":9229,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"Comment","qualname":"::common::Extension::Comment","value":"Extension::Comment","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Comment extension.\n","sig":null,"attributes":[{"value":"/ Comment extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9195,"byte_end":9217,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9493,"byte_end":9504,"line_start":103,"line_end":103,"column_start":5,"column_end":16},"name":"Application","qualname":"::common::Extension::Application","value":"Extension::Application","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":" Application extension.","sig":null,"attributes":[{"value":"/ Application extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9242,"byte_end":9268,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9273,"byte_end":9276,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ See [ImageMagick] for an idea of commonly recognized extensions.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9281,"byte_end":9349,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9354,"byte_end":9357,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [ImageMagick]: https://github.com/ImageMagick/ImageMagick/blob/b0b58c6303195928060f55f9c3ca8233ab7f7733/coders/gif.c#L1128","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9362,"byte_end":9488,"line_start":102,"line_end":102,"column_start":5,"column_end":131}}]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8685,"byte_end":8694,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Extension","qualname":"::common::Extension","value":"pub enum Extension { Text = , Control = , Comment = , Application = , }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500}],"decl_id":null,"docs":" Known GIF extension labels.","sig":null,"attributes":[{"value":"/ Known GIF extension labels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8445,"byte_end":8476,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8477,"byte_end":8480,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ These are extensions which may be interpreted by the library and to which a specification with","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8481,"byte_end":8579,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/ the internal data layout is known.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8580,"byte_end":8618,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":8664,"byte_end":8675,"line_start":84,"line_end":84,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9594,"byte_end":9604,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_known","qualname":"<AnyExtension>::into_known","value":"pub fn into_known(Self) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Decode the label as a known extension.\n","sig":null,"attributes":[{"value":"/ Decode the label as a known extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9540,"byte_end":9582,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9880,"byte_end":9887,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Extension>::from_u8","value":"pub fn from_u8(u8) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to a `Extension` if it is known.\n","sig":null,"attributes":[{"value":"/ Converts `u8` to a `Extension` if it is known.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9818,"byte_end":9868,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10213,"byte_end":10218,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"Frame","qualname":"::common::Frame","value":"Frame { delay, dispose, transparent, needs_user_input, top, left, width, height, interlaced, palette, buffer }","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"decl_id":null,"docs":" A GIF frame\n","sig":null,"attributes":[{"value":"/ A GIF frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10162,"byte_end":10177,"line_start":132,"line_end":132,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10273,"byte_end":10278,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"delay","qualname":"::common::Frame::delay","value":"u16","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Frame delay in units of 10 ms.\n","sig":null,"attributes":[{"value":"/ Frame delay in units of 10 ms.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10229,"byte_end":10264,"line_start":135,"line_end":135,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10318,"byte_end":10325,"line_start":138,"line_end":138,"column_start":9,"column_end":16},"name":"dispose","qualname":"::common::Frame::dispose","value":"common::DisposalMethod","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Disposal method.\n","sig":null,"attributes":[{"value":"/ Disposal method.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10289,"byte_end":10309,"line_start":137,"line_end":137,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10393,"byte_end":10404,"line_start":140,"line_end":140,"column_start":9,"column_end":20},"name":"transparent","qualname":"::common::Frame::transparent","value":"std::option::Option<u8>","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Transparent index (if available).\n","sig":null,"attributes":[{"value":"/ Transparent index (if available).","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10347,"byte_end":10384,"line_start":139,"line_end":139,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10486,"byte_end":10502,"line_start":142,"line_end":142,"column_start":9,"column_end":25},"name":"needs_user_input","qualname":"::common::Frame::needs_user_input","value":"bool","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" True if the frame needs user input to be displayed.\n","sig":null,"attributes":[{"value":"/ True if the frame needs user input to be displayed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10422,"byte_end":10477,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10568,"byte_end":10571,"line_start":144,"line_end":144,"column_start":9,"column_end":12},"name":"top","qualname":"::common::Frame::top","value":"u16","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Offset from the top border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the top border of the canvas.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10514,"byte_end":10559,"line_start":143,"line_end":143,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10637,"byte_end":10641,"line_start":146,"line_end":146,"column_start":9,"column_end":13},"name":"left","qualname":"::common::Frame::left","value":"u16","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Offset from the left border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the left border of the canvas.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10582,"byte_end":10628,"line_start":145,"line_end":145,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10684,"byte_end":10689,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Frame::width","value":"u16","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Width of the frame.\n","sig":null,"attributes":[{"value":"/ Width of the frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10652,"byte_end":10675,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10733,"byte_end":10739,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Frame::height","value":"u16","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Height of the frame.\n","sig":null,"attributes":[{"value":"/ Height of the frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10700,"byte_end":10724,"line_start":149,"line_end":149,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10795,"byte_end":10805,"line_start":152,"line_end":152,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Frame::interlaced","value":"bool","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" True if the image is interlaced.\n","sig":null,"attributes":[{"value":"/ True if the image is interlaced.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10750,"byte_end":10786,"line_start":151,"line_end":151,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10869,"byte_end":10876,"line_start":154,"line_end":154,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Frame::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Frame local color palette if available.\n","sig":null,"attributes":[{"value":"/ Frame local color palette if available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10817,"byte_end":10860,"line_start":153,"line_end":153,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10997,"byte_end":11003,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"buffer","qualname":"::common::Frame::buffer","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":" Buffer containing the image data.\n Only indices unless configured differently.\n","sig":null,"attributes":[{"value":"/ Buffer containing the image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10899,"byte_end":10936,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/ Only indices unless configured differently.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":10941,"byte_end":10988,"line_start":156,"line_end":156,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12088,"byte_end":12097,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Frame>::from_rgba","value":"pub fn from_rgba(u16, u16, &mut [u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11464,"byte_end":11511,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11516,"byte_end":11519,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. The `gif` format does not support arbitrary alpha but only a 1-bit","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11524,"byte_end":11618,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ transparency mask per pixel. Any non-zero alpha value will be interpreted as a fully opaque","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11623,"byte_end":11718,"line_start":182,"line_end":182,"column_start":5,"column_end":100}},{"value":"/ pixel. Additionally, only 256 colors can appear in a single frame. The palette will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11723,"byte_end":11813,"line_start":183,"line_end":183,"column_start":5,"column_end":95}},{"value":"/ reduced by the NeuQuant algorithm if necessary. Different frames have independent palettes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11818,"byte_end":11913,"line_start":184,"line_end":184,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11918,"byte_end":11921,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11926,"byte_end":11977,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11982,"byte_end":11985,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11990,"byte_end":12003,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12008,"byte_end":12076,"line_start":189,"line_end":189,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":13040,"byte_end":13055,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"from_rgba_speed","qualname":"<Frame>::from_rgba_speed","value":"pub fn from_rgba_speed(u16, u16, &mut [u8], i32) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12230,"byte_end":12277,"line_start":194,"line_end":194,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12282,"byte_end":12285,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12290,"byte_end":12334,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12339,"byte_end":12412,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12417,"byte_end":12484,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12489,"byte_end":12492,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. The `gif` format does not support arbitrary alpha but only a 1-bit","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12497,"byte_end":12591,"line_start":200,"line_end":200,"column_start":5,"column_end":99}},{"value":"/ transparency mask per pixel. Any non-zero alpha value will be interpreted as a fully opaque","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12596,"byte_end":12691,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/ pixel. Additionally, only 256 colors can appear in a single frame. The palette will be","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12696,"byte_end":12786,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/ reduced by the NeuQuant algorithm if necessary. Different frames have independent palettes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12791,"byte_end":12886,"line_start":203,"line_end":203,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12891,"byte_end":12894,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12899,"byte_end":12912,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12917,"byte_end":12985,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":12990,"byte_end":13028,"line_start":207,"line_end":207,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15533,"byte_end":15552,"line_start":263,"line_end":263,"column_start":12,"column_end":31},"name":"from_palette_pixels","qualname":"<Frame>::from_palette_pixels","value":"pub fn from_palette_pixels(u16, u16, &[u8], &[u8], Option<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from a palette and indexed pixels.","sig":null,"attributes":[{"value":"/ Creates a frame from a palette and indexed pixels.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15322,"byte_end":15376,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15381,"byte_end":15384,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15389,"byte_end":15402,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15407,"byte_end":15471,"line_start":261,"line_end":261,"column_start":5,"column_end":69}},{"value":"/ *   If the length of palette > `256 * 3`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":15476,"byte_end":15521,"line_start":262,"line_end":262,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16294,"byte_end":16313,"line_start":281,"line_end":281,"column_start":12,"column_end":31},"name":"from_indexed_pixels","qualname":"<Frame>::from_indexed_pixels","value":"pub fn from_indexed_pixels(u16, u16, &[u8], Option<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from indexed pixels in the global palette.","sig":null,"attributes":[{"value":"/ Creates a frame from indexed pixels in the global palette.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16125,"byte_end":16187,"line_start":277,"line_end":277,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16192,"byte_end":16195,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16200,"byte_end":16213,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16218,"byte_end":16282,"line_start":280,"line_end":280,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17217,"byte_end":17225,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Frame>::from_rgb","value":"pub fn from_rgb(u16, u16, &[u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16762,"byte_end":16808,"line_start":294,"line_end":294,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16813,"byte_end":16816,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. In the `gif` format only 256 colors can appear in a single frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16821,"byte_end":16914,"line_start":296,"line_end":296,"column_start":5,"column_end":98}},{"value":"/ The palette will be reduced by the NeuQuant algorithm if necessary. Different frames have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":16919,"byte_end":17012,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/ independent palettes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17017,"byte_end":17042,"line_start":298,"line_end":298,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17047,"byte_end":17050,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17055,"byte_end":17106,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17111,"byte_end":17114,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17119,"byte_end":17132,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17137,"byte_end":17205,"line_start":303,"line_end":303,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":18002,"byte_end":18016,"line_start":322,"line_end":322,"column_start":12,"column_end":26},"name":"from_rgb_speed","qualname":"<Frame>::from_rgb_speed","value":"pub fn from_rgb_speed(u16, u16, &[u8], i32) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17353,"byte_end":17399,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17404,"byte_end":17407,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17412,"byte_end":17456,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17461,"byte_end":17464,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. In the `gif` format only 256 colors can appear in a single frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17469,"byte_end":17562,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/ The palette will be reduced by the NeuQuant algorithm if necessary. Different frames have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17567,"byte_end":17660,"line_start":313,"line_end":313,"column_start":5,"column_end":98}},{"value":"/ independent palettes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17665,"byte_end":17690,"line_start":314,"line_end":314,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17695,"byte_end":17698,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17703,"byte_end":17776,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17781,"byte_end":17848,"line_start":317,"line_end":317,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17853,"byte_end":17856,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17861,"byte_end":17874,"line_start":319,"line_end":319,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17879,"byte_end":17947,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":17952,"byte_end":17990,"line_start":321,"line_end":321,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":37980,"byte_end":37999,"line_start":18,"line_end":18,"column_start":12,"column_end":31},"name":"DecodingFormatError","qualname":"::reader::decoder::DecodingFormatError","value":"DecodingFormatError {  }","parent":null,"children":[{"krate":0,"index":534}],"decl_id":null,"docs":" An error returned in the case of the image not being formatted properly.\n","sig":null,"attributes":[{"value":"/ An error returned in the case of the image not being formatted properly.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":37875,"byte_end":37951,"line_start":16,"line_end":16,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38712,"byte_end":38718,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::decoder::DecodingError::Format","value":"DecodingError::Format(DecodingFormatError)","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Returned if the image is found to be malformed.\n","sig":null,"attributes":[{"value":"/ Returned if the image is found to be malformed.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38656,"byte_end":38707,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38777,"byte_end":38779,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::decoder::DecodingError::Io","value":"DecodingError::Io(io::Error)","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38745,"byte_end":38772,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38636,"byte_end":38649,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::reader::decoder::DecodingError","value":"pub enum DecodingError { Format(DecodingFormatError), Io(io::Error), }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":541}],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38607,"byte_end":38626,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39905,"byte_end":39909,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"Save","qualname":"::reader::decoder::Extensions::Save","value":"Extensions::Save","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Saves all extention data\n","sig":null,"attributes":[{"value":"/ Saves all extention data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39872,"byte_end":39900,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40006,"byte_end":40010,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Skip","qualname":"::reader::decoder::Extensions::Skip","value":"Extensions::Skip","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Skips the data of unknown extensions\n and extracts the data from known ones\n","sig":null,"attributes":[{"value":"/ Skips the data of unknown extensions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39915,"byte_end":39955,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/ and extracts the data from known ones","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39960,"byte_end":40001,"line_start":98,"line_end":98,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39855,"byte_end":39865,"line_start":94,"line_end":94,"column_start":10,"column_end":20},"name":"Extensions","qualname":"::reader::decoder::Extensions","value":"pub enum Extensions { Save, Skip, }","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549}],"decl_id":null,"docs":" Configures how extensions should be handled\n","sig":null,"attributes":[{"value":"/ Configures how extensions should be handled","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39770,"byte_end":39817,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40139,"byte_end":40146,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::reader::decoder::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded nothing.\n","sig":null,"attributes":[{"value":"/ Decoded nothing.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40114,"byte_end":40134,"line_start":105,"line_end":105,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40176,"byte_end":40189,"line_start":108,"line_end":108,"column_start":5,"column_end":18},"name":"GlobalPalette","qualname":"::reader::decoder::Decoded::GlobalPalette","value":"Decoded::GlobalPalette(Vec<u8>)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Global palette.\n","sig":null,"attributes":[{"value":"/ Global palette.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40152,"byte_end":40171,"line_start":107,"line_end":107,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40265,"byte_end":40280,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"BackgroundColor","qualname":"::reader::decoder::Decoded::BackgroundColor","value":"Decoded::BackgroundColor(u8)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Index of the background color in the global palette.\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40204,"byte_end":40260,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40325,"byte_end":40332,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::reader::decoder::Decoded::Trailer","value":"Decoded::Trailer","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded the image trailer.\n","sig":null,"attributes":[{"value":"/ Decoded the image trailer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40290,"byte_end":40320,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40368,"byte_end":40378,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"BlockStart","qualname":"::reader::decoder::Decoded::BlockStart","value":"Decoded::BlockStart(Block)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" The start of a block.\n","sig":null,"attributes":[{"value":"/ The start of a block.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40338,"byte_end":40363,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40610,"byte_end":40626,"line_start":119,"line_end":119,"column_start":5,"column_end":21},"name":"SubBlockFinished","qualname":"::reader::decoder::Decoded::SubBlockFinished","value":"Decoded::SubBlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded a sub-block. More sub-block are available.","sig":null,"attributes":[{"value":"/ Decoded a sub-block. More sub-block are available.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40391,"byte_end":40445,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40450,"byte_end":40453,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40458,"byte_end":40550,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40555,"byte_end":40605,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40873,"byte_end":40886,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"BlockFinished","qualname":"::reader::decoder::Decoded::BlockFinished","value":"Decoded::BlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded the last (or only) sub-block of a block.","sig":null,"attributes":[{"value":"/ Decoded the last (or only) sub-block of a block.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40656,"byte_end":40708,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40713,"byte_end":40716,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40721,"byte_end":40813,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40818,"byte_end":40868,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":41045,"byte_end":41050,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Frame","qualname":"::reader::decoder::Decoded::Frame","value":"Decoded::Frame(&'a Frame)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded all information of the next frame.","sig":null,"attributes":[{"value":"/ Decoded all information of the next frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40916,"byte_end":40962,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40967,"byte_end":40970,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned frame does **not** contain any owned image data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40975,"byte_end":41040,"line_start":127,"line_end":127,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":41124,"byte_end":41128,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Data","qualname":"::reader::decoder::Decoded::Data","value":"Decoded::Data(&'a [u8])","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Decoded some data of the current frame.\n","sig":null,"attributes":[{"value":"/ Decoded some data of the current frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":41076,"byte_end":41119,"line_start":129,"line_end":129,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":41194,"byte_end":41201,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"DataEnd","qualname":"::reader::decoder::Decoded::DataEnd","value":"Decoded::DataEnd","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" No more data available the current frame.\n","sig":null,"attributes":[{"value":"/ No more data available the current frame.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":41144,"byte_end":41189,"line_start":131,"line_end":131,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40096,"byte_end":40103,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::reader::decoder::Decoded","value":"pub enum Decoded<'a> {\n    Nothing,\n    GlobalPalette(Vec<u8>),\n    BackgroundColor(u8),\n    Trailer,\n    BlockStart(Block),\n    SubBlockFinished(AnyExtension, &'a [u8]),\n    BlockFinished(AnyExtension, &'a [u8]),\n    Frame(&'a Frame),\n    Data(&'a [u8]),\n    DataEnd,\n}","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585}],"decl_id":null,"docs":" Indicates whether a certain object has been decoded\n","sig":null,"attributes":[{"value":"/ Indicates whether a certain object has been decoded","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":40014,"byte_end":40069,"line_start":102,"line_end":102,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42370,"byte_end":42386,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::reader::decoder::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" GIF decoder which supports streaming\n","sig":null,"attributes":[{"value":"/ GIF decoder which supports streaming","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42318,"byte_end":42358,"line_start":188,"line_end":188,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42996,"byte_end":43000,"line_start":213,"line_end":213,"column_start":5,"column_end":9},"name":"V87a","qualname":"::reader::decoder::Version::V87a","value":"Version::V87a","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Version 87a, from May 1987.\n","sig":null,"attributes":[{"value":"/ Version 87a, from May 1987.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42960,"byte_end":42991,"line_start":212,"line_end":212,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43043,"byte_end":43047,"line_start":215,"line_end":215,"column_start":5,"column_end":9},"name":"V89a","qualname":"::reader::decoder::Version::V89a","value":"Version::V89a","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Version 89a, from July 1989.\n","sig":null,"attributes":[{"value":"/ Version 89a, from July 1989.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43006,"byte_end":43038,"line_start":214,"line_end":214,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42946,"byte_end":42953,"line_start":211,"line_end":211,"column_start":10,"column_end":17},"name":"Version","qualname":"::reader::decoder::Version","value":"pub enum Version { V87a, V89a, }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":673}],"decl_id":null,"docs":" One version number of the GIF standard.\n","sig":null,"attributes":[{"value":"/ One version number of the GIF standard.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42824,"byte_end":42867,"line_start":208,"line_end":208,"column_start":1,"column_end":44}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":42919,"byte_end":42936,"line_start":210,"line_end":210,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43218,"byte_end":43221,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streaming decoder\n","sig":null,"attributes":[{"value":"/ Creates a new streaming decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43171,"byte_end":43206,"line_start":225,"line_end":225,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":44352,"byte_end":44358,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update<'a>(&'a mut Self, &[u8])\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Updates the internal state of the decoder. ","sig":null,"attributes":[{"value":"/ Updates the internal state of the decoder. ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":44179,"byte_end":44226,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":44231,"byte_end":44234,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes consumed from the input buffer ","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":44239,"byte_end":44302,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/ and the last decoding result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":44307,"byte_end":44340,"line_start":257,"line_end":257,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46144,"byte_end":46152,"line_start":298,"line_end":298,"column_start":12,"column_end":20},"name":"last_ext","qualname":"<StreamingDecoder>::last_ext","value":"pub fn last_ext(&Self) -> (AnyExtension, &[u8], bool)","parent":null,"children":[],"decl_id":null,"docs":" Returns the data of the last extension that has been decoded.\n","sig":null,"attributes":[{"value":"/ Returns the data of the last extension that has been decoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46067,"byte_end":46132,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46343,"byte_end":46360,"line_start":304,"line_end":304,"column_start":12,"column_end":29},"name":"current_frame_mut","qualname":"<StreamingDecoder>::current_frame_mut","value":"pub fn current_frame_mut<'a>(&'a mut Self) -> &'a mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a mutable ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46269,"byte_end":46286,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a mutable ref.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46291,"byte_end":46331,"line_start":303,"line_end":303,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46527,"byte_end":46540,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"current_frame","qualname":"<StreamingDecoder>::current_frame","value":"pub fn current_frame<'a>(&'a Self) -> &'a Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46461,"byte_end":46478,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a ref.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46483,"byte_end":46515,"line_start":309,"line_end":309,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46663,"byte_end":46668,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"width","qualname":"<StreamingDecoder>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46629,"byte_end":46651,"line_start":314,"line_end":314,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46750,"byte_end":46756,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"height","qualname":"<StreamingDecoder>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46715,"byte_end":46738,"line_start":319,"line_end":319,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":47046,"byte_end":47053,"line_start":328,"line_end":328,"column_start":12,"column_end":19},"name":"version","qualname":"<StreamingDecoder>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" The version number of the GIF standard used in this image.","sig":null,"attributes":[{"value":"/ The version number of the GIF standard used in this image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46804,"byte_end":46866,"line_start":324,"line_end":324,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46871,"byte_end":46874,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ We suppose a minimum of `V87a` compatibility. This value will be reported until we have","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46879,"byte_end":46970,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ read the version information in the magic header bytes.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":46975,"byte_end":47034,"line_start":327,"line_end":327,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":47276,"byte_end":47290,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"set_extensions","qualname":"<StreamingDecoder>::set_extensions","value":"pub fn set_extensions(&mut Self, Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Configure whether extensions are saved or skipped.\n","sig":null,"attributes":[{"value":"/ Configure whether extensions are saved or skipped.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":47106,"byte_end":47160,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"deprecated =\n\"Does not work as intended. In fact, doesn't do anything. This may disappear soon.\"","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":47165,"byte_end":47264,"line_start":333,"line_end":333,"column_start":5,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19766,"byte_end":19770,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::reader::ColorOutput::RGBA","value":"ColorOutput::RGBA","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" The decoder expands the image data to 32bit RGBA.\n This affects:","sig":null,"attributes":[{"value":"/ The decoder expands the image data to 32bit RGBA.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19508,"byte_end":19561,"line_start":22,"line_end":22,"column_start":5,"column_end":58}},{"value":"/ This affects:","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19566,"byte_end":19583,"line_start":23,"line_end":23,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19588,"byte_end":19591,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/  - The buffer buffer of the `Frame` returned by `Decoder::read_next_frame`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19596,"byte_end":19675,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/  - `Decoder::fill_buffer`, `Decoder::buffer_size` and `Decoder::line_length`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19680,"byte_end":19761,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19830,"byte_end":19837,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::reader::ColorOutput::Indexed","value":"ColorOutput::Indexed","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" The decoder returns the raw indexed data.\n","sig":null,"attributes":[{"value":"/ The decoder returns the raw indexed data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19780,"byte_end":19825,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19490,"byte_end":19501,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"ColorOutput","qualname":"::reader::ColorOutput","value":"pub enum ColorOutput { RGBA = , Indexed = , }","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":693}],"decl_id":null,"docs":" Output mode for the image data\n","sig":null,"attributes":[{"value":"/ Output mode for the image data","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19393,"byte_end":19427,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19469,"byte_end":19480,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19970,"byte_end":19981,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MemoryLimit","qualname":"::reader::MemoryLimit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory limit in bytes. `MemoryLimit(0)` means\n that there is no memory limit set.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes. `MemoryLimit(0)` means","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19870,"byte_end":19919,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ that there is no memory limit set.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19920,"byte_end":19958,"line_start":34,"line_end":34,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19982,"byte_end":19989,"line_start":35,"line_end":35,"column_start":24,"column_end":31},"name":"0","qualname":"::reader::MemoryLimit::0","value":"u32","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20597,"byte_end":20601,"line_start":47,"line_end":47,"column_start":15,"column_end":19},"name":"NONE","qualname":"::reader::MemoryLimit::NONE","value":"MemoryLimit","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" Enforce no memory limit.","sig":null,"attributes":[{"value":"/ Enforce no memory limit.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20016,"byte_end":20044,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20049,"byte_end":20052,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ If you intend to process images from unknown origins this is a potentially dangerous","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20057,"byte_end":20145,"line_start":40,"line_end":40,"column_start":5,"column_end":93}},{"value":"/ constant to use, as your program could be vulnerable to decompression bombs. That is,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20150,"byte_end":20239,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ malicious images crafted specifically to require an enormous amount of memory to process","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20244,"byte_end":20336,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ while having a disproportionately small file size.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20341,"byte_end":20395,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20400,"byte_end":20403,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The risks for modern machines are a bit smaller as the dimensions of each frame can not","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20408,"byte_end":20499,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ exceed `u32::MAX` (~4Gb) but this is still a significant amount of memory.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":20504,"byte_end":20582,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21164,"byte_end":21177,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"DecodeOptions","qualname":"::reader::DecodeOptions","value":"DecodeOptions {  }","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Options for opening a GIF decoder.\n","sig":null,"attributes":[{"value":"/ Options for opening a GIF decoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21090,"byte_end":21128,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21412,"byte_end":21415,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeOptions>::new","value":"pub fn new() -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder builder\n","sig":null,"attributes":[{"value":"/ Creates a new decoder builder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21367,"byte_end":21400,"line_start":76,"line_end":76,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21766,"byte_end":21782,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"set_color_output","qualname":"<DecodeOptions>::set_color_output","value":"pub fn set_color_output(&mut Self, ColorOutput)","parent":null,"children":[],"decl_id":null,"docs":" Configure how color data is decoded.\n","sig":null,"attributes":[{"value":"/ Configure how color data is decoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21714,"byte_end":21754,"line_start":87,"line_end":87,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21916,"byte_end":21932,"line_start":93,"line_end":93,"column_start":12,"column_end":28},"name":"set_memory_limit","qualname":"<DecodeOptions>::set_memory_limit","value":"pub fn set_memory_limit(&mut Self, MemoryLimit)","parent":null,"children":[],"decl_id":null,"docs":" Configure a memory limit for decoding.\n","sig":null,"attributes":[{"value":"/ Configure a memory limit for decoding.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21862,"byte_end":21904,"line_start":92,"line_end":92,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22579,"byte_end":22602,"line_start":107,"line_end":107,"column_start":12,"column_end":35},"name":"check_frame_consistency","qualname":"<DecodeOptions>::check_frame_consistency","value":"pub fn check_frame_consistency(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Configure if frames must be within the screen descriptor.","sig":null,"attributes":[{"value":"/ Configure if frames must be within the screen descriptor.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22012,"byte_end":22073,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22078,"byte_end":22081,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22086,"byte_end":22113,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22118,"byte_end":22121,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When turned on, all frame descriptors being read must fit within the screen descriptor or","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22126,"byte_end":22219,"line_start":101,"line_end":101,"column_start":5,"column_end":98}},{"value":"/ otherwise an error is returned and the stream left in an unspecified state.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22224,"byte_end":22303,"line_start":102,"line_end":102,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22308,"byte_end":22311,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ When turned off, frames may be arbitrarily larger or offset in relation to the screen. Many","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22316,"byte_end":22411,"line_start":104,"line_end":104,"column_start":5,"column_end":100}},{"value":"/ other decoder libraries handle this in highly divergent ways. This moves all checks to the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22416,"byte_end":22510,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/ caller, for example to emulate a specific style.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22515,"byte_end":22567,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23288,"byte_end":23306,"line_start":122,"line_end":122,"column_start":12,"column_end":30},"name":"check_lzw_end_code","qualname":"<DecodeOptions>::check_lzw_end_code","value":"pub fn check_lzw_end_code(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Configure if LZW encoded blocks must end with a marker end code.","sig":null,"attributes":[{"value":"/ Configure if LZW encoded blocks must end with a marker end code.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22686,"byte_end":22754,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22759,"byte_end":22762,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22767,"byte_end":22794,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22799,"byte_end":22802,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ When turned on, all image data blocks—which are LZW encoded—must contain a special bit","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22807,"byte_end":22901,"line_start":115,"line_end":115,"column_start":5,"column_end":95}},{"value":"/ sequence signalling the end of the data. LZW processing terminates when this code is","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22906,"byte_end":22994,"line_start":116,"line_end":116,"column_start":5,"column_end":93}},{"value":"/ encountered. The specification states that it must be the last code output by the encoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":22999,"byte_end":23092,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ for an image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23097,"byte_end":23114,"line_start":118,"line_end":118,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23119,"byte_end":23122,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ When turned off then image data blocks can simply end. Note that this might silently ignore","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23127,"byte_end":23222,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ some bits of the last or second to last byte.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23227,"byte_end":23276,"line_start":121,"line_end":121,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23931,"byte_end":23951,"line_start":137,"line_end":137,"column_start":12,"column_end":32},"name":"allow_unknown_blocks","qualname":"<DecodeOptions>::allow_unknown_blocks","value":"pub fn allow_unknown_blocks(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Configure if unknown blocks are allowed to be decoded.","sig":null,"attributes":[{"value":"/ Configure if unknown blocks are allowed to be decoded.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23385,"byte_end":23443,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23448,"byte_end":23451,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23456,"byte_end":23483,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23488,"byte_end":23491,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ When turned on, the decoder will allow unknown blocks to be in the","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23496,"byte_end":23566,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ `BlockStart` position.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23571,"byte_end":23597,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23602,"byte_end":23605,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ When turned off, decoded block starts must mark an `Image`, `Extension`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23610,"byte_end":23686,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ or `Trailer` block. Otherwise, the decoded image will return an error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23691,"byte_end":23765,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ If an unknown block error is returned from decoding, enabling this","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23770,"byte_end":23840,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ setting may allow for a further state of decoding on the next attempt.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":23845,"byte_end":23919,"line_start":136,"line_end":136,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24208,"byte_end":24217,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"read_info","qualname":"<DecodeOptions>::read_info","value":"pub fn read_info<R: Read>(Self, R) -> Result<Decoder<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the logical screen descriptor including the global color palette","sig":null,"attributes":[{"value":"/ Reads the logical screen descriptor including the global color palette","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24032,"byte_end":24106,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24111,"byte_end":24114,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns a `Decoder`. All decoder configuration has to be done beforehand.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24119,"byte_end":24196,"line_start":143,"line_end":143,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25427,"byte_end":25434,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25380,"byte_end":25399,"line_start":183,"line_end":183,"column_start":1,"column_end":20}},{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25400,"byte_end":25415,"line_start":184,"line_end":184,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25756,"byte_end":25759,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Result<Self, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder with default options.\n","sig":null,"attributes":[{"value":"/ Create a new decoder with default options.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25698,"byte_end":25744,"line_start":196,"line_end":196,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25930,"byte_end":25935,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"build","qualname":"<Decoder<R>>::build","value":"pub fn build() -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Return a builder that allows configuring limits etc.\n","sig":null,"attributes":[{"value":"/ Return a builder that allows configuring limits etc.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25862,"byte_end":25918,"line_start":201,"line_end":201,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":27774,"byte_end":27789,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"next_frame_info","qualname":"<Decoder<R>>::next_frame_info","value":"pub fn next_frame_info(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next frame info\n","sig":null,"attributes":[{"value":"/ Returns the next frame info","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":27731,"byte_end":27762,"line_start":255,"line_end":255,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":28638,"byte_end":28653,"line_start":280,"line_end":280,"column_start":12,"column_end":27},"name":"read_next_frame","qualname":"<Decoder<R>>::read_next_frame","value":"pub fn read_next_frame(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next frame from the image.","sig":null,"attributes":[{"value":"/ Reads the next frame from the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":28489,"byte_end":28529,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":28534,"byte_end":28537,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Do not call `Self::next_frame_info` beforehand.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":28542,"byte_end":28593,"line_start":278,"line_end":278,"column_start":5,"column_end":56}},{"value":"/ Deinterlaces the result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":28598,"byte_end":28626,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29796,"byte_end":29812,"line_start":309,"line_end":309,"column_start":12,"column_end":28},"name":"read_into_buffer","qualname":"<Decoder<R>>::read_into_buffer","value":"pub fn read_into_buffer(&mut Self, &mut [u8]) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the data of the current frame into a pre-allocated buffer.","sig":null,"attributes":[{"value":"/ Reads the data of the current frame into a pre-allocated buffer.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29546,"byte_end":29614,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29619,"byte_end":29622,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29627,"byte_end":29685,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/ The length of `buf` must be at least `Self::buffer_size`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29690,"byte_end":29751,"line_start":307,"line_end":307,"column_start":5,"column_end":66}},{"value":"/ Deinterlaces the result.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":29756,"byte_end":29784,"line_start":308,"line_end":308,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30834,"byte_end":30845,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"fill_buffer","qualname":"<Decoder<R>>::fill_buffer","value":"pub fn fill_buffer(&mut Self, &mut [u8]) -> Result<bool, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads data of the current frame into a pre-allocated buffer until the buffer has been\n filled completely.","sig":null,"attributes":[{"value":"/ Reads data of the current frame into a pre-allocated buffer until the buffer has been","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30507,"byte_end":30596,"line_start":327,"line_end":327,"column_start":5,"column_end":94}},{"value":"/ filled completely.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30601,"byte_end":30623,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30628,"byte_end":30631,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand. Returns `true` if the supplied","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30636,"byte_end":30725,"line_start":330,"line_end":330,"column_start":5,"column_end":94}},{"value":"/ buffer could be filled completely. Should not be called after `false` had been returned.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":30730,"byte_end":30822,"line_start":331,"line_end":331,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":33688,"byte_end":33699,"line_start":398,"line_end":398,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Decoder<R>>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Output buffer size\n","sig":null,"attributes":[{"value":"/ Output buffer size","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":33654,"byte_end":33676,"line_start":397,"line_end":397,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":33845,"byte_end":33856,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"line_length","qualname":"<Decoder<R>>::line_length","value":"pub fn line_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Line length of the current frame\n","sig":null,"attributes":[{"value":"/ Line length of the current frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":33797,"byte_end":33833,"line_start":402,"line_end":402,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34172,"byte_end":34179,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"palette","qualname":"<Decoder<R>>::palette","value":"pub fn palette(&Self) -> Result<&[u8], DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the color palette relevant for the current (next) frame\n","sig":null,"attributes":[{"value":"/ Returns the color palette relevant for the current (next) frame","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34093,"byte_end":34160,"line_start":411,"line_end":411,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34562,"byte_end":34576,"line_start":423,"line_end":423,"column_start":12,"column_end":26},"name":"global_palette","qualname":"<Decoder<R>>::global_palette","value":"pub fn global_palette(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The global color palette\n","sig":null,"attributes":[{"value":"/ The global color palette","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34522,"byte_end":34550,"line_start":422,"line_end":422,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34699,"byte_end":34704,"line_start":428,"line_end":428,"column_start":12,"column_end":17},"name":"width","qualname":"<Decoder<R>>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34665,"byte_end":34687,"line_start":427,"line_end":427,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34804,"byte_end":34810,"line_start":433,"line_end":433,"column_start":12,"column_end":18},"name":"height","qualname":"<Decoder<R>>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34769,"byte_end":34792,"line_start":432,"line_end":432,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34943,"byte_end":34951,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"bg_color","qualname":"<Decoder<R>>::bg_color","value":"pub fn bg_color(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of the background color in the global palette\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":34876,"byte_end":34931,"line_start":437,"line_end":437,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63544,"byte_end":63563,"line_start":22,"line_end":22,"column_start":12,"column_end":31},"name":"EncodingFormatError","qualname":"::encoder::EncodingFormatError","value":"EncodingFormatError {  }","parent":null,"children":[{"krate":0,"index":729}],"decl_id":null,"docs":" The image has incorrect properties, making it impossible to encode as a gif.\n","sig":null,"attributes":[{"value":"/ The image has incorrect properties, making it impossible to encode as a gif.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63435,"byte_end":63515,"line_start":20,"line_end":20,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64282,"byte_end":64288,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(EncodingFormatError)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Returned if the to image is not encodable as a gif.\n","sig":null,"attributes":[{"value":"/ Returned if the to image is not encodable as a gif.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64222,"byte_end":64277,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64347,"byte_end":64349,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"Io","qualname":"::encoder::EncodingError::Io","value":"EncodingError::Io(io::Error)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64315,"byte_end":64342,"line_start":47,"line_end":47,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64202,"byte_end":64215,"line_start":44,"line_end":44,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"pub enum EncodingError { Format(EncodingFormatError), Io(io::Error), }","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":736}],"decl_id":null,"docs":" Encoding error.\n","sig":null,"attributes":[{"value":"/ Encoding error.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64173,"byte_end":64192,"line_start":43,"line_end":43,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65378,"byte_end":65384,"line_start":92,"line_end":92,"column_start":5,"column_end":11},"name":"Finite","qualname":"::encoder::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65341,"byte_end":65373,"line_start":91,"line_end":91,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65434,"byte_end":65442,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::encoder::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":" Infinite number of repetitions\n","sig":null,"attributes":[{"value":"/ Infinite number of repetitions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65395,"byte_end":65429,"line_start":93,"line_end":93,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65328,"byte_end":65334,"line_start":90,"line_end":90,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::encoder::Repeat","value":"pub enum Repeat { Finite(u16), Infinite, }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":745}],"decl_id":null,"docs":" Number of repetitions\n","sig":null,"attributes":[{"value":"/ Number of repetitions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65263,"byte_end":65288,"line_start":88,"line_end":88,"column_start":1,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65573,"byte_end":65580,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Control","qualname":"::encoder::ExtensionData::Control","value":"ExtensionData::Control { flags, delay, trns }","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" Control extension. Use `ExtensionData::new_control_ext` to construct.\n","sig":null,"attributes":[{"value":"/ Control extension. Use `ExtensionData::new_control_ext` to construct.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65495,"byte_end":65568,"line_start":99,"line_end":99,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65764,"byte_end":65775,"line_start":109,"line_end":109,"column_start":5,"column_end":16},"name":"Repetitions","qualname":"::encoder::ExtensionData::Repetitions","value":"ExtensionData::Repetitions(Repeat)","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" Sets the number of repetitions\n","sig":null,"attributes":[{"value":"/ Sets the number of repetitions","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65725,"byte_end":65759,"line_start":108,"line_end":108,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65475,"byte_end":65488,"line_start":98,"line_end":98,"column_start":10,"column_end":23},"name":"ExtensionData","qualname":"::encoder::ExtensionData","value":"pub enum ExtensionData {\n    Control {\n            flags: u8,\n            delay: u16,\n            trns: u8,\n        },\n    Repetitions(Repeat),\n}","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":336}],"decl_id":null,"docs":" Extension data.\n","sig":null,"attributes":[{"value":"/ Extension data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65446,"byte_end":65465,"line_start":97,"line_end":97,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65920,"byte_end":65935,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"new_control_ext","qualname":"<ExtensionData>::new_control_ext","value":"pub fn new_control_ext(u16, DisposalMethod, bool, Option<u8>) -> ExtensionData","parent":null,"children":[],"decl_id":null,"docs":" Constructor for control extension data.","sig":null,"attributes":[{"value":"/ Constructor for control extension data.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65812,"byte_end":65855,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65860,"byte_end":65863,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ `delay` is given in units of 10 ms.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65868,"byte_end":65908,"line_start":115,"line_end":115,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66493,"byte_end":66500,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66465,"byte_end":66481,"line_start":136,"line_end":136,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66846,"byte_end":66849,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W, u16, u16, &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66637,"byte_end":66663,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66668,"byte_end":66671,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ `global_palette` gives the global color palette in the format `[r, g, b, ...]`,","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66676,"byte_end":66759,"line_start":148,"line_end":148,"column_start":5,"column_end":88}},{"value":"/ if no global palette shall be used an empty slice may be supplied.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66764,"byte_end":66834,"line_start":149,"line_end":149,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":67309,"byte_end":67319,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<Encoder<W>>::set_repeat","value":"pub fn set_repeat(&mut Self, Repeat) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Write an extension block that signals a repeat behaviour.\n","sig":null,"attributes":[{"value":"/ Write an extension block that signals a repeat behaviour.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":67236,"byte_end":67297,"line_start":161,"line_end":161,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":67502,"byte_end":67522,"line_start":167,"line_end":167,"column_start":12,"column_end":32},"name":"write_global_palette","qualname":"<Encoder<W>>::write_global_palette","value":"pub fn write_global_palette(Self, &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes the global color palette.\n","sig":null,"attributes":[{"value":"/ Writes the global color palette.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":67454,"byte_end":67490,"line_start":166,"line_end":166,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":68384,"byte_end":68395,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<Encoder<W>>::write_frame","value":"pub fn write_frame(&mut Self, &Frame) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes a frame to the image.","sig":null,"attributes":[{"value":"/ Writes a frame to the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":68258,"byte_end":68290,"line_start":185,"line_end":185,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":68295,"byte_end":68298,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note: This function also writes a control extension if necessary.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":68303,"byte_end":68372,"line_start":187,"line_end":187,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":71657,"byte_end":71672,"line_start":272,"line_end":272,"column_start":12,"column_end":27},"name":"write_extension","qualname":"<Encoder<W>>::write_extension","value":"pub fn write_extension(&mut Self, ExtensionData) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes an extension to the image.","sig":null,"attributes":[{"value":"/ Writes an extension to the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":71533,"byte_end":71570,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":71575,"byte_end":71578,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ It is normally not necessary to call this method manually.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":71583,"byte_end":71645,"line_start":271,"line_end":271,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":73232,"byte_end":73251,"line_start":308,"line_end":308,"column_start":12,"column_end":31},"name":"write_raw_extension","qualname":"<Encoder<W>>::write_raw_extension","value":"pub fn write_raw_extension(&mut Self, AnyExtension, &[&[u8]])\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a raw extension to the image.","sig":null,"attributes":[{"value":"/ Writes a raw extension to the image.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":72873,"byte_end":72913,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":72918,"byte_end":72921,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This method can be used to write an unsupported extension to the file. `func` is the extension","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":72926,"byte_end":73024,"line_start":305,"line_end":305,"column_start":5,"column_end":103}},{"value":"/ identifier (e.g. `Extension::Application as u8`). `data` are the extension payload blocks. If any","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":73029,"byte_end":73130,"line_start":306,"line_end":306,"column_start":5,"column_end":106}},{"value":"/ contained slice has a lenght > 255 it is automatically divided into sub-blocks.","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":73135,"byte_end":73220,"line_start":307,"line_end":307,"column_start":5,"column_end":88}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5160,"byte_end":5161,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5330,"byte_end":5331,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5521,"byte_end":5522,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5737,"byte_end":5738,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6392,"byte_end":6406,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7584,"byte_end":7589,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9521,"byte_end":9533,"line_start":106,"line_end":106,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9703,"byte_end":9715,"line_start":113,"line_end":113,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9802,"byte_end":9811,"line_start":119,"line_end":119,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11043,"byte_end":11048,"line_start":160,"line_end":160,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11443,"byte_end":11448,"line_start":178,"line_end":178,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38089,"byte_end":38108,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38257,"byte_end":38276,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38394,"byte_end":38413,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38800,"byte_end":38813,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39025,"byte_end":39038,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39277,"byte_end":39290,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39533,"byte_end":39546,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39662,"byte_end":39675,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43148,"byte_end":43164,"line_start":224,"line_end":224,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19998,"byte_end":20009,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21347,"byte_end":21360,"line_start":75,"line_end":75,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24497,"byte_end":24508,"line_start":155,"line_end":155,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25667,"byte_end":25674,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":35132,"byte_end":35149,"line_start":449,"line_end":449,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63617,"byte_end":63636,"line_start":26,"line_end":26,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63662,"byte_end":63681,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64043,"byte_end":64062,"line_start":36,"line_end":36,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64387,"byte_end":64400,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64634,"byte_end":64647,"line_start":60,"line_end":60,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64881,"byte_end":64894,"line_start":69,"line_end":69,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65010,"byte_end":65023,"line_start":75,"line_end":75,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65149,"byte_end":65162,"line_start":81,"line_end":81,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65792,"byte_end":65805,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66620,"byte_end":66627,"line_start":145,"line_end":145,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":74028,"byte_end":74035,"line_start":331,"line_end":331,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5160,"byte_end":5161,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5330,"byte_end":5331,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":14},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5521,"byte_end":5522,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\traits.rs","byte_start":5737,"byte_end":5738,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":20},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":6392,"byte_end":6406,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":7584,"byte_end":7589,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9521,"byte_end":9533,"line_start":106,"line_end":106,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9703,"byte_end":9715,"line_start":113,"line_end":113,"column_start":26,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":9802,"byte_end":9811,"line_start":119,"line_end":119,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11043,"byte_end":11048,"line_start":160,"line_end":160,"column_start":22,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":514},"to":{"krate":2,"index":3035}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\common.rs","byte_start":11443,"byte_end":11448,"line_start":178,"line_end":178,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38089,"byte_end":38108,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38257,"byte_end":38276,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":533},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38394,"byte_end":38413,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":38800,"byte_end":38813,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39025,"byte_end":39038,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39277,"byte_end":39290,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":537},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39533,"byte_end":39546,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":39662,"byte_end":39675,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\decoder.rs","byte_start":43148,"byte_end":43164,"line_start":224,"line_end":224,"column_start":6,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":19998,"byte_end":20009,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":21347,"byte_end":21360,"line_start":75,"line_end":75,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":24497,"byte_end":24508,"line_start":155,"line_end":155,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":25667,"byte_end":25674,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\reader\\mod.rs","byte_start":35132,"byte_end":35149,"line_start":449,"line_end":449,"column_start":25,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":7985}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63617,"byte_end":63636,"line_start":26,"line_end":26,"column_start":23,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":728},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":63662,"byte_end":63681,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64043,"byte_end":64062,"line_start":36,"line_end":36,"column_start":32,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64387,"byte_end":64400,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":9692}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64634,"byte_end":64647,"line_start":60,"line_end":60,"column_start":23,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2546}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":64881,"byte_end":64894,"line_start":69,"line_end":69,"column_start":26,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65010,"byte_end":65023,"line_start":75,"line_end":75,"column_start":36,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65149,"byte_end":65162,"line_start":81,"line_end":81,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":2963}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":65792,"byte_end":65805,"line_start":112,"line_end":112,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":66620,"byte_end":66627,"line_start":145,"line_end":145,"column_start":16,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\toto\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gif-0.11.3\\src\\encoder.rs","byte_start":74028,"byte_end":74035,"line_start":331,"line_end":331,"column_start":25,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3300}}]}